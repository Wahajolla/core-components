{"version":3,"file":"slider-input-src-docs-Component-stories-mdx.1eac65a6.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/slider-input/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/slider-input/src/index.module.css?64ff","webpack://@alfalab/core-components/./packages/slider-input/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/slider-input/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/slider-input/src/index.module.css?cddf","webpack://@alfalab/core-components/./packages/slider-input/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"стандартный-вид-компонента\",\n      children: \"Стандартный вид компонента\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Можно настроить количество сегментов и шаг внутри сегмента.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const min = 1;\\n\\nrender(() => {\\n    const [value1, setValue1] = React.useState(3);\\n    const [value2, setValue2] = React.useState(5);\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <SliderInput\\n                value={value1}\\n                label='Label'\\n                size='m'\\n                pips={{\\n                    mode: 'values',\\n                    values: [min, 10 / 2, 10],\\n                }}\\n                min={min}\\n                max={10}\\n                step={1}\\n                block={true}\\n                onChange={(_, { value }) => setValue1(value)}\\n            />\\n            <Gap size='xl' />\\n            <SliderInput\\n                value={value2}\\n                label='Label'\\n                size='m'\\n                pips={{\\n                    mode: 'values',\\n                    values: [min, 10, 100],\\n                }}\\n                min={min}\\n                max={100}\\n                range={{\\n                    min: min,\\n                    '50%': [10, 5],\\n                    max: 100,\\n                }}\\n                step={1}\\n                block={true}\\n                onChange={(_, { value }) => setValue2(value)}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"состояния\",\n      children: \"Состояния\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В состоянии ошибки шкала заменяется на сообщение об ошибке, а в задисейбленном состоянии может превращаться в подпись.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const formatAmountSimple = (() => {\\n    const formatter = new Intl.NumberFormat('ru-RU', {\\n        style: 'currency',\\n        currency: 'RUB',\\n    });\\n\\n    return (value) => (value ? formatter.format(value).slice(0, -5) : '');\\n})();\\n\\nconst min = 100000;\\nconst max = 300000;\\nconst pips = {\\n    mode: 'values',\\n    values: [min, max - min, max],\\n    format: {\\n        to: (value) => formatAmountSimple(value),\\n    },\\n};\\n\\nrender(() => {\\n    const [value, setValue] = React.useState(150000);\\n    const [props, setProps] = React.useState({});\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <SliderInput\\n                    value={formatAmountSimple(value)}\\n                    sliderValue={value}\\n                    label='Label'\\n                    size='m'\\n                    pips={pips}\\n                    min={min}\\n                    max={max}\\n                    step={1000}\\n                    block={true}\\n                    onChange={(_, { value }) => setValue(value)}\\n                    {...props}\\n                />\\n            </div>\\n            <Gap size='xl' />\\n\\n            <Space direction='horizontal' wrap={true}>\\n                <Button onClick={() => setProps({})} size='xxs' view='secondary'>\\n                    По умолчанию\\n                </Button>\\n                <Button onClick={() => setProps({ error: 'Error' })} size='xxs' view='secondary'>\\n                    Ошибка\\n                </Button>\\n                <Button\\n                    onClick={() => setProps({ disabled: true, hint: 'Hint' })}\\n                    size='xxs'\\n                    view='secondary'\\n                >\\n                    Заблокирован\\n                </Button>\\n            </Space>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"amount\",\n      children: \"Amount\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Используйте Amount для деления введенных значений на разряды.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const min = 50000;\\nconst max = 10000000;\\nconst step = 1000;\\nconst range = {\\n    min: [min],\\n    '25%': [100000, 10000],\\n    '75%': [1000000, 100000],\\n    max: [max],\\n};\\nconst pips = {\\n    mode: 'values',\\n    values: [min, max],\\n    format: {\\n        to: (value) => {\\n            if (value < 1000000) return `${value / 1000} тыс`;\\n            return `${value / 1000000} млн`;\\n        },\\n    },\\n};\\n\\nrender(() => {\\n    const [value, setValue] = React.useState(120000);\\n\\n    const handleInputChange = (event, { value }) => {\\n        setValue(value !== '' ? (value / 100).toString() : '');\\n    };\\n\\n    const handleSliderChange = ({ value }) => {\\n        setValue(value);\\n    };\\n\\n    const handleBlur = () => {\\n        if (value !== '') {\\n            setValue(Math.max(min, Math.min(max, parseFloat(value.toString()))));\\n        }\\n    };\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <SliderInput\\n                block={true}\\n                value={value !== '' ? value * 100 : ''}\\n                sliderValue={value}\\n                onInputChange={handleInputChange}\\n                onSliderChange={handleSliderChange}\\n                onBlur={handleBlur}\\n                min={min}\\n                max={max}\\n                range={range}\\n                pips={pips}\\n                step={step}\\n                label='Первоначальный взнос'\\n                Input={AmountInput}\\n                size='m'\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Поле ввода является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/components-formcontrol--docs\",\n        children: \"FormControl\"\n      }), \",\\nпоэтому наследует все доступные для него настройки. Для слайдера используется компонент \", _jsx(_components.a, {\n        href: \"?path=/docs/components-slider--docs\",\n        children: \"Slider\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n@import '../../slider/src/vars.css';\\n@import '../../form-control/src/vars.css';\\n\\n:root {\\n    --slider-input-steps-color: var(--color-light-text-secondary);\\n    --slider-input-info-color: var(--color-light-text-secondary);\\n    --slider-input-font-weight: 700;\\n    --slider-input-s-border-bottom-radius: var(--border-radius-m);\\n    --slider-input-m-border-bottom-radius: var(--border-radius-m);\\n    --slider-input-l-border-bottom-radius: var(--border-radius-m);\\n    --slider-input-xl-border-bottom-radius: var(--border-radius-l);\\n    --slider-input-progress-margin-horizontal: var(--gap-s);\\n    --slider-input-xl-progress-margin-horizontal: var(--gap-m);\\n    --slider-input-progress-border-radius: var(--border-radius-s);\\n    --slider-input-progress-bg-color: var(--color-light-graphic-secondary);\\n    --slider-input-progress-hover-bg-color: var(--color-light-graphic-secondary);\\n    --slider-input-origin-width: calc(100% - 16px);\\n    --slider-input-origin-right: 8px;\\n}\\n\\n.component {\\n    position: relative;\\n    display: inline-block;\\n}\\n\\n.block {\\n    display: block;\\n}\\n\\n.slider {\\n    width: calc(100% - var(--slider-input-progress-margin-horizontal) * 2);\\n    margin-left: var(--slider-input-progress-margin-horizontal);\\n    margin-right: var(--slider-input-progress-margin-horizontal);\\n    margin-top: calc(var(--slider-progress-s-height) / -2);\\n    transform: translateY(-1px);\\n\\n    &.xl {\\n        width: calc(100% - var(--slider-input-xl-progress-margin-horizontal) * 2);\\n        margin-left: var(--slider-input-xl-progress-margin-horizontal);\\n        margin-right: var(--slider-input-xl-progress-margin-horizontal);\\n    }\\n\\n    & :global(.noUi-base) {\\n        border-radius: var(--slider-input-progress-border-radius);\\n    }\\n\\n    & :global(.noUi-base):hover {\\n        & > :global(.noUi-connects) {\\n            background-color: var(--slider-input-progress-hover-bg-color);\\n        }\\n    }\\n\\n    & :global(.noUi-connects) {\\n        border-radius: var(--slider-input-progress-border-radius);\\n        background-color: var(--slider-input-progress-bg-color);\\n    }\\n\\n    & :global(.noUi-origin) {\\n        width: var(--slider-input-origin-width);\\n        right: var(--slider-input-origin-right);\\n    }\\n\\n    /* TODO исправить на 6px когда слайдеру добавят position: absolute */\\n    & + * {\\n        margin-top: 5px;\\n    }\\n}\\n\\n.hidePips {\\n    & :global(.noUi-pips) {\\n        display: none;\\n    }\\n}\\n\\n.component .field {\\n    &.s {\\n        border-bottom-left-radius: var(--slider-input-s-border-bottom-radius);\\n        border-bottom-right-radius: var(--slider-input-s-border-bottom-radius);\\n    }\\n\\n    &.m {\\n        border-bottom-left-radius: var(--slider-input-m-border-bottom-radius);\\n        border-bottom-right-radius: var(--slider-input-m-border-bottom-radius);\\n    }\\n\\n    &.l {\\n        border-bottom-left-radius: var(--slider-input-l-border-bottom-radius);\\n        border-bottom-right-radius: var(--slider-input-l-border-bottom-radius);\\n    }\\n\\n    &.xl {\\n        border-bottom-left-radius: var(--slider-input-xl-border-bottom-radius);\\n        border-bottom-right-radius: var(--slider-input-xl-border-bottom-radius);\\n    }\\n}\\n\\n.input {\\n    & input,\\n    & input + div {\\n        font-weight: var(--slider-input-font-weight);\\n        font-variant-numeric: tabular-nums;\\n    }\\n\\n    & input::placeholder {\\n        font-weight: 400;\\n    }\\n}\\n\\n.steps {\\n    @mixin paragraph_component_secondary;\\n\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: var(--gap-xs);\\n    color: var(--slider-input-steps-color);\\n}\\n\\n.info {\\n    @mixin paragraph_component;\\n\\n    color: var(--slider-input-info-color);\\n    box-sizing: border-box;\\n    opacity: 0;\\n    transition: 0.2s ease;\\n    visibility: hidden;\\n}\\n\\n.s.hasLabel .info:first-child {\\n    padding: var(--form-control-labeled-s-paddings);\\n    padding-left: 0;\\n    padding-right: 0;\\n}\\n\\n.m.hasLabel .info:first-child {\\n    padding: var(--form-control-labeled-m-paddings);\\n    padding-left: 0;\\n    padding-right: 0;\\n}\\n\\n.l.hasLabel .info:first-child {\\n    padding: var(--form-control-labeled-l-paddings);\\n    padding-left: 0;\\n    padding-right: 0;\\n}\\n\\n.xl.hasLabel .info:first-child {\\n    padding: var(--form-control-labeled-xl-paddings);\\n    padding-left: 0;\\n    padding-right: 0;\\n}\\n\\n.focused .info,\\n.filled .info {\\n    visibility: visible;\\n    opacity: 1;\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {CssVars} from 'storybook/blocks';\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {SliderInput as SliderInputTS} from '../Component';\nimport styles from '!!raw-loader!../index.module.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { SliderInput } from '@alfalab/core-components/slider-input';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: SliderInputTS\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: styles\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean, number } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { SliderInput } from '@alfalab/core-components-slider-input';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/SliderInput\",\n      component: SliderInput,\n      id: \"SliderInput\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"SliderInput\",\n      children: React.createElement(() => {\n        const [value, setValue] = React.useState('50');\n        const handleChange = (event, {\n          value\n        }) => setValue(value);\n        return /*#__PURE__*/_jsx(SliderInput, {\n          value: value,\n          onChange: handleChange,\n          min: number('min', 0),\n          max: number('max', 100),\n          step: number('step', 1),\n          pips: boolean('pips', false) && {\n            mode: 'values',\n            values: [0, 50, 100]\n          },\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          placeholder: text('placeholder', ''),\n          label: text('label', ''),\n          hint: text('hint', ''),\n          info: text('info', ''),\n          error: text('error', ''),\n          readOnly: boolean('readOnly', false)\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"SliderInput\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/slider-input\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=565%3A24123\",\n      children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0434\\u043B\\u044F \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u0438\\u044F \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u044F \\u0438\\u0437 \\u0437\\u0430\\u0434\\u0430\\u043D\\u043D\\u043E\\u0433\\u043E \\u0434\\u0438\\u0430\\u043F\\u0430\\u0437\\u043E\\u043D\\u0430.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const sliderInput = () => React.createElement(() => {\n  const [value, setValue] = React.useState(\"50\");\n  const handleChange = (event, {\n    value\n  }) => setValue(value);\n  return /*#__PURE__*/_jsx(SliderInput, {\n    value: value,\n    onChange: handleChange,\n    min: number(\"min\", 0),\n    max: number(\"max\", 100),\n    step: number(\"step\", 1),\n    pips: boolean(\"pips\", false) && {\n      mode: \"values\",\n      values: [0, 50, 100]\n    },\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    placeholder: text(\"placeholder\", \"\"),\n    label: text(\"label\", \"\"),\n    hint: text(\"hint\", \"\"),\n    info: text(\"info\", \"\"),\n    error: text(\"error\", \"\"),\n    readOnly: boolean(\"readOnly\", false)\n  });\n});\nsliderInput.storyName = 'SliderInput';\nsliderInput.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [value, setValue] = React.useState(\\\"50\\\");\\n  const handleChange = (event, {\\n    value\\n  }) => setValue(value);\\n  return <SliderInput value={value} onChange={handleChange} min={number(\\\"min\\\", 0)} max={number(\\\"max\\\", 100)} step={number(\\\"step\\\", 1)} pips={boolean(\\\"pips\\\", false) && {\\n    mode: \\\"values\\\",\\n    values: [0, 50, 100]\\n  }} block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} placeholder={text(\\\"placeholder\\\", \\\"\\\")} label={text(\\\"label\\\", \\\"\\\")} hint={text(\\\"hint\\\", \\\"\\\")} info={text(\\\"info\\\", \\\"\\\")} error={text(\\\"error\\\", \\\"\\\")} readOnly={boolean(\\\"readOnly\\\", false)} />;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/SliderInput',\n  id: 'SliderInput',\n  component: SliderInput,\n  tags: ['stories-mdx'],\n  includeStories: [\"sliderInput\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Gwmbo\",\"block\":\"block_zSpqT\",\"slider\":\"slider_JSa9k\",\"xl\":\"xl_eVHeN\",\"hidePips\":\"hidePips_y1zQW\",\"field\":\"field_p3YAG\",\"s\":\"s_GOqNA\",\"m\":\"m_x0DcS\",\"l\":\"l_G1356\",\"input\":\"input_JIhnu\",\"steps\":\"steps_ofqNx\",\"info\":\"info_UU2mL\",\"hasLabel\":\"hasLabel_f2yBo\",\"focused\":\"focused_fhHNc\",\"filled\":\"filled_E6rgJ\"};","import React, {\n    ChangeEvent,\n    cloneElement,\n    FC,\n    forwardRef,\n    Fragment,\n    isValidElement,\n    ReactNode,\n    useCallback,\n} from 'react';\nimport cn from 'classnames';\n\nimport { Input as DefaultInput, InputProps } from '@alfalab/core-components-input';\nimport { Slider, SliderProps } from '@alfalab/core-components-slider';\n\nimport styles from './index.module.css';\n\nexport type SliderInputProps = Omit<\n    InputProps,\n    'min' | 'max' | 'step' | 'value' | 'type' | 'onChange' | 'bottomAddons'\n> & {\n    /**\n     * Мин. допустимое число\n     */\n    min?: number;\n\n    /**\n     * Макс. допустимое число\n     */\n    max?: number;\n\n    /**\n     * Массив подписей к слайдеру\n     */\n    steps?: ReactNode[];\n\n    /**\n     * Шаг (должен нацело делить отрезок между мин и макс)\n     */\n    step?: number;\n\n    /**\n     * Отображение подписей\n     * https://refreshless.com/nouislider/pips/\n     */\n    pips?: SliderProps['pips'];\n\n    /**\n     * Настройка шагов\n     * https://refreshless.com/nouislider/pips/#section-range\n     */\n    range?: SliderProps['range'];\n\n    /**\n     * Значение инпута\n     */\n    value?: number | string;\n\n    /**\n     * Значение слайдера\n     */\n    sliderValue?: number;\n\n    /**\n     * Дополнительная информация в правой части поля\n     */\n    info?: ReactNode;\n\n    /**\n     * Компонент поля ввода\n     */\n    Input?: FC<Omit<InputProps, 'onChange' | 'value'>>;\n\n    /**\n     * Кастомные пропсы для поля ввода\n     */\n    customInputProps?: Record<string, unknown>;\n\n    /**\n     * Класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Класс для слайдера\n     */\n    sliderClassName?: string;\n\n    /**\n     * Класс для шагов\n     */\n    stepsClassName?: string;\n\n    /**\n     * Обработчик изменения значения через слайдер или поле ввода\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { value: number | '' },\n    ) => void;\n\n    /**\n     * Обработчик ввода\n     */\n    onInputChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: number | '' }) => void;\n\n    /**\n     * Обработчик изменения слайдера\n     */\n    onSliderChange?: (payload: { value: number }) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const SliderInput = forwardRef<HTMLInputElement, SliderInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            sliderClassName,\n            stepsClassName,\n            focusedClassName,\n            fieldClassName,\n            value = '',\n            min = 0,\n            max = 100,\n            step = 1,\n            block,\n            steps = [],\n            sliderValue = +value,\n            size = 's',\n            label,\n            info,\n            disabled,\n            readOnly,\n            onChange,\n            onInputChange,\n            onSliderChange,\n            rightAddons,\n            Input = DefaultInput,\n            customInputProps = {},\n            error,\n            hint,\n            pips,\n            range,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const getValidInputValue = useCallback((inputValue: string | number) => {\n            const number = parseInt(inputValue?.toString().replace(/\\s/g, ''), 10);\n\n            return inputValue === '' || Number.isNaN(number) ? '' : Math.abs(number);\n        }, []);\n\n        const handleSliderChange = useCallback(\n            (payload: { value: number }) => {\n                if (onChange) onChange(null, payload);\n                if (onSliderChange) onSliderChange(payload);\n            },\n            [onChange, onSliderChange],\n        );\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>, payload: { value: string | number }) => {\n                if (onChange) onChange(event, { value: getValidInputValue(payload.value) });\n                if (onInputChange)\n                    onInputChange(event, { value: getValidInputValue(payload.value) });\n            },\n            [getValidInputValue, onChange, onInputChange],\n        );\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    {\n                        [styles.block]: block,\n                        [styles.filled]: Boolean(value),\n                        [styles.hasLabel]: label,\n                        [styles.hasError]: Boolean(error),\n                    },\n                    styles[size],\n                    className,\n                )}\n                data-test-id={dataTestId}\n            >\n                <Input\n                    {...restProps}\n                    {...customInputProps}\n                    ref={ref}\n                    value={value.toString()}\n                    onChange={handleInputChange}\n                    block={true}\n                    size={size}\n                    label={label}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={cn(inputClassName, styles.input)}\n                    focusedClassName={cn(focusedClassName, styles.focused)}\n                    fieldClassName={cn(\n                        fieldClassName,\n                        styles.field,\n                        { [styles.disabled]: disabled },\n                        styles[size],\n                    )}\n                    inputMode='numeric'\n                    pattern='[0-9]*'\n                    error={error}\n                    hint={hint}\n                    bottomAddons={\n                        !disabled && (\n                            <Slider\n                                min={min}\n                                max={max}\n                                step={step}\n                                onChange={handleSliderChange}\n                                value={\n                                    Number.isNaN(sliderValue) || !sliderValue ? min : sliderValue\n                                }\n                                disabled={disabled || readOnly}\n                                className={cn(\n                                    styles.slider,\n                                    styles[size],\n                                    { [styles.hidePips]: error || hint },\n                                    sliderClassName,\n                                )}\n                                pips={pips}\n                                range={range}\n                            />\n                        )\n                    }\n                    rightAddons={\n                        (info || rightAddons) && (\n                            <Fragment>\n                                {info && <span className={styles.info}>{info}</span>}\n                                {rightAddons}\n                            </Fragment>\n                        )\n                    }\n                />\n                {/* eslint-disable react/no-array-index-key */}\n                {steps.length > 0 && !error && (\n                    <div className={cn(styles.steps, stepsClassName)}>\n                        {steps.map((stepLabel, i) =>\n                            isValidElement(stepLabel) ? (\n                                cloneElement(stepLabel, { key: i })\n                            ) : (\n                                <span key={i.toString()}>{stepLabel}</span>\n                            ),\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","id","live","className","href","MDXContent","wrapper","MDXLayout","of","css","title","component","SliderInput","name","setValue","onChange","event","min","number","max","step","pips","boolean","mode","values","block","size","select","disabled","placeholder","text","label","hint","info","error","readOnly","version","package","design","description","changelog","development","sliderInput","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","forwardRef","ref","_cn","inputClassName","sliderClassName","stepsClassName","focusedClassName","fieldClassName","_ref$value","_ref$min","_ref$max","_ref$step","_ref$steps","steps","_ref$sliderValue","sliderValue","_ref$size","onInputChange","onSliderChange","rightAddons","_ref$Input","Input","DefaultInput","_ref$customInputProps","customInputProps","range","dataTestId","restProps","_objectWithoutProperties","_excluded","getValidInputValue","inputValue","parseInt","toString","Number","isNaN","abs","handleSliderChange","payload","handleInputChange","Boolean","_objectSpread","inputMode","pattern","bottomAddons","Slider","Fragment","map","stepLabel","i","cloneElement"],"sourceRoot":""}