{"version":3,"file":"mq-src-docs-Component-stories-mdx.72402ce2.iframe.bundle.js","mappings":"sgBAiCO,MAAMA,WAAa,iDAAoB,CAAC,GAWxC,SAASC,kBAAkBC,WAChC,OAMA,SAASC,kBAAkBC,OACzB,MAAMC,cAAgBC,iBAAiBF,MAAMG,YAC7C,OAAO,iDAAoBL,UAAW,IAAIE,MAAOC,6BACnD,CACF,CAWO,SAASC,iBAAiBC,YAC/B,MAAMC,kBAAoB,8CAAiBR,YAG3C,OAAO,4CAAc,IAEO,mBAAfO,WACFA,WAAWC,mBAGb,IAAIA,qBAAsBD,aAChC,CAACC,kBAAmBD,YACzB,CAGA,MAAME,YAAc,CAAC,EAQd,SAASC,aAAY,WAACH,WAAU,SAAEI,SAAQ,qBAAEC,uBAEjD,IAAIP,cAWJ,OAREA,cADEO,qBAEsB,mBAAfL,WACHA,WAAW,CAAC,GACZA,YAAcE,YAEJH,iBAAiBC,YAG5B,iDACLP,WAAWa,SACX,CAACC,MAAOT,eACRM,SAEJ,C,qjBCvGII,kBAAkB,CAACC,KAAK,kDAAgBC,EAAE,qDAAa,mDAAYC,cAAc,cAAc,mCAAAhB,UAAUiB,cAAcC,SAASC,WAAWC,KAAKC,MAAM,CAACC,UAAS,EAAI,CAACC,kCAAkC,MAAO,CAACD,UAAS,EAAG,CAACE,kBAAkBC,KAAK,IAAG,cAACC,eAAeN,KAAKlB,MAAMwB,cAAcD,IAAK,CAACE,SAAS,IAAG,SAACL,UAAUF,KAAKC,OAAM,SAACZ,UAAUW,KAAKlB,MAAM,OAAOoB,SAAS,KAAKb,QAAQ,GAAGmB,aAAa,MAAMX,cAAcG,KAAKO,OAAOE,MAAMC,QAAQC,cAAcC,WAAW,IAAI3B,WAAW,IAAIQ,qBAAqBkB,eAAe1B,YAAY,OAAO,IAAI4B,SAAQ,CAACC,QAAQC,UAAU,wHAAwBC,MAAK,EAAE5B,4BAAe,4DAAc,iDAAoBQ,cAAc,CAACU,cAAcS,OAAOE,IAAIC,KAAKC,UAAU,iDAAoB/B,YAAY,CAACH,uBAAY,iDAAoB,kDAAK,CAACyB,gBAAQC,gCAAkBC,WAAUI,KAAKF,QAAQ,GAAE,EAAGd,KAAKoB,QAAQR,WAAU,4DAAeA,QAAQ,CAAG,E,8mDCEn3B,SAASS,kBAAkBvC,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCC,EAAG,IACH/B,KAAM,OACNgC,GAAI,KACJC,GAAI,KACJC,IAAK,QACJ,YAAsB9C,MAAMG,YAC/B,OAAO,oBAAM,qBAAW,CACtBI,SAAU,EAAC,oBAAMiC,YAAYG,EAAG,CAC9BpC,SAAU,CAAC,8EAA8E,mBAAKiC,YAAY5B,KAAM,CAC9GL,SAAU,sBACR,yFACF,MAAM,oBAAMiC,YAAYG,EAAG,CAC7BpC,SAAU,CAAC,gEAAgE,mBAAKiC,YAAY5B,KAAM,CAChGL,SAAU,YACR,eAAe,mBAAKiC,YAAY5B,KAAM,CACxCL,SAAU,aACR,OACF,MAAM,oBAAMiC,YAAYG,EAAG,CAC7BpC,SAAU,CAAC,qGAAqG,mBAAKiC,YAAY5B,KAAM,CACrIL,SAAU,UACR,OACF,MAAM,mBAAKiC,YAAYG,EAAG,CAC5BpC,SAAU,yFACR,MAAM,oBAAMiC,YAAYI,GAAI,CAC9BrC,SAAU,CAAC,MAAM,oBAAMiC,YAAYK,GAAI,CACrCtC,SAAU,EAAC,mBAAKiC,YAAY5B,KAAM,CAChCL,SAAU,iBACR,0DACF,MAAM,mBAAKiC,YAAYK,GAAI,CAC7BtC,SAAU,kKACR,QACF,MAAM,mBAAKiC,YAAYM,IAAK,CAC9BC,MAAM,EACNxC,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BoC,UAAW,eACXzC,SAAU,qLAEV,MAAM,oBAAMiC,YAAYG,EAAG,CAC7BpC,SAAU,CAAC,6CAA6C,mBAAKiC,YAAY5B,KAAM,CAC7EL,SAAU,kBACR,OACF,MAAM,mBAAKiC,YAAYM,IAAK,CAC9BC,MAAM,EACNxC,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BoC,UAAW,eACXzC,SAAU,kKAIlB,CAOA,gBANA,SAAS0C,WAAWjD,MAAQ,CAAC,GAC3B,MAAOkD,QAASC,WAAaV,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAC3E,OAAOgD,WAAY,mBAAKA,UAAWV,OAAOC,OAAO,CAAC,EAAG1C,MAAO,CAC1DO,UAAU,mBAAKgC,kBAAmBvC,UAC9BuC,kBAAkBvC,MAC1B,E,knLC5CA,SAAS,mCAAkBA,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCI,IAAK,MACLlC,KAAM,SACL,YAAsBZ,MAAMG,YAG/B,OAFK,kBAAAiD,YAAYC,qBAAqB,cAAc,GAC/C,kBAAAD,WAAA,OAAkBC,qBAAqB,oBAAoB,IAC5C,oBAAM,qBAAW,CACnC9C,SAAU,EAAc,mBAAK,QAAM,CACjC+C,MAAO,gBACPC,UAAW,UAAAC,GACXC,GAAI,OACF,KAAM,MAAmB,mBAAK,QAAO,CACvCC,KAAM,KACNnD,UAAuB,oBAAM,aAAAoD,MAAO,CAClCpD,SAAU,EAAc,mBAAK,kBAAA6C,WAAA,MAAkB,CAC7CQ,KAAM,QACNrD,SAAU,iBACK,mBAAK,UAAAiD,GAAI,CACxBK,MAAO,WACPtD,UAAuB,mBAAK,OAAAuD,OAAQ,CAClCvD,SAAU,qBAEG,mBAAK,UAAAiD,GAAI,CACxBK,MAAO,aACPtD,UAAuB,mBAAK,OAAAuD,OAAQ,CAClCvD,SAAU,0BAId,KAAM,MAAmB,mBAAK,UAAiB,CACjDmD,KAAM,KACNK,QAAS,2BACTC,QAAS,gCACP,MAAmB,mBAAKxB,YAAYM,IAAK,CAC3CvC,UAAuB,mBAAKiC,YAAY5B,KAAM,CAC5CoC,UAAW,eACXzC,SAAU,yEAEV,MAAmB,mBAAK,UAAM,CAChC0D,aAA0B,mBAAK,YAAa,CAAC,GAC7CC,WAAwB,mBAAK,QAAU,CACrC3D,SAAU,+BAEZP,OAAoB,mBAAK,QAAW,CAClCmE,GAAI,UAAAX,SAIZ,CAYA,SAASH,qBAAqBI,GAAIF,WAChC,MAAM,IAAIa,MAAM,aAAeb,UAAY,YAAc,UAAY,KAAOE,GAAK,qEACnF,CAEO,MAAMY,GAAK,KAAmB,oBAAM,aAAAV,MAAO,CAChDpD,SAAU,EAAc,mBAAK,kBAAA6C,WAAA,MAAkB,CAC7CQ,KAAM,QACNrD,SAAU,iBACK,mBAAK,UAAAiD,GAAI,CACxBK,MAAO,WACPtD,UAAuB,mBAAK,OAAAuD,OAAQ,CAClCvD,SAAU,qBAEG,mBAAK,UAAAiD,GAAI,CACxBK,MAAO,aACPtD,UAAuB,mBAAK,OAAAuD,OAAQ,CAClCvD,SAAU,wBAIhB8D,GAAGC,UAAY,KACfD,GAAGE,WAAa,CACdC,YAAa,CACXC,OAAQ,oVAGZ,MAAMC,cAAgB,CACpBpB,MAAO,gBACPG,GAAI,KACJF,UAAW,UAAAC,GACXmB,KAAM,CAAC,eACPC,eAAgB,CAAC,OAEnBF,cAAcH,WAAaG,cAAcH,YAAc,CAAC,EACxDG,cAAcH,WAAWM,KAAO,IAC1BH,cAAcH,WAAWM,MAAQ,CAAC,EACtCC,KA/CF,SAAS,6BAAW9E,MAAQ,CAAC,GAC3B,MACEkD,QAASC,WACPV,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAClD,OAAOgD,WAAyB,mBAAKA,UAAW,IAC3CnD,MACHO,UAAuB,mBAAK,mCAAmB,IAC1CP,UAEF,mCAAkBA,MACzB,GAuCA,mC,gdCrHA,uBAA4B,kBAA5B,kBAAqD,a,uECSxC+E,UAAuB,SAAvBA,UAAoBC,MAAmC,IAA7BC,QAAOD,KAAPC,QAAOC,UAAAF,KAAEG,KAAAA,UAAI,IAAAD,WAAQA,UACxD,OACIE,EAAAA,YAAAA,KAAA,OAAKpC,UAAWqC,qBAAGC,uBAAkBH,MAAQG,kBAAa,eAAe/E,SAAE0E,SAEnF,E,s2BCbA,wBAA0B,gBCapBM,gBAAkB,mBAClBC,YAAc,gCAEPC,QAAqB,SAArBA,QAAkBT,MAAmD,IAA7CU,IAAGV,KAAHU,IAAKpC,MAAK0B,KAAL1B,MAAOqC,WAAUX,KAAVW,WAAUC,UAAAZ,KAAEa,KAAAA,UAAI,IAAAD,UAAG,OAAMA,UACtEE,WAAwBC,EAAAA,MAAAA,UAAS,IAAGC,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAA7BI,KAAIF,WAAA,GAAEG,QAAOH,WAAA,GACpBI,YAAwBL,EAAAA,MAAAA,WAAUJ,YAAWU,YAAAJ,EAAAA,cAAAA,GAAAG,WAAA,GAAtCE,KAAID,WAAA,GAAEE,QAAOF,WAAA,GACdG,OAAkB,SAATX,KACTY,OAASD,OAASjB,gBAAkBC,YA6B1C,OA3BAkB,EAAAA,MAAAA,YAAU,WAKN,IAJA,IAAIC,eAAiBF,OAAOG,KAAKlB,KAE3BmB,WAAa,GAEZF,gBACHE,WAAWC,KAAKH,eAAe,IAC/BA,eAAiBF,OAAOG,KAAKlB,KAGjC,IAAIqB,OAASF,WAAWG,QACpB,SAACC,IAAKC,KAAMC,OACR,IACMC,QADSD,QAAUN,WAAWQ,OAAS,EACpB,GAAK,KAE9B,MAAM,GAANC,OAAUL,KAAGK,OAAGJ,MAAII,OAAGF,QAC3B,GACAZ,OAAS,UAAY,IAGrBA,SACAO,QAAU,KAGdZ,QAAQY,OACZ,GAAG,KAGCQ,EAAAA,YAAAA,MAAA,OAAKvE,UAAWqC,qBAAG,cAAeC,yBAAgB/E,SAAA,CAC7C+C,QAAS8B,EAAAA,YAAAA,KAAA,MAAIpC,UAAWqC,qBAAG,SAAU,aAAa9E,SAAE+C,QACpD4C,OACGqB,EAAAA,YAAAA,MAAAC,YAAAA,SAAA,CAAAjH,SAAA,CACKoF,aACGP,EAAAA,YAAAA,KAACqC,OAAAA,KAAI,CAAC7D,KAAK,UAAU8D,QAAS,SAAAA,UAAA,OAAMnB,SAASD,KAAK,EAAEqB,QAAM,EAAApH,SACrD+F,KAAO,SAAW,aAG1BA,OAAQlB,EAAAA,YAAAA,KAACwC,IAAAA,GAAO,CAACC,SAAS,MAAMjH,KAAMsF,KAAMnD,MAAM,SAKvE,E,i3NChEA,iCAA4B,kBAA5B,4BAAqD,aAArD,kCAA+E,mBAA/E,4BAAyG,aAAzG,kCAAmI,mBAAnI,6BAA8J,cAA9J,iCAAwL,kBAAxL,8BAAmN,eAAnN,8BAA2O,e,2DCmB9N+E,gBAAkD,SAAlDA,gBAA+C9C,MAAoC,IAAD+C,aAAAC,cAAAC,cAAAC,cAAAC,cAAAC,cAA7B1E,KAAIsB,KAAJtB,KAAM2E,OAAMrD,KAANqD,OAAQ9H,SAAQyE,KAARzE,SAC5E+H,gBAAoBC,EAAAA,UAAAA,eAAc,cAA3BC,WAAwCvC,EAAAA,cAAAA,GAAAqC,eAAA,GAA/B,GAEVG,YAAc/E,KACfgF,QAAQ,qBAAsB,SAC9BA,QAAQ,2BAA4B,SACpCC,cAECC,WAAU,mEAAAtB,OAAsEmB,aAEhFI,MAAQL,UAAYpF,kBAAAA,WAAAA,MAAmBA,kBAAAA,WAAAA,YAE7C,OACImE,EAAAA,YAAAA,MAAA,OAAKvE,UAAWqC,qBAAG,cAAeC,kCAAkB/E,SAAA,EAChD6E,EAAAA,YAAAA,KAACyD,MAAK,CAACC,IAAI,KAAKlF,KAAK,SAAQrD,SACxBmD,OAEJnD,WACG6E,EAAAA,YAAAA,KAAChC,kBAAAA,WAAAA,KAAe,CACZ0F,IAAI,IACJlF,KAAK,iBACLZ,UAAWqC,qBAAGC,6BAAWyD,EAAAA,eAAAA,GAAA,GAAKzD,mCAAqBkD,YAAajI,SAE/DA,YAGTgH,EAAAA,YAAAA,MAAA,OAAKvE,UAAWsC,6BAAa/E,SAAA,EACzB6E,EAAAA,YAAAA,KAAA,KACIpC,UAAWqC,qBAAGC,+BAAayD,EAAAA,eAAAA,GAAA,GACtBzD,mCAAqB+C,SAE1BW,KACIX,QACA,uFAEJY,OAAO,SAAQ1I,SAClB,WAGDgH,EAAAA,YAAAA,MAAA,KAAGvE,UAAWsC,8BAAe0D,KAAMJ,WAAYK,OAAO,SAAQ1I,SAAA,EAC1D6E,EAAAA,YAAAA,KAAC8D,WAAAA,EAAU,CAACC,KAAK,uCAAuC,gBAKhE/D,EAAAA,YAAAA,KAACzB,aAAAA,MAAK,CAACyF,UAAU,aAAaC,MAAM,SAASrG,UAAWsC,4BAAY/E,UACnD,QAAZwH,aAAAuB,uBAAO5F,aAAK,IAAAqE,kBAAA,EAAZA,aAAcwB,UAAW,IACtBhC,EAAAA,YAAAA,MAACnE,kBAAAA,WAAAA,KAAe,CAACQ,KAAK,gBAAgB4F,MAAM,YAAWjJ,SAAA,CAAC,iBACrC,KACfgH,EAAAA,YAAAA,MAACE,OAAAA,KAAI,CACDuB,KAAI,2DAAA1B,OAAyE,QAAzEU,cAA6DsB,uBAAO5F,aAAK,IAAAsE,mBAAA,EAAZA,cAAcyB,QAC/ER,OAAO,SACPrF,KAAK,YACL8F,WAAW,EACXpG,MAAM,+BACNN,UAAWsC,iCAAiB/E,SAAA,CAEf,QAFe0H,cAE3BqB,uBAAO5F,aAAK,IAAAuE,mBAAA,EAAZA,cAAcsB,SAAU,KACxBI,EAAAA,SAAAA,IAAsB,QAAbzB,cAACoB,uBAAO5F,aAAK,IAAAwE,mBAAA,EAAZA,cAAcqB,SAAU,UAAW,WAAY,eAE7D,MAAM,IAAc,QAAbpB,cAACmB,uBAAO5F,aAAK,IAAAyE,mBAAA,EAAZA,cAAcyB,QAAS,KAC/BD,EAAAA,SAAAA,IAAsB,QAAbvB,cAACkB,uBAAO5F,aAAK,IAAA0E,mBAAA,EAAZA,cAAcwB,QAAS,QAAS,SAAU,iBAM7E,E,o2BCtFA,uBAAuB,aCYlBC,QAAO,SAAPA,SAAO,OAAPA,QAAO,0BAAPA,QAAO,cAAPA,QAAO,oBAAPA,QAAO,sBAAPA,QAAO,0BAAPA,OAAO,EAAPA,SAAO,IAQNC,UAAQC,UAAA,IAAAhB,EAAAA,eAAAA,GAAAgB,UACTF,QAAQG,YAAc,aAAUjB,EAAAA,eAAAA,GAAAgB,UAChCF,QAAQI,MAAQ,aAAUlB,EAAAA,eAAAA,GAAAgB,UAC1BF,QAAQK,SAAW,mBAAgBnB,EAAAA,eAAAA,GAAAgB,UACnCF,QAAQM,UAAY,eAAYpB,EAAAA,eAAAA,GAAAgB,UAChCF,QAAQO,YAAc,gBAAcL,WAY5BM,KAAkB,SAAlBA,KAAerF,MAOrB,IANHf,YAAWe,KAAXf,YACAjE,MAAKgF,KAALhF,MACAsK,QAAOtF,KAAPsF,QACApG,UAASc,KAATd,UAASqG,qBAAAvF,KACTwF,gBAAAA,qBAAe,IAAAD,qBAAGV,QAAQG,YAAWO,qBACrCE,YAAWzF,KAAXyF,YAEA3E,WAAgCC,EAAAA,MAAAA,UAASyE,iBAAgBxE,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAAlD4E,SAAQ1E,WAAA,GAAE2E,YAAW3E,WAAA,GAEtB4E,cAAeC,EAAAA,MAAAA,cACjB,SAACC,EAACC,OAAsB,IAAlBC,WAAUD,MAAVC,WACFL,YAAYK,WAChB,GACA,IAqCEC,MAAOC,EAAAA,MAAAA,UAAQ,kBAlCF,SAAbC,aACF,MAAO,EACH/F,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC9H,MAAOwG,SAASD,QAAQG,aAAcvG,GAAIoG,QAAQG,YAAYzJ,SAC9D0D,aADmE,eAGxEjE,OACIoF,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC9H,MAAOwG,SAASD,QAAQI,OAAQxG,GAAIoG,QAAQI,MAAM1J,SAClDP,OADuD,SAG5D,KACJsK,SACIlF,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC9H,MAAOwG,SAASD,QAAQK,UAAWzG,GAAIoG,QAAQK,SAAS3J,SACxD+J,SAD6D,YAGlE,KACJG,aACIrF,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CACA9H,MAAOwG,SAASD,QAAQO,aACxB3G,GAAIoG,QAAQO,YAAY7J,SAGvBkK,aAFG,eAIR,KACJvG,WACIkB,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC9H,MAAOwG,SAASD,QAAQM,WAAY1G,GAAIoG,QAAQM,UAAU5J,UAC3D6E,EAAAA,YAAAA,KAAA,OAAKiG,MAAO,CAAEC,UAAW,QAAS/K,UAC9B6E,EAAAA,YAAAA,KAACL,UAAS,CAACE,QAASf,eAFwC,aAKpE,MACNqH,OAAOC,MAAAA,eACb,CAE2BL,EAAY,GAAE,CAAClH,YAAajE,MAAOsK,UAE9D,OACIlF,EAAAA,YAAAA,KAACqG,YAAAA,eAAc,CACXzI,UAAU,cACVgI,WAAYN,SACZgB,SAAUd,aACVe,mBAAoBrG,uBAAY/E,SAE/B0K,MAGb,E,85CCnGa/B,WAAa,SAAbA,WAAUlE,MAAA,IAAA4G,UAAA5G,KAAMmE,KAAAA,UAAI,IAAAyC,UAAG,UAASA,UAAAC,WAAA7G,KAAE8G,MAAAA,WAAK,IAAAD,WAAG,GAAEA,WAAAE,YAAA/G,KAAEgH,OAAAA,YAAM,IAAAD,YAAG,GAAEA,YAAA,OAClE3G,EAAAA,+CAAAA,KAAA,OAAK6G,MAAM,6BAA6BH,MAAOA,MAAOE,OAAQA,OAAQE,QAAQ,YAAW3L,UACrF6E,EAAAA,+CAAAA,KAAA,QACI+G,SAAS,UACTC,SAAS,UACTC,EAAE,uxBACFlD,KAAMA,QAER,EACRD,WAAAoD,aAAA,iP,w1BCNIC,WAA+B,oBAAXC,OACpBC,eAAiBF,cAAeG,EAAAA,oCAAAA,OAA8BC,EAAAA,oCAAAA,OAwBvDnJ,GAAkB,SAAlBA,GAAewB,MAAwD,IAAlDzE,SAAQyE,KAARzE,SAAQqM,WAAA5H,KAAEnB,MAAAA,WAAK,IAAA+I,WAAG,GAAEA,WAAEC,MAAK7H,KAAL6H,MAAOC,cAAa9H,KAAb8H,cAC3DxE,gBAAuBC,EAAAA,4CAAAA,GAAc1E,OAA9BkJ,cAAoC9G,EAAAA,2KAAAA,GAAAqC,eAAA,GAAxB,GAIb0E,cAFsBC,IAAVJ,OAA6BA,QAAUJ,mBAE1B5I,OAASkJ,cASxC,OAPArG,EAAAA,mCAAAA,YAAU,WACFoG,eACAA,cAAcE,QAEtB,GAAG,CAACA,QAASF,iBAGN1H,EAAAA,+CAAAA,KAAC8H,mCAAAA,SAAQ,CAAA3M,SAAEyM,SAAWT,WAAahM,SAAW,MACzD,E,ynDClCagI,cAAgB,SAAhBA,cAAiB1E,OAAoE,IAArDsJ,aAAuClM,UAAAoG,OAAA,QAAA4F,IAAAhM,UAAA,IAAAA,UAAA,GAChF6E,WAA8BC,EAAAA,mCAAAA,UAASoH,cAAanH,YAAAC,EAAAA,2KAAAA,GAAAH,UAAA,GAA7CkH,QAAOhH,WAAA,GAAEoH,WAAUpH,WAAA,GA0B1B,OAxBAqH,EAAAA,4CAAAA,KAA6B,WACzB,IAAMC,KAAMC,EAAAA,oCAAAA,IAAc1J,OAEpB2J,kBAAoB,SAApBA,oBAAiB,OAASJ,WAAWE,IAAIN,QAAS,EAUxD,OARAQ,oBAEIF,IAAIG,YACJH,IAAIG,YAAYD,mBAEhBF,IAAII,iBAAiB,SAAUF,mBAG5B,WACCF,IAAIK,eACJL,IAAIK,eAAeH,mBAEnBF,IAAIM,oBAAoB,SAAUJ,oBAGtCK,EAAAA,oCAAAA,IAAkBhK,MACtB,CACJ,GAAG,CAACA,QAEG,CAACmJ,QACZ,E,yuCC9BMc,KAAoB,CAAC,EACrBC,YAAwB,CAAC,EAOxB,SAASR,cAAcS,WAC1B,IAAMnK,MAAQoK,mBAAOD,YAAuCA,UAS5D,OAPIF,KAAKjK,OACLkK,YAAYlK,QAAU,GAEtBiK,KAAKjK,OAAS2I,OAAO0B,WAAWrK,OAChCkK,YAAYlK,OAAS,GAGlBiK,KAAKjK,MAChB,CAOO,SAASgK,kBAAkBG,WAC9B,IAAMnK,MAAQoK,mBAAOD,YAAuCA,UAE5DD,YAAYlK,QAAU,EAElBiK,KAAKjK,QAAiC,IAAvBkK,YAAYlK,gBACpBiK,KAAKjK,cACLkK,YAAYlK,OAE3B,CAKO,SAAS6I,2BACZ,MAAO,iBAAkBF,QAAU,qBAAsBA,OAAO2B,SACpE,CAKO,SAASxB,mBACZ,MACI,iBAAkBH,QAClBA,OAAO2B,UAAUC,eAAiB,GAEjC5B,OAAO2B,UAAkBE,iBAAmB,CAErD,C","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/mq/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/mq/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/mq/src/Component.tsx","webpack://@alfalab/core-components/./packages/mq/src/useMatchMedia.tsx","webpack://@alfalab/core-components/./packages/mq/src/utils.ts"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Компонент, имплементирующий поддержку медиа запросов в шаблонах с помощью \", _jsx(_components.code, {\n        children: \"window.matchMedia\"\n      }), \".\\nРендерит внутренние Components/разметку исходя из соответствия условиям запроса.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Можно использовать как нативные запросы, так и кастомные из \", _jsx(_components.code, {\n        children: \"mq.json\"\n      }), \", например \", _jsx(_components.code, {\n        children: \"--mobile\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Пока браузеры не поддерживают CSS4 Media Queries, поддержка тач-событий определяется через пропс \", _jsx(_components.code, {\n        children: \"touch\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Важно понимать, что широкое использование этого подхода не рекомендовано, поскольку:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"matchMedia()\"\n        }), \" накладнее для браузера, чем матчинг элемента в CSS;\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Этот способ работает только на клиенте, и, при использовании SSR, может усилить различие серверной и финальной разметки, и добавить сложности к тестированию.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<div>\\n    <Mq query='--mobile'>\\n        <Button>Mobile кнопка</Button>\\n    </Mq>\\n    <Mq query='--tablet-s'>\\n        <Button>Desktop кнопка</Button>\\n    </Mq>\\n</div>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Помимо компонента, в пакете доступен хук \", _jsx(_components.code, {\n        children: \"useMatchMedia\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const query = '(min-width: 600px)';\\n    const [matches] = useMatchMedia(query);\\n\\n    return `Matches ${query}: ${matches}`;\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Button } from '@alfalab/core-components-button';\nimport { Space } from '@alfalab/core-components-space';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Mq, useMatchMedia } from '@alfalab/core-components-mq';\nimport { Mq as MqTS } from '../Component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  if (!Typography) _missingMdxReference(\"Typography\", false);\n  if (!Typography.Title) _missingMdxReference(\"Typography.Title\", true);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Mq\",\n      component: Mq,\n      id: \"Mq\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Mq\",\n      children: /*#__PURE__*/_jsxs(Space, {\n        children: [/*#__PURE__*/_jsx(Typography.Title, {\n          view: \"small\",\n          children: \"Сожми экран\"\n        }), /*#__PURE__*/_jsx(Mq, {\n          query: \"--mobile\",\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"Mobile кнопка\"\n          })\n        }), /*#__PURE__*/_jsx(Mq, {\n          query: \"--tablet-s\",\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"Desktop кнопка\"\n          })\n        })]\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Mq\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/mq\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Mq, useMatchMedia } from '@alfalab/core-components/mq';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: MqTS\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n/* ========= */\nexport const mq = () => /*#__PURE__*/_jsxs(Space, {\n  children: [/*#__PURE__*/_jsx(Typography.Title, {\n    view: \"small\",\n    children: \"\\u0421\\u043E\\u0436\\u043C\\u0438 \\u044D\\u043A\\u0440\\u0430\\u043D\"\n  }), /*#__PURE__*/_jsx(Mq, {\n    query: \"--mobile\",\n    children: /*#__PURE__*/_jsx(Button, {\n      children: \"Mobile \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430\"\n    })\n  }), /*#__PURE__*/_jsx(Mq, {\n    query: \"--tablet-s\",\n    children: /*#__PURE__*/_jsx(Button, {\n      children: \"Desktop \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430\"\n    })\n  })]\n});\nmq.storyName = 'Mq';\nmq.parameters = {\n  storySource: {\n    source: '<Space><Typography.Title view=\\\"small\\\">{\\\"\\\\u0421\\\\u043E\\\\u0436\\\\u043C\\\\u0438 \\\\u044D\\\\u043A\\\\u0440\\\\u0430\\\\u043D\\\"}</Typography.Title><Mq query=\\\"--mobile\\\"><Button>{\\\"Mobile \\\\u043A\\\\u043D\\\\u043E\\\\u043F\\\\u043A\\\\u0430\\\"}</Button></Mq><Mq query=\\\"--tablet-s\\\"><Button>{\\\"Desktop \\\\u043A\\\\u043D\\\\u043E\\\\u043F\\\\u043A\\\\u0430\\\"}</Button></Mq></Space>'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Mq',\n  id: 'Mq',\n  component: Mq,\n  tags: ['stories-mdx'],\n  includeStories: [\"mq\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import React, { FC, Fragment, ReactNode, useEffect } from 'react';\n\nimport { useMatchMedia } from './useMatchMedia';\nimport { isPointerEventsSupported, isTouchSupported } from './utils';\n\nconst IS_BROWSER = typeof window !== 'undefined';\nconst SUPPORTS_TOUCH = IS_BROWSER && (isPointerEventsSupported() || isTouchSupported());\n\nexport type MqProps = {\n    /**\n     * Media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n     */\n    query?: string;\n\n    /**\n     * Запрос на поддержку тач-событий\n     */\n    touch?: boolean;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n\n    /**\n     * Обработчик изменений в совпадении запросов\n     */\n    onMatchChange?: (isMatched: boolean) => void;\n};\n\nexport const Mq: FC<MqProps> = ({ children, query = '', touch, onMatchChange }) => {\n    const [queryMatches] = useMatchMedia(query);\n\n    const touchPass = touch === undefined ? true : touch === SUPPORTS_TOUCH;\n\n    const matches = touchPass && (!query || queryMatches);\n\n    useEffect(() => {\n        if (onMatchChange) {\n            onMatchChange(matches);\n        }\n    }, [matches, onMatchChange]);\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <Fragment>{matches && IS_BROWSER ? children : null}</Fragment>;\n};\n","import { useState } from 'react';\n\nimport { useLayoutEffect_SAFE_FOR_SSR } from '@alfalab/hooks';\n\nimport { getMatchMedia, releaseMatchMedia } from './utils';\n\n/**\n * Хук для медиа запросов.\n * @param query media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n * @param defaultValue Значение по-умолчанию.\n */\nexport const useMatchMedia = (query: string, defaultValue: boolean | (() => boolean) = false) => {\n    const [matches, setMatches] = useState(defaultValue);\n\n    useLayoutEffect_SAFE_FOR_SSR(() => {\n        const mql = getMatchMedia(query);\n\n        const handleMatchChange = () => setMatches(mql.matches);\n\n        handleMatchChange();\n\n        if (mql.addListener) {\n            mql.addListener(handleMatchChange);\n        } else {\n            mql.addEventListener('change', handleMatchChange);\n        }\n\n        return () => {\n            if (mql.removeListener) {\n                mql.removeListener(handleMatchChange);\n            } else {\n                mql.removeEventListener('change', handleMatchChange);\n            }\n\n            releaseMatchMedia(query);\n        };\n    }, [query]);\n\n    return [matches];\n};\n","import MqList from './mq.json';\n\ntype AvailableMediaQueries = keyof typeof MqList;\n\ntype QueriesPool = Record<string, MediaQueryList>;\n\ntype Counters = Record<string, number>;\n\n// TODO: перенести в alfalab/utils\nconst pool: QueriesPool = {};\nconst refCounters: Counters = {};\n\n/**\n * Возвращает MediaQueryList для заданного media-выражения.\n *\n * @param queryProp media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n */\nexport function getMatchMedia(queryProp: string): MediaQueryList {\n    const query = MqList[queryProp as AvailableMediaQueries] || queryProp;\n\n    if (pool[query]) {\n        refCounters[query] += 1;\n    } else {\n        pool[query] = window.matchMedia(query);\n        refCounters[query] = 1;\n    }\n\n    return pool[query];\n}\n\n/**\n * Удаляет MediaQueryList.\n *\n * @param queryProp media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n */\nexport function releaseMatchMedia(queryProp: string): void {\n    const query = MqList[queryProp as AvailableMediaQueries] || queryProp;\n\n    refCounters[query] -= 1;\n\n    if (pool[query] && refCounters[query] === 0) {\n        delete pool[query];\n        delete refCounters[query];\n    }\n}\n\n/**\n * Возвращает `true`, если есть поддержка `Pointer Events`\n */\nexport function isPointerEventsSupported() {\n    return 'PointerEvent' in window || 'msPointerEnabled' in window.navigator;\n}\n\n/**\n * Возвращает `true`, если есть поддержка `Touch Events`\n */\nexport function isTouchSupported() {\n    return (\n        'ontouchstart' in window ||\n        window.navigator.maxTouchPoints > 0 ||\n        // eslint-disable-next-line\n        (window.navigator as any).msMaxTouchPoints > 0\n    );\n}\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","ol","li","pre","live","className","MDXContent","wrapper","MDXLayout","Typography","_missingMdxReference","title","component","Mq","id","name","Space","view","query","Button","version","package","description","changelog","of","Error","mq","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","tag","_defineProperty","href","target","GithubIcon","fill","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","IS_BROWSER","window","SUPPORTS_TOUCH","isPointerEventsSupported","isTouchSupported","_ref$query","touch","onMatchChange","queryMatches","matches","undefined","Fragment","defaultValue","setMatches","useLayoutEffect_SAFE_FOR_SSR","mql","getMatchMedia","handleMatchChange","addListener","addEventListener","removeListener","removeEventListener","releaseMatchMedia","pool","refCounters","queryProp","MqList","matchMedia","navigator","maxTouchPoints","msMaxTouchPoints"],"sourceRoot":""}