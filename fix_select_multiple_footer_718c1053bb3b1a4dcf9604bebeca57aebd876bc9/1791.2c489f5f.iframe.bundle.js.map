{"version":3,"file":"1791.2c489f5f.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://@alfalab/core-components/./node_modules/simplebar/src/helpers.js","webpack://@alfalab/core-components/./node_modules/simplebar/src/scrollbar-width.js","webpack://@alfalab/core-components/./node_modules/simplebar/src/simplebar.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Helper function to retrieve options from element attributes\nexport const getOptions = function(obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case 'true':\n            acc[key] = true;\n            break;\n          case 'false':\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nexport function getElementWindow(element) {\n  if (\n    !element ||\n    !element.ownerDocument ||\n    !element.ownerDocument.defaultView\n  ) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\n\nexport function getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\n","import canUseDOM from 'can-use-dom';\nimport { getElementDocument } from \"./helpers\";\n\nlet cachedScrollbarWidth = null;\nlet cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', () => {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nexport default function scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    \n    const document = getElementDocument(el);\n    \n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    const body = document.body;\n    const box = document.createElement('div');\n\n    box.classList.add('simplebar-hide-scrollbar');\n\n    body.appendChild(box);\n\n    const width = box.getBoundingClientRect().right;\n\n    body.removeChild(box);\n\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport scrollbarWidth from './scrollbar-width';\nimport { getElementWindow, getElementDocument } from './helpers';\n\nexport default class SimpleBar {\n  constructor(element, options) {\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = { ...SimpleBar.defaultOptions, ...options };\n    this.classNames = {\n      ...SimpleBar.defaultOptions.classNames,\n      ...this.options.classNames\n    };\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null;\n\n    // Don't re-instantiate over an existing one\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(\n      this.hideScrollbars.bind(this),\n      this.options.timeout\n    );\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n\n    this.init();\n  }\n\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n  static getRtlHelpers() {\n    const dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML =\n      '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    const scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    const dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    const dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    const dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    const dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(\n      dummyContainerChild\n    );\n\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left &&\n        dummyContainerChildOffset.left -\n          dummyContainerScrollOffsetAfterScroll.left !==\n          0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  }\n\n  static defaultOptions = {\n    autoHide: true,\n    forceVisible: false,\n    clickOnTrack: true,\n    clickOnTrackSpeed: 40,\n    classNames: {\n      contentEl: 'simplebar-content',\n      contentWrapper: 'simplebar-content-wrapper',\n      offset: 'simplebar-offset',\n      mask: 'simplebar-mask',\n      wrapper: 'simplebar-wrapper',\n      placeholder: 'simplebar-placeholder',\n      scrollbar: 'simplebar-scrollbar',\n      track: 'simplebar-track',\n      heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n      heightAutoObserverEl: 'simplebar-height-auto-observer',\n      visible: 'simplebar-visible',\n      horizontal: 'simplebar-horizontal',\n      vertical: 'simplebar-vertical',\n      hover: 'simplebar-hover',\n      dragging: 'simplebar-dragging'\n    },\n    scrollbarMinSize: 25,\n    scrollbarMaxSize: 0,\n    timeout: 1000\n  };\n\n  static getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    const elDocument = getElementDocument(el);\n    const elWindow = getElementWindow(el);\n\n    return {\n      top:\n        rect.top +\n        (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left:\n        rect.left +\n        (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  }\n\n  static instances = new WeakMap();\n\n  init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this);\n\n    // We stop here on server-side\n    if (canUseDOM) {\n      this.initDOM();\n\n      this.setAccessibilityAttributes();\n\n      this.scrollbarWidth = this.getScrollbarWidth();\n\n      this.recalculate();\n\n      this.initListeners();\n    }\n  }\n\n  initDOM() {\n    // make sure this element doesn't have the elements yet\n    if (\n      Array.prototype.filter.call(this.el.children, child =>\n        child.classList.contains(this.classNames.wrapper)\n      ).length\n    ) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`);\n      this.contentWrapperEl =\n        this.options.scrollableNode ||\n        this.el.querySelector(`.${this.classNames.contentWrapper}`);\n      this.contentEl =\n        this.options.contentNode ||\n        this.el.querySelector(`.${this.classNames.contentEl}`);\n\n      this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`);\n      this.maskEl = this.el.querySelector(`.${this.classNames.mask}`);\n\n      this.placeholderEl = this.findChild(\n        this.wrapperEl,\n        `.${this.classNames.placeholder}`\n      );\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverWrapperEl}`\n      );\n      this.heightAutoObserverEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverEl}`\n      );\n      this.axis.x.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.horizontal}`\n      );\n      this.axis.y.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.vertical}`\n      );\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(\n        this.classNames.heightAutoObserverWrapperEl\n      );\n      this.heightAutoObserverEl.classList.add(\n        this.classNames.heightAutoObserverEl\n      );\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      const track = document.createElement('div');\n      const scrollbar = document.createElement('div');\n\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n\n      track.appendChild(scrollbar);\n\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  }\n\n  setAccessibilityAttributes() {\n    const ariaLabel = this.options.ariaLabel || 'scrollable content';\n\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  }\n\n  initListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll);\n\n    // Browser zoom triggers a window resize\n    elWindow.addEventListener('resize', this.onWindowResize);\n\n    // Hack for https://github.com/WICG/ResizeObserver/issues/38\n    let resizeObserverStarted = false;\n    const resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(() => {\n      if (!resizeObserverStarted) return;\n      this.recalculate();\n    });\n\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n\n    elWindow.requestAnimationFrame(() => {\n      resizeObserverStarted = true;\n    });\n\n    // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  recalculate() {\n    const elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n\n    const isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    const isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    const contentElOffsetWidth = this.contentEl.offsetWidth;\n\n    const contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n\n    const elOverflowX = this.elStyles.overflowX;\n    const elOverflowY = this.elStyles.overflowY;\n\n    this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`;\n    this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`;\n\n    const contentElScrollHeight = this.contentEl.scrollHeight;\n    const contentElScrollWidth = this.contentEl.scrollWidth;\n\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n\n    // Determine placeholder size\n    this.placeholderEl.style.width = isWidthAuto\n      ? `${contentElOffsetWidth}px`\n      : 'auto';\n    this.placeholderEl.style.height = `${contentElScrollHeight}px`;\n\n    const contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing =\n      contentElScrollHeight > contentWrapperElOffsetHeight;\n\n    // Set isOverflowing to false if user explicitely set hidden overflow\n    this.axis.x.isOverflowing =\n      elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing =\n      elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n\n    this.axis.x.forceVisible =\n      this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible =\n      this.options.forceVisible === 'y' || this.options.forceVisible === true;\n\n    this.hideNativeScrollbar();\n\n    // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n    let offsetForXScrollbar = this.axis.x.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n    let offsetForYScrollbar = this.axis.y.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n\n    this.axis.x.isOverflowing =\n      this.axis.x.isOverflowing &&\n      contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing =\n      this.axis.y.isOverflowing &&\n      contentElScrollHeight >\n        contentWrapperElOffsetHeight - offsetForXScrollbar;\n\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n\n    this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`;\n    this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`;\n\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n\n  /**\n   * Calculate scrollbar size\n   */\n  getScrollbarSize(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    const contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    let scrollbarSize;\n\n    let scrollbarRatio = trackSize / contentSize;\n\n    // Calculate new height/position of drag handle.\n    scrollbarSize = Math.max(\n      ~~(scrollbarRatio * trackSize),\n      this.options.scrollbarMinSize\n    );\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  }\n\n  positionScrollbar(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    const contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    let scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollingInverted\n        ? -scrollOffset\n        : scrollOffset;\n    let scrollPourcent = scrollOffset / (contentSize - hostSize);\n\n    let handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n        ? handleOffset + (trackSize - scrollbar.size)\n        : handleOffset;\n\n    scrollbar.el.style.transform =\n      axis === 'x'\n        ? `translate3d(${handleOffset}px, 0, 0)`\n        : `translate3d(0, ${handleOffset}px, 0)`;\n  }\n\n  toggleTrackVisibility(axis = 'y') {\n    const track = this.axis[axis].track.el;\n    const scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    }\n\n    // Even if forceVisible is enabled, scrollbar itself should be hidden\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  }\n\n  hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n      this.axis.y.isOverflowing || this.axis.y.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n    this.offsetEl.style.bottom =\n      this.axis.x.isOverflowing || this.axis.x.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n  }\n\n  /**\n   * On scroll event handling\n   */\n  onScroll = () => {\n    const elWindow = getElementWindow(this.el);\n    if (!this.scrollXTicking) {\n      elWindow.requestAnimationFrame(this.scrollX);\n      this.scrollXTicking = true;\n    }\n\n    if (!this.scrollYTicking) {\n      elWindow.requestAnimationFrame(this.scrollY);\n      this.scrollYTicking = true;\n    }\n  };\n\n  scrollX = () => {\n    if (this.axis.x.isOverflowing) {\n      this.showScrollbar('x');\n      this.positionScrollbar('x');\n    }\n\n    this.scrollXTicking = false;\n  };\n\n  scrollY = () => {\n    if (this.axis.y.isOverflowing) {\n      this.showScrollbar('y');\n      this.positionScrollbar('y');\n    }\n\n    this.scrollYTicking = false;\n  };\n\n  onMouseEnter = () => {\n    this.showScrollbar('x');\n    this.showScrollbar('y');\n  };\n\n  onMouseMove = e => {\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseMoveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseMoveForAxis('y');\n    }\n  };\n\n  onMouseMoveForAxis(axis = 'y') {\n    this.axis[axis].track.rect = this.axis[\n      axis\n    ].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n\n    const isWithinScrollbarBoundsX = this.isWithinBounds(\n      this.axis[axis].scrollbar.rect\n    );\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  }\n\n  onMouseLeave = () => {\n    this.onMouseMove.cancel();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseLeaveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseLeaveForAxis('y');\n    }\n\n    this.mouseX = -1;\n    this.mouseY = -1;\n  };\n\n  onMouseLeaveForAxis(axis = 'y') {\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  }\n\n  onWindowResize = () => {\n    // Recalculate scrollbarWidth in case it's a zoom\n    this.scrollbarWidth = this.getScrollbarWidth();\n\n    this.hideNativeScrollbar();\n  };\n\n  /**\n   * Show scrollbar\n   */\n  showScrollbar(axis = 'y') {\n    let scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n\n  /**\n   * Hide Scrollbar\n   */\n  hideScrollbars = () => {\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (!this.isWithinBounds(this.axis.y.track.rect)) {\n      this.axis.y.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.y.isVisible = false;\n    }\n\n    if (!this.isWithinBounds(this.axis.x.track.rect)) {\n      this.axis.x.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.x.isVisible = false;\n    }\n  };\n\n  onPointerEvent = e => {\n    let isWithinTrackXBounds, isWithinTrackYBounds;\n\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      isWithinTrackXBounds = this.isWithinBounds(this.axis.x.track.rect);\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      isWithinTrackYBounds = this.isWithinBounds(this.axis.y.track.rect);\n    }\n\n    // If any pointer event is called on the scrollbar\n    if (isWithinTrackXBounds || isWithinTrackYBounds) {\n      // Preventing the event's default action stops text being\n      // selectable during the drag.\n      e.preventDefault();\n      // Prevent event leaking\n      e.stopPropagation();\n\n      if (e.type === 'mousedown') {\n        if (isWithinTrackXBounds) {\n          this.axis.x.scrollbar.rect = this.axis.x.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.x.scrollbar.rect)) {\n            this.onDragStart(e, 'x');\n          } else {\n            this.onTrackClick(e, 'x');\n          }\n        }\n\n        if (isWithinTrackYBounds) {\n          this.axis.y.scrollbar.rect = this.axis.y.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.y.scrollbar.rect)) {\n            this.onDragStart(e, 'y');\n          } else {\n            this.onTrackClick(e, 'y');\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  onDragStart(e, axis = 'y') {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n    const eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset =\n      eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n\n    this.el.classList.add(this.classNames.dragging);\n\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n\n  /**\n   * Drag scrollbar handle\n   */\n  drag = e => {\n    let eventOffset;\n    const track = this.axis[this.draggedAxis].track;\n    const trackSize = track.rect[this.axis[this.draggedAxis].sizeAttr];\n    const scrollbar = this.axis[this.draggedAxis].scrollbar;\n    const contentSize = this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollSizeAttr\n    ];\n    const hostSize = parseInt(\n      this.elStyles[this.axis[this.draggedAxis].sizeAttr],\n      10\n    );\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.draggedAxis === 'y') {\n      eventOffset = e.pageY;\n    } else {\n      eventOffset = e.pageX;\n    }\n\n    // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n    let dragPos =\n      eventOffset -\n      track.rect[this.axis[this.draggedAxis].offsetAttr] -\n      this.axis[this.draggedAxis].dragOffset;\n    // Convert the mouse position into a percentage of the scrollbar height/width.\n    let dragPerc = dragPos / (trackSize - scrollbar.size);\n\n    // Scroll the content by the same percentage.\n    let scrollPos = dragPerc * (contentSize - hostSize);\n\n    // Fix browsers inconsistency on RTL\n    if (this.draggedAxis === 'x') {\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n          ? scrollPos - (trackSize + scrollbar.size)\n          : scrollPos;\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted\n          ? -scrollPos\n          : scrollPos;\n    }\n\n    this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollOffsetAttr\n    ] = scrollPos;\n  };\n\n  /**\n   * End scroll handle drag\n   */\n  onEndDrag = e => {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.el.classList.remove(this.classNames.dragging);\n\n    elDocument.removeEventListener('mousemove', this.drag, true);\n    elDocument.removeEventListener('mouseup', this.onEndDrag, true);\n    this.removePreventClickId = elWindow.setTimeout(() => {\n      // Remove these asynchronously so we still suppress click events\n      // generated simultaneously with mouseup.\n      elDocument.removeEventListener('click', this.preventClick, true);\n      elDocument.removeEventListener('dblclick', this.preventClick, true);\n      this.removePreventClickId = null;\n    });\n  };\n\n  /**\n   * Handler to ignore click events during drag\n   */\n  preventClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  onTrackClick(e, axis = 'y') {\n    if (!this.options.clickOnTrack) return;\n\n    const elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n    const scrollbar = this.axis[axis].scrollbar;\n    const scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    let scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    const t =\n      axis === 'y'\n        ? this.mouseY - scrollbarOffset\n        : this.mouseX - scrollbarOffset;\n    const dir = t < 0 ? -1 : 1;\n    const scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    const scrollTo = () => {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          scrolled -= this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          scrolled += this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n\n  /**\n   * Getter for content element\n   */\n  getContentElement() {\n    return this.contentEl;\n  }\n\n  /**\n   * Getter for original scrolling element\n   */\n  getScrollElement() {\n    return this.contentWrapperEl;\n  }\n\n  getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (\n        getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n          .display === 'none' ||\n        'scrollbarWidth' in document.documentElement.style ||\n        '-ms-overflow-style' in document.documentElement.style\n      ) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  }\n\n  removeListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Cancel all debounced functions\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n\n  /**\n   * Check if mouse is within bounds\n   */\n  isWithinBounds(bbox) {\n    return (\n      this.mouseX >= bbox.left &&\n      this.mouseX <= bbox.left + bbox.width &&\n      this.mouseY >= bbox.top &&\n      this.mouseY <= bbox.top + bbox.height\n    );\n  }\n\n  /**\n   * Find element children matches query\n   */\n  findChild(el, query) {\n    const matches =\n      el.matches ||\n      el.webkitMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, child =>\n      matches.call(child, query)\n    )[0];\n  }\n}\n"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","_nonIterableSpread","TypeError","getElementWindow","element","ownerDocument","defaultView","window","getElementDocument","document","cachedScrollbarWidth","cachedDevicePixelRatio","scrollbarWidth","el","body","box","createElement","classList","add","appendChild","width","getBoundingClientRect","right","removeChild","addEventListener","devicePixelRatio","SimpleBar","constructor","options","this","minScrollbarWidth","defaultOptions","classNames","axis","x","scrollOffsetAttr","sizeAttr","scrollSizeAttr","offsetSizeAttr","offsetAttr","overflowAttr","dragOffset","isOverflowing","isVisible","forceVisible","track","scrollbar","y","removePreventClickId","instances","has","recalculate","bind","onMouseMove","hideScrollbars","timeout","onWindowResize","leading","getRtlHelpers","init","static","dummyDiv","innerHTML","scrollbarDummyEl","firstElementChild","dummyContainerChild","scrollLeft","dummyContainerOffset","getOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","isRtlScrollingInverted","left","isRtlScrollbarInverted","autoHide","clickOnTrack","clickOnTrackSpeed","contentEl","contentWrapper","offset","mask","wrapper","placeholder","heightAutoObserverWrapperEl","heightAutoObserverEl","visible","horizontal","vertical","hover","dragging","scrollbarMinSize","scrollbarMaxSize","rect","elDocument","elWindow","top","pageYOffset","documentElement","scrollTop","pageXOffset","WeakMap","set","initDOM","setAccessibilityAttributes","getScrollbarWidth","initListeners","prototype","filter","call","children","child","contains","length","wrapperEl","querySelector","contentWrapperEl","scrollableNode","contentNode","offsetEl","maskEl","placeholderEl","findChild","firstChild","cloneNode","setAttribute","ariaLabel","onMouseEnter","forEach","e","onPointerEvent","capture","passive","onMouseLeave","onScroll","resizeObserverStarted","resizeObserver","ResizeObserver","observe","requestAnimationFrame","mutationObserver","MutationObserver","childList","subtree","characterData","elStyles","getComputedStyle","isRtl","direction","isHeightAuto","offsetHeight","isWidthAuto","offsetWidth","contentElOffsetWidth","contentWrapperElOffsetWidth","elOverflowX","overflowX","elOverflowY","overflowY","style","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","contentElScrollHeight","scrollHeight","contentElScrollWidth","scrollWidth","height","contentWrapperElOffsetHeight","hideNativeScrollbar","offsetForXScrollbar","offsetForYScrollbar","size","getScrollbarSize","positionScrollbar","toggleTrackVisibility","contentSize","trackSize","scrollbarSize","scrollbarRatio","Math","max","min","hostSize","parseInt","scrollOffset","scrollPourcent","handleOffset","transform","visibility","display","bottom","scrollXTicking","scrollX","scrollYTicking","scrollY","showScrollbar","mouseX","clientX","mouseY","clientY","onMouseMoveForAxis","isWithinBounds","remove","cancel","onMouseLeaveForAxis","isWithinTrackXBounds","isWithinTrackYBounds","preventDefault","stopPropagation","type","onDragStart","onTrackClick","eventOffset","pageY","pageX","draggedAxis","drag","onEndDrag","preventClick","clearTimeout","scrollPos","removeEventListener","setTimeout","scrollbarOffset","scrolled","dir","scrollSize","scrollTo","getContentElement","getScrollElement","removeListeners","disconnect","unMount","delete","bbox","query","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector"],"sourceRoot":""}