{"version":3,"file":"7685.e26b0314.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/gallery/src/context.ts","webpack://@alfalab/core-components/./packages/gallery/src/components/image-preview/paths.ts","webpack://@alfalab/core-components/./packages/gallery/src/components/image-preview/index.module.css?d193","webpack://@alfalab/core-components/./packages/gallery/src/components/image-preview/Component.tsx","webpack://@alfalab/core-components/./packages/gallery/src/components/navigation-bar/index.module.css?1ff2","webpack://@alfalab/core-components/./packages/gallery/src/components/navigation-bar/Component.tsx","webpack://@alfalab/core-components/./packages/gallery/src/components/header-info-block/index.module.css?2bbd","webpack://@alfalab/core-components/./packages/gallery/src/components/header-info-block/Component.tsx","webpack://@alfalab/core-components/./packages/gallery/src/components/header/index.module.css?d2b3","webpack://@alfalab/core-components/./packages/gallery/src/components/header/buttons.tsx","webpack://@alfalab/core-components/./packages/gallery/src/components/header/Component.tsx","webpack://@alfalab/core-components/./packages/gallery/src/components/image-viewer/paths.ts","webpack://@alfalab/core-components/./packages/gallery/src/components/image-viewer/index.module.css?d437","webpack://@alfalab/core-components/./packages/gallery/src/components/image-viewer/slide.tsx","webpack://@alfalab/core-components/./packages/gallery/src/components/image-viewer/component.tsx","webpack://@alfalab/core-components/./packages/gallery/src/index.module.css?1c8b","webpack://@alfalab/core-components/./packages/gallery/src/Component.tsx","webpack://@alfalab/core-components/./packages/gallery/src/utils/split-filename.ts","webpack://@alfalab/core-components/./packages/gallery/src/utils/utils.ts","webpack://@alfalab/core-components/./packages/gallery/src/utils/constants.ts"],"sourcesContent":["import { createContext } from 'react';\nimport SwiperCore from 'swiper';\n\nimport { GalleryImage, ImageMeta } from './types';\n\nexport type GalleryContext = {\n    singleSlide: boolean;\n    currentSlideIndex: number;\n    images: GalleryImage[];\n    imagesMeta: ImageMeta[];\n    fullScreen: boolean;\n    initialSlide: number;\n    setFullScreen: (fullScreen: boolean) => void;\n    setImageMeta: (meta: ImageMeta, index: number) => void;\n    slideTo: (index: number) => void;\n    slideNext: () => void;\n    slidePrev: () => void;\n    getSwiper: () => SwiperCore | undefined;\n    setSwiper: (swiper: SwiperCore) => void;\n    onClose: () => void;\n    setCurrentSlideIndex: (index: number) => void;\n    getCurrentImage: () => GalleryImage | undefined;\n    getCurrentImageMeta: () => ImageMeta | undefined;\n};\n\nconst mockFn = () => undefined;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const GalleryContext = createContext<GalleryContext>({\n    singleSlide: false,\n    currentSlideIndex: 0,\n    images: [],\n    imagesMeta: [],\n    fullScreen: false,\n    initialSlide: 0,\n    setFullScreen: mockFn,\n    setImageMeta: mockFn,\n    slideTo: mockFn,\n    slideNext: mockFn,\n    slidePrev: mockFn,\n    getSwiper: mockFn,\n    setSwiper: mockFn,\n    onClose: mockFn,\n    setCurrentSlideIndex: mockFn,\n    getCurrentImage: mockFn,\n    getCurrentImageMeta: mockFn,\n});\n","export const NoImagePaths = {\n    baseImage:\n        'M 30.5 6.5 L 4 6.5 C 2.894531 6.5 2 7.394531 2 8.5 L 2 31.5 C 2 32.605469 2.894531 33.5 4 33.5 L 36 33.5 C 37.105469 33.5 38 32.605469 38 31.5 L 38 14 L 32.367188 14 C 31.335938 14 30.5 13.164062 30.5 12.132812 Z M 11.917969 15.667969 C 12.285156 15.296875 12.882812 15.296875 13.25 15.667969 L 14.25 16.667969 L 15.25 15.667969 C 15.617188 15.296875 16.214844 15.296875 16.582031 15.667969 C 16.953125 16.035156 16.953125 16.632812 16.582031 17 L 15.582031 18 L 16.582031 19 C 16.953125 19.367188 16.953125 19.964844 16.582031 20.332031 C 16.214844 20.703125 15.617188 20.703125 15.25 20.332031 L 14.25 19.332031 L 13.25 20.332031 C 12.882812 20.703125 12.285156 20.703125 11.917969 20.332031 C 11.546875 19.964844 11.546875 19.367188 11.917969 19 L 12.917969 18 L 11.917969 17 C 11.546875 16.632812 11.546875 16.035156 11.917969 15.667969 Z M 24.75 15.667969 C 24.382812 15.296875 23.785156 15.296875 23.414062 15.667969 C 23.046875 16.035156 23.046875 16.632812 23.414062 17 L 24.414062 18 L 23.414062 19 C 23.046875 19.367188 23.046875 19.964844 23.414062 20.332031 C 23.785156 20.703125 24.378906 20.703125 24.75 20.332031 L 25.75 19.332031 L 26.75 20.332031 C 27.117188 20.703125 27.714844 20.703125 28.082031 20.332031 C 28.449219 19.964844 28.449219 19.367188 28.082031 19 L 27.082031 18 L 28.082031 17 C 28.449219 16.632812 28.449219 16.035156 28.082031 15.667969 C 27.714844 15.296875 27.117188 15.296875 26.75 15.667969 L 25.75 16.667969 Z M 14.40625 27.914062 L 14.402344 27.914062 C 13.898438 28.136719 13.308594 27.910156 13.085938 27.40625 C 12.863281 26.902344 13.089844 26.308594 13.59375 26.085938 L 14 27 C 13.59375 26.085938 13.59375 26.085938 13.59375 26.085938 L 13.597656 26.085938 L 13.601562 26.082031 L 13.609375 26.078125 L 13.621094 26.074219 L 13.636719 26.066406 C 13.660156 26.058594 13.695312 26.042969 13.734375 26.027344 C 13.816406 25.996094 13.933594 25.949219 14.082031 25.898438 C 14.378906 25.796875 14.808594 25.660156 15.359375 25.527344 C 16.457031 25.261719 18.035156 25 20 25 C 21.964844 25 23.542969 25.261719 24.640625 25.527344 C 25.191406 25.660156 25.621094 25.796875 25.917969 25.898438 C 25.96875 25.917969 26.015625 25.933594 26.058594 25.949219 C 26.144531 25.980469 26.210938 26.007812 26.265625 26.027344 C 26.285156 26.035156 26.304688 26.042969 26.320312 26.050781 C 26.335938 26.054688 26.351562 26.0625 26.363281 26.066406 L 26.382812 26.078125 L 26.390625 26.078125 L 26.398438 26.082031 L 26.402344 26.085938 L 26.40625 26.085938 C 26.40625 26.085938 26.40625 26.085938 26.402344 26.089844 L 26.398438 26.105469 L 26.40625 26.085938 C 26.910156 26.308594 27.136719 26.902344 26.914062 27.40625 C 26.691406 27.910156 26.101562 28.136719 25.597656 27.914062 L 20.449219 27.914062 L 25.59375 27.914062 L 25.585938 27.910156 C 25.574219 27.90625 25.554688 27.898438 25.527344 27.886719 C 25.472656 27.863281 25.382812 27.832031 25.261719 27.789062 C 25.019531 27.703125 24.652344 27.589844 24.171875 27.472656 C 23.207031 27.238281 21.785156 27 20 27 C 18.214844 27 16.792969 27.238281 15.828125 27.472656 C 15.347656 27.589844 14.980469 27.703125 14.738281 27.789062 C 14.617188 27.832031 14.527344 27.863281 14.472656 27.886719 C 14.445312 27.898438 14.425781 27.90625 14.414062 27.910156 L 14.40625 27.914062 L 20.449219 27.914062 Z M 14.40625 27.914062',\n    triangleImage: 'M 38 12 L 32.5 12 L 32.5 6.5 Z M 38 12',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_mtvxt\",\"active\":\"active_iRVjC\",\"image\":\"image_JMHXU\",\"preview\":\"preview_W5avX\",\"loading\":\"loading_k_GI3\",\"brokenImageWrapper\":\"brokenImageWrapper_Y58V3\",\"brokenIcon\":\"brokenIcon_ZF1vD\",\"focused\":\"focused_c0moA\"};","import React, { FC, KeyboardEventHandler, useContext, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport { GalleryContext } from '../../context';\nimport { GalleryImage } from '../../types';\n\nimport { NoImagePaths } from './paths';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    image: GalleryImage;\n    index: number;\n    active?: boolean;\n    onSelect: (index: number) => void;\n    className: string;\n};\n\nexport const ImagePreview: FC<Props> = ({ image, active = false, index, onSelect, className }) => {\n    const { imagesMeta } = useContext(GalleryContext);\n\n    const ref = useRef<HTMLDivElement>(null);\n\n    const handleClick = () => {\n        onSelect(index);\n    };\n\n    const handleKeyDown: KeyboardEventHandler = (event) => {\n        if (event.key === 'Enter') {\n            onSelect(index);\n        }\n    };\n\n    const [focused] = useFocus(ref, 'keyboard');\n\n    const meta = imagesMeta[index];\n\n    const isBroken = Boolean(meta?.broken);\n\n    return (\n        <div\n            className={cn(\n                styles.component,\n                { [styles.active]: active, [styles.focused]: focused },\n                className,\n            )}\n            onClick={handleClick}\n            role='button'\n            onKeyDown={handleKeyDown}\n            tabIndex={0}\n            ref={ref}\n            aria-label={`Перейти к изображению ${index + 1}`}\n        >\n            {isBroken ? (\n                <div className={cn(styles.preview, styles.brokenImageWrapper)}>\n                    <div className={styles.brokenIcon}>\n                        <svg\n                            xmlns='http://www.w3.org/2000/svg'\n                            width='40'\n                            height='40'\n                            viewBox='0 0 40 40'\n                            fill='none'\n                        >\n                            <rect width='40' height='40' fill='none' />\n                            <path\n                                fillRule='evenodd'\n                                clipRule='evenodd'\n                                d={NoImagePaths.baseImage}\n                                fill='#89898A'\n                            />\n                            <path d={NoImagePaths.triangleImage} fill='#89898A' />\n                        </svg>\n                    </div>\n                </div>\n            ) : (\n                <div\n                    className={cn(styles.preview, styles.image, {\n                        [styles.broken]: isBroken,\n                        [styles.loading]: !meta,\n                    })}\n                    style={{ backgroundImage: `url(${image.src})` }}\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Q3fhU\",\"preview\":\"preview_KzyqM\"};","import React, { FC, KeyboardEventHandler, useCallback, useContext, useEffect, useRef } from 'react';\n\nimport { GalleryContext } from '../../context';\nimport { getImageKey, TestIds } from '../../utils';\nimport { ImagePreview } from '../image-preview';\n\nimport styles from './index.module.css';\n\nconst MIN_SCROLL_STEP = 24;\n\nexport const NavigationBar: FC = () => {\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const { images, currentSlideIndex, setCurrentSlideIndex, getSwiper } =\n        useContext(GalleryContext);\n\n    const swiper = getSwiper();\n\n    const handlePreviewSelect = (index: number) => {\n        setCurrentSlideIndex(index);\n\n        if (swiper) {\n            swiper.slideTo(index);\n        }\n    };\n\n    const scroll = useCallback((scrollValue: number) => {\n        if (containerRef.current) {\n            containerRef.current.scroll({\n                top: 0,\n                left: containerRef.current.scrollLeft + scrollValue,\n                behavior: 'smooth',\n            });\n        }\n    }, []);\n\n    const handlePreviewPosition = useCallback(\n        (preview: Element, containerWidth: number) => {\n            const { right, left } = preview.getBoundingClientRect();\n\n            if (right > containerWidth) {\n                const scrollValue = right - containerWidth + MIN_SCROLL_STEP;\n\n                scroll(scrollValue);\n            } else if (left < 0) {\n                const scrollValue = left - MIN_SCROLL_STEP;\n\n                scroll(scrollValue);\n            }\n        },\n        [scroll],\n    );\n\n    const handleKeyDown: KeyboardEventHandler = (event) => {\n        if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n            event.preventDefault();\n        }\n    };\n\n    useEffect(() => {\n        if (containerRef.current) {\n            const { width: containerWidth } = containerRef.current.getBoundingClientRect();\n\n            const activePreview = containerRef.current.children[currentSlideIndex];\n\n            if (activePreview) {\n                handlePreviewPosition(activePreview, containerWidth);\n            }\n        }\n    }, [currentSlideIndex, handlePreviewPosition, scroll]);\n\n    return (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n            className={styles.component}\n            ref={containerRef}\n            onKeyDown={handleKeyDown}\n            data-test-id={TestIds.NAVIGATION_BAR}\n        >\n            {images.map((image, index) => {\n                const active = index === currentSlideIndex;\n\n                return (\n                    <ImagePreview\n                        key={getImageKey(image, index)}\n                        image={image}\n                        active={active}\n                        index={index}\n                        onSelect={handlePreviewSelect}\n                        className={styles.preview}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"info_uzKIX\",\"filenameHead\":\"filenameHead_ZGMUh\",\"filenameContainer\":\"filenameContainer_j5oEY\",\"description\":\"description_LkFxY\"};","import React, { FC } from 'react';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { splitFilename } from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type HeaderInfoBlockProps = {\n    filename: string;\n    description?: string;\n};\n\nexport const HeaderInfoBlock: FC<HeaderInfoBlockProps> = ({ filename, description }) => {\n    const [head, tail] = splitFilename(filename);\n\n    return (\n        <div className={styles.info}>\n            <div className={styles.filenameContainer}>\n                <Typography.Title\n                    tag='h1'\n                    className={styles.filenameHead}\n                    view='xsmall'\n                    font='system'\n                    color='static-primary-light'\n                >\n                    {head}\n                </Typography.Title>\n\n                <Typography.Title tag='h1' view='xsmall' font='system' color='static-primary-light'>\n                    {tail}\n                </Typography.Title>\n            </div>\n\n            {description ? (\n                <Typography.Text\n                    className={styles.description}\n                    tag='div'\n                    view='primary-medium'\n                    color='static-secondary-light'\n                >\n                    {description}\n                </Typography.Text>\n            ) : null}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_toq_x\",\"buttons\":\"buttons_hvq9n\",\"iconButton\":\"iconButton_Xxrn3\"};","import React, { FC, MutableRefObject } from 'react';\n\nimport { IconButton, IconButtonProps } from '@alfalab/core-components-icon-button';\nimport { Tooltip } from '@alfalab/core-components-tooltip';\nimport { ArrowsInwardMIcon } from '@alfalab/icons-glyph/ArrowsInwardMIcon';\nimport { ArrowsOutwardMIcon } from '@alfalab/icons-glyph/ArrowsOutwardMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\nimport { PointerDownMIcon } from '@alfalab/icons-glyph/PointerDownMIcon';\n\nimport styles from './index.module.css';\n\ntype Props = Omit<IconButtonProps, 'icon' | 'colors'> & {\n    buttonRef?: MutableRefObject<HTMLButtonElement | null>;\n    download?: string | boolean;\n};\n\nexport const Fullscreen: FC<Props> = ({ buttonRef, ...restProps }) => (\n    <Tooltip\n        trigger='hover'\n        position='bottom'\n        content='Открыть в полноэкранном режиме'\n        fallbackPlacements={['bottom-end']}\n    >\n        <IconButton\n            {...restProps}\n            ref={buttonRef}\n            icon={ArrowsOutwardMIcon}\n            colors='inverted'\n            aria-label='Открыть в полноэкранном режиме'\n            className={styles.iconButton}\n        />\n    </Tooltip>\n);\n\nexport const ExitFullscreen: FC<Props> = ({ buttonRef, ...restProps }) => (\n    <Tooltip\n        trigger='hover'\n        position='bottom'\n        content='Выйти из полноэкранного режима'\n        fallbackPlacements={['bottom-end']}\n    >\n        <IconButton\n            {...restProps}\n            ref={buttonRef}\n            icon={ArrowsInwardMIcon}\n            colors='inverted'\n            aria-label='Выйти из полноэкранного режима'\n            className={styles.iconButton}\n        />\n    </Tooltip>\n);\n\nexport const Download: FC<Props> = (props) => (\n    <Tooltip\n        trigger='hover'\n        position='bottom'\n        content='Скачать'\n        fallbackPlacements={['bottom-end']}\n    >\n        <IconButton\n            {...props}\n            icon={PointerDownMIcon}\n            colors='inverted'\n            aria-label='Скачать'\n            className={styles.iconButton}\n        />\n    </Tooltip>\n);\n\nexport const Exit: FC<Props> = (props) => (\n    <IconButton\n        {...props}\n        icon={CrossMIcon}\n        colors='inverted'\n        aria-label='Закрыть'\n        className={styles.iconButton}\n    />\n);\n","import React, { FC, useContext, useEffect, useRef } from 'react';\n\nimport { GalleryContext } from '../../context';\nimport { isSmallImage, TestIds } from '../../utils';\nimport { HeaderInfoBlock } from '../header-info-block';\n\nimport * as Buttons from './buttons';\n\nimport styles from './index.module.css';\n\nexport const Header: FC = () => {\n    const {\n        currentSlideIndex,\n        singleSlide,\n        images,\n        fullScreen,\n        getCurrentImageMeta,\n        getCurrentImage,\n        setFullScreen,\n        onClose,\n    } = useContext(GalleryContext);\n\n    const toggleFullScreenButton = useRef<HTMLButtonElement>(null);\n\n    const closeFullScreen = () => {\n        setFullScreen(false);\n    };\n\n    const openFullScreen = () => {\n        setFullScreen(true);\n    };\n\n    useEffect(() => {\n        if (toggleFullScreenButton.current) {\n            toggleFullScreenButton.current.focus();\n        }\n    }, [fullScreen]);\n\n    const currentImage = getCurrentImage();\n\n    const canDownload = currentImage?.canDownload ?? true;\n    const filename = currentImage?.name || '';\n    const description = singleSlide\n        ? ''\n        : `Изображение ${currentSlideIndex + 1} из ${images.length}`;\n\n    const meta = getCurrentImageMeta();\n\n    const showFullScreenButton = !isSmallImage(meta) && !meta?.broken;\n    const showDownloadButton = !meta?.broken && canDownload;\n\n    const renderToggleFullScreenButton = () =>\n        fullScreen ? (\n            <Buttons.ExitFullscreen\n                onClick={closeFullScreen}\n                buttonRef={toggleFullScreenButton}\n                dataTestId={TestIds.EXIT_FULLSCREEN_BUTTON}\n            />\n        ) : (\n            <Buttons.Fullscreen\n                onClick={openFullScreen}\n                buttonRef={toggleFullScreenButton}\n                dataTestId={TestIds.FULLSCREEN_BUTTON}\n            />\n        );\n\n    return (\n        <div className={styles.header}>\n            <HeaderInfoBlock filename={filename} description={description} />\n\n            <div className={styles.buttons}>\n                {showFullScreenButton && renderToggleFullScreenButton()}\n\n                {showDownloadButton && (\n                    <Buttons.Download\n                        href={currentImage?.src}\n                        download={currentImage?.name}\n                        dataTestId={TestIds.DOWNLOAD_BUTTON}\n                    />\n                )}\n\n                <Buttons.Exit onClick={onClose} dataTestId={TestIds.CLOSE_BUTTON} />\n            </div>\n        </div>\n    );\n};\n","export const NoImagePaths = {\n    baseImage:\n        'M61 13H8C5.79086 13 4 14.7908 4 17V63C4 65.2092 5.79086 67 8 67H72C74.2091 67 76 65.2092 76 63V27.9998H64.7333C62.6714 27.9998 61 26.3284 61 24.2665V13ZM23.8337 31.3334C24.57 30.597 25.7639 30.597 26.5003 31.3334L28.5001 33.3332L30.4999 31.3333C31.2363 30.5969 32.4302 30.5969 33.1666 31.3333C33.903 32.0697 33.903 33.2636 33.1666 34L31.1667 35.9998L33.1669 38C33.9033 38.7363 33.9033 39.9302 33.1669 40.6666C32.4306 41.403 31.2367 41.403 30.5003 40.6666L28.5001 38.6664L26.5 40.6666C25.7636 41.403 24.5697 41.403 23.8333 40.6666C23.097 39.9302 23.097 38.7363 23.8333 37.9999L25.8335 35.9998L23.8337 34C23.0973 33.2636 23.0973 32.0697 23.8337 31.3334ZM49.4984 31.3334C48.762 30.597 47.5681 30.597 46.8317 31.3334C46.0953 32.0698 46.0953 33.2637 46.8317 34L48.8315 35.9998L46.8314 38C46.095 38.7363 46.095 39.9302 46.8314 40.6666C47.5677 41.403 48.7617 41.403 49.498 40.6666L51.4982 38.6664L53.4984 40.6666C54.2347 41.403 55.4286 41.403 56.165 40.6666C56.9014 39.9303 56.9014 38.7364 56.165 38L54.1648 35.9998L56.1646 34C56.901 33.2636 56.901 32.0697 56.1646 31.3334C55.4283 30.597 54.2344 30.597 53.498 31.3334L51.4982 33.3332L49.4984 31.3334ZM28.8087 55.8292L28.8076 55.8297C27.7997 56.2743 26.6202 55.8199 26.1724 54.8123C25.7238 53.8029 26.1783 52.621 27.1877 52.1724L28 54C27.1877 52.1724 27.1889 52.1719 27.1889 52.1719L27.1902 52.1713L27.193 52.17L27.1999 52.167L27.2187 52.1588L27.2425 52.1486L27.2762 52.1343C27.3234 52.1144 27.388 52.0878 27.4698 52.0553C27.6333 51.9904 27.8654 51.9021 28.1633 51.7985C28.7588 51.5914 29.6177 51.3226 30.7163 51.0563C32.9132 50.5237 36.072 50 40 50C43.928 50 47.0868 50.5237 49.2837 51.0563C50.3823 51.3226 51.2412 51.5914 51.8367 51.7985C51.9387 51.834 52.033 51.8677 52.1195 51.8992C52.2855 51.9598 52.4227 52.0126 52.5302 52.0553C52.5704 52.0713 52.6065 52.0858 52.6384 52.0989C52.6713 52.1124 52.6998 52.1242 52.7238 52.1343L52.7677 52.1529L52.7813 52.1588L52.8001 52.167L52.807 52.17L52.8099 52.1713L52.8111 52.1719C52.8111 52.1719 52.8112 52.1719 52.8075 52.1806L52.7938 52.2121L52.8123 52.1724C53.8217 52.621 54.2762 53.8029 53.8276 54.8123C53.3798 55.8199 52.2013 56.2746 51.1931 55.83L51.1913 55.8292L40.8962 55.8291L51.1899 55.8286L51.1715 55.8208C51.149 55.8113 51.1097 55.795 51.0538 55.7728C50.9419 55.7284 50.7639 55.6604 50.5226 55.5765C50.0401 55.4086 49.3052 55.1774 48.3413 54.9437C46.4132 54.4763 43.572 54 40 54C36.428 54 33.5868 54.4763 31.6587 54.9437C30.6948 55.1774 29.9599 55.4086 29.4774 55.5765C29.2361 55.6604 29.0581 55.7284 28.9462 55.7728C28.8903 55.795 28.851 55.8113 28.8285 55.8208L28.8112 55.8281L40.8962 55.8291L28.8087 55.8292Z',\n    triangleImage: 'M75.9998 23.9998H65V13L75.9998 23.9998Z',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dvqF7\",\"swiper\":\"swiper_l0Uv5\",\"singleSlide\":\"singleSlide_3GHPv\",\"hidden\":\"hidden_RuunA\",\"slide\":\"slide_O6qSV\",\"slideLoading\":\"slideLoading_z7dpT\",\"image\":\"image_vBBzW\",\"smallImage\":\"smallImage_OYzsj\",\"verticalImageFit\":\"verticalImageFit_vgKcS\",\"horizontalImageFit\":\"horizontalImageFit_xDygz\",\"arrow\":\"arrow_dDnVx\",\"focused\":\"focused_YALHx\",\"placeholder\":\"placeholder_xyf_j\",\"brokenImgWrapper\":\"brokenImgWrapper_AKvv4\",\"brokenImgIcon\":\"brokenImgIcon_MdTbJ\",\"fullScreenImage\":\"fullScreenImage_eN1ip\"};","import React, { FC, ReactNode, SyntheticEvent } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { GalleryImage, ImageMeta } from '../../types';\nimport { getImageAlt, isSmallImage, TestIds } from '../../utils';\n\nimport { NoImagePaths } from './paths';\n\nimport styles from './index.module.css';\n\ntype SlideInnerProps = {\n    active: boolean;\n    broken: boolean;\n    withPlaceholder: boolean;\n    loading: boolean;\n    children: ReactNode;\n};\n\nconst SlideInner: FC<SlideInnerProps> = ({ children, broken, loading, withPlaceholder }) => {\n    const content = broken ? (\n        <div className={styles.brokenImgWrapper}>\n            <div className={styles.brokenImgIcon}>\n                <svg\n                    xmlns='http://www.w3.org/2000/svg'\n                    width='80'\n                    height='80'\n                    viewBox='0 0 80 80'\n                    fill='none'\n                >\n                    <rect width='80' height='80' fill='none' />\n                    <path\n                        fillRule='evenodd'\n                        clipRule='evenodd'\n                        d={NoImagePaths.baseImage}\n                        fill='#89898A'\n                    />\n                    <path d={NoImagePaths.triangleImage} fill='#89898A' />\n                </svg>\n            </div>\n\n            <Typography.Text view='primary-small' color='static-secondary-light'>\n                Не удалось загрузить изображение\n            </Typography.Text>\n        </div>\n    ) : (\n        children\n    );\n\n    return (\n        <div className={cn(styles.slide, { [styles.slideLoading]: loading })}>\n            {withPlaceholder ? <div className={styles.placeholder}>{content}</div> : content}\n        </div>\n    );\n};\n\ntype SlideProps = {\n    isActive: boolean;\n    image: GalleryImage;\n    meta?: ImageMeta;\n    swiperAspectRatio: number;\n    imageAspectRatio: number;\n    index: number;\n    swiperHeight: number;\n    slideVisible: boolean;\n    handleLoad: (event: SyntheticEvent<HTMLImageElement>, index: number) => void;\n    handleLoadError: (index: number) => void;\n};\n\nexport const Slide: FC<SlideProps> = ({\n    isActive,\n    meta,\n    swiperAspectRatio,\n    imageAspectRatio,\n    image,\n    index,\n    swiperHeight,\n    slideVisible,\n    handleLoad,\n    handleLoadError,\n}) => {\n    const broken = Boolean(meta?.broken);\n    const small = isSmallImage(meta);\n    const verticalImageFit = !small && swiperAspectRatio > imageAspectRatio;\n    const horizontalImageFit = !small && swiperAspectRatio <= imageAspectRatio;\n\n    return (\n        <SlideInner\n            active={isActive}\n            broken={broken}\n            loading={!meta}\n            withPlaceholder={small || broken}\n        >\n            <img\n                src={image.src}\n                alt={getImageAlt(image, index)}\n                className={cn({\n                    [styles.smallImage]: small,\n                    [styles.image]: !small,\n                    [styles.verticalImageFit]: verticalImageFit,\n                    [styles.horizontalImageFit]: horizontalImageFit,\n                })}\n                onLoad={(event) => handleLoad(event, index)}\n                onError={() => handleLoadError(index)}\n                style={{\n                    maxHeight: `${swiperHeight}px`,\n                }}\n                data-test-id={slideVisible ? TestIds.ACTIVE_IMAGE : undefined}\n            />\n        </SlideInner>\n    );\n};\n","import React, {\n    FC,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    SyntheticEvent,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport cn from 'classnames';\nimport elementClosest from 'element-closest';\nimport SwiperCore, { A11y, Controller, EffectFade } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { ChevronBackHeavyMIcon } from '@alfalab/icons-glyph/ChevronBackHeavyMIcon';\nimport { ChevronForwardHeavyMIcon } from '@alfalab/icons-glyph/ChevronForwardHeavyMIcon';\n\nimport { GalleryContext } from '../../context';\nimport { getImageAlt, getImageKey, TestIds } from '../../utils';\n\nimport { Slide } from './slide';\n\nimport 'swiper/swiper.min.css';\nimport styles from './index.module.css';\n\nSwiperCore.use([EffectFade, A11y, Controller]);\n\nexport const ImageViewer: FC = () => {\n    const {\n        singleSlide,\n        images,\n        imagesMeta,\n        fullScreen,\n        currentSlideIndex,\n        initialSlide,\n        onClose,\n        getCurrentImage,\n        setImageMeta,\n        setCurrentSlideIndex,\n        getSwiper,\n        setSwiper,\n        slidePrev,\n        slideNext,\n    } = useContext(GalleryContext);\n\n    const leftArrowRef = useRef<HTMLDivElement>(null);\n    const rightArrowRef = useRef<HTMLDivElement>(null);\n\n    const [leftArrowFocused] = useFocus(leftArrowRef, 'keyboard');\n    const [rightArrowFocused] = useFocus(rightArrowRef, 'keyboard');\n\n    const swiper = getSwiper();\n\n    const handleSlideChange = useCallback(() => {\n        setCurrentSlideIndex(swiper?.activeIndex ?? initialSlide);\n    }, [setCurrentSlideIndex, swiper, initialSlide]);\n\n    const handlePrevClick = () => {\n        slidePrev();\n    };\n\n    const handleNextClick = () => {\n        slideNext();\n    };\n\n    const handleArrowLeftKeyDown: KeyboardEventHandler = (event) => {\n        if (event.key === 'Enter') {\n            slidePrev();\n        }\n    };\n\n    const handleArrowRightKeyDown: KeyboardEventHandler = (event) => {\n        if (event.key === 'Enter') {\n            slideNext();\n        }\n    };\n\n    const handleLoad = (event: SyntheticEvent<HTMLImageElement>, index: number) => {\n        const target = event.currentTarget;\n\n        const { naturalWidth, naturalHeight } = target;\n\n        setImageMeta({ width: naturalWidth, height: naturalHeight }, index);\n    };\n\n    const handleLoadError = (index: number) => {\n        setImageMeta({ width: 0, height: 0, broken: true }, index);\n    };\n\n    const handleWrapperClick = useCallback<MouseEventHandler>(\n        (event) => {\n            const eventTarget = event.target as HTMLElement;\n\n            const isArrow =\n                leftArrowRef.current?.contains(eventTarget) ||\n                rightArrowRef.current?.contains(eventTarget);\n\n            const isPlaceholder = Boolean(eventTarget.closest(`.${styles.placeholder}`));\n\n            const isImg = eventTarget.tagName === 'IMG';\n\n            if (!isImg && !isPlaceholder && !isArrow) {\n                onClose();\n            }\n        },\n        [onClose],\n    );\n\n    useEffect(() => {\n        elementClosest(window);\n    }, []);\n\n    const swiperProps = useMemo<Swiper>(\n        () => ({\n            slidesPerView: 1,\n            effect: 'fade',\n            fadeEffect: {\n                crossFade: true,\n            },\n            className: cn(styles.swiper, { [styles.hidden]: fullScreen }),\n            controller: { control: swiper },\n            a11y: {\n                slideRole: 'img',\n            },\n            initialSlide,\n            simulateTouch: false,\n            onSwiper: setSwiper,\n            onSlideChange: handleSlideChange,\n        }),\n        [swiper, fullScreen, initialSlide, handleSlideChange, setSwiper],\n    );\n\n    const showControls = !singleSlide && !fullScreen;\n\n    const swiperWidth = swiper?.width || 1;\n    const swiperHeight = swiper?.height || swiper?.width || 1;\n\n    const swiperAspectRatio = swiperWidth / swiperHeight;\n\n    const currentImage = getCurrentImage();\n\n    return (\n        /* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n        <div\n            className={cn(styles.component, { [styles.singleSlide]: singleSlide })}\n            onClick={handleWrapperClick}\n        >\n            {showControls && (\n                <div\n                    className={cn(styles.arrow, {\n                        [styles.focused]: leftArrowFocused,\n                    })}\n                    onClick={handlePrevClick}\n                    role='button'\n                    onKeyDown={handleArrowLeftKeyDown}\n                    tabIndex={0}\n                    ref={leftArrowRef}\n                    aria-label='Предыдущее изображение'\n                    data-test-id={TestIds.PREV_SLIDE_BUTTON}\n                >\n                    <ChevronBackHeavyMIcon />\n                </div>\n            )}\n\n            {fullScreen && (\n                <img\n                    src={currentImage?.src}\n                    alt={currentImage ? getImageAlt(currentImage, currentSlideIndex) : ''}\n                    className={styles.fullScreenImage}\n                />\n            )}\n\n            <Swiper {...swiperProps}>\n                {images.map((image, index) => {\n                    const meta = imagesMeta[index];\n\n                    const imageWidth = meta?.width || 1;\n                    const imageHeight = meta?.height || 1;\n\n                    const imageAspectRatio = imageWidth / imageHeight;\n\n                    const slideVisible = index === currentSlideIndex;\n\n                    return (\n                        <SwiperSlide\n                            key={getImageKey(image, index)}\n                            style={{\n                                pointerEvents: slideVisible ? 'auto' : 'none',\n                                transitionProperty: 'opacity',\n                            }}\n                        >\n                            {({ isActive }) => (\n                                <Slide\n                                    isActive={isActive}\n                                    swiperAspectRatio={swiperAspectRatio}\n                                    image={image}\n                                    swiperHeight={swiperHeight}\n                                    meta={meta}\n                                    index={index}\n                                    imageAspectRatio={imageAspectRatio}\n                                    slideVisible={slideVisible}\n                                    handleLoad={handleLoad}\n                                    handleLoadError={handleLoadError}\n                                />\n                            )}\n                        </SwiperSlide>\n                    );\n                })}\n            </Swiper>\n\n            {showControls && (\n                <div\n                    className={cn(styles.arrow, {\n                        [styles.focused]: rightArrowFocused,\n                    })}\n                    onClick={handleNextClick}\n                    role='button'\n                    onKeyDown={handleArrowRightKeyDown}\n                    tabIndex={0}\n                    ref={rightArrowRef}\n                    aria-label='Следующее изображение'\n                    data-test-id={TestIds.NEXT_SLIDE_BUTTON}\n                >\n                    <ChevronForwardHeavyMIcon />\n                </div>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_yK_bc\",\"modal\":\"modal_qWkLv\"};","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport SwiperCore from 'swiper';\n\nimport { BaseModal } from '@alfalab/core-components-base-modal';\n\nimport { Header, ImageViewer, NavigationBar } from './components';\nimport { GalleryContext } from './context';\nimport { GalleryImage, ImageMeta } from './types';\n\nimport styles from './index.module.css';\n\nexport type GalleryProps = {\n    /**\n     * Управление видимостью\n     */\n    open: boolean;\n\n    /**\n     * Массив изображений\n     */\n    images: GalleryImage[];\n\n    /**\n     * Зациклить галерею\n     * @default true\n     */\n    loop?: boolean;\n\n    /**\n     * Индекс открытого изображение\n     * @default 0\n     */\n    initialSlide?: number;\n\n    /**\n     * Обработчик закрытия\n     */\n    onClose: () => void;\n};\n\nconst Backdrop = () => null;\n\nexport const Gallery: FC<GalleryProps> = ({\n    open,\n    images,\n    initialSlide = 0,\n    loop = true,\n    onClose,\n}) => {\n    const [currentSlideIndex, setCurrentSlideIndex] = useState(initialSlide);\n    const [swiper, setSwiper] = useState<SwiperCore>();\n    const [imagesMeta, setImagesMeta] = useState<ImageMeta[]>([]);\n    const [fullScreen, setFullScreen] = useState(false);\n\n    const slideTo = useCallback(\n        (index: number) => {\n            if (images[index]) {\n                setCurrentSlideIndex(index);\n\n                if (swiper) {\n                    swiper.slideTo(index);\n                }\n            }\n        },\n        [images, swiper],\n    );\n\n    const slideNext = useCallback(() => {\n        const lastIndex = images.length - 1;\n\n        let nextIndex = currentSlideIndex + 1;\n\n        if (nextIndex >= images.length) {\n            nextIndex = loop ? 0 : lastIndex;\n        }\n\n        slideTo(nextIndex);\n    }, [images.length, loop, currentSlideIndex, slideTo]);\n\n    const slidePrev = useCallback(() => {\n        const lastIndex = images.length - 1;\n\n        let nextIndex = currentSlideIndex - 1;\n\n        if (nextIndex < 0) {\n            nextIndex = loop ? lastIndex : 0;\n        }\n\n        slideTo(nextIndex);\n    }, [images.length, loop, currentSlideIndex, slideTo]);\n\n    const setImageMeta = useCallback(\n        (meta: ImageMeta, index: number) => {\n            imagesMeta[index] = meta;\n\n            setImagesMeta(imagesMeta.slice());\n        },\n        [imagesMeta],\n    );\n\n    const handleClose = useCallback(() => {\n        onClose();\n\n        setCurrentSlideIndex(initialSlide);\n        setFullScreen(false);\n    }, [initialSlide, onClose]);\n\n    const handleEscapeKeyDown = () => {\n        if (fullScreen) {\n            setFullScreen(false);\n        } else {\n            handleClose();\n        }\n    };\n\n    const handleKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (!open || fullScreen) {\n                return;\n            }\n\n            switch (event.key) {\n                case 'ArrowLeft':\n                    slidePrev();\n                    break;\n                case 'ArrowRight':\n                    slideNext();\n                    break;\n            }\n        },\n        [fullScreen, open, slideNext, slidePrev],\n    );\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleKeyDown]);\n\n    const singleSlide = images.length === 1;\n\n    const showNavigationBar = !singleSlide && !fullScreen;\n\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    const galleryContext: GalleryContext = {\n        singleSlide,\n        currentSlideIndex,\n        images,\n        imagesMeta,\n        fullScreen,\n        initialSlide,\n        setFullScreen,\n        setImageMeta,\n        slideNext,\n        slidePrev,\n        slideTo,\n        getSwiper: () => swiper,\n        setSwiper,\n        onClose: handleClose,\n        setCurrentSlideIndex,\n        getCurrentImage: () => images[currentSlideIndex],\n        getCurrentImageMeta: () => imagesMeta[currentSlideIndex],\n    };\n\n    return (\n        <GalleryContext.Provider value={galleryContext}>\n            <BaseModal\n                open={open}\n                className={styles.modal}\n                onEscapeKeyDown={handleEscapeKeyDown}\n                Backdrop={Backdrop}\n            >\n                <div className={styles.container}>\n                    <Header />\n\n                    <ImageViewer />\n\n                    {showNavigationBar && <NavigationBar />}\n                </div>\n            </BaseModal>\n        </GalleryContext.Provider>\n    );\n};\n","const SEPARATION_POSITION_SHIFT = 3;\n\nexport function splitFilename(filename: string): [string, string] {\n    const dotPosition = filename.lastIndexOf('.');\n\n    let head = filename;\n    let tail = '';\n\n    const splitPosition = dotPosition - SEPARATION_POSITION_SHIFT;\n\n    if (splitPosition > 0) {\n        head = filename.slice(0, splitPosition);\n        tail = filename.slice(splitPosition);\n    }\n\n    return [head, tail];\n}\n","import { GalleryImage, ImageMeta } from '../types';\n\nexport const PLACEHOLDER_WIDTH = 400;\nexport const PLACEHOLDER_HEIGHT = 300;\n\nexport const getImageKey = ({ name = '', src }: GalleryImage, index: number): string =>\n    `${name}-${index}-${src}`;\n\nexport const getImageAlt = ({ alt, name }: GalleryImage, index: number): string =>\n    alt || name || `Изображение ${index + 1}`;\n\nexport const isSmallImage = (meta?: ImageMeta) => {\n    if (!meta) {\n        return false;\n    }\n\n    return meta.width < PLACEHOLDER_WIDTH && meta.height < PLACEHOLDER_HEIGHT;\n};\n","export const TestIds = {\n    ACTIVE_IMAGE: 'active-image',\n    PREV_SLIDE_BUTTON: 'prev-slide-button',\n    NEXT_SLIDE_BUTTON: 'next-slide-button',\n    CLOSE_BUTTON: 'close-button',\n    FULLSCREEN_BUTTON: 'fullscreen-button',\n    EXIT_FULLSCREEN_BUTTON: 'exit-fullscreen-button',\n    DOWNLOAD_BUTTON: 'download-button',\n    NAVIGATION_BAR: 'navigation-bar',\n};\n"],"names":["mockFn","GalleryContext","createContext","singleSlide","currentSlideIndex","images","imagesMeta","fullScreen","initialSlide","setFullScreen","setImageMeta","slideTo","slideNext","slidePrev","getSwiper","setSwiper","onClose","setCurrentSlideIndex","getCurrentImage","getCurrentImageMeta","NoImagePaths","ImagePreview","_ref","_cn","_cn2","image","_ref$active","active","index","onSelect","className","useContext","ref","useRef","_useFocus","useFocus","focused","_slicedToArray","meta","isBroken","Boolean","broken","_jsx","cn","styles","_defineProperty","onClick","handleClick","role","onKeyDown","handleKeyDown","event","key","tabIndex","concat","children","_jsxs","xmlns","width","height","viewBox","fill","fillRule","clipRule","d","style","backgroundImage","src","NavigationBar","containerRef","_useContext","swiper","handlePreviewSelect","scroll","useCallback","scrollValue","current","top","left","scrollLeft","behavior","handlePreviewPosition","preview","containerWidth","_preview$getBoundingC","getBoundingClientRect","right","useEffect","activePreview","includes","preventDefault","TestIds","map","getImageKey","HeaderInfoBlock","filename","description","_splitFilename","splitFilename","_splitFilename2","head","tail","Typography","tag","view","font","color","Fullscreen","buttonRef","restProps","_objectWithoutProperties","_excluded","Tooltip","trigger","position","content","fallbackPlacements","IconButton","_objectSpread","icon","ArrowsOutwardMIcon","colors","ExitFullscreen","_ref2","_excluded2","ArrowsInwardMIcon","Download","props","PointerDownMIcon","Exit","CrossMIcon","Header","_currentImage$canDown","toggleFullScreenButton","closeFullScreen","openFullScreen","focus","currentImage","canDownload","name","length","showFullScreenButton","isSmallImage","showDownloadButton","renderToggleFullScreenButton","Buttons","dataTestId","href","download","SlideInner","loading","withPlaceholder","Slide","isActive","swiperAspectRatio","imageAspectRatio","swiperHeight","slideVisible","handleLoad","handleLoadError","small","verticalImageFit","horizontalImageFit","alt","getImageAlt","onLoad","onError","maxHeight","undefined","SwiperCore","EffectFade","A11y","Controller","ImageViewer","leftArrowRef","rightArrowRef","leftArrowFocused","_useFocus3","rightArrowFocused","handleSlideChange","_swiper$activeIndex","activeIndex","target","currentTarget","naturalWidth","naturalHeight","handleWrapperClick","_leftArrowRef$current","_rightArrowRef$curren","eventTarget","isArrow","contains","isPlaceholder","closest","tagName","elementClosest","window","swiperProps","useMemo","slidesPerView","effect","fadeEffect","crossFade","controller","control","a11y","slideRole","simulateTouch","onSwiper","onSlideChange","showControls","swiperWidth","handlePrevClick","handleArrowLeftKeyDown","ChevronBackHeavyMIcon","Swiper","SwiperSlide","pointerEvents","transitionProperty","handleNextClick","handleArrowRightKeyDown","ChevronForwardHeavyMIcon","Backdrop","Gallery","open","_ref$initialSlide","_ref$loop","loop","_useState","useState","_useState2","_useState3","_useState4","_useState5","_useState6","setImagesMeta","_useState7","_useState8","lastIndex","nextIndex","slice","handleClose","document","addEventListener","removeEventListener","showNavigationBar","galleryContext","Provider","value","BaseModal","onEscapeKeyDown","handleEscapeKeyDown","SEPARATION_POSITION_SHIFT","dotPosition","lastIndexOf","splitPosition","PLACEHOLDER_WIDTH","PLACEHOLDER_HEIGHT","_ref$name","ACTIVE_IMAGE","PREV_SLIDE_BUTTON","NEXT_SLIDE_BUTTON","CLOSE_BUTTON","FULLSCREEN_BUTTON","EXIT_FULLSCREEN_BUTTON","DOWNLOAD_BUTTON","NAVIGATION_BAR"],"sourceRoot":""}