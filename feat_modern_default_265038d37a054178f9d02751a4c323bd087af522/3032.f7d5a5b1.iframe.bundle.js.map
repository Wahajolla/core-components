{"version":3,"file":"3032.f7d5a5b1.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/chart/src/hooks/usePathBar/utils/getRadius.ts","webpack://@alfalab/core-components/./packages/chart/src/hooks/usePathBar/index.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/CustomizedLabel.tsx","webpack://@alfalab/core-components/./packages/chart/src/icons/Point.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/Dot/index.module.css?11d2","webpack://@alfalab/core-components/./packages/chart/src/components/Dot/index.tsx","webpack://@alfalab/core-components/./packages/chart/src/icons/Circle.tsx","webpack://@alfalab/core-components/./packages/chart/src/icons/CircleLine.tsx","webpack://@alfalab/core-components/./packages/chart/src/icons/FilledCircle.tsx","webpack://@alfalab/core-components/./packages/chart/src/icons/StrokeCircle.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/Legends/index.module.css?41ee","webpack://@alfalab/core-components/./packages/chart/src/components/Legends/index.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/LinearGradient.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/RectBar.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/Tick/index.module.css?ce44","webpack://@alfalab/core-components/./packages/chart/src/components/Tick/index.tsx","webpack://@alfalab/core-components/./packages/chart/src/components/TooltipContent/index.module.css?9949","webpack://@alfalab/core-components/./packages/chart/src/components/TooltipContent/index.tsx","webpack://@alfalab/core-components/./packages/chart/src/hoc/Customized.jsx","webpack://@alfalab/core-components/./packages/chart/src/hooks/useSettings/index.tsx","webpack://@alfalab/core-components/./packages/chart/src/hooks/useSettings/utils/setLegendMargin.ts","webpack://@alfalab/core-components/./packages/chart/src/hooks/useSettings/utils/setGradientCharts.ts","webpack://@alfalab/core-components/./packages/chart/src/hooks/useSettings/utils/setDatas.ts","webpack://@alfalab/core-components/./packages/chart/src/hooks/useSettings/utils/setComposedChartsMargin.ts","webpack://@alfalab/core-components/./packages/chart/src/hooks/useSettings/utils/sortByIndex.ts","webpack://@alfalab/core-components/./packages/chart/src/index.module.css?ac77","webpack://@alfalab/core-components/./packages/chart/src/Component.tsx"],"sourcesContent":["export const getRadius = (height: number, radius: number): number => {\n    const result = radius && height / 2 < radius ? Math.ceil(height / 2) : radius || 0;\n\n    return result;\n};\n","import { useEffect, useState } from 'react';\n\nimport { RadiusProp } from '../../types/seria.types';\n\nimport { getRadius } from './utils/getRadius';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type usePathBarProps = {\n    radius?: RadiusProp;\n    height: number;\n    background?: {\n        x: number;\n        y: number;\n        height: number;\n        width: number;\n    };\n    y?: number;\n};\n\nexport const usePathBar = (props: usePathBarProps): number[] => {\n    const [topRadius, setTopRadius] = useState<number>(0);\n    const [bottomRadius, setBottomRadius] = useState<number>(0);\n    const [initHeight, setInitHeight] = useState<number>(0);\n    const [initY, setInitY] = useState<number>(0);\n\n    useEffect(() => {\n        const { radius, height, background, y } = props;\n        const radiusTop = radius?.top ? getRadius(height, radius.top) : 0;\n        const radiusBottom = radius?.bottom ? getRadius(height, radius.bottom) : 0;\n\n        const heightCheck =\n            (radius && height !== 0 && height / 2 < (radius?.top || 0)) ||\n            height / 2 < (radius?.bottom || 0);\n\n        // eslint-disable-next-line no-nested-ternary\n        const heightInit = heightCheck\n            ? (radiusTop || radiusBottom) && radiusTop + radiusBottom\n            : height > 0 && height < 2\n            ? 2\n            : height;\n\n        if (background && y) {\n            const yInit = heightCheck\n                ? background.height + background.y - (radiusTop + radiusBottom)\n                : y;\n\n            setInitY(yInit);\n        }\n\n        if (radiusTop !== 0) setTopRadius(radiusTop);\n        if (radiusBottom !== 0) setBottomRadius(radiusBottom);\n        if (heightInit !== 0) setInitHeight(heightInit);\n    }, [props]);\n\n    return [initHeight, topRadius, bottomRadius, initY];\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\n\nimport { usePathBar } from '../hooks/usePathBar';\n\nexport const CustomizedLabel: React.FC<any> = ({\n    x,\n    y,\n    value,\n    offset,\n    radius,\n    height,\n    width,\n    formatter,\n}) => {\n    const [initHeight] = usePathBar({ radius, height });\n\n    return (\n        <text\n            x={x + width / 2}\n            y={y + height - (initHeight + offset)}\n            width={width}\n            height={initHeight}\n            textAnchor='middle'\n        >\n            <tspan x={x + width / 2}>{formatter ? formatter(value) : value}</tspan>\n        </text>\n    );\n};\n","import React from 'react';\n\ntype Props = {\n    fill?: string;\n    height?: number;\n};\n\nexport const PointIcon = ({ fill = '#5A8ECF', height = 16 }: Props) => (\n    <svg height={height} viewBox='0 0 18 18'>\n        <circle cx='9' cy='9' r='9' strokeWidth='1' fill={fill} fillOpacity='0.4' />\n        <circle cx='9' cy='9' r='3' strokeWidth='2' stroke='#fff' fill={fill} />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"dotUnfocused\":\"dotUnfocused_mOUHm\",\"dot\":\"dot_PvogM\",\"dotItem\":\"dotItem_SYsK1\",\"dotWrap\":\"dotWrap_CizOU\",\"showDot\":\"showDot_kYPgB\"};","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { PointIcon } from '../../icons/Point';\nimport { DotProps, DotSettingProps } from '../../types/utils/dot.types';\n\nimport styles from './index.module.css';\n\nexport const Dot = React.forwardRef<SVGSVGElement, DotProps>(\n    (\n        { cx, cy, index, activeDot, dataKey, dotSettings, value, stroke },\n        ref,\n    ): React.ReactElement | null => {\n        const [windowWidth, setWindowWidth] = useState<number>(0);\n\n        const [height, setHeight] = useState<number>(0);\n        const [width, setWidth] = useState<number>(0);\n        const [option, setOption] = useState<DotSettingProps | null>(null);\n\n        useEffect(() => {\n            let dotSetting: DotSettingProps =\n                Array.isArray(dotSettings) && dotSettings.length > 0\n                    ? dotSettings.find((item) => item.media && windowWidth < item.media)\n                    : dotSettings;\n\n            if (Array.isArray(dotSettings) && dotSettings.length > 0 && !dotSetting) {\n                dotSetting = dotSettings[dotSettings.length - 1];\n            }\n\n            setWindowWidth(window.innerWidth);\n            setOption(dotSetting);\n        }, [dotSettings, windowWidth]);\n\n        useEffect(() => {\n            if (!option) return;\n\n            if (typeof activeDot === 'number' && activeDot === index) {\n                setHeight(option.height * option.scale);\n                setWidth(option.width * option.scale);\n            } else {\n                setHeight(option.height * option.initScale);\n                setWidth(option.width * option.initScale);\n            }\n        }, [activeDot, index, option]);\n\n        if (!value) return null;\n\n        return (\n            <g\n                ref={ref}\n                className={cn(styles.dot)}\n                transform={`translate(${cx - width / 2}, ${cy - height / 2})`}\n            >\n                <g\n                    className={cn(styles.dotWrap)}\n                    transform={`scale(${\n                        activeDot === index ? option?.scale || 0 : option?.initScale || 0\n                    })`}\n                >\n                    <svg\n                        className={cn(\n                            styles.dotItem,\n                            activeDot === index ? styles.dotActive : '',\n                            typeof activeDot === 'number' && activeDot !== index\n                                ? styles.dotUnfocused\n                                : '',\n                        )}\n                        data-id={index}\n                        data-name={dataKey}\n                        width={option?.width || 0}\n                        height={option?.height || 0}\n                    >\n                        <PointIcon fill={stroke} />\n                    </svg>\n                </g>\n            </g>\n        );\n    },\n);\n","import React from 'react';\n\ntype Props = {\n    fill?: string;\n    height?: number;\n};\n\nexport const CircleIcon = ({ fill = '#FF5C5C', height = 16 }: Props) => (\n    <svg xmlns='http://www.w3.org/2000/svg' height={height} viewBox='0 0 16 16' fill='none'>\n        <circle cx='8' cy='8' r='8' fill={fill} />\n    </svg>\n);\n","import React from 'react';\n\ntype Props = {\n    fill?: string;\n    height?: number;\n};\n\nexport const CircleLineIcon = ({ fill = '#FF5C5C', height = 16 }: Props): React.ReactElement => (\n    <svg xmlns='http://www.w3.org/2000/svg' height={height} viewBox='0 0 22 12' fill='none'>\n        <circle cx='11' cy='6' r='6' fill={fill} />\n        <rect y='5' width='22' height='2' fill={fill} />\n    </svg>\n);\n","import React from 'react';\n\ntype Props = {\n    fill?: string;\n    height?: number;\n};\n\nexport const FilledCircleIcon = ({ fill = '#5A8ECF', height = 16 }: Props) => (\n    <svg xmlns='http://www.w3.org/2000/svg' height={height} viewBox='0 0 22 22' fill='none'>\n        <circle cx='11' cy='11' r='10' fill='url(#paint0_linear)' stroke={fill} strokeWidth='2' />\n        <defs>\n            <linearGradient\n                id='paint0_linear'\n                x1='11'\n                y1='1'\n                x2='11'\n                y2='21'\n                gradientUnits='userSpaceOnUse'\n            >\n                <stop stopColor={fill} stopOpacity='0.2' />\n                <stop offset='1' stopColor={fill} stopOpacity='0' />\n            </linearGradient>\n        </defs>\n    </svg>\n);\n","import React from 'react';\n\ntype Props = {\n    fill?: string;\n    height?: number;\n};\n\nexport const StrokeCircleIcon = ({ fill = '#5A8ECF', height = 16 }: Props) => (\n    <svg xmlns='http://www.w3.org/2000/svg' height={height} viewBox='0 0 22 22' fill='none'>\n        <circle cx='11' cy='11' r='10' stroke={fill} strokeWidth='2' strokeDasharray='8 8' />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"legendContent\":\"legendContent_wBjGC\",\"legendWrap\":\"legendWrap_b389J\",\"legendItem\":\"legendItem_BM1xB\",\"legendUnactive\":\"legendUnactive_RWW5c\",\"legendIcon\":\"legendIcon_lgWUD\",\"legendValue\":\"legendValue_u_zxG\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { CircleIcon } from '../../icons/Circle';\nimport { CircleLineIcon } from '../../icons/CircleLine';\nimport { FilledCircleIcon } from '../../icons/FilledCircle';\nimport { StrokeCircleIcon } from '../../icons/StrokeCircle';\nimport { LegendProps } from '../../types/legend.types';\nimport { SeriaProps } from '../../types/seria.types';\nimport { DataDynamicBooleanProps } from '../../types/utils/data.types';\n\nimport styles from './index.module.css';\n\ninterface Props {\n    legend: LegendProps;\n    series: SeriaProps[];\n    id: string;\n    charts: DataDynamicBooleanProps;\n    toggleChart(item: SeriaProps): void;\n}\n\nconst icons = {\n    circleLine: CircleLineIcon,\n    filledCircle: FilledCircleIcon,\n    strokeCircle: StrokeCircleIcon,\n    circle: CircleIcon,\n};\n\nexport const Legends = React.forwardRef<HTMLUListElement, Props>(\n    ({ legend, series, id, charts, toggleChart }, ref): React.ReactElement => {\n        const style: React.CSSProperties = {\n            textAlign: legend.align || 'center',\n            transform: `translateY(${\n                (legend?.marginTop ? legend.marginTop : 0) *\n                (legend.verticalAlign === 'top' ? -1 : 1)\n            }px)`,\n        };\n\n        return (\n            <ul ref={ref} className={cn(styles.legendWrap)} style={style}>\n                {series.map((item: SeriaProps) => {\n                    if (item.hideLegend || item.hide) return null;\n\n                    const Icon = icons[item.icon] || CircleIcon;\n\n                    return (\n                        <li\n                            role='presentation'\n                            key={`${id}-${item.properties.dataKey}`}\n                            className={cn(\n                                styles.legendItem,\n                                charts[`${item.properties.dataKey}`] ? '' : styles.legendUnactive,\n                            )}\n                            onClick={() => toggleChart(item)}\n                        >\n                            <div className={cn(styles.legendContent)}>\n                                {Icon ? (\n                                    <i className={cn(styles.legendIcon)}>\n                                        <Icon\n                                            fill={\n                                                item.properties?.fill ||\n                                                item.properties?.stroke ||\n                                                ''\n                                            }\n                                            height={legend.iconHeight || 16}\n                                        />\n                                    </i>\n                                ) : null}\n                                <Typography.Text\n                                    view='primary-medium'\n                                    tag='span'\n                                    className={cn(styles.legendValue)}\n                                >\n                                    {item.properties.name}\n                                </Typography.Text>\n                            </div>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    },\n);\n","import React from 'react';\n\nimport { GradientProps, LinearGradientProps } from '../types/utils/gradient.types';\n\nexport const LinearGradient = ({ id, gid, points }: LinearGradientProps): React.ReactElement => (\n    <linearGradient key={`${id}-${gid}`} id={`${id}-${gid}`} x1='0' y1='0' x2='0' y2='1'>\n        {points.map((point: GradientProps, index: number) => (\n            <stop\n                key={`${id}${gid}-${index.toString()}`}\n                offset={`${point.offset}%`}\n                stopColor={point.stopColor}\n                stopOpacity={point.stopOpacity}\n            />\n        ))}\n    </linearGradient>\n);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo } from 'react';\n\nimport { usePathBar } from '../hooks/usePathBar';\n\n// eslint-disable-next-line complexity\nconst getPath = (\n    x: number,\n    width: number,\n    height: number,\n    initHeight: number,\n    topRadius: number,\n    bottomRadius: number,\n    initY: number,\n): string =>\n    `\n        M${x + ((height !== 0 && bottomRadius) || 0)} ${initY + initHeight || 0}\n        Q${x} ${initY + initHeight} ${x} ${\n        initY + initHeight - ((height !== 0 && bottomRadius) || 0)\n    }\n        L${x} ${initY + ((height !== 0 && topRadius) || 0)}\n        Q${x} ${initY} ${x + ((height !== 0 && topRadius) || 0)} ${initY}\n        L${x + width - ((height !== 0 && topRadius) || 0)} ${initY}\n        Q${x + width} ${initY} ${x + width} ${initY + (topRadius || 0)}\n        L${x + width} ${initY + initHeight - ((height !== 0 && bottomRadius) || 0)}\n        Q${x + width} ${initY + initHeight} ${x + width - ((height !== 0 && bottomRadius) || 0)} ${\n        initY + initHeight\n    }\n        Z\n    `;\n\nexport const RectBar = ({ fill, x, y, width, height, radius, background }: any): JSX.Element => {\n    const [initHeight, topRadius, bottomRadius, initY]: any = usePathBar({\n        radius,\n        height,\n        background,\n        y,\n    });\n\n    return useMemo(\n        () => (\n            <path\n                d={getPath(x, width, height, initHeight, topRadius, bottomRadius, initY)}\n                stroke='none'\n                fill={fill}\n            />\n        ),\n        [x, width, height, initHeight, topRadius, bottomRadius, initY, fill],\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tickText\":\"tickText_Qd7Ti\",\"circle\":\"circle_AZZqz\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { TickProps } from '../../types/utils/tick.types';\n\nimport styles from './index.module.css';\n\nexport const Tick = ({ y, payload, tickFormatter, xAxis }: TickProps) => {\n    const radius = 4;\n\n    const marginTick =\n        xAxis?.tickMargin &&\n        (xAxis.tickMargin > 0 ? xAxis.tickMargin - radius / 2 : xAxis.tickMargin === 0)\n            ? (radius / 2) * -1\n            : null;\n\n    return (\n        <g\n            className={cn(styles.tick)}\n            opacity='1'\n            textAnchor='middle'\n            transform={`translate(${payload.coordinate}, ${\n                y - (typeof marginTick === 'number' ? marginTick : 0) - radius * 2\n            })`}\n        >\n            <text className={cn(styles.tickText)} y='30'>\n                {tickFormatter ? tickFormatter(payload.value) : payload.value}\n            </text>\n            <circle r={radius} className={cn(styles.circle)} />\n        </g>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip_dE_sK\",\"tooltipList\":\"tooltipList_CClTx\",\"tooltipItem\":\"tooltipItem_QtCgJ\",\"tooltipArrow\":\"tooltipArrow_DTTvm\",\"tooltipArrowRight\":\"tooltipArrowRight_rPbJy\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { PayloadProps } from '../../types/payload.types';\nimport { SeriaProps } from '../../types/seria.types';\nimport { TooltipProps } from '../../types/tooltip.types';\n\nimport styles from './index.module.css';\n\nexport interface TooltipContentProps extends TooltipProps {\n    payload: PayloadProps[];\n    series: SeriaProps[];\n}\n\nexport const TooltipContent = ({\n    payload,\n    separator,\n    label,\n    tooltipArrowSide,\n    arrow,\n    series,\n    labelFormatter,\n    labelStyle,\n}: TooltipContentProps) => {\n    if (!label || payload.length === 0) return null;\n\n    return (\n        <div className={cn(styles.tooltip)}>\n            {arrow && (\n                <span\n                    className={cn(\n                        styles.tooltipArrow,\n                        tooltipArrowSide ? '' : styles.tooltipArrowRight,\n                    )}\n                />\n            )}\n            <ul className={cn(styles.tooltipList)}>\n                <li className={cn(styles.tooltipItem)} style={labelStyle}>\n                    <Typography.Text\n                        view='primary-medium'\n                        tag='span'\n                        weight='medium'\n                        className={cn(styles.tooltipLabel)}\n                    >\n                        {labelFormatter ? labelFormatter(label) : label}\n                    </Typography.Text>\n                </li>\n                {payload.map((entry: PayloadProps) => {\n                    const data: SeriaProps | undefined = series.find(\n                        (d: SeriaProps) => d.properties.dataKey === entry.dataKey,\n                    );\n\n                    if (data?.hideTooltip || data?.hide) return null;\n\n                    return (\n                        <li\n                            className={cn(styles.tooltipItem)}\n                            key={entry.dataKey}\n                            style={{ color: entry.color }}\n                        >\n                            <Typography.Text\n                                view='primary-medium'\n                                tag='span'\n                                weight='medium'\n                                className={cn(styles.tooltipValue)}\n                            >\n                                {entry?.formatter ? entry.formatter(entry.value) : entry.value}\n                                {separator || ' '}\n                            </Typography.Text>\n                            <Typography.Text\n                                view='secondary-large'\n                                tag='span'\n                                className={cn(styles.tooltipName)}\n                            >{`${entry.name}`}</Typography.Text>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const CustomizedHOC = (Component, options) => {\n    const NewComponent = (props) => <Component {...props} {...options} />;\n\n    return NewComponent;\n};\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nimport { OptionsProps } from '../../types/options.types';\nimport { DataDynamicBooleanProps, DataDynamicProps } from '../../types/utils/data.types';\n\nimport { setComposedChartsMargin } from './utils/setComposedChartsMargin';\nimport { setDatas } from './utils/setDatas';\nimport { setGradientCharts } from './utils/setGradientCharts';\nimport { setLegendMargin } from './utils/setLegendMargin';\nimport { sortByIndex } from './utils/sortByIndex';\n\ntype Settings = [\n    {\n        state: OptionsProps | null;\n        data: DataDynamicProps[];\n        charts: DataDynamicBooleanProps;\n        filterCount: number;\n    },\n    {\n        setState: Dispatch<SetStateAction<OptionsProps | null>>;\n        setData: Dispatch<SetStateAction<DataDynamicProps[]>>;\n        setCharts: Dispatch<SetStateAction<DataDynamicBooleanProps>>;\n        setFilterCount: Dispatch<SetStateAction<number>>;\n    },\n];\n\nexport const useSettings = (options: OptionsProps): Settings => {\n    const [state, setState] = useState<OptionsProps | null>(null);\n    const [charts, setCharts] = useState<DataDynamicBooleanProps>({});\n    const [data, setData] = useState<DataDynamicProps[]>([]);\n    const [filterCount, setFilterCount] = useState<number>(0);\n\n    useEffect(() => {\n        const settings: OptionsProps = { ...options };\n        const { brush, legend, series, labels, composeChart, xAxis } = settings;\n\n        if (settings.legend?.margin && brush && legend)\n            settings.legend.margin.top = setLegendMargin(brush, legend);\n\n        settings.series = setGradientCharts(series);\n        const [initData, chartsNames, count] = setDatas(settings.series, labels);\n\n        settings.composeChart.margin = setComposedChartsMargin(composeChart, legend, brush, xAxis);\n        settings.series = sortByIndex(settings.series);\n\n        setState(settings);\n        setData(initData);\n        setCharts(chartsNames);\n        setFilterCount(count);\n    }, [options]);\n\n    return [\n        {\n            state,\n            data,\n            charts,\n            filterCount,\n        },\n        {\n            setState,\n            setData,\n            setCharts,\n            setFilterCount,\n        },\n    ];\n};\n","import { BrushProps } from '../../../types/brush.types';\nimport { LegendProps } from '../../../types/legend.types';\n\nexport const setLegendMargin = (brush: BrushProps, legend: LegendProps): number => {\n    let top = 0;\n\n    if (typeof brush?.brushMargin !== 'number' || !legend?.verticalAlign) return top;\n\n    if (legend.verticalAlign === 'top') {\n        top = legend.marginTop ? Number(legend.marginTop * -1) : 0;\n    } else {\n        top = legend?.marginTop ? legend.marginTop + (brush?.brushMargin || 0) : brush?.brushMargin;\n    }\n\n    return top;\n};\n","import { SeriaProps } from '../../../types/seria.types';\nimport { DataProps } from '../../../types/utils/data.types';\n\nexport const setGradientCharts = (series: SeriaProps[]): SeriaProps[] => {\n    const filterSeries = series.filter((item) => item.chart !== 'gradient');\n\n    return filterSeries.reduce((accum: SeriaProps[], item: SeriaProps) => {\n        const { chart, data: dataSeria, offset, fill } = item;\n\n        if (chart === 'area') {\n            let newData = null;\n\n            if (offset) {\n                newData = dataSeria.map((d: DataProps) => {\n                    const { label, value } = d;\n\n                    return {\n                        label,\n                        value: Math.ceil(value - value * offset),\n                    };\n                });\n            }\n\n            accum.push({\n                ...item,\n                zIndex: -100,\n                chart: 'gradient',\n                hideLegend: true,\n                hideTooltip: true,\n                properties: {\n                    ...item.properties,\n                    dataKey: `${item.properties.dataKey}-gradient`,\n                    fill,\n                },\n                data: newData || item.data,\n            });\n        }\n\n        accum.push(item);\n\n        return accum;\n    }, []);\n};\n","import { SeriaProps } from '../../../types/seria.types';\nimport {\n    DataDynamicBooleanProps,\n    DataDynamicProps,\n    DataProps,\n} from '../../../types/utils/data.types';\n\ntype DatasResultProps = [DataDynamicProps[], DataDynamicBooleanProps, number];\n\nexport const setDatas = (\n    series: SeriaProps[],\n    labels: Array<string | number>,\n): DatasResultProps => {\n    const initData: DataDynamicProps[] = [];\n    const chartsNames: DataDynamicBooleanProps = {};\n    let count = 0;\n\n    for (let i = 0; i < series.length; i++) {\n        const {\n            properties: { dataKey = '' } = {},\n            data: seriaData = [],\n            hideLegend,\n            hide,\n        } = series[i];\n\n        if (!hideLegend && !hide) count += 1;\n\n        labels.map((label) => {\n            const item = seriaData.find((d: DataProps) => d.label === label);\n\n            if (item) {\n                const obj: DataDynamicProps = {\n                    label,\n                };\n\n                obj[`${dataKey}`] = item.value;\n\n                if (!chartsNames[`${dataKey}`]) chartsNames[`${dataKey}`] = true;\n\n                const index = initData\n                    .map((dataItem: DataDynamicProps) => dataItem.label)\n                    .indexOf(label);\n\n                if (index === -1) initData.push(obj);\n                else initData[index] = { ...initData[index], ...obj };\n            }\n\n            return null;\n        });\n    }\n\n    return [initData, chartsNames, count];\n};\n","import { BrushProps } from '../../../types/brush.types';\nimport { ComposedChartProps } from '../../../types/composedChart.types';\nimport { LegendProps } from '../../../types/legend.types';\nimport { XAxisProps } from '../../../types/xAxis.types';\n\ntype ComposedChartsMarginResultProps = {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n};\n\nexport const setComposedChartsMargin = (\n    composeChart: ComposedChartProps,\n    legend: LegendProps | undefined,\n    brush: BrushProps | undefined,\n    xAxis: XAxisProps,\n): ComposedChartsMarginResultProps => ({\n    top:\n        (composeChart?.initMargin?.top || 0) +\n        (legend?.verticalAlign === 'top' && legend?.marginTop ? Math.abs(legend.marginTop) : 0),\n    bottom:\n        (composeChart?.initMargin?.bottom || 0) +\n        (xAxis?.tickMargin || 0) +\n        (brush?.brushMargin || 0) +\n        (legend?.verticalAlign !== 'top' && legend?.marginTop ? legend.marginTop : 0),\n    left: composeChart?.initMargin?.left || 0,\n    right: composeChart?.initMargin?.right || 0,\n});\n","import { SeriaProps } from '../../../types/seria.types';\n\nexport const sortByIndex = (series: SeriaProps[]): SeriaProps[] =>\n    series.sort((a: SeriaProps, b: SeriaProps) => {\n        if (a?.zIndex && b?.zIndex && a?.zIndex > b?.zIndex) {\n            return 1;\n        }\n\n        return -1;\n    });\n","// extracted by mini-css-extract-plugin\nexport default {\"coreChart\":\"coreChart_tDXuS\",\"bar\":\"bar_Xcu7v\",\"unfocused\":\"unfocused_SHwz5\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport {\n    Area,\n    Bar,\n    Brush,\n    CartesianGrid,\n    Cell,\n    ComposedChart,\n    LabelList,\n    Legend,\n    Line,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis,\n} from 'recharts';\n\nimport { CustomizedLabel } from './components/CustomizedLabel';\nimport { Dot } from './components/Dot';\nimport { Legends } from './components/Legends';\nimport { LinearGradient } from './components/LinearGradient';\nimport { RectBar } from './components/RectBar';\nimport { Tick } from './components/Tick';\nimport { TooltipContent } from './components/TooltipContent';\nimport { CustomizedHOC } from './hoc/Customized';\nimport { useSettings } from './hooks/useSettings';\nimport {\n    ActiveDotProps,\n    CoordinatesProps,\n    DataDynamicBooleanProps,\n    DataDynamicProps,\n    OptionsProps,\n    SeriaProps,\n    ToggleChartProps,\n} from './types';\n\nimport styles from './index.module.css';\n\nexport const Chart = (props: OptionsProps) => {\n    const [{ state, data, charts, filterCount }, { setCharts, setFilterCount }] =\n        useSettings(props);\n    const [activeDotsState, setActiveDotsState] = useState<ActiveDotProps>({\n        prev: null,\n        active: null,\n    });\n\n    const [yBrush, setYBrush] = useState<number | null>(null);\n    const [tooltipArrowSide, setTooltipArrowSide] = useState<boolean | null>(null);\n    const [heightLegend, setHeightLegend] = useState<number>(0);\n\n    const svgRef = useRef<HTMLDivElement>(null);\n    const tooltipRef = useRef<any>(null);\n\n    const renderGradient = useMemo(() => {\n        if (!state) return null;\n\n        return state.series.map((item: SeriaProps) => {\n            const { chart, gradient } = item;\n\n            if (chart !== 'gradient' || !gradient) return null;\n            const { gid, points } = gradient;\n\n            return (\n                <LinearGradient\n                    key={`${state.id}-${gid}`}\n                    id={state.id}\n                    gid={gid}\n                    points={points}\n                />\n            );\n        });\n    }, [state]);\n\n    const toggleChart = useCallback(\n        (item: ToggleChartProps): void => {\n            const {\n                chart,\n                properties: { dataKey },\n            } = item;\n\n            const withGrad = chart === 'area';\n            let changed = false;\n\n            if (charts[`${dataKey}`] && filterCount > 1) {\n                changed = true;\n                setFilterCount((prev) => prev - 1);\n            }\n\n            if (!charts[`${dataKey}`]) {\n                changed = true;\n                setFilterCount((prev) => prev + 1);\n            }\n\n            if (!changed) return;\n            setCharts((prev: DataDynamicBooleanProps) => {\n                const newState = { ...prev };\n\n                newState[`${dataKey}`] = !newState[`${dataKey}`];\n                if (withGrad) newState[`${dataKey}-gradient`] = !newState[`${dataKey}-gradient`];\n\n                return newState;\n            });\n        },\n        [charts, filterCount, setCharts, setFilterCount],\n    );\n\n    const legendRef = useCallback((node: HTMLUListElement): void => {\n        if (node !== null) {\n            setTimeout(() => {\n                const { height } = node.getBoundingClientRect();\n\n                setHeightLegend(height);\n            }, 0);\n        }\n    }, []);\n\n    const renderLegend = useMemo((): React.ReactElement | null => {\n        if (!state?.legend) return null;\n\n        const translate =\n            state?.xAxis?.tickMargin && state?.legend?.verticalAlign !== 'top'\n                ? state.xAxis.tickMargin + (state?.brush?.brushMargin || 0)\n                : 0;\n\n        return (\n            <Legend\n                {...(state.legend || null)}\n                content={\n                    <Legends\n                        legend={state.legend}\n                        series={state.series}\n                        id={state.id}\n                        toggleChart={toggleChart}\n                        ref={legendRef}\n                        charts={charts}\n                    />\n                }\n                wrapperStyle={{\n                    transform: `translateY(${translate}px)`,\n                }}\n            />\n        );\n    }, [state, charts, toggleChart, legendRef]);\n\n    const renderCartesianGrid = useMemo((): React.ReactElement | null => {\n        if (!state?.cartesianGrid) return null;\n\n        return <CartesianGrid {...state.cartesianGrid} />;\n    }, [state]);\n\n    const renderXAxis = useMemo((): React.ReactElement | null => {\n        if (!state?.xAxis) return null;\n\n        let tick;\n\n        if (state?.xAxis?.tickType === 'point') {\n            tick = CustomizedHOC(Tick, { xAxis: state.xAxis });\n        } else if (typeof state.xAxis.tick === 'boolean') {\n            tick = state.xAxis.tick;\n        } else {\n            tick = true;\n        }\n\n        return <XAxis {...state.xAxis} tick={tick} />;\n    }, [state]);\n\n    const renderYAxis = useMemo((): React.ReactElement | null => {\n        if (!state?.yAxis) return null;\n\n        let tick;\n\n        if (state?.yAxis?.tick) {\n            tick = CustomizedHOC(state.yAxis.tick, { state });\n        } else if (typeof state.yAxis.tick === 'boolean') {\n            tick = state.yAxis.tick;\n        } else {\n            tick = true;\n        }\n\n        return <YAxis {...state.yAxis} tick={tick} />;\n    }, [state]);\n\n    const renderBrush = useMemo((): React.ReactElement | null => {\n        if (!state?.brush) return null;\n\n        return <Brush y={typeof yBrush === 'number' ? yBrush : 0} {...state.brush} />;\n    }, [state, yBrush]);\n\n    const renderTooltip = useMemo((): React.ReactElement | null => {\n        if (!state?.tooltip) return null;\n\n        return (\n            <Tooltip\n                ref={tooltipRef}\n                {...state.tooltip}\n                content={CustomizedHOC(TooltipContent, { series: state.series, tooltipArrowSide })}\n            />\n        );\n    }, [state, tooltipArrowSide]);\n\n    const renderChartsItems = useMemo(() => {\n        if (!state || !charts) return null;\n\n        return state.series.map((item: SeriaProps) => {\n            const { chart, properties, radius, labelList } = item;\n            const show = charts[`${properties.dataKey}`];\n\n            switch (chart) {\n                case 'bar':\n                    return show && !item?.hide ? (\n                        <Bar\n                            key={`${state.id}-${properties.dataKey}`}\n                            {...properties}\n                            shape={<RectBar radius={radius} />}\n                        >\n                            {labelList && (\n                                <LabelList\n                                    dataKey={properties.dataKey.toString()}\n                                    {...labelList}\n                                    content={<CustomizedLabel radius={radius} />}\n                                />\n                            )}\n                            {data.map((_: DataDynamicProps, index: number) => {\n                                const key = `${state.id}-${properties.dataKey}-${index}`;\n\n                                return (\n                                    <Cell\n                                        key={key}\n                                        className={cn(\n                                            styles.bar,\n                                            typeof activeDotsState.active === 'number' &&\n                                                activeDotsState.active !== index\n                                                ? styles.unfocused\n                                                : '',\n                                        )}\n                                    />\n                                );\n                            })}\n                        </Bar>\n                    ) : null;\n\n                case 'area':\n                case 'line':\n                    return show && !item?.hide ? (\n                        <Line\n                            key={`${state.id}-${properties.dataKey}`}\n                            {...properties}\n                            dot={\n                                properties.dot && properties.dotSettings\n                                    ? CustomizedHOC(Dot, {\n                                          activeDot: activeDotsState.active,\n                                          dotSettings: properties.dotSettings,\n                                          inherit: properties?.inheritStroke\n                                              ? properties.inheritStroke\n                                              : false,\n                                      })\n                                    : false\n                            }\n                            activeDot={false}\n                        />\n                    ) : null;\n\n                case 'gradient':\n                    return show && !item?.hide ? (\n                        <Area\n                            {...item.properties}\n                            key={`${state.id}-${item.properties.dataKey}`}\n                            dataKey={`${item.properties.dataKey}`}\n                            stroke='transparent'\n                            fill={\n                                item.gradient.gid\n                                    ? `url(#${state.id}-${item.gradient.gid})`\n                                    : item.properties.fill\n                            }\n                            dot={false}\n                            activeDot={false}\n                        />\n                    ) : null;\n\n                default:\n                    return null;\n            }\n        });\n    }, [charts, state, activeDotsState, data]);\n\n    // Позиционирование brush\n    useEffect(() => {\n        if (!state || !state.brush) return;\n        if (!heightLegend || heightLegend === 0) return;\n\n        const align = state?.legend?.verticalAlign;\n        const legendHeight = align === 'top' ? 0 : heightLegend;\n        const marginTick = state?.xAxis?.tickMargin ? state?.xAxis?.tickMargin : 0;\n        const brushY =\n            (svgRef.current?.clientHeight ? svgRef.current.clientHeight : 0) -\n            legendHeight -\n            state.brush.height -\n            (state?.composeChart?.margin?.bottom ? state.composeChart.margin.bottom : 0) +\n            marginTick +\n            (state.brush?.brushMargin ? state.brush.brushMargin : 0);\n\n        setYBrush(brushY);\n    }, [heightLegend, state]);\n\n    const leaveEvent = (isTooltipActive: boolean): void => {\n        if (isTooltipActive) return;\n\n        if (typeof activeDotsState.prev !== 'number' || typeof activeDotsState.active !== 'number')\n            return;\n\n        setActiveDotsState({\n            prev: null,\n            active: null,\n        });\n    };\n\n    const arrowTooltipEvent = (activeCoordinate: CoordinatesProps): void => {\n        if (!state?.tooltip?.arrow) return;\n\n        if (state?.tooltip?.arrow && activeCoordinate?.x) {\n            const side =\n                (svgRef?.current?.clientWidth || 0) -\n                    (state?.composeChart?.margin?.right || 0) -\n                    activeCoordinate.x -\n                    (tooltipRef.current?.state?.boxWidth || 0) >\n                20;\n\n            setTooltipArrowSide(side);\n        }\n    };\n\n    const hoverEvent = (isTooltipActive: boolean, activeTooltipIndex: number | undefined): void => {\n        if (!isTooltipActive) return;\n\n        if (\n            typeof activeDotsState.active === 'number' &&\n            activeTooltipIndex === activeDotsState.active\n        )\n            return;\n        if (typeof activeTooltipIndex === 'number' && typeof activeDotsState.active !== 'number') {\n            setActiveDotsState({\n                prev: activeTooltipIndex,\n                active: activeTooltipIndex,\n            });\n        }\n\n        if (typeof activeTooltipIndex === 'number' && typeof activeDotsState.prev === 'number') {\n            setActiveDotsState((prev: ActiveDotProps) => ({\n                prev: prev.active,\n                active: activeTooltipIndex,\n            }));\n        }\n    };\n\n    const mouseMove = (e: any): void => {\n        if (!state?.tooltip) return;\n\n        arrowTooltipEvent(e.activeCoordinate);\n        hoverEvent(e.isTooltipActive, e.activeTooltipIndex);\n        leaveEvent(e.isTooltipActive);\n    };\n\n    const mouseLeave = (e: any): void => {\n        if (!state?.tooltip) return;\n\n        leaveEvent(e.isTooltipActive);\n    };\n\n    if (!data || !charts || !state) return null;\n\n    return (\n        <div\n            className={styles.coreChart}\n            ref={svgRef}\n            id={state?.id || ''}\n            style={{ width: '100%', height: '100%' }}\n        >\n            <ResponsiveContainer\n                debounce={\n                    state?.responsiveContainer?.debounce ? state.responsiveContainer.debounce : 0\n                }\n                width='100%'\n            >\n                <ComposedChart\n                    {...state?.composeChart}\n                    onMouseMove={mouseMove}\n                    onMouseLeave={mouseLeave}\n                    data={data}\n                >\n                    <defs>{renderGradient}</defs>\n                    {state.cartesianGrid && renderCartesianGrid}\n                    {state.xAxis && renderXAxis}\n                    {state.yAxis && renderYAxis}\n                    {renderChartsItems}\n                    {state.tooltip && renderTooltip}\n                    {state.brush && renderBrush}\n                    {state.legend && renderLegend}\n                </ComposedChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n"],"names":["getRadius","height","radius","Math","ceil","usePathBar","props","_useState","useState","_useState2","_slicedToArray","topRadius","setTopRadius","_useState3","_useState4","bottomRadius","setBottomRadius","_useState5","_useState6","initHeight","setInitHeight","_useState7","_useState8","initY","setInitY","useEffect","background","y","radiusTop","top","radiusBottom","bottom","heightCheck","heightInit","yInit","CustomizedLabel","_ref","x","value","offset","width","formatter","_usePathBar","_jsx","textAnchor","children","PointIcon","_ref$fill","fill","_ref$height","_jsxs","viewBox","cx","cy","r","strokeWidth","fillOpacity","stroke","Dot","React","ref","index","activeDot","dataKey","dotSettings","windowWidth","setWindowWidth","setHeight","setWidth","option","setOption","dotSetting","Array","isArray","length","find","item","media","window","innerWidth","scale","initScale","className","cn","styles","transform","concat","CircleIcon","xmlns","CircleLineIcon","FilledCircleIcon","id","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","StrokeCircleIcon","strokeDasharray","icons","circleLine","filledCircle","strokeCircle","circle","Legends","legend","series","charts","toggleChart","style","textAlign","align","marginTop","verticalAlign","map","_item$properties","_item$properties2","hideLegend","hide","Icon","icon","role","properties","onClick","iconHeight","Typography","view","tag","name","LinearGradient","gid","points","point","toString","getPath","RectBar","_usePathBar2","useMemo","d","Tick","payload","tickFormatter","xAxis","marginTick","tickMargin","opacity","coordinate","TooltipContent","separator","label","tooltipArrowSide","arrow","labelFormatter","labelStyle","weight","entry","data","hideTooltip","color","CustomizedHOC","Component","options","NewComponent","_objectSpread","useSettings","state","setState","setCharts","setData","filterCount","setFilterCount","_settings$legend","settings","brush","labels","composeChart","margin","setLegendMargin","brushMargin","Number","setGradientCharts","filter","chart","reduce","accum","dataSeria","newData","push","zIndex","_setDatas","setDatas","initData","chartsNames","count","_loop","_series$i","i","_series$i$properties","_series$i$properties3","_series$i$data","seriaData","obj","dataItem","indexOf","_setDatas2","setComposedChartsMargin","_composeChart$initMar","_composeChart$initMar2","_composeChart$initMar3","_composeChart$initMar4","initMargin","abs","left","right","sortByIndex","sort","a","b","Chart","_state$responsiveCont","_useSettings","_useSettings2","_useSettings2$","_useSettings2$2","prev","active","activeDotsState","setActiveDotsState","yBrush","setYBrush","setTooltipArrowSide","heightLegend","setHeightLegend","svgRef","useRef","tooltipRef","renderGradient","gradient","useCallback","withGrad","changed","newState","legendRef","node","setTimeout","getBoundingClientRect","renderLegend","_state$xAxis","_state$legend","_state$brush","translate","Legend","content","wrapperStyle","renderCartesianGrid","cartesianGrid","CartesianGrid","renderXAxis","_state$xAxis2","tick","tickType","XAxis","renderYAxis","_state$yAxis","yAxis","YAxis","renderBrush","Brush","renderTooltip","tooltip","Tooltip","renderChartsItems","labelList","show","Bar","shape","LabelList","_","key","Cell","Line","dot","inherit","inheritStroke","_createElement","Area","_state$legend2","_state$xAxis3","_state$xAxis4","_svgRef$current","_state$composeChart","_state$composeChart$m","_state$brush2","legendHeight","brushY","current","clientHeight","leaveEvent","isTooltipActive","ResponsiveContainer","debounce","responsiveContainer","ComposedChart","onMouseMove","mouseMove","e","arrowTooltipEvent","activeCoordinate","_state$tooltip","_state$tooltip2","_svgRef$current2","_state$composeChart2","_state$composeChart2$","_tooltipRef$current","_tooltipRef$current$s","side","clientWidth","boxWidth","hoverEvent","activeTooltipIndex","onMouseLeave","mouseLeave"],"sourceRoot":""}