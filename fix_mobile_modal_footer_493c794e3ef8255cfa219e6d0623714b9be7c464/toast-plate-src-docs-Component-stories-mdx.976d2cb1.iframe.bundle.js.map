{"version":3,"file":"toast-plate-src-docs-Component-stories-mdx.976d2cb1.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/toast-plate/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/toast-plate/src/vars.css?f201","webpack://@alfalab/core-components/./packages/toast-plate/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/toast-plate/src/index.module.css?2fa5","webpack://@alfalab/core-components/./packages/toast-plate/src/component.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/default.module.css?5982","webpack://@alfalab/core-components/./packages/toast-plate/src/inverted.module.css?8a4e"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Плашка для компонента \", _jsx(_components.code, {\n        children: \"Toast\"\n      }), \". Также используется в компоненте \", _jsx(_components.code, {\n        children: \"Notification\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<ToastPlate\\n    badge='positive'\\n    title='Поздравляем, полный успех'\\n    hasCloser={true}\\n    block={true}\\n    onClose={Function.prototype}\\n    actionButton={\\n        <Button colors='inverted' view='ghost' size='s'>\\n            Восстановить\\n        </Button>\\n    }\\n/>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    /* default */\\n    --toast-plate-bg-color: var(--color-light-bg-primary-inverted);\\n    --toast-plate-color: var(--color-light-text-primary-inverted);\\n    --toast-plate-border-radius: var(--border-radius-m);\\n    --toast-plate-title-font-weight: 700;\\n    --toast-plate-action-align: center;\\n    --toast-plate-action-margin: var(--gap-3xs);\\n    --toast-plate-action-padding: 0 var(--gap-2xl);\\n    --toast-plate-action-divider-display: block;\\n    --toast-plate-content-with-closer-right-padding: var(--gap-m);\\n    --toast-plate-close-button-align: center;\\n\\n    /* inverted */\\n    --toast-plate-inverted-color: var(--color-light-text-primary);\\n    --toast-plate-inverted-bg-color: var(--color-light-bg-primary);\\n}\\n\";","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { Button } from '@alfalab/core-components-button';\nimport { ComponentHeader, Tabs, CssVars } from 'storybook/blocks';\nimport { ToastPlate } from '@alfalab/core-components-toast-plate';\nimport { ToastPlate as ToastPlateTS } from '../component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport styles from '!!raw-loader!../vars.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/ToastPlate\",\n      component: ToastPlate,\n      id: \"ToastPlate\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"ToastPlate\",\n      children: React.createElement(() => {\n        const colors = select('colors', ['default', 'inverted'], 'default');\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: colors === 'inverted' ? 'var(--color-light-bg-primary-inverted)' : 'transparent',\n            padding: '10px',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          children: /*#__PURE__*/_jsx(ToastPlate, {\n            colors: colors,\n            badge: select('badge', ['negative', 'positive', 'attention', undefined], 'positive'),\n            title: text('title', 'Toast Title'),\n            hasCloser: boolean('hasCloser', true),\n            block: boolean('block', false),\n            onClose: Function.prototype,\n            actionButton: boolean('renderActionButton', false) ? /*#__PURE__*/_jsx(Button, {\n              view: \"ghost\",\n              colors: colors === 'default' ? 'inverted' : 'default',\n              size: \"s\",\n              children: \"Action Button\"\n            }) : null,\n            children: text('children', '')\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"ToastPlate\",\n      version: packageJson.version,\n      package: name\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ToastPlate } from '@alfalab/core-components/toast-plate';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: ToastPlateTS\n      }),\n      cssVars: /*#__PURE__*/_jsx(CssVars, {\n        css: styles\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const toastPlate = () => React.createElement(() => {\n  const colors = select(\"colors\", [\"default\", \"inverted\"], \"default\");\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: colors === \"inverted\" ? \"var(--color-light-bg-primary-inverted)\" : \"transparent\",\n      padding: \"10px\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    children: /*#__PURE__*/_jsx(ToastPlate, {\n      colors: colors,\n      badge: select(\"badge\", [\"negative\", \"positive\", \"attention\", undefined], \"positive\"),\n      title: text(\"title\", \"Toast Title\"),\n      hasCloser: boolean(\"hasCloser\", true),\n      block: boolean(\"block\", false),\n      onClose: Function.prototype,\n      actionButton: boolean(\"renderActionButton\", false) ? /*#__PURE__*/_jsx(Button, {\n        view: \"ghost\",\n        colors: colors === \"default\" ? \"inverted\" : \"default\",\n        size: \"s\",\n        children: \"Action Button\"\n      }) : null,\n      children: text(\"children\", \"\")\n    })\n  });\n});\ntoastPlate.storyName = 'ToastPlate';\ntoastPlate.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const colors = select(\\\"colors\\\", [\\\"default\\\", \\\"inverted\\\"], \\\"default\\\");\\n  return <div style={{\\n    backgroundColor: colors === \\\"inverted\\\" ? \\\"var(--color-light-bg-primary-inverted)\\\" : \\\"transparent\\\",\\n    padding: \\\"10px\\\",\\n    position: \\\"absolute\\\",\\n    top: 0,\\n    left: 0,\\n    right: 0,\\n    bottom: 0\\n  }}>\\n                <ToastPlate colors={colors} badge={select(\\\"badge\\\", [\\\"negative\\\", \\\"positive\\\", \\\"attention\\\", undefined], \\\"positive\\\")} title={text(\\\"title\\\", \\\"Toast Title\\\")} hasCloser={boolean(\\\"hasCloser\\\", true)} block={boolean(\\\"block\\\", false)} onClose={Function.prototype} actionButton={boolean(\\\"renderActionButton\\\", false) ? <Button view=\\\"ghost\\\" colors={colors === \\\"default\\\" ? \\\"inverted\\\" : \\\"default\\\"} size=\\\"s\\\">\\n                                Action Button\\n                            </Button> : null}>\\n                    {text(\\\"children\\\", \\\"\\\")}\\n                </ToastPlate>\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/ToastPlate',\n  id: 'ToastPlate',\n  component: ToastPlate,\n  tags: ['stories-mdx'],\n  includeStories: [\"toastPlate\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QHY01\",\"hasCloser\":\"hasCloser_czfqj\",\"contentWrap\":\"contentWrap_p2Odp\",\"block\":\"block_jD8PO\",\"content\":\"content_MyrvB\",\"hasActionButton\":\"hasActionButton_wEMm1\",\"actionSection\":\"actionSection_GNPXb\",\"leftAddons\":\"leftAddons_RuFAX\",\"title\":\"title_fFwsd\",\"children\":\"children_g29U4\",\"closeButtonWrapper\":\"closeButtonWrapper_ai1cX\",\"closeButton\":\"closeButton_BJskE\"};","import React, { forwardRef, HTMLAttributes, MouseEvent, ReactNode, useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { AlertCircleMIcon } from '@alfalab/icons-glyph/AlertCircleMIcon';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type BadgeIcons = {\n    negative: JSX.Element;\n    positive: JSX.Element;\n    attention: JSX.Element;\n};\n\nexport type ToastPlateProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для заголовка\n     */\n    titleClassName?: string;\n\n    /**\n     * Дополнительный класс для контентной области\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для области с кнопкой действия\n     */\n    actionSectionClassName?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: ReactNode;\n\n    /**\n     * Заголовок компонента\n     */\n    title?: ReactNode;\n\n    /**\n     * Вид бэйджа\n     */\n    badge?: 'negative' | 'positive' | 'attention';\n\n    /**\n     * Слот слева, заменяет стандартную иконку\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Кнопка действия\n     */\n    actionButton?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Управляет отображением кнопки закрытия уведомления\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Доп. класс враппера кнопки \"закрыть\".\n     */\n    closerWrapperClassName?: string;\n\n    /**\n     * Доп. класс кнопки \"закрыть\".\n     */\n    closerClassName?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Обработчик клика по крестику\n     */\n    onClose?: (event?: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Функция, с помощью которой можно переопределить иконки в Badge\n     */\n    getBadgeIcons?: (icons: BadgeIcons) => BadgeIcons;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n};\n\nconst iconDefaultComponents = {\n    negative: <CrossCircleMIcon className={styles.badgeIcon} />,\n    positive: <CheckmarkCircleMIcon className={styles.badgeIcon} />,\n    attention: <AlertCircleMIcon className={styles.badgeIcon} />,\n};\n\nexport const ToastPlate = forwardRef<HTMLDivElement, ToastPlateProps>(\n    (\n        {\n            dataTestId,\n            className,\n            titleClassName,\n            contentClassName,\n            actionSectionClassName,\n            hasCloser,\n            leftAddons,\n            badge,\n            title,\n            children,\n            actionButton,\n            block,\n            onClose,\n            getBadgeIcons,\n            colors = 'default',\n            closerWrapperClassName,\n            closerClassName,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const needRenderLeftAddons = Boolean(leftAddons || badge);\n\n        const iconComponents = getBadgeIcons\n            ? getBadgeIcons(iconDefaultComponents)\n            : iconDefaultComponents;\n\n        const handleClose = useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (onClose) {\n                    onClose(event);\n                }\n            },\n            [onClose],\n        );\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    colorStyles[colors].component,\n                    { [styles.block]: block, [styles.hasCloser]: hasCloser },\n                    className,\n                )}\n                ref={ref}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                <div className={styles.contentWrap}>\n                    <div\n                        className={cn(contentClassName, styles.content, {\n                            [styles.hasCloser]: hasCloser,\n                            [styles.hasActionButton]: !!actionButton,\n                        })}\n                    >\n                        {needRenderLeftAddons && (\n                            <div className={styles.leftAddons}>\n                                {leftAddons || (\n                                    <Badge\n                                        view='icon'\n                                        content={badge && iconComponents[badge]}\n                                        iconColor={badge}\n                                        className={styles.badge}\n                                        dataTestId='badge'\n                                    />\n                                )}\n                            </div>\n                        )}\n\n                        <div>\n                            {title && (\n                                <div className={cn(titleClassName, styles.title)}>{title}</div>\n                            )}\n                            {children && <div className={styles.children}>{children}</div>}\n                        </div>\n                    </div>\n\n                    {actionButton && (\n                        <div\n                            className={cn(actionSectionClassName, styles.actionSection, {\n                                [styles.hasCloser]: hasCloser,\n                            })}\n                        >\n                            {actionButton}\n                        </div>\n                    )}\n\n                    {hasCloser && (\n                        <div\n                            className={cn(\n                                styles.closeButtonWrapper,\n                                colorStyles[colors].closeButtonWrapper,\n                                closerWrapperClassName,\n                            )}\n                        >\n                            <IconButton\n                                icon={CrossMIcon}\n                                colors={colors === 'default' ? 'inverted' : 'default'}\n                                className={cn(styles.closeButton, closerClassName)}\n                                onClick={handleClose}\n                                aria-label='закрыть'\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UI16V\",\"closeButtonWrapper\":\"closeButtonWrapper_fNvJ9\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Q3xMN\",\"closeButtonWrapper\":\"closeButtonWrapper_CoXoX\"};"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","pre","live","className","MDXContent","wrapper","MDXLayout","div","title","component","ToastPlate","id","name","colors","select","style","backgroundColor","padding","position","top","left","right","bottom","badge","undefined","text","hasCloser","boolean","block","onClose","Function","prototype","actionButton","Button","view","size","version","package","description","changelog","of","cssVars","css","toastPlate","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","colorStyles","default","inverted","iconDefaultComponents","negative","CrossCircleMIcon","positive","CheckmarkCircleMIcon","attention","AlertCircleMIcon","forwardRef","ref","_cn","_cn2","dataTestId","titleClassName","contentClassName","actionSectionClassName","leftAddons","getBadgeIcons","_ref$colors","closerWrapperClassName","closerClassName","restProps","_objectWithoutProperties","_excluded","needRenderLeftAddons","Boolean","iconComponents","handleClose","event","_objectSpread","Badge","iconColor","closeButtonWrapper","IconButton","icon","CrossMIcon"],"sourceRoot":""}