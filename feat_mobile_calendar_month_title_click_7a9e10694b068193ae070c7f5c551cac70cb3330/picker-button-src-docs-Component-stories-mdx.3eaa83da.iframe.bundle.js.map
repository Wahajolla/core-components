{"version":3,"file":"picker-button-src-docs-Component-stories-mdx.3eaa83da.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/picker-button/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/picker-button/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/picker-button/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/picker-button/src/index.module.css?61cb","webpack://@alfalab/core-components/./packages/picker-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/field/index.module.css?e343","webpack://@alfalab/core-components/./packages/picker-button/src/field/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/option/index.module.css?4cf5","webpack://@alfalab/core-components/./packages/picker-button/src/option/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/utils/index.ts"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"примеры\",\n      children: \"Примеры\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const options = [{ key: 'Car' }, { key: 'Star' }, { key: 'Flower' }, { key: 'Banknote' }];\\n\\nconst optionsWithIcons = [\\n    { key: 'Car', icon: CarMIcon },\\n    { key: 'Star', icon: StarMIcon },\\n    { key: 'Flower', icon: FlowerMMIcon },\\n    { key: 'Banknote', icon: BanknoteMIcon },\\n];\\n\\nrender(\\n    <Space direction='horizontal'>\\n        <PickerButtonDesktop options={optionsWithIcons} view='primary' label='Picker button' />\\n        <PickerButtonDesktop options={options} view='primary' variant='compact' />\\n    </Space>,\\n);\\n//MOBILE\\nconst options = [{ key: 'Car' }, { key: 'Star' }, { key: 'Flower' }, { key: 'Banknote' }];\\n\\nconst optionsWithIcons = [\\n    { key: 'Car', icon: CarMIcon },\\n    { key: 'Star', icon: StarMIcon },\\n    { key: 'Flower', icon: FlowerMMIcon },\\n    { key: 'Banknote', icon: BanknoteMIcon },\\n];\\n\\nrender(\\n    <Space direction='horizontal'>\\n        <PickerButtonMobile options={optionsWithIcons} view='primary' label='Picker button' />\\n        <PickerButtonMobile options={options} view='primary' variant='compact' />\\n    </Space>,\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент представляет из себя \", _jsx(_components.a, {\n        href: \"?path=/docs/components-select--docs\",\n        children: \"Select\"\n      }), \" с \", _jsx(_components.a, {\n        href: \"?path=/docs/components-button--docs\",\n        children: \"Button\"\n      }), \" вместо стандартного \", _jsx(_components.code, {\n        children: \"field\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {PickerButtonDesktop as PickerButtonDesktopTS} from '../Component';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { PickerButton } from '@alfalab/core-components/picker-button';\\nimport { PickerButtonResponsive } from '@alfalab/core-components/picker-button/responsive'\\nimport { PickerButtonMobile } from '@alfalab/core-components/picker-button/mobile';\\nimport { PickerButtonDesktop } from '@alfalab/core-components/picker-button/desktop';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Из индекса импортируется responsive версия компонента.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: PickerButtonDesktopTS\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, boolean, select } from '@storybook/addon-knobs';\nimport { CarMIcon } from '@alfalab/icons-glyph/CarMIcon';\nimport { StarMIcon } from '@alfalab/icons-glyph/StarMIcon';\nimport { CardTransferMIcon } from '@alfalab/icons-glyph/CardTransferMIcon';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { PickerButton } from '@alfalab/core-components-picker-button';\nimport { PickerButtonMobile } from '@alfalab/core-components-picker-button/mobile';\nimport { PickerButtonDesktop } from '@alfalab/core-components-picker-button/desktop';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const options = [{\n  key: 'Заказать карту'\n}, {\n  key: 'Выписка по счёту'\n}, {\n  key: 'Выпустить карту'\n}, {\n  key: 'Скопировать реквизиты'\n}];\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/PickerButton\",\n      component: PickerButton,\n      id: \"PickerButton\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"PickerButton\",\n      children: /*#__PURE__*/_jsx(PickerButton, {\n        options: options,\n        label: text('label', 'Действие'),\n        size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm'),\n        view: select('view', ['link', 'filled', 'primary', 'secondary', 'outlined', 'ghost', 'accent'], 'secondary'),\n        variant: select('variant', ['default', 'compact']),\n        disabled: boolean('disabled', false),\n        loading: boolean('loading', false),\n        leftAddons: boolean('Иконка слева', false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n        showArrow: boolean('Показывать стрелку', true)\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"PickerButtonMobile\",\n      children: /*#__PURE__*/_jsx(PickerButtonMobile, {\n        options: options,\n        label: text('label', 'Действие'),\n        size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm'),\n        view: select('view', ['link', 'filled', 'primary', 'secondary', 'outlined', 'ghost', 'accent'], 'secondary'),\n        variant: select('variant', ['default', 'compact']),\n        disabled: boolean('disabled', false),\n        loading: boolean('loading', false),\n        leftAddons: boolean('Иконка слева', false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n        showArrow: boolean('Показывать стрелку', true)\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"PickerButtonDesktop\",\n      children: /*#__PURE__*/_jsx(PickerButtonDesktop, {\n        options: options,\n        label: text('label', 'Действие'),\n        size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm'),\n        view: select('view', ['link', 'filled', 'primary', 'secondary', 'outlined', 'ghost', 'accent'], 'secondary'),\n        variant: select('variant', ['default', 'compact']),\n        disabled: boolean('disabled', false),\n        loading: boolean('loading', false),\n        leftAddons: boolean('Иконка слева', false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n        showArrow: boolean('Показывать стрелку', true)\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"PickerButton\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/picker-button\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?type=design&node-id=86221%3A109403&t=CXazzkYWpueZquEy-1\",\n      children: \"\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0434\\u043B\\u044F \\u0441\\u043A\\u0440\\u044B\\u0442\\u0438\\u044F \\u0440\\u0435\\u0434\\u043A\\u0438\\u0445 \\u0438\\u043B\\u0438 \\u043E\\u0434\\u0438\\u043D\\u0430\\u043A\\u043E\\u0432\\u044B\\u0445 \\u043F\\u043E \\u043A\\u043E\\u043D\\u0442\\u0435\\u043A\\u0441\\u0442\\u0443 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      development: /*#__PURE__*/_jsx(Development, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const pickerButton = () => /*#__PURE__*/_jsx(PickerButton, {\n  options: options,\n  label: text(\"label\", \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"),\n  size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\"),\n  view: select(\"view\", [\"link\", \"filled\", \"primary\", \"secondary\", \"outlined\", \"ghost\", \"accent\"], \"secondary\"),\n  variant: select(\"variant\", [\"default\", \"compact\"]),\n  disabled: boolean(\"disabled\", false),\n  loading: boolean(\"loading\", false),\n  leftAddons: boolean(\"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\", false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n  showArrow: boolean(\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0443\", true)\n});\npickerButton.storyName = 'PickerButton';\npickerButton.parameters = {\n  storySource: {\n    source: '<PickerButton options={options} label={text(\\\"label\\\", \\\"\\\\u0414\\\\u0435\\\\u0439\\\\u0441\\\\u0442\\\\u0432\\\\u0438\\\\u0435\\\")} size={select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")} view={select(\\\"view\\\", [\\\"link\\\", \\\"filled\\\", \\\"primary\\\", \\\"secondary\\\", \\\"outlined\\\", \\\"ghost\\\", \\\"accent\\\"], \\\"secondary\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"compact\\\"])} disabled={boolean(\\\"disabled\\\", false)} loading={boolean(\\\"loading\\\", false)} leftAddons={boolean(\\\"\\\\u0418\\\\u043A\\\\u043E\\\\u043D\\\\u043A\\\\u0430 \\\\u0441\\\\u043B\\\\u0435\\\\u0432\\\\u0430\\\", false) ? <StarMIcon /> : null} showArrow={boolean(\\\"\\\\u041F\\\\u043E\\\\u043A\\\\u0430\\\\u0437\\\\u044B\\\\u0432\\\\u0430\\\\u0442\\\\u044C \\\\u0441\\\\u0442\\\\u0440\\\\u0435\\\\u043B\\\\u043A\\\\u0443\\\", true)} />'\n  }\n};\nexport const pickerButtonMobile = () => /*#__PURE__*/_jsx(PickerButtonMobile, {\n  options: options,\n  label: text(\"label\", \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"),\n  size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\"),\n  view: select(\"view\", [\"link\", \"filled\", \"primary\", \"secondary\", \"outlined\", \"ghost\", \"accent\"], \"secondary\"),\n  variant: select(\"variant\", [\"default\", \"compact\"]),\n  disabled: boolean(\"disabled\", false),\n  loading: boolean(\"loading\", false),\n  leftAddons: boolean(\"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\", false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n  showArrow: boolean(\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0443\", true)\n});\npickerButtonMobile.storyName = 'PickerButtonMobile';\npickerButtonMobile.parameters = {\n  storySource: {\n    source: '<PickerButtonMobile options={options} label={text(\\\"label\\\", \\\"\\\\u0414\\\\u0435\\\\u0439\\\\u0441\\\\u0442\\\\u0432\\\\u0438\\\\u0435\\\")} size={select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")} view={select(\\\"view\\\", [\\\"link\\\", \\\"filled\\\", \\\"primary\\\", \\\"secondary\\\", \\\"outlined\\\", \\\"ghost\\\", \\\"accent\\\"], \\\"secondary\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"compact\\\"])} disabled={boolean(\\\"disabled\\\", false)} loading={boolean(\\\"loading\\\", false)} leftAddons={boolean(\\\"\\\\u0418\\\\u043A\\\\u043E\\\\u043D\\\\u043A\\\\u0430 \\\\u0441\\\\u043B\\\\u0435\\\\u0432\\\\u0430\\\", false) ? <StarMIcon /> : null} showArrow={boolean(\\\"\\\\u041F\\\\u043E\\\\u043A\\\\u0430\\\\u0437\\\\u044B\\\\u0432\\\\u0430\\\\u0442\\\\u044C \\\\u0441\\\\u0442\\\\u0440\\\\u0435\\\\u043B\\\\u043A\\\\u0443\\\", true)} />'\n  }\n};\nexport const pickerButtonDesktop = () => /*#__PURE__*/_jsx(PickerButtonDesktop, {\n  options: options,\n  label: text(\"label\", \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"),\n  size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\"),\n  view: select(\"view\", [\"link\", \"filled\", \"primary\", \"secondary\", \"outlined\", \"ghost\", \"accent\"], \"secondary\"),\n  variant: select(\"variant\", [\"default\", \"compact\"]),\n  disabled: boolean(\"disabled\", false),\n  loading: boolean(\"loading\", false),\n  leftAddons: boolean(\"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\", false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n  showArrow: boolean(\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0443\", true)\n});\npickerButtonDesktop.storyName = 'PickerButtonDesktop';\npickerButtonDesktop.parameters = {\n  storySource: {\n    source: '<PickerButtonDesktop options={options} label={text(\\\"label\\\", \\\"\\\\u0414\\\\u0435\\\\u0439\\\\u0441\\\\u0442\\\\u0432\\\\u0438\\\\u0435\\\")} size={select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")} view={select(\\\"view\\\", [\\\"link\\\", \\\"filled\\\", \\\"primary\\\", \\\"secondary\\\", \\\"outlined\\\", \\\"ghost\\\", \\\"accent\\\"], \\\"secondary\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"compact\\\"])} disabled={boolean(\\\"disabled\\\", false)} loading={boolean(\\\"loading\\\", false)} leftAddons={boolean(\\\"\\\\u0418\\\\u043A\\\\u043E\\\\u043D\\\\u043A\\\\u0430 \\\\u0441\\\\u043B\\\\u0435\\\\u0432\\\\u0430\\\", false) ? <StarMIcon /> : null} showArrow={boolean(\\\"\\\\u041F\\\\u043E\\\\u043A\\\\u0430\\\\u0437\\\\u044B\\\\u0432\\\\u0430\\\\u0442\\\\u044C \\\\u0441\\\\u0442\\\\u0440\\\\u0435\\\\u043B\\\\u043A\\\\u0443\\\", true)} />'\n  }\n};\nconst componentMeta = {\n  title: 'Components/PickerButton',\n  id: 'PickerButton',\n  component: PickerButton,\n  tags: ['stories-mdx'],\n  includeStories: [\"pickerButton\", \"pickerButtonMobile\", \"pickerButtonDesktop\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_yeBjE\",\"optionsPopover\":\"optionsPopover_ZFIbu\",\"sideGap\":\"sideGap_khSlz\",\"option\":\"option_TJJ9_\"};","import React, { FC, forwardRef, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport {\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { Field as DefaultField } from './field';\nimport { Option as DefaultOption } from './option';\n\nimport styles from './index.module.css';\n\nconst SIDE_POSITIONS = ['right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'];\n\nexport type PickerButtonSize = 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\nexport type PickerButtonVariant = 'default' | 'compact';\n\nexport type PickerButtonDesktopProps = Omit<\n    BaseSelectProps,\n    | 'placeholder'\n    | 'Arrow'\n    | 'autocomplete'\n    | 'size'\n    | 'onFocus'\n    | 'selected'\n    | 'closeOnSelect'\n    | 'multiple'\n    | 'hint'\n    | 'allowUnselect'\n    | 'options'\n> &\n    Pick<ButtonProps, 'view' | 'loading' | 'leftAddons' | 'rightAddons'> & {\n        options: Array<\n            BaseSelectProps['options'][0] & {\n                /**\n                 * Иконка, отображающаяся слева от текстового представления пункта\n                 */\n                icon?: FC<SVGProps<SVGSVGElement>>;\n            }\n        >;\n\n        /**\n         * Размер кнопки\n         */\n        size?: PickerButtonSize;\n\n        /**\n         * Тип кнопки\n         */\n        variant?: PickerButtonVariant;\n\n        /**\n         * Показывать стрелку\n         * @default true\n         */\n        showArrow?: boolean;\n    };\n\nexport const PickerButtonDesktop = forwardRef<HTMLInputElement, PickerButtonDesktopProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            view,\n            loading,\n            size = 'm',\n            variant = 'default',\n            className,\n            leftAddons,\n            rightAddons,\n            popperClassName,\n            optionClassName,\n            showArrow,\n            Field = DefaultField,\n            fieldProps = {},\n            ...restProps\n        },\n        ref,\n    ) => {\n        const isSideGap =\n            !!restProps.popoverPosition && SIDE_POSITIONS.includes(restProps.popoverPosition);\n\n        const fieldDedaultProps = {\n            view,\n            loading,\n            /** size у select, button несовместимы */\n            buttonSize: size,\n            buttonVariant: variant,\n            leftAddons,\n            rightAddons,\n            showArrow,\n        };\n\n        return (\n            <BaseSelect\n                {...restProps}\n                optionProps={{ Checkmark: null }}\n                ref={ref}\n                Option={Option}\n                Field={Field}\n                size={size === 'm' ? 'm' : 's'}\n                fieldProps={{\n                    ...fieldDedaultProps,\n                    ...(fieldProps as object),\n                }}\n                Optgroup={Optgroup}\n                OptionsList={OptionsList}\n                className={cn(styles.container, className)}\n                popperClassName={cn('cc-picker-button', styles.optionsPopover, popperClassName, {\n                    [styles.sideGap]: isSideGap,\n                })}\n                optionClassName={cn(styles.option, optionClassName)}\n                selected={[]}\n                closeOnSelect={true}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"iconContainer\":\"iconContainer_s0KfQ\",\"addonsContainer\":\"addonsContainer_A1BDF\",\"showControlIcon\":\"showControlIcon_vw_Fr\",\"open\":\"open_vBG4R\"};","import React, { ButtonHTMLAttributes, FC, Fragment, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select/src/typings';\n\nimport { PickerButtonSize, PickerButtonVariant } from '../Component';\nimport { getIcon } from '../utils';\n\nimport styles from './index.module.css';\n\ntype FieldProps = Omit<BaseFieldProps, 'size' | 'hint' | 'success' | 'error' | 'placeholder'> &\n    ButtonProps & {\n        buttonSize?: PickerButtonSize;\n        buttonVariant?: PickerButtonVariant;\n        showArrow?: boolean;\n    };\n\nexport const Field = ({\n    buttonSize = 'm',\n    buttonVariant = 'default',\n    view,\n    label,\n    open,\n    multiple,\n    rightAddons,\n    Arrow,\n    innerProps,\n    className,\n    selected,\n    selectedMultiple,\n    setSelectedItems,\n    toggleMenu,\n    valueRenderer,\n    showArrow = true,\n    labelView,\n    ...restProps\n}: FieldProps) => {\n    const Icon: FC<SVGProps<SVGSVGElement>> = getIcon(buttonVariant, buttonSize);\n\n    const { ref, ...restInnerProps } = innerProps;\n\n    const buttonProps = {\n        ...restProps,\n        ...restInnerProps,\n    } as ButtonHTMLAttributes<HTMLButtonElement>;\n\n    return (\n        <div ref={ref}>\n            <Button\n                {...buttonProps}\n                rightAddons={\n                    <Fragment>\n                        {rightAddons && (\n                            <span\n                                className={cn(styles.addonsContainer, {\n                                    [styles.showControlIcon]:\n                                        showArrow || buttonVariant === 'compact',\n                                })}\n                            >\n                                {rightAddons}\n                            </span>\n                        )}\n\n                        {(showArrow || buttonVariant === 'compact') && (\n                            <span\n                                className={cn(\n                                    styles.iconContainer,\n                                    buttonVariant !== 'compact' && open && styles.open,\n                                )}\n                            >\n                                <Icon data-test-id='picker-button-icon' />\n                            </span>\n                        )}\n                    </Fragment>\n                }\n                block={true}\n                view={view}\n                size={buttonSize}\n                className={cn(styles.component, view === 'primary' && styles.primary, className)}\n            >\n                {buttonVariant !== 'compact' && label}\n            </Button>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_xMu0c\",\"icon\":\"icon_PSCe7\",\"content\":\"content_OGU8b\"};","import React, { FC, SVGProps } from 'react';\n\nimport { Option as BaseOption } from '@alfalab/core-components-select';\nimport {\n    OptionProps as BaseOptionProps,\n    OptionShape,\n} from '@alfalab/core-components-select/src/typings';\n\nimport styles from './index.module.css';\n\ntype OptionProps = Omit<BaseOptionProps, 'option'> & {\n    option: OptionShape & {\n        icon?: FC<SVGProps<SVGSVGElement>>;\n    };\n};\n\nexport const Option = ({ option, children, ...restProps }: OptionProps) => {\n    const content = children || option.content || option.key;\n\n    const Icon = option.icon;\n\n    return (\n        <BaseOption option={option} {...restProps}>\n            <div className={styles.container}>\n                {Icon && <Icon className={styles.icon} />}\n                <div className={styles.content}>{content}</div>\n            </div>\n        </BaseOption>\n    );\n};\n","import { FC, SVGProps } from 'react';\n\nimport { ChevronDownCompactSIcon } from '@alfalab/icons-glyph/ChevronDownCompactSIcon';\nimport { ChevronDownMIcon } from '@alfalab/icons-glyph/ChevronDownMIcon';\nimport { MoreMIcon } from '@alfalab/icons-glyph/MoreMIcon';\nimport { MoreSIcon } from '@alfalab/icons-glyph/MoreSIcon';\n\nimport { PickerButtonSize, PickerButtonVariant } from '..';\n\nexport const getIcon = (\n    variant: PickerButtonVariant,\n    size: PickerButtonSize,\n): FC<SVGProps<SVGSVGElement>> => {\n    if (variant === 'compact') {\n        return size === 'xxs' ? MoreSIcon : MoreMIcon;\n    }\n\n    return size === 'xxs' ? ChevronDownCompactSIcon : ChevronDownMIcon;\n};\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","pre","p","id","live","mobileHeight","className","href","MDXContent","wrapper","MDXLayout","of","options","title","component","PickerButton","name","label","text","size","select","view","variant","disabled","boolean","loading","leftAddons","StarMIcon","showArrow","PickerButtonMobile","PickerButtonDesktop","version","package","design","description","development","changelog","pickerButton","storyName","parameters","storySource","source","pickerButtonMobile","pickerButtonDesktop","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","SIDE_POSITIONS","forwardRef","ref","_ref$OptionsList","OptionsList","DefaultOptionsList","_ref$Optgroup","Optgroup","DefaultOptgroup","_ref$Option","Option","DefaultOption","_ref$size","_ref$variant","rightAddons","popperClassName","optionClassName","_ref$Field","Field","DefaultField","_ref$fieldProps","fieldProps","restProps","_objectWithoutProperties","_excluded","isSideGap","popoverPosition","includes","fieldDedaultProps","buttonSize","buttonVariant","BaseSelect","_objectSpread","optionProps","Checkmark","closeOnSelect","_ref$buttonSize","_ref$buttonVariant","multiple","innerProps","Arrow","_ref$showArrow","selectedMultiple","setSelectedItems","toggleMenu","valueRenderer","labelView","Icon","getIcon","restInnerProps","_excluded2","buttonProps","Button","Fragment","block","option","icon","BaseOption","MoreSIcon","MoreMIcon","ChevronDownCompactSIcon","ChevronDownMIcon"],"sourceRoot":""}