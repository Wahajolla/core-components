{"version":3,"file":"custom-picker-button-src-docs-Component-stories-mdx.a4db7133.iframe.bundle.js","mappings":"sgBAiCO,MAAMA,WAAa,iDAAoB,CAAC,GAWxC,SAASC,kBAAkBC,WAChC,OAMA,SAASC,kBAAkBC,OACzB,MAAMC,cAAgBC,iBAAiBF,MAAMG,YAC7C,OAAO,iDAAoBL,UAAW,IAAIE,MAAOC,6BACnD,CACF,CAWO,SAASC,iBAAiBC,YAC/B,MAAMC,kBAAoB,8CAAiBR,YAG3C,OAAO,4CAAc,IAEO,mBAAfO,WACFA,WAAWC,mBAGb,IAAIA,qBAAsBD,aAChC,CAACC,kBAAmBD,YACzB,CAGA,MAAME,YAAc,CAAC,EAQd,SAASC,aAAY,WAACH,WAAU,SAAEI,SAAQ,qBAAEC,uBAEjD,IAAIP,cAWJ,OAREA,cADEO,qBAEsB,mBAAfL,WACHA,WAAW,CAAC,GACZA,YAAcE,YAEJH,iBAAiBC,YAG5B,iDACLP,WAAWa,SACX,CAACC,MAAOT,eACRM,SAEJ,C,qjBCvGII,kBAAkB,CAACC,KAAK,kDAAgBC,EAAE,qDAAa,mDAAYC,cAAc,cAAc,mCAAAhB,UAAUiB,cAAcC,SAASC,WAAWC,KAAKC,MAAM,CAACC,UAAS,EAAI,CAACC,kCAAkC,MAAO,CAACD,UAAS,EAAG,CAACE,kBAAkBC,KAAK,IAAG,cAACC,eAAeN,KAAKlB,MAAMwB,cAAcD,IAAK,CAACE,SAAS,IAAG,SAACL,UAAUF,KAAKC,OAAM,SAACZ,UAAUW,KAAKlB,MAAM,OAAOoB,SAAS,KAAKb,QAAQ,GAAGmB,aAAa,MAAMX,cAAcG,KAAKO,OAAOE,MAAMC,QAAQC,cAAcC,WAAW,IAAI3B,WAAW,IAAIQ,qBAAqBkB,eAAe1B,YAAY,OAAO,IAAI4B,SAAQ,CAACC,QAAQC,UAAU,wHAAwBC,MAAK,EAAE5B,4BAAe,4DAAc,iDAAoBQ,cAAc,CAACU,cAAcS,OAAOE,IAAIC,KAAKC,UAAU,iDAAoB/B,YAAY,CAACH,uBAAY,iDAAoB,kDAAK,CAACyB,gBAAQC,gCAAkBC,WAAUI,KAAKF,QAAQ,GAAE,EAAGd,KAAKoB,QAAQR,WAAU,4DAAeA,QAAQ,CAAG,E,kpECEn3B,SAASS,kBAAkBvC,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLhC,KAAM,OACNiC,EAAG,IACHhC,EAAG,MACF,YAAsBb,MAAMG,YAC/B,OAAO,oBAAM,qBAAW,CACtBI,SAAU,EAAC,mBAAKiC,YAAYG,GAAI,CAC9BG,GAAI,UACJvC,SAAU,YACR,MAAM,mBAAKiC,YAAYI,IAAK,CAC9BG,MAAM,EACNC,aAAc,IACdzC,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BqC,UAAW,eACX1C,SAAU,qqBAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BG,GAAI,aACJvC,SAAU,eACR,MAAM,oBAAMiC,YAAYK,EAAG,CAC7BtC,SAAU,CAAC,mCAAmC,mBAAKiC,YAAY3B,EAAG,CAChEqC,KAAM,gCACN3C,SAAU,WACR,OAAO,mBAAKiC,YAAY3B,EAAG,CAC7BqC,KAAM,sCACN3C,SAAU,iBACR,yBAAyB,mBAAKiC,YAAY5B,KAAM,CAClDL,SAAU,UACR,SAGV,CAOA,gBANA,SAAS4C,WAAWnD,MAAQ,CAAC,GAC3B,MAAOoD,QAASC,WAAaZ,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAC3E,OAAOkD,WAAY,mBAAKA,UAAWZ,OAAOC,OAAO,CAAC,EAAG1C,MAAO,CAC1DO,UAAU,mBAAKgC,kBAAmBvC,UAC9BuC,kBAAkBvC,MAC1B,E,6SCpCA,SAAS,6BAAkBA,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLhC,KAAM,SACL,YAAsBZ,MAAMG,YAC/B,OAAO,oBAAM,qBAAW,CACtBI,SAAU,EAAC,mBAAKiC,YAAYG,GAAI,CAC9BG,GAAI,cACJvC,SAAU,gBACR,MAAM,mBAAKiC,YAAYI,IAAK,CAC9BrC,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BqC,UAAW,eACX1C,SAAU,sTAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BG,GAAI,WACJvC,SAAU,aACR,MAAM,mBAAK,QAAW,CACxBJ,WAAY,CACVmD,0BAAyB,oBACzBC,yBAAwB,mBACxBC,6BAA4B,4BAIpC,CAOA,gBANA,SAAS,uBAAWxD,MAAQ,CAAC,GAC3B,MAAOoD,QAASC,WAAaZ,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAC3E,OAAOkD,WAAY,mBAAKA,UAAWZ,OAAOC,OAAO,CAAC,EAAG1C,MAAO,CAC1DO,UAAU,mBAAK,6BAAmBP,UAC9B,6BAAkBA,MAC1B,E,sVCpBO,MAAMyD,QAAU,CAAC,CACtBtB,IAAK,kBACJ,CACDA,IAAK,oBACJ,CACDA,IAAK,mBACJ,CACDA,IAAK,0BAEMuB,eAAiB,CAAC,QAAS,SAC3BC,YAAc,CAAC,YAAa,cACzC,SAAS,mCAAkB3D,OACzB,OAAoB,oBAAM,qBAAW,CACnCO,SAAU,EAAc,mBAAK,QAAM,CACjCqD,MAAO,gCACPC,UAAW,OAAAC,mBACXhB,GAAI,uBACF,KAAM,MAAmB,mBAAK,QAAO,CACvCiB,KAAM,qBACNxD,UAAuB,mBAAK,OAAAuD,mBAAoB,CAC9CE,iBAAiB,mBAAAC,OAAM,kBAAmB,WAC1CC,cAAc,mBAAAC,QAAO,eAAgBT,eAAgB,SACrDU,WAAW,mBAAAD,QAAO,YAAaR,YAAa,aAC5CF,QAASA,QACTY,OAAO,mBAAAC,MAAK,QAAS,YACrBC,MAAM,mBAAAJ,QAAO,OAAQ,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAAO,KACzDK,SAAS,mBAAAL,QAAO,UAAW,CAAC,UAAW,YACvCM,UAAU,mBAAAC,SAAQ,YAAY,GAC9BC,SAAS,mBAAAD,SAAQ,WAAW,GAC5BE,YAAY,mBAAAF,SAAQ,gBAAgB,IAAsB,mBAAKG,UAAAA,UAAW,CAAC,GAAK,KAChFC,WAAW,mBAAAJ,SAAQ,sBAAsB,OAEzC,MAAmB,mBAAK,QAAO,CACjCX,KAAM,2BACNxD,UAAuB,mBAAK,OAAAgD,yBAA0B,CACpDS,iBAAiB,mBAAAC,OAAM,kBAAmB,WAC1CC,cAAc,mBAAAC,QAAO,eAAgBT,eAAgB,SACrDU,WAAW,mBAAAD,QAAO,YAAaR,YAAa,aAC5CF,QAASA,QACTY,OAAO,mBAAAC,MAAK,QAAS,YACrBC,MAAM,mBAAAJ,QAAO,OAAQ,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAAO,KACzDK,SAAS,mBAAAL,QAAO,UAAW,CAAC,UAAW,YACvCM,UAAU,mBAAAC,SAAQ,YAAY,GAC9BC,SAAS,mBAAAD,SAAQ,WAAW,GAC5BE,YAAY,mBAAAF,SAAQ,gBAAgB,IAAsB,mBAAKG,UAAAA,UAAW,CAAC,GAAK,KAChFC,WAAW,mBAAAJ,SAAQ,sBAAsB,OAEzC,MAAmB,mBAAK,QAAO,CACjCX,KAAM,4BACNxD,UAAuB,mBAAK,QAAA+C,0BAA2B,CACrDU,iBAAiB,mBAAAC,OAAM,kBAAmB,WAC1CC,cAAc,mBAAAC,QAAO,eAAgBT,eAAgB,SACrDU,WAAW,mBAAAD,QAAO,YAAaR,YAAa,aAC5CF,QAASA,QACTY,OAAO,mBAAAC,MAAK,QAAS,YACrBC,MAAM,mBAAAJ,QAAO,OAAQ,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAAO,KACzDK,SAAS,mBAAAL,QAAO,UAAW,CAAC,UAAW,YACvCM,UAAU,mBAAAC,SAAQ,YAAY,GAC9BC,SAAS,mBAAAD,SAAQ,WAAW,GAC5BE,YAAY,mBAAAF,SAAQ,gBAAgB,IAAsB,mBAAKG,UAAAA,UAAW,CAAC,GAAK,KAChFC,WAAW,mBAAAJ,SAAQ,sBAAsB,OAEzC,KAAM,MAAmB,mBAAK,UAAiB,CACjDX,KAAM,qBACNgB,QAAS,2BACTC,QAAS,yCACTC,OAAQ,+IACR1E,SAAU,iFACR,MAAmB,mBAAK,UAAM,CAChC2E,aAA0B,mBAAK,YAAa,CAAC,GAC7CC,aAA0B,mBAAK,YAAa,CAAC,GAC7CC,WAAwB,mBAAK,QAAU,CACrC7E,SAAU,mCAIlB,CAaO,MAAM8E,mBAAqB,KAAmB,mBAAK,OAAAvB,mBAAoB,CAC5EE,iBAAiB,mBAAAC,OAAM,kBAAmB,WAC1CC,cAAc,mBAAAC,QAAO,eAAgBT,eAAgB,SACrDU,WAAW,mBAAAD,QAAO,YAAaR,YAAa,aAC5CF,QAASA,QACTY,OAAO,mBAAAC,MAAK,QAAS,YACrBC,MAAM,mBAAAJ,QAAO,OAAQ,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAAO,KACzDK,SAAS,mBAAAL,QAAO,UAAW,CAAC,UAAW,YACvCM,UAAU,mBAAAC,SAAQ,YAAY,GAC9BC,SAAS,mBAAAD,SAAQ,WAAW,GAC5BE,YAAY,mBAAAF,SAAQ,gBAAuE,IAAsB,mBAAKG,UAAAA,UAAW,CAAC,GAAK,KACvIC,WAAW,mBAAAJ,SAAQ,sBAA2G,KAEhIW,mBAAmBC,UAAY,qBAC/BD,mBAAmBE,WAAa,CAC9BC,YAAa,CACXC,OAAQ,swBAGL,MAAMC,yBAA2B,KAAmB,mBAAK,OAAAnC,yBAA0B,CACxFS,iBAAiB,mBAAAC,OAAM,kBAAmB,WAC1CC,cAAc,mBAAAC,QAAO,eAAgBT,eAAgB,SACrDU,WAAW,mBAAAD,QAAO,YAAaR,YAAa,aAC5CF,QAASA,QACTY,OAAO,mBAAAC,MAAK,QAAS,YACrBC,MAAM,mBAAAJ,QAAO,OAAQ,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAAO,KACzDK,SAAS,mBAAAL,QAAO,UAAW,CAAC,UAAW,YACvCM,UAAU,mBAAAC,SAAQ,YAAY,GAC9BC,SAAS,mBAAAD,SAAQ,WAAW,GAC5BE,YAAY,mBAAAF,SAAQ,gBAAuE,IAAsB,mBAAKG,UAAAA,UAAW,CAAC,GAAK,KACvIC,WAAW,mBAAAJ,SAAQ,sBAA2G,KAEhIgB,yBAAyBJ,UAAY,2BACrCI,yBAAyBH,WAAa,CACpCC,YAAa,CACXC,OAAQ,4wBAGL,MAAME,0BAA4B,KAAmB,mBAAK,QAAArC,0BAA2B,CAC1FU,iBAAiB,mBAAAC,OAAM,kBAAmB,WAC1CC,cAAc,mBAAAC,QAAO,eAAgBT,eAAgB,SACrDU,WAAW,mBAAAD,QAAO,YAAaR,YAAa,aAC5CF,QAASA,QACTY,OAAO,mBAAAC,MAAK,QAAS,YACrBC,MAAM,mBAAAJ,QAAO,OAAQ,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAAO,KACzDK,SAAS,mBAAAL,QAAO,UAAW,CAAC,UAAW,YACvCM,UAAU,mBAAAC,SAAQ,YAAY,GAC9BC,SAAS,mBAAAD,SAAQ,WAAW,GAC5BE,YAAY,mBAAAF,SAAQ,gBAAuE,IAAsB,mBAAKG,UAAAA,UAAW,CAAC,GAAK,KACvIC,WAAW,mBAAAJ,SAAQ,sBAA2G,KAEhIiB,0BAA0BL,UAAY,4BACtCK,0BAA0BJ,WAAa,CACrCC,YAAa,CACXC,OAAQ,6wBAGZ,MAAMG,cAAgB,CACpBhC,MAAO,gCACPd,GAAI,qBACJe,UAAW,OAAAC,mBACX+B,KAAM,CAAC,eACPC,eAAgB,CAAC,qBAAsB,2BAA4B,8BAErEF,cAAcL,WAAaK,cAAcL,YAAc,CAAC,EACxDK,cAAcL,WAAWQ,KAAO,IAC1BH,cAAcL,WAAWQ,MAAQ,CAAC,EACtCC,KA/EF,SAAS,6BAAWhG,MAAQ,CAAC,GAC3B,MACEoD,QAASC,WACPZ,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAClD,OAAOkD,WAAyB,mBAAKA,UAAW,IAC3CrD,MACHO,UAAuB,mBAAK,mCAAmB,IAC1CP,UAEF,oCACP,GAuEA,mC,gdCnLA,uBAA4B,kBAA5B,kBAAqD,a,uECSxCiG,UAAuB,SAAvBA,UAAoBC,MAAmC,IAA7BC,QAAOD,KAAPC,QAAOC,UAAAF,KAAEG,KAAAA,UAAI,IAAAD,WAAQA,UACxD,OACIE,EAAAA,YAAAA,KAAA,OAAKrD,UAAWsD,qBAAGC,uBAAkBH,MAAQG,kBAAa,eAAejG,SAAE4F,SAEnF,E,s2BCbA,wBAA0B,gBCapBM,gBAAkB,mBAClBC,YAAc,gCAEPC,QAAqB,SAArBA,QAAkBT,MAAmD,IAA7CU,IAAGV,KAAHU,IAAKhD,MAAKsC,KAALtC,MAAOiD,WAAUX,KAAVW,WAAUC,UAAAZ,KAAEa,KAAAA,UAAI,IAAAD,UAAG,OAAMA,UACtEE,WAAwBC,EAAAA,MAAAA,UAAS,IAAGC,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAA7BI,KAAIF,WAAA,GAAEG,QAAOH,WAAA,GACpBI,YAAwBL,EAAAA,MAAAA,WAAUJ,YAAWU,YAAAJ,EAAAA,cAAAA,GAAAG,WAAA,GAAtCE,KAAID,WAAA,GAAEE,QAAOF,WAAA,GACdG,OAAkB,SAATX,KACTY,OAASD,OAASjB,gBAAkBC,YA6B1C,OA3BAkB,EAAAA,MAAAA,YAAU,WAKN,IAJA,IAAIC,eAAiBF,OAAOG,KAAKlB,KAE3BmB,WAAa,GAEZF,gBACHE,WAAWC,KAAKH,eAAe,IAC/BA,eAAiBF,OAAOG,KAAKlB,KAGjC,IAAIqB,OAASF,WAAWG,QACpB,SAACC,IAAKC,KAAMC,OACR,IACMC,QADSD,QAAUN,WAAWQ,OAAS,EACpB,GAAK,KAE9B,MAAM,GAANC,OAAUL,KAAGK,OAAGJ,MAAII,OAAGF,QAC3B,GACAZ,OAAS,UAAY,IAGrBA,SACAO,QAAU,KAGdZ,QAAQY,OACZ,GAAG,KAGCQ,EAAAA,YAAAA,MAAA,OAAKxF,UAAWsD,qBAAG,cAAeC,yBAAgBjG,SAAA,CAC7CqD,QAAS0C,EAAAA,YAAAA,KAAA,MAAIrD,UAAWsD,qBAAG,SAAU,aAAahG,SAAEqD,QACpDwD,OACGqB,EAAAA,YAAAA,MAAAC,YAAAA,SAAA,CAAAnI,SAAA,CACKsG,aACGP,EAAAA,YAAAA,KAACqC,OAAAA,KAAI,CAACC,KAAK,UAAUC,QAAS,SAAAA,UAAA,OAAMpB,SAASD,KAAK,EAAEsB,QAAM,EAAAvI,SACrDiH,KAAO,SAAW,aAG1BA,OAAQlB,EAAAA,YAAAA,KAACyC,IAAAA,GAAO,CAACC,SAAS,MAAMpI,KAAMwG,KAAMrE,MAAM,SAKvE,E,i3NChEA,iCAA4B,kBAA5B,4BAAqD,aAArD,kCAA+E,mBAA/E,4BAAyG,aAAzG,kCAAmI,mBAAnI,6BAA8J,cAA9J,iCAAwL,kBAAxL,8BAAmN,eAAnN,8BAA2O,e,2DCmB9NkG,gBAAkD,SAAlDA,gBAA+C/C,MAAoC,IAADgD,aAAAC,cAAAC,cAAAC,cAAAC,cAAAC,cAA7BxF,KAAImC,KAAJnC,KAAMkB,OAAMiB,KAANjB,OAAQ1E,SAAQ2F,KAAR3F,SAC5EiJ,gBAAoBC,EAAAA,UAAAA,eAAc,cAA3BC,WAAwCvC,EAAAA,cAAAA,GAAAqC,eAAA,GAA/B,GAEVG,YAAc5F,KACf6F,QAAQ,qBAAsB,SAC9BA,QAAQ,2BAA4B,SACpCC,cAECC,WAAU,mEAAAtB,OAAsEmB,aAEhFI,MAAQL,UAAYM,kBAAAA,WAAAA,MAAmBA,kBAAAA,WAAAA,YAE7C,OACIvB,EAAAA,YAAAA,MAAA,OAAKxF,UAAWsD,qBAAG,cAAeC,kCAAkBjG,SAAA,EAChD+F,EAAAA,YAAAA,KAACyD,MAAK,CAACE,IAAI,KAAKrB,KAAK,SAAQrI,SACxBwD,OAEJxD,WACG+F,EAAAA,YAAAA,KAAC0D,kBAAAA,WAAAA,KAAe,CACZC,IAAI,IACJrB,KAAK,iBACL3F,UAAWsD,qBAAGC,6BAAW0D,EAAAA,eAAAA,GAAA,GAAK1D,mCAAqBkD,YAAanJ,SAE/DA,YAGTkI,EAAAA,YAAAA,MAAA,OAAKxF,UAAWuD,6BAAajG,SAAA,EACzB+F,EAAAA,YAAAA,KAAA,KACIrD,UAAWsD,qBAAGC,+BAAa0D,EAAAA,eAAAA,GAAA,GACtB1D,mCAAqBvB,SAE1B/B,KACI+B,QACA,uFAEJkF,OAAO,SAAQ5J,SAClB,WAGDkI,EAAAA,YAAAA,MAAA,KAAGxF,UAAWuD,8BAAetD,KAAM4G,WAAYK,OAAO,SAAQ5J,SAAA,EAC1D+F,EAAAA,YAAAA,KAAC8D,WAAAA,EAAU,CAACC,KAAK,uCAAuC,gBAKhE/D,EAAAA,YAAAA,KAACgE,aAAAA,MAAK,CAACC,UAAU,aAAaC,MAAM,SAASvH,UAAWuD,4BAAYjG,UACnD,QAAZ2I,aAAAuB,uBAAO1G,aAAK,IAAAmF,kBAAA,EAAZA,aAAcwB,UAAW,IACtBjC,EAAAA,YAAAA,MAACuB,kBAAAA,WAAAA,KAAe,CAACpB,KAAK,gBAAgB3E,MAAM,YAAW1D,SAAA,CAAC,iBACrC,KACfkI,EAAAA,YAAAA,MAACE,OAAAA,KAAI,CACDzF,KAAI,2DAAAsF,OAAyE,QAAzEW,cAA6DsB,uBAAO1G,aAAK,IAAAoF,mBAAA,EAAZA,cAAcwB,QAC/ER,OAAO,SACPvB,KAAK,YACLgC,WAAW,EACXhH,MAAM,+BACNX,UAAWuD,iCAAiBjG,SAAA,CAEf,QAFe6I,cAE3BqB,uBAAO1G,aAAK,IAAAqF,mBAAA,EAAZA,cAAcsB,SAAU,KACxBG,EAAAA,SAAAA,IAAsB,QAAbxB,cAACoB,uBAAO1G,aAAK,IAAAsF,mBAAA,EAAZA,cAAcqB,SAAU,UAAW,WAAY,eAE7D,MAAM,IAAc,QAAbpB,cAACmB,uBAAO1G,aAAK,IAAAuF,mBAAA,EAAZA,cAAcwB,QAAS,KAC/BD,EAAAA,SAAAA,IAAsB,QAAbtB,cAACkB,uBAAO1G,aAAK,IAAAwF,mBAAA,EAAZA,cAAcuB,QAAS,QAAS,SAAU,iBAM7E,E,o2BCtFA,uBAAuB,aCYlBC,QAAO,SAAPA,SAAO,OAAPA,QAAO,0BAAPA,QAAO,cAAPA,QAAO,oBAAPA,QAAO,sBAAPA,QAAO,0BAAPA,OAAO,EAAPA,SAAO,IAQNC,UAAQC,UAAA,IAAAf,EAAAA,eAAAA,GAAAe,UACTF,QAAQG,YAAc,aAAUhB,EAAAA,eAAAA,GAAAe,UAChCF,QAAQI,MAAQ,aAAUjB,EAAAA,eAAAA,GAAAe,UAC1BF,QAAQK,SAAW,mBAAgBlB,EAAAA,eAAAA,GAAAe,UACnCF,QAAQM,UAAY,eAAYnB,EAAAA,eAAAA,GAAAe,UAChCF,QAAQO,YAAc,gBAAcL,WAY5BM,KAAkB,SAAlBA,KAAerF,MAOrB,IANHhB,YAAWgB,KAAXhB,YACAlF,MAAKkG,KAALlG,MACAwL,QAAOtF,KAAPsF,QACApG,UAASc,KAATd,UAASqG,qBAAAvF,KACTwF,gBAAAA,qBAAe,IAAAD,qBAAGV,QAAQG,YAAWO,qBACrCtG,YAAWe,KAAXf,YAEA6B,WAAgCC,EAAAA,MAAAA,UAASyE,iBAAgBxE,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAAlD2E,SAAQzE,WAAA,GAAE0E,YAAW1E,WAAA,GAEtB2E,cAAeC,EAAAA,MAAAA,cACjB,SAACC,EAACC,OAAsB,IAAlBC,WAAUD,MAAVC,WACFL,YAAYK,WAChB,GACA,IAqCEC,MAAOC,EAAAA,MAAAA,UAAQ,kBAlCF,SAAbC,aACF,MAAO,EACH9F,EAAAA,YAAAA,KAAC+F,YAAAA,IAAG,CAACzI,MAAOoH,SAASD,QAAQG,aAAcpI,GAAIiI,QAAQG,YAAY3K,SAC9D2E,aADmE,eAGxElF,OACIsG,EAAAA,YAAAA,KAAC+F,YAAAA,IAAG,CAACzI,MAAOoH,SAASD,QAAQI,OAAQrI,GAAIiI,QAAQI,MAAM5K,SAClDP,OADuD,SAG5D,KACJwL,SACIlF,EAAAA,YAAAA,KAAC+F,YAAAA,IAAG,CAACzI,MAAOoH,SAASD,QAAQK,UAAWtI,GAAIiI,QAAQK,SAAS7K,SACxDiL,SAD6D,YAGlE,KACJrG,aACImB,EAAAA,YAAAA,KAAC+F,YAAAA,IAAG,CACAzI,MAAOoH,SAASD,QAAQO,aACxBxI,GAAIiI,QAAQO,YAAY/K,SAGvB4E,aAFG,eAIR,KACJC,WACIkB,EAAAA,YAAAA,KAAC+F,YAAAA,IAAG,CAACzI,MAAOoH,SAASD,QAAQM,WAAYvI,GAAIiI,QAAQM,UAAU9K,UAC3D+F,EAAAA,YAAAA,KAAA,OAAKgG,MAAO,CAAEC,UAAW,QAAShM,UAC9B+F,EAAAA,YAAAA,KAACL,UAAS,CAACE,QAASf,eAFwC,aAKpE,MACNoH,OAAOC,MAAAA,eACb,CAE2BL,EAAY,GAAE,CAAClH,YAAalF,MAAOwL,UAE9D,OACIlF,EAAAA,YAAAA,KAACoG,YAAAA,eAAc,CACXzJ,UAAU,cACVgJ,WAAYN,SACZgB,SAAUd,aACVe,mBAAoBpG,uBAAYjG,SAE/B2L,MAGb,E,85CCnGa9B,WAAa,SAAbA,WAAUlE,MAAA,IAAA2G,UAAA3G,KAAMmE,KAAAA,UAAI,IAAAwC,UAAG,UAASA,UAAAC,WAAA5G,KAAE6G,MAAAA,WAAK,IAAAD,WAAG,GAAEA,WAAAE,YAAA9G,KAAE+G,OAAAA,YAAM,IAAAD,YAAG,GAAEA,YAAA,OAClE1G,EAAAA,+CAAAA,KAAA,OAAK4G,MAAM,6BAA6BH,MAAOA,MAAOE,OAAQA,OAAQE,QAAQ,YAAW5M,UACrF+F,EAAAA,+CAAAA,KAAA,QACI8G,SAAS,UACTC,SAAS,UACTC,EAAE,uxBACFjD,KAAMA,QAER,EACRD,WAAAmD,aAAA,iP,izCCKWjK,2BAA4BkK,EAAAA,mCAAAA,aAIrC,SAAAtH,KAOIuH,KAAG,IAAAC,qBAAAxH,KALClC,gBAAAA,qBAAe,IAAA0J,qBAZE,UAYqBA,qBAAAC,kBAAAzH,KACtChC,aAAAA,kBAAY,IAAAyJ,kBAZM,QAYkBA,kBAAAC,eAAA1H,KACpC9B,UAAAA,eAAS,IAAAwJ,eAAG,YAAWA,eACpBC,WAASC,EAAAA,qLAAAA,GAAA5H,KAAA6H,WAAA,OAIhBzH,EAAAA,+CAAAA,KAAC0H,4EAAAA,qBAAmBC,EAAAA,2KAAAA,IAAAA,EAAAA,2KAAAA,GAAA,GACZJ,WAAS,IACbK,WAAY,CACRlK,gBAAAA,gBACAE,aAAAA,aACAE,UAAAA,WAEJ+J,MAAOC,oCAAAA,EACPX,IAAKA,MACP,I,4pSCtBGlK,0BAA2BiK,EAAAA,mCAAAA,aACpC,SAAAtH,KAOIuH,KAAG,IAAAC,qBAAAxH,KALClC,gBAAAA,qBAAe,IAAA0J,qBATE,UASqBA,qBAAAC,kBAAAzH,KACtChC,aAAAA,kBAAY,IAAAyJ,kBATM,QASkBA,kBAAAC,eAAA1H,KACpC9B,UAAAA,eAAS,IAAAwJ,eAAG,YAAWA,eACpBC,WAASC,EAAAA,qLAAAA,GAAA5H,KAAA6H,WAAA,OAIhBzH,EAAAA,+CAAAA,KAAC+H,2EAAAA,oBAAkBJ,EAAAA,2KAAAA,IAAAA,EAAAA,2KAAAA,GAAA,GACXJ,WAAS,IACbK,WAAY,CACRlK,gBAAAA,gBACAE,aAAAA,aACAE,UAAAA,WAEJ+J,MAAOC,oCAAAA,EACPX,IAAKA,MACP,I,q+TCZGjK,8BAA+BgK,EAAAA,mCAAAA,aAIxC,SAAAtH,KAUIuH,KACE,IATEa,YAAWpI,KAAXoI,YACAC,SAAQrI,KAARqI,SACAC,OAAMtI,KAANsI,OACAC,UAASvI,KAATuI,UACAC,iBAAgBxI,KAAhBwI,iBAAgBC,gBAAAzI,KAChB0I,WAAAA,gBAAU,IAAAD,gBAAG,KAAIA,gBACdd,WAASC,EAAAA,qLAAAA,GAAA5H,KAAA6H,WAIVc,MAAK,eAAArG,OAAkBoG,WAAU,OACvCpF,gBAAoBC,EAAAA,yDAAAA,eAAcoF,OAElC,OAFwC1H,EAAAA,2KAAAA,GAAAqC,eAAA,GAAxB,IAGZlD,EAAAA,+CAAAA,KAAChD,gDAAAA,GAAyB2K,EAAAA,2KAAAA,GAAA,CACtBR,IAAKA,IACLa,YAAaA,YACbC,SAAUA,UACNV,aAGRvH,EAAAA,+CAAAA,KAAC/C,+CAAAA,GAAwB0K,EAAAA,2KAAAA,GAAA,CACrBR,IAAKA,IACLe,OAAQA,OACRC,UAAWA,UACXC,iBAAkBA,kBACdb,WAGhB,I,4pTCzDJ,2BAAgC,sBAAhC,6BAAwE,wBAAxE,6BAAkH,wBAAlH,kBAAiJ,a,+NCmBpIM,MAAQ,SAARA,MAAKjI,MAaC,IAAD4I,gBAAA5I,KAZd6I,WAAAA,gBAAU,IAAAD,gBAAG,IAAGA,gBAAAE,mBAAA9I,KAChB+I,cAAAA,mBAAa,IAAAD,mBAAG,UAASA,mBACzBhL,gBAAekC,KAAflC,gBACAE,aAAYgC,KAAZhC,aACAE,UAAS8B,KAAT9B,UACAC,MAAK6B,KAAL7B,MACAmD,KAAItB,KAAJsB,KACA0H,YAAWhJ,KAAXgJ,YACAC,WAAUjJ,KAAViJ,WACAlM,UAASiD,KAATjD,UAASmM,eAAAlJ,KACTpB,UAAAA,eAAS,IAAAsK,gBAAOA,eACbvB,WAASC,EAAAA,wBAAAA,GAAA5H,KAAA6H,WAENsB,MAAoCC,EAAAA,qBAAAA,SAAQL,cAAeF,YAE3DQ,aAAWtB,EAAAA,cAAAA,IAAAA,EAAAA,cAAAA,GAAA,GACVJ,WACAsB,YAGP,OACI7I,EAAAA,YAAAA,KAACkJ,OAAAA,cAAYvB,EAAAA,cAAAA,IAAAA,EAAAA,cAAAA,GAAA,GACLsB,aAAW,IACfL,aACIzG,EAAAA,YAAAA,MAACgH,MAAAA,SAAQ,CAAAlP,SAAA,CACJ2O,cACG5I,EAAAA,YAAAA,KAAA,QACIrD,UAAWsD,qBAAGC,8BAAsB0D,EAAAA,eAAAA,GAAA,GAC/B1D,6BAAyB1B,WAA+B,YAAlBmK,gBACxC1O,SAEF2O,eAIPpK,WAA+B,YAAlBmK,iBACX3I,EAAAA,YAAAA,KAAA,QACIrD,UAAWsD,qBACPC,2BACkB,YAAlByI,eAA+BzH,MAAQhB,mBACzCjG,UAEF+F,EAAAA,YAAAA,KAAC+I,KAAI,CAAC,eAAa,mCAKnCK,OAAO,EACPnL,KAAMwK,WACN/K,gBAAiBA,gBACjBE,aAAcA,aACdE,UAAWA,UACXnB,UAAWA,UAAU1C,SAEF,YAAlB0O,eAA+B5K,QAG5C,E","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/custom-picker-button/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/field/index.module.css?c5db","webpack://@alfalab/core-components/./packages/custom-picker-button/src/field/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"примеры\",\n      children: \"Примеры\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const options = [{ key: 'Car' }, { key: 'Star' }, { key: 'Flower' }, { key: 'Banknote' }];\\n\\nconst optionsWithIcons = [\\n    { key: 'Car', icon: CarMIcon },\\n    { key: 'Star', icon: StarMIcon },\\n    { key: 'Flower', icon: FlowerMMIcon },\\n    { key: 'Banknote', icon: BanknoteMIcon },\\n];\\n\\nrender(\\n    <Space direction='horizontal'>\\n        <CustomPickerButtonResponsive backgroundColor='linear-gradient(264.15deg, #FF42CA 0%, #FF8A00 100%)' options={optionsWithIcons} label='Picker button' />\\n        <CustomPickerButtonResponsive backgroundColor='linear-gradient(264.15deg, #FF42CA 0%, #FF8A00 100%)' options={options} variant='compact' />\\n    </Space>,\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент представляет из себя \", _jsx(_components.a, {\n        href: \"/docs/components-select--docs\",\n        children: \"Select\"\n      }), \" с \", _jsx(_components.a, {\n        href: \"/docs/components-custombutton--docs\",\n        children: \"CustomButton\"\n      }), \" вместо стандартного \", _jsx(_components.code, {\n        children: \"field\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CustomPickerButtonDesktop} from '../Component.desktop';\nimport {CustomPickerButtonMobile} from '../Component.mobile';\nimport {CustomPickerButtonResponsive} from '../Component.responsive';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { CustomPickerButtonResponsive } from '@alfalab/core-components/custom-picker-button/responsive'\\nimport { CustomPickerButtonDesktop } from '@alfalab/core-components/custom-picker-button/desktop';\\nimport { CustomPickerButtonMobile } from '@alfalab/core-components/custom-picker-button/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        CustomPickerButtonDesktop,\n        CustomPickerButtonMobile,\n        CustomPickerButtonResponsive\n      }\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, boolean, select, color } from '@storybook/addon-knobs';\nimport { CarMIcon } from '@alfalab/icons-glyph/CarMIcon';\nimport { StarMIcon } from '@alfalab/icons-glyph/StarMIcon';\nimport { CardTransferMIcon } from '@alfalab/icons-glyph/CardTransferMIcon';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { CustomPickerButton } from '@alfalab/core-components-custom-picker-button';\nimport { CustomPickerButtonMobile } from '@alfalab/core-components-custom-picker-button/mobile';\nimport { CustomPickerButtonDesktop } from '@alfalab/core-components-custom-picker-button/desktop';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const options = [{\n  key: 'Заказать карту'\n}, {\n  key: 'Выписка по счёту'\n}, {\n  key: 'Выпустить карту'\n}, {\n  key: 'Скопировать реквизиты'\n}];\nexport const CONTENT_COLORS = ['white', 'black'];\nexport const STATE_TYPES = ['darkening', 'lightening'];\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/CustomPickerButton\",\n      component: CustomPickerButton,\n      id: \"CustomPickerButton\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"CustomPickerButton\",\n      children: /*#__PURE__*/_jsx(CustomPickerButton, {\n        backgroundColor: color('backgroundColor', '#FF45C3'),\n        contentColor: select('contentColor', CONTENT_COLORS, 'white'),\n        stateType: select('stateType', STATE_TYPES, 'darkening'),\n        options: options,\n        label: text('label', 'Действие'),\n        size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm'),\n        variant: select('variant', ['default', 'compact']),\n        disabled: boolean('disabled', false),\n        loading: boolean('loading', false),\n        leftAddons: boolean('Иконка слева', false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n        showArrow: boolean('Показывать стрелку', true)\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"CustomPickerButtonMobile\",\n      children: /*#__PURE__*/_jsx(CustomPickerButtonMobile, {\n        backgroundColor: color('backgroundColor', '#FF45C3'),\n        contentColor: select('contentColor', CONTENT_COLORS, 'white'),\n        stateType: select('stateType', STATE_TYPES, 'darkening'),\n        options: options,\n        label: text('label', 'Действие'),\n        size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm'),\n        variant: select('variant', ['default', 'compact']),\n        disabled: boolean('disabled', false),\n        loading: boolean('loading', false),\n        leftAddons: boolean('Иконка слева', false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n        showArrow: boolean('Показывать стрелку', true)\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"CustomPickerButtonDesktop\",\n      children: /*#__PURE__*/_jsx(CustomPickerButtonDesktop, {\n        backgroundColor: color('backgroundColor', '#FF45C3'),\n        contentColor: select('contentColor', CONTENT_COLORS, 'white'),\n        stateType: select('stateType', STATE_TYPES, 'darkening'),\n        options: options,\n        label: text('label', 'Действие'),\n        size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm'),\n        variant: select('variant', ['default', 'compact']),\n        disabled: boolean('disabled', false),\n        loading: boolean('loading', false),\n        leftAddons: boolean('Иконка слева', false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n        showArrow: boolean('Показывать стрелку', true)\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"CustomPickerButton\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/picker-button\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?type=design&node-id=86259%3A120043&t=CXazzkYWpueZquEy-1\",\n      children: \"\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0434\\u043B\\u044F \\u0441\\u043A\\u0440\\u044B\\u0442\\u0438\\u044F \\u0440\\u0435\\u0434\\u043A\\u0438\\u0445 \\u0438\\u043B\\u0438 \\u043E\\u0434\\u0438\\u043D\\u0430\\u043A\\u043E\\u0432\\u044B\\u0445 \\u043F\\u043E \\u043A\\u043E\\u043D\\u0442\\u0435\\u043A\\u0441\\u0442\\u0443 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      development: /*#__PURE__*/_jsx(Development, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const customPickerButton = () => /*#__PURE__*/_jsx(CustomPickerButton, {\n  backgroundColor: color(\"backgroundColor\", \"#FF45C3\"),\n  contentColor: select(\"contentColor\", CONTENT_COLORS, \"white\"),\n  stateType: select(\"stateType\", STATE_TYPES, \"darkening\"),\n  options: options,\n  label: text(\"label\", \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"),\n  size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\"),\n  variant: select(\"variant\", [\"default\", \"compact\"]),\n  disabled: boolean(\"disabled\", false),\n  loading: boolean(\"loading\", false),\n  leftAddons: boolean(\"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\", false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n  showArrow: boolean(\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0443\", true)\n});\ncustomPickerButton.storyName = 'CustomPickerButton';\ncustomPickerButton.parameters = {\n  storySource: {\n    source: '<CustomPickerButton backgroundColor={color(\\\"backgroundColor\\\", \\\"#FF45C3\\\")} contentColor={select(\\\"contentColor\\\", CONTENT_COLORS, \\\"white\\\")} stateType={select(\\\"stateType\\\", STATE_TYPES, \\\"darkening\\\")} options={options} label={text(\\\"label\\\", \\\"\\\\u0414\\\\u0435\\\\u0439\\\\u0441\\\\u0442\\\\u0432\\\\u0438\\\\u0435\\\")} size={select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"compact\\\"])} disabled={boolean(\\\"disabled\\\", false)} loading={boolean(\\\"loading\\\", false)} leftAddons={boolean(\\\"\\\\u0418\\\\u043A\\\\u043E\\\\u043D\\\\u043A\\\\u0430 \\\\u0441\\\\u043B\\\\u0435\\\\u0432\\\\u0430\\\", false) ? <StarMIcon /> : null} showArrow={boolean(\\\"\\\\u041F\\\\u043E\\\\u043A\\\\u0430\\\\u0437\\\\u044B\\\\u0432\\\\u0430\\\\u0442\\\\u044C \\\\u0441\\\\u0442\\\\u0440\\\\u0435\\\\u043B\\\\u043A\\\\u0443\\\", true)} />'\n  }\n};\nexport const customPickerButtonMobile = () => /*#__PURE__*/_jsx(CustomPickerButtonMobile, {\n  backgroundColor: color(\"backgroundColor\", \"#FF45C3\"),\n  contentColor: select(\"contentColor\", CONTENT_COLORS, \"white\"),\n  stateType: select(\"stateType\", STATE_TYPES, \"darkening\"),\n  options: options,\n  label: text(\"label\", \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"),\n  size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\"),\n  variant: select(\"variant\", [\"default\", \"compact\"]),\n  disabled: boolean(\"disabled\", false),\n  loading: boolean(\"loading\", false),\n  leftAddons: boolean(\"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\", false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n  showArrow: boolean(\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0443\", true)\n});\ncustomPickerButtonMobile.storyName = 'CustomPickerButtonMobile';\ncustomPickerButtonMobile.parameters = {\n  storySource: {\n    source: '<CustomPickerButtonMobile backgroundColor={color(\\\"backgroundColor\\\", \\\"#FF45C3\\\")} contentColor={select(\\\"contentColor\\\", CONTENT_COLORS, \\\"white\\\")} stateType={select(\\\"stateType\\\", STATE_TYPES, \\\"darkening\\\")} options={options} label={text(\\\"label\\\", \\\"\\\\u0414\\\\u0435\\\\u0439\\\\u0441\\\\u0442\\\\u0432\\\\u0438\\\\u0435\\\")} size={select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"compact\\\"])} disabled={boolean(\\\"disabled\\\", false)} loading={boolean(\\\"loading\\\", false)} leftAddons={boolean(\\\"\\\\u0418\\\\u043A\\\\u043E\\\\u043D\\\\u043A\\\\u0430 \\\\u0441\\\\u043B\\\\u0435\\\\u0432\\\\u0430\\\", false) ? <StarMIcon /> : null} showArrow={boolean(\\\"\\\\u041F\\\\u043E\\\\u043A\\\\u0430\\\\u0437\\\\u044B\\\\u0432\\\\u0430\\\\u0442\\\\u044C \\\\u0441\\\\u0442\\\\u0440\\\\u0435\\\\u043B\\\\u043A\\\\u0443\\\", true)} />'\n  }\n};\nexport const customPickerButtonDesktop = () => /*#__PURE__*/_jsx(CustomPickerButtonDesktop, {\n  backgroundColor: color(\"backgroundColor\", \"#FF45C3\"),\n  contentColor: select(\"contentColor\", CONTENT_COLORS, \"white\"),\n  stateType: select(\"stateType\", STATE_TYPES, \"darkening\"),\n  options: options,\n  label: text(\"label\", \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"),\n  size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\"),\n  variant: select(\"variant\", [\"default\", \"compact\"]),\n  disabled: boolean(\"disabled\", false),\n  loading: boolean(\"loading\", false),\n  leftAddons: boolean(\"\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430 \\u0441\\u043B\\u0435\\u0432\\u0430\", false) ? /*#__PURE__*/_jsx(StarMIcon, {}) : null,\n  showArrow: boolean(\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0435\\u043B\\u043A\\u0443\", true)\n});\ncustomPickerButtonDesktop.storyName = 'CustomPickerButtonDesktop';\ncustomPickerButtonDesktop.parameters = {\n  storySource: {\n    source: '<CustomPickerButtonDesktop backgroundColor={color(\\\"backgroundColor\\\", \\\"#FF45C3\\\")} contentColor={select(\\\"contentColor\\\", CONTENT_COLORS, \\\"white\\\")} stateType={select(\\\"stateType\\\", STATE_TYPES, \\\"darkening\\\")} options={options} label={text(\\\"label\\\", \\\"\\\\u0414\\\\u0435\\\\u0439\\\\u0441\\\\u0442\\\\u0432\\\\u0438\\\\u0435\\\")} size={select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"compact\\\"])} disabled={boolean(\\\"disabled\\\", false)} loading={boolean(\\\"loading\\\", false)} leftAddons={boolean(\\\"\\\\u0418\\\\u043A\\\\u043E\\\\u043D\\\\u043A\\\\u0430 \\\\u0441\\\\u043B\\\\u0435\\\\u0432\\\\u0430\\\", false) ? <StarMIcon /> : null} showArrow={boolean(\\\"\\\\u041F\\\\u043E\\\\u043A\\\\u0430\\\\u0437\\\\u044B\\\\u0432\\\\u0430\\\\u0442\\\\u044C \\\\u0441\\\\u0442\\\\u0440\\\\u0435\\\\u043B\\\\u043A\\\\u0443\\\", true)} />'\n  }\n};\nconst componentMeta = {\n  title: 'Components/CustomPickerButton',\n  id: 'CustomPickerButton',\n  component: CustomPickerButton,\n  tags: ['stories-mdx'],\n  includeStories: [\"customPickerButton\", \"customPickerButtonMobile\", \"customPickerButtonDesktop\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import React, { forwardRef } from 'react';\n\nimport { CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport {\n    PickerButtonDesktop,\n    PickerButtonDesktopProps,\n} from '@alfalab/core-components-picker-button/desktop';\n\nimport { Field as DefaultField } from './field';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type CustomPickerButtonDesktopProps = Omit<PickerButtonDesktopProps, 'view' | 'colors'> &\n    Pick<CustomButtonProps, 'backgroundColor' | 'contentColor' | 'stateType'>;\n\nexport const CustomPickerButtonDesktop = forwardRef<\n    HTMLInputElement,\n    CustomPickerButtonDesktopProps\n>(\n    (\n        {\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => (\n        <PickerButtonDesktop\n            {...restProps}\n            fieldProps={{\n                backgroundColor,\n                contentColor,\n                stateType,\n            }}\n            Field={DefaultField}\n            ref={ref}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\nimport { CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport {\n    PickerButtonMobile,\n    PickerButtonMobileProps,\n} from '@alfalab/core-components-picker-button/mobile';\n\nimport { Field as DefaultField } from './field';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type CustomPickerButtonMobileProps = Omit<PickerButtonMobileProps, 'view' | 'colors'> &\n    Pick<CustomButtonProps, 'backgroundColor' | 'contentColor' | 'stateType'>;\n\nexport const CustomPickerButtonMobile = forwardRef<HTMLInputElement, CustomPickerButtonMobileProps>(\n    (\n        {\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => (\n        <PickerButtonMobile\n            {...restProps}\n            fieldProps={{\n                backgroundColor,\n                contentColor,\n                stateType,\n            }}\n            Field={DefaultField}\n            ref={ref}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { PickerButtonDesktopProps } from '@alfalab/core-components-picker-button';\nimport { AdditionalMobileProps } from '@alfalab/core-components-select';\n\nimport { CustomPickerButtonDesktop, CustomPickerButtonDesktopProps } from './Component.desktop';\nimport { CustomPickerButtonMobile } from './Component.mobile';\n\nexport type PickerButtonMatchMedia = 'desktop' | 'mobile';\n\nexport type CustomPickerButtonResponsiveProps = CustomPickerButtonDesktopProps &\n    AdditionalMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport const CustomPickerButtonResponsive = forwardRef<\n    HTMLInputElement,\n    CustomPickerButtonResponsiveProps\n>(\n    (\n        {\n            OptionsList,\n            onScroll,\n            footer,\n            swipeable,\n            bottomSheetProps,\n            breakpoint = 1024,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const query = `(min-width: ${breakpoint}px)`;\n        const [isDesktop] = useMatchMedia(query);\n\n        return isDesktop ? (\n            <CustomPickerButtonDesktop\n                ref={ref}\n                OptionsList={OptionsList}\n                onScroll={onScroll}\n                {...restProps}\n            />\n        ) : (\n            <CustomPickerButtonMobile\n                ref={ref}\n                footer={footer}\n                swipeable={swipeable}\n                bottomSheetProps={bottomSheetProps}\n                {...restProps}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"iconContainer\":\"iconContainer_W__rv\",\"addonsContainer\":\"addonsContainer_htSPQ\",\"showControlIcon\":\"showControlIcon_GlNvQ\",\"open\":\"open_NAwCF\"};","import React, { ButtonHTMLAttributes, FC, Fragment, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { CustomButton, CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport {\n    getIcon,\n    PickerButtonSize,\n    PickerButtonVariant,\n} from '@alfalab/core-components-picker-button';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select/src/typings';\n\nimport styles from './index.module.css';\n\ntype FieldProps = Pick<BaseFieldProps, 'open' | 'label' | 'innerProps'> &\n    CustomButtonProps & {\n        buttonSize?: PickerButtonSize;\n        buttonVariant?: PickerButtonVariant;\n        showArrow?: boolean;\n    };\n\nexport const Field = ({\n    buttonSize = 'm',\n    buttonVariant = 'default',\n    backgroundColor,\n    contentColor,\n    stateType,\n    label,\n    open,\n    rightAddons,\n    innerProps,\n    className,\n    showArrow = true,\n    ...restProps\n}: FieldProps) => {\n    const Icon: FC<SVGProps<SVGSVGElement>> = getIcon(buttonVariant, buttonSize);\n\n    const buttonProps = {\n        ...restProps,\n        ...innerProps,\n    } as ButtonHTMLAttributes<HTMLButtonElement>;\n\n    return (\n        <CustomButton\n            {...buttonProps}\n            rightAddons={\n                <Fragment>\n                    {rightAddons && (\n                        <span\n                            className={cn(styles.addonsContainer, {\n                                [styles.showControlIcon]: showArrow || buttonVariant === 'compact',\n                            })}\n                        >\n                            {rightAddons}\n                        </span>\n                    )}\n\n                    {(showArrow || buttonVariant === 'compact') && (\n                        <span\n                            className={cn(\n                                styles.iconContainer,\n                                buttonVariant !== 'compact' && open && styles.open,\n                            )}\n                        >\n                            <Icon data-test-id='custom-picker-button-icon' />\n                        </span>\n                    )}\n                </Fragment>\n            }\n            block={true}\n            size={buttonSize}\n            backgroundColor={backgroundColor}\n            contentColor={contentColor}\n            stateType={stateType}\n            className={className}\n        >\n            {buttonVariant !== 'compact' && label}\n        </CustomButton>\n    );\n};\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","pre","p","id","live","mobileHeight","className","href","MDXContent","wrapper","MDXLayout","CustomPickerButtonDesktop","CustomPickerButtonMobile","CustomPickerButtonResponsive","options","CONTENT_COLORS","STATE_TYPES","title","component","CustomPickerButton","name","backgroundColor","color","contentColor","select","stateType","label","text","size","variant","disabled","boolean","loading","leftAddons","StarMIcon","showArrow","version","package","design","description","development","changelog","customPickerButton","storyName","parameters","storySource","source","customPickerButtonMobile","customPickerButtonDesktop","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","forwardRef","ref","_ref$backgroundColor","_ref$contentColor","_ref$stateType","restProps","_objectWithoutProperties","_excluded","PickerButtonDesktop","_objectSpread","fieldProps","Field","DefaultField","PickerButtonMobile","OptionsList","onScroll","footer","swipeable","bottomSheetProps","_ref$breakpoint","breakpoint","query","_ref$buttonSize","buttonSize","_ref$buttonVariant","buttonVariant","rightAddons","innerProps","_ref$showArrow","Icon","getIcon","buttonProps","CustomButton","Fragment","block"],"sourceRoot":""}