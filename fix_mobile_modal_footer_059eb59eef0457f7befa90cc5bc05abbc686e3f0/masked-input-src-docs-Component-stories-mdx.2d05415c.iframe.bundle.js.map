{"version":3,"file":"masked-input-src-docs-Component-stories-mdx.2d05415c.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/masked-input/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/masked-input/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/masked-input/src/index.module.css?83b5","webpack://@alfalab/core-components/./packages/masked-input/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Компонент текстового поля для ввода текста по указанной маске.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"☝️ В приложениях Клика используйте обёртку \", _jsx(_components.a, {\n        href: \"http://digital/demo/newclick-composite-components/master/?path=/docs/form-maskedinput--basic\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"newclick-composite-components/masked-input\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const masks = {\\n    // prettier-ignore\\n    phone: ['+', /\\\\d/, ' ', '(', /\\\\d/, /\\\\d/, /\\\\d/, ')', ' ', /\\\\d/, /\\\\d/, /\\\\d/, '-', /\\\\d/, /\\\\d/, '-', /\\\\d/, /\\\\d/],\\n    // prettier-ignore\\n    card: [/\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/, ' ', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/, ' ', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/, ' ', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/]\\n};\\n\\nconst placeholders = {\\n    phone: '+7 (000) 000-00-00',\\n    card: '0000 0000 0000 0000',\\n};\\n\\nrender(\\n    <div style={{ width: '240px' }}>\\n        <MaskedInput mask={masks.phone} placeholder={placeholders.phone} block={true} />\\n        <br />\\n        <br />\\n        <MaskedInput mask={masks.card} placeholder={placeholders.card} block={true} />\\n    </div>,\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"controlled-way\",\n      children: \"Controlled-way\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент может быть использован как controlled с помощью \", _jsx(_components.code, {\n        children: \"onChange\"\n      }), \" и \", _jsx(_components.code, {\n        children: \"value\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    // prettier-ignore\\n    const mask = [/\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/, ' ', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/, ' ', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/, ' ', /\\\\d/, /\\\\d/, /\\\\d/, /\\\\d/];\\n\\n    const [value, setValue] = React.useState('');\\n\\n    const handleChange = React.useCallback(event => {\\n        setValue(event.target.value);\\n    }, []);\\n\\n    return (\\n        <Space>\\n            <div style={{ width: '240px' }}>\\n                <MaskedInput\\n                    value={value}\\n                    onChange={handleChange}\\n                    mask={mask}\\n                    placeholder='0000 0000 0000 0000'\\n                    block={true}\\n                />\\n            </div>\\n\\n            <Button size='xs' onClick={() => setValue('5555111122224444')}>\\n                Установить неотформатированный номер\\n            </Button>\\n        </Space>\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, ArgsTable, Story, Markdown } from '@storybook/addon-docs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { MaskedInput } from '@alfalab/core-components-masked-input';\nimport { MaskedInput as MaskedInputTS } from '../Component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const mask = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/MaskedInput\",\n      component: MaskedInput,\n      id: \"MaskedInput\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"MaskedInput\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          width: '240px'\n        },\n        children: /*#__PURE__*/_jsx(MaskedInput, {\n          mask: mask,\n          placeholder: \"0000 0000 0000 0000\",\n          block: true\n        })\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"MaskedInput\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/masked-input\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { MaskedInput } from '@alfalab/core-components/masked-input';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: MaskedInputTS\n      }),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const maskedInput = () => /*#__PURE__*/_jsx(\"div\", {\n  style: {\n    width: \"240px\"\n  },\n  children: /*#__PURE__*/_jsx(MaskedInput, {\n    mask: mask,\n    placeholder: \"0000 0000 0000 0000\",\n    block: true\n  })\n});\nmaskedInput.storyName = 'MaskedInput';\nmaskedInput.parameters = {\n  storySource: {\n    source: '<div style={{\\n  width: \\\"240px\\\"\\n}}><MaskedInput mask={mask} placeholder=\\\"0000 0000 0000 0000\\\" block={true} /></div>'\n  }\n};\nconst componentMeta = {\n  title: 'Components/MaskedInput',\n  id: 'MaskedInput',\n  component: MaskedInput,\n  tags: ['stories-mdx'],\n  includeStories: [\"maskedInput\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"textHidden\":\"textHidden_XBnIp\"};","import React, { ChangeEvent, MouseEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport { createTextMaskInputElement, TextMaskInputElement } from 'text-mask-core';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport styles from './index.module.css';\n\n// TODO: заставить rollup добавлять кастомные декларации в сборку\ntype Mask = Array<string | RegExp>;\ntype TextMaskConfig = {\n    currentCaretPosition: number;\n    rawValue: string;\n    previousConformedValue: string;\n    mask?: Mask | ((rawValue: string) => Mask);\n    guide?: boolean;\n    showMask?: boolean;\n    placeholderChar?: string;\n    keepCharPositions?: boolean;\n    pipe?: (\n        conformedValue: string,\n        config: TextMaskConfig,\n    ) => false | string | { value: string; indexesOfPipedChars: number[] };\n};\n\nexport type MaskedInputProps = InputProps & {\n    /**\n     * Маска для поля ввода\n     * https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#mask-array\n     */\n    mask?: TextMaskConfig['mask'];\n\n    /**\n     * Управляет поведением компонента при удалении символов\n     */\n    keepCharPositions?: TextMaskConfig['keepCharPositions'];\n\n    /**\n     * Дает возможность изменить значение поля перед рендером\n     */\n    onBeforeDisplay?: TextMaskConfig['pipe'];\n};\n\n// Символ плейсхолдера не может входить в маску, поэтому вместо пробела используется \\u2000\nexport const PLACEHOLDER_CHAR = '\\u2000';\n\nexport const MaskedInput = React.forwardRef<HTMLInputElement, MaskedInputProps>(\n    (\n        {\n            mask,\n            keepCharPositions = false,\n            value,\n            defaultValue,\n            className,\n            onBeforeDisplay,\n            onChange,\n            onClear,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n        const textMask = useRef<TextMaskInputElement | null>(null);\n\n        const [inputValue, setInputValue] = useState(value || defaultValue || '');\n        // Не показываем сырое значение до применения маски\n        const [textHidden, setTextHidden] = useState(true);\n\n        const update = useCallback((newValue = '') => {\n            if (textMask.current && inputRef.current) {\n                try {\n                    textMask.current.update(newValue);\n                } catch (e) {\n                    // ignore masking errors\n                }\n\n                setInputValue(inputRef.current.value);\n            }\n        }, []);\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                update(event.target.value);\n\n                if (onChange) {\n                    onChange(event, {\n                        value: event.target.value,\n                    });\n                }\n            },\n            [onChange, update],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                update('');\n                if (onClear) onClear(event);\n            },\n            [onClear, update],\n        );\n\n        useEffect(() => {\n            if (inputRef.current) {\n                textMask.current = createTextMaskInputElement({\n                    mask,\n                    inputElement: inputRef.current,\n                    pipe: onBeforeDisplay,\n                    guide: false,\n                    keepCharPositions,\n                    showMask: false,\n                    placeholderChar: PLACEHOLDER_CHAR,\n                    rawValue: '',\n                    currentCaretPosition: 0,\n                    previousConformedValue: '',\n                });\n            }\n        }, [onBeforeDisplay, mask, keepCharPositions]);\n\n        useEffect(() => {\n            update(value || defaultValue);\n        }, [value, update, defaultValue]);\n\n        useEffect(() => {\n            setTextHidden(false);\n        }, []);\n\n        return (\n            <Input\n                {...restProps}\n                className={cn(className, { [styles.textHidden]: textHidden })}\n                value={inputValue}\n                onChange={handleInputChange}\n                onClear={handleClear}\n                ref={mergeRefs([ref, inputRef])}\n            />\n        );\n    },\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","pre","h3","href","target","rel","live","className","id","MDXContent","wrapper","MDXLayout","mask","title","component","MaskedInput","name","style","width","placeholder","block","version","package","description","of","changelog","maskedInput","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","PLACEHOLDER_CHAR","React","ref","_ref$keepCharPosition","keepCharPositions","defaultValue","onBeforeDisplay","onClear","restProps","_objectWithoutProperties","_excluded","inputRef","useRef","textMask","inputValue","setInputValue","textHidden","setTextHidden","update","newValue","undefined","current","e","handleInputChange","event","handleClear","createTextMaskInputElement","inputElement","pipe","guide","showMask","placeholderChar","rawValue","currentCaretPosition","previousConformedValue","Input","_objectSpread","mergeRefs"],"sourceRoot":""}