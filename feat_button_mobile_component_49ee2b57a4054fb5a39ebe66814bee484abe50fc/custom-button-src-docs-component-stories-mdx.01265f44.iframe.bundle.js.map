{"version":3,"file":"custom-button-src-docs-component-stories-mdx.01265f44.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/custom-button/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/custom-button/src/index.module.css?ccab","webpack://@alfalab/core-components/./packages/custom-button/src/docs/component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/custom-button/src/index.module.css?0c1d","webpack://@alfalab/core-components/./packages/custom-button/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Container, Row, Col} from 'storybook/blocks';\nimport {CustomButton} from '@alfalab/core-components-custom-button';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Компонент используется при необходимости отобразить кнопку с кастомным цветом фона.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Container>\\n    <Row align='middle'>\\n        <Col>\\n            <CustomButton backgroundColor='#FF45C3'>Кнопка</CustomButton>\\n        </Col>\\n        <Col>\\n            <CustomButton backgroundColor='#4AF2FD' contentColor='black'>\\n                Кнопка\\n            </CustomButton>\\n        </Col>\\n    </Row>\\n</Container>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"виды-кнопок\",\n      children: \"Виды кнопок\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Размеры и отступы идентичны компоненту \", _jsx(_components.a, {\n        href: \"?path=/docs/components-button--docs\",\n        children: \"Button\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"На данный момент поддерживается только \", _jsx(_components.code, {\n        children: \"view Primary\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const SIZES = ['xxs', 'xs', 's', 'm', 'l', 'xl'];\\n\\nrender(\\n    <Container>\\n        <Row>\\n            {SIZES.map((size) => (\\n                <Col key={size}>\\n                    <CustomButton size={size}>Кнопка</CustomButton>\\n                </Col>\\n            ))}\\n        </Row>\\n    </Container>,\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"цвет-фона-и-контента\",\n      children: \"Цвет фона и контента\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Кнопка может принимать пропс \", _jsx(_components.code, {\n          children: \"backgroundColor\"\n        }), \" отвечающий за цвет фона.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Кнопка может принимать пропс \", _jsx(_components.code, {\n          children: \"contentColor = white | black\"\n        }), \" отвечающий за цвет контента.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Кнопка может принимать пропс \", _jsx(_components.code, {\n          children: \"stateType = darkening | lightening\"\n        }), \" отвечающий за затемнение / осветление цвета фона.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const WHITE_CONTENT_COLORS = [\\n    '#FF8510',\\n    'linear-gradient(264.15deg, #FF42CA 0%, #FF8A00 100%)',\\n    '#FF45C3',\\n];\\nconst BLACK_CONTENT_COLORS = [\\n    '#4AF2FD',\\n    'linear-gradient(80.38deg, #4AF2FD 0%, #4AFD9C 100%)',\\n    '#4AFDA2',\\n];\\nconst STATE_TYPES = ['darkening', 'lightening'];\\n\\nrender(\\n    <Container>\\n        <Row>\\n            {WHITE_CONTENT_COLORS.map((color) => (\\n                <Col key={color}>\\n                    <CustomButton backgroundColor={color}>Кнопка</CustomButton>\\n                </Col>\\n            ))}\\n        </Row>\\n        <Row>\\n            {BLACK_CONTENT_COLORS.map((color) => (\\n                <Col key={color}>\\n                    <CustomButton backgroundColor={color} contentColor='black'>\\n                        Кнопка\\n                    </CustomButton>\\n                </Col>\\n            ))}\\n        </Row>\\n        <Row>\\n            {STATE_TYPES.map((stateType) => (\\n                <Col key={stateType}>\\n                    <CustomButton\\n                        backgroundColor='#FF45C3'\\n                        stateType={stateType}\\n                        contentColor='white'\\n                    >\\n                        Кнопка\\n                    </CustomButton>\\n                </Col>\\n            ))}\\n        </Row>\\n    </Container>,\\n);\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n.customButton {\\n    overflow: hidden;\\n    position: relative;\\n\\n    &.white * {\\n        color: var(--color-static-text-primary-light);\\n    }\\n\\n    &.black * {\\n        color: var(--color-static-text-primary-dark);\\n    }\\n\\n    & span {\\n        position: relative;\\n        z-index: 3;\\n    }\\n\\n    &:before {\\n        position: absolute;\\n        left: 0;\\n        right: 0;\\n        top: 0;\\n        bottom: 0;\\n        background-color: rgba(0, 0, 0, 0);\\n        content: '';\\n        transition: 0.2s;\\n        opacity: 1;\\n        pointer-events: none;\\n    }\\n\\n    &.darkening {\\n        &:hover:before {\\n            background-color: rgba(0, 0, 0, 0.07);\\n        }\\n\\n        &:active:before {\\n            background-color: rgba(0, 0, 0, 0.15);\\n        }\\n    }\\n\\n    &.lightening {\\n        &:hover:before {\\n            background-color: rgba(255, 255, 255, 0.15);\\n        }\\n\\n        &:active:before {\\n            background-color: rgba(255, 255, 255, 0.2);\\n        }\\n    }\\n}\\n\\n/* Disabled */\\n\\n.customButton:disabled {\\n    opacity: 0.3;\\n\\n    &.customLoading {\\n        opacity: 1;\\n    }\\n\\n    &.white * {\\n        color: var(--color-static-text-primary-light);\\n    }\\n\\n    &.black * {\\n        color: var(--color-static-text-primary-dark);\\n    }\\n}\\n\";","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { StarMIcon } from '@alfalab/icons-glyph/StarMIcon';\nimport { text, select, boolean, color } from '@storybook/addon-knobs';\nimport { CssVars, ComponentHeader, Tabs } from 'storybook/blocks';\nimport { CustomButton } from '@alfalab/core-components-custom-button';\nimport { CustomButton as CustomButtonTS } from '../Component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport styles from '!!raw-loader!../index.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const SIZES = ['xxs', 'xs', 's', 'm', 'l', 'xl'];\nexport const CONTENT_COLORS = ['white', 'black'];\nexport const STATE_TYPES = ['darkening', 'lightening'];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/CustomButton\",\n      component: CustomButton,\n      id: \"CustomButton\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"CustomButton\",\n      children: React.createElement(() => {\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: 'transparent',\n            padding: '8px',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          children: /*#__PURE__*/_jsx(CustomButton, {\n            size: select('size', SIZES, 'm'),\n            backgroundColor: color('backgroundColor', '#FF45C3'),\n            contentColor: select('contentColor', CONTENT_COLORS, 'white'),\n            stateType: select('stateType', STATE_TYPES, 'darkening'),\n            href: text('href', ''),\n            loading: boolean('loading', false),\n            disabled: boolean('disabled', false),\n            block: boolean('block', false),\n            nowrap: boolean('nowrap', false),\n            leftAddons: boolean('leftAddons', false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n            rightAddons: boolean('rightAddons', false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n            children: text('label', 'Оплатить')\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"CustomButton\",\n      version: packageJson.version,\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=3306%3A30233\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { CustomButton } from '@alfalab/core-components/сustom-button';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: CustomButtonTS\n      }),\n      cssVars: /*#__PURE__*/_jsx(CssVars, {\n        css: `\n                ${styles}\n            `\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const customButton = () => React.createElement(() => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: \"transparent\",\n      padding: \"8px\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    children: /*#__PURE__*/_jsx(CustomButton, {\n      size: select(\"size\", SIZES, \"m\"),\n      backgroundColor: color(\"backgroundColor\", \"#FF45C3\"),\n      contentColor: select(\"contentColor\", CONTENT_COLORS, \"white\"),\n      stateType: select(\"stateType\", STATE_TYPES, \"darkening\"),\n      href: text(\"href\", \"\"),\n      loading: boolean(\"loading\", false),\n      disabled: boolean(\"disabled\", false),\n      block: boolean(\"block\", false),\n      nowrap: boolean(\"nowrap\", false),\n      leftAddons: boolean(\"leftAddons\", false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n      rightAddons: boolean(\"rightAddons\", false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n      children: text(\"label\", \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C\")\n    })\n  });\n});\ncustomButton.storyName = 'CustomButton';\ncustomButton.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  return <div style={{\\n    backgroundColor: \\\"transparent\\\",\\n    padding: \\\"8px\\\",\\n    position: \\\"absolute\\\",\\n    top: 0,\\n    left: 0,\\n    right: 0,\\n    bottom: 0\\n  }}>\\n                <CustomButton size={select(\\\"size\\\", SIZES, \\\"m\\\")} backgroundColor={color(\\\"backgroundColor\\\", \\\"#FF45C3\\\")} contentColor={select(\\\"contentColor\\\", CONTENT_COLORS, \\\"white\\\")} stateType={select(\\\"stateType\\\", STATE_TYPES, \\\"darkening\\\")} href={text(\\\"href\\\", \\\"\\\")} loading={boolean(\\\"loading\\\", false)} disabled={boolean(\\\"disabled\\\", false)} block={boolean(\\\"block\\\", false)} nowrap={boolean(\\\"nowrap\\\", false)} leftAddons={boolean(\\\"leftAddons\\\", false) && <StarMIcon />} rightAddons={boolean(\\\"rightAddons\\\", false) && <StarMIcon />}>\\n                    {text(\\\"label\\\", \\\"\\\\u041E\\\\u043F\\\\u043B\\\\u0430\\\\u0442\\\\u0438\\\\u0442\\\\u044C\\\")}\\n                </CustomButton>\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/CustomButton',\n  id: 'CustomButton',\n  component: CustomButton,\n  tags: ['stories-mdx'],\n  includeStories: [\"customButton\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"customButton\":\"customButton_PgaWT\",\"white\":\"white_dlAho\",\"black\":\"black_SkdGZ\",\"darkening\":\"darkening_Y0jpS\",\"lightening\":\"lightening_uLTt0\",\"customLoading\":\"customLoading_Yjvef\"};","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type ComponentProps = Omit<ButtonProps, 'view' | 'colors'> & {\n    /**\n     * Цвет кнопки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'black' | 'white';\n\n    /**\n     * Затемнение или осветление кнопки при hover и active\n     */\n    stateType?: 'darkening' | 'lightening';\n};\n\ntype AnchorButtonProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype NativeButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type CustomButtonProps = Partial<AnchorButtonProps | NativeButtonProps>;\n\nexport const CustomButton = React.forwardRef<\n    HTMLAnchorElement | HTMLButtonElement,\n    CustomButtonProps\n>(\n    (\n        {\n            children,\n            className,\n            loading,\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const buttonProps = {\n            style: { background: backgroundColor },\n            ...restProps,\n        };\n\n        const buttonClassName = cn(\n            styles.customButton,\n            className,\n            styles[contentColor],\n            styles[stateType],\n            {\n                [styles.customLoading]: loading,\n            },\n        );\n\n        return (\n            <Button\n                {...buttonProps}\n                view='primary'\n                ref={ref}\n                className={buttonClassName}\n                loading={loading}\n            >\n                {children}\n            </Button>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nCustomButton.defaultProps = {\n    size: 'm',\n    block: false,\n    loading: false,\n    nowrap: false,\n};\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","pre","h2","ul","li","live","className","id","href","MDXContent","wrapper","MDXLayout","SIZES","CONTENT_COLORS","STATE_TYPES","div","title","component","CustomButton","name","style","backgroundColor","padding","position","top","left","right","bottom","size","select","color","contentColor","stateType","text","loading","boolean","disabled","block","nowrap","leftAddons","StarMIcon","rightAddons","version","design","description","changelog","of","cssVars","css","customButton","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","React","ref","_ref$backgroundColor","_ref$contentColor","_ref$stateType","restProps","_objectWithoutProperties","_excluded","buttonProps","_objectSpread","background","buttonClassName","Button","defaultProps"],"sourceRoot":""}