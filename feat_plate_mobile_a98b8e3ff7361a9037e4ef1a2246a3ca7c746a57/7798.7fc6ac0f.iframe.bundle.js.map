{"version":3,"file":"7798.7fc6ac0f.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/mobile.module.css?3339","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tabs/src/synthetic-events.ts","webpack://@alfalab/core-components/./packages/tabs/src/components/title/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/hooks/use-tablist-titles.ts","webpack://@alfalab/core-components/./packages/tabs/src/components/scrollable-container/index.module.css?add0","webpack://@alfalab/core-components/./packages/tabs/src/components/scrollable-container/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/mobile.module.css?ed3b","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tab/index.module.css?5702","webpack://@alfalab/core-components/./packages/tabs/src/components/tab/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tabs/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tabs/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/hooks/use-collapsible-elements.ts","webpack://@alfalab/core-components/./packages/tabs/src/hooks/use-tabs.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/index.module.css?ccb2","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/index.module.css?6e7c"],"sourcesContent":["import React from 'react';\n\nimport { TabListProps } from '../../typings';\n\nimport { PrimaryTabList } from './Component';\n\nimport styles from './index.module.css';\n\nexport const PrimaryTabListDesktop = ({ size = 'm', ...restProps }: TabListProps) => (\n    <PrimaryTabList {...restProps} size={size} styles={styles} />\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { TabListProps } from '../../typings';\n\nimport { PrimaryTabList } from './Component';\n\nimport commonStyles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nconst styles = {\n    ...commonStyles,\n    ...mobileStyles,\n};\n\nexport type PrimaryTabListMobileProps = Omit<TabListProps, 'size'>;\n\nexport const PrimaryTabListMobile = ({ className, ...restProps }: PrimaryTabListMobileProps) => (\n    <PrimaryTabList {...restProps} styles={styles} className={cn(className, styles.mobile)} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_xt5yM title_lCCM3\",\"mobile\":\"mobile_rNUpv\"};","import React from 'react';\n\nimport { useMedia } from '@alfalab/hooks';\n\nimport { TabListProps, TabsMatchMedia } from '../../typings';\n\nimport { PrimaryTabListDesktop } from './Component.desktop';\nimport { PrimaryTabListMobile } from './Component.mobile';\n\nexport const PrimaryTabListResponsive = ({\n    size,\n    defaultMatch = 'desktop',\n    collapsible,\n    collapsedTabsIds,\n    fullWidthScroll,\n    ...restProps\n}: TabListProps) => {\n    const [view] = useMedia<TabsMatchMedia>(\n        [\n            ['mobile', '(max-width: 767px)'],\n            ['desktop', '(min-width: 768px)'],\n        ],\n        defaultMatch,\n    );\n\n    return view === 'desktop' ? (\n        <PrimaryTabListDesktop\n            collapsible={collapsible}\n            collapsedTabsIds={collapsedTabsIds}\n            size={size}\n            {...restProps}\n        />\n    ) : (\n        <PrimaryTabListMobile fullWidthScroll={fullWidthScroll} {...restProps} />\n    );\n};\n","import React from 'react';\n\nexport const createSyntheticEvent = <T extends Element, E extends Event>(\n    event: E,\n): React.SyntheticEvent<T, E> => {\n    let isDefaultPrevented = false;\n    let isPropagationStopped = false;\n    const preventDefault = () => {\n        isDefaultPrevented = true;\n        event.preventDefault();\n    };\n    const stopPropagation = () => {\n        isPropagationStopped = true;\n        event.stopPropagation();\n    };\n\n    return {\n        nativeEvent: event,\n        currentTarget: event.currentTarget as EventTarget & T,\n        target: event.target as EventTarget & T,\n        bubbles: event.bubbles,\n        cancelable: event.cancelable,\n        defaultPrevented: event.defaultPrevented,\n        eventPhase: event.eventPhase,\n        isTrusted: event.isTrusted,\n        preventDefault,\n        isDefaultPrevented: () => isDefaultPrevented,\n        stopPropagation,\n        isPropagationStopped: () => isPropagationStopped,\n        persist: () => {},\n        timeStamp: event.timeStamp,\n        type: event.type,\n    };\n};\n\nexport const createUIEvent = <T extends Element, E extends Event>(\n    event: E,\n): React.UIEvent<T, E> => ({\n    ...createSyntheticEvent(event),\n    detail: 0,\n    view: {\n        styleMedia: {\n            type: '',\n            matchMedium: () => false,\n        },\n        document,\n    },\n});\n\nexport const createSyntheticMouseEvent = <T extends Element>(\n    event: MouseEvent,\n): React.MouseEvent<T, MouseEvent> => ({\n    ...createUIEvent<T, MouseEvent>(event),\n    altKey: event.altKey,\n    button: event.button,\n    buttons: event.buttons,\n    clientX: event.clientX,\n    clientY: event.clientY,\n    ctrlKey: event.ctrlKey,\n    getModifierState: event.getModifierState,\n    metaKey: event.metaKey,\n    movementX: event.movementX,\n    movementY: event.movementY,\n    pageX: event.pageX,\n    pageY: event.pageY,\n    relatedTarget: event.relatedTarget,\n    screenX: event.screenX,\n    screenY: event.screenY,\n    shiftKey: event.shiftKey,\n});\n","import React, { ButtonHTMLAttributes, forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { Styles, TabListTitle } from '../../typings';\n\ntype Props = TabListTitle &\n    Styles &\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'id'> & { focused?: boolean; isOption?: boolean };\n\nexport const Title = forwardRef<HTMLButtonElement, Props>(\n    (\n        {\n            id,\n            toggleClassName,\n            title,\n            styles = {},\n            rightAddons = null,\n            hidden = false,\n            selected = false,\n            disabled = false,\n            collapsed = false,\n            focused = false,\n            isOption = false,\n            ...restProps\n        },\n        ref,\n    ) =>\n        hidden ? null : (\n            <button\n                {...restProps}\n                ref={ref}\n                disabled={disabled}\n                type='button'\n                id={String(id)}\n                className={cn(\n                    styles.title,\n                    {\n                        [styles.selected]: selected,\n                        [styles.disabled]: disabled,\n                        [styles.collapsed]: collapsed && !isOption,\n                        [styles.option]: isOption,\n                    },\n                    toggleClassName,\n                )}\n            >\n                <span className={cn(styles.content, { [styles.focused]: focused })}>{title}</span>\n\n                {rightAddons && <span className={styles.rightAddons}>{rightAddons}</span>}\n            </button>\n        ),\n);\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { KeyboardFocusable } from '@alfalab/core-components-keyboard-focusable';\nimport {\n    PickerButtonDesktop,\n    PickerButtonDesktopProps,\n} from '@alfalab/core-components-picker-button/desktop';\n\nimport { useTablistTitles } from '../../hooks/use-tablist-titles';\nimport { createSyntheticMouseEvent } from '../../synthetic-events';\nimport { Styles, TabListProps } from '../../typings';\nimport { ScrollableContainer } from '../scrollable-container';\nimport { Title } from '../title';\n\nexport const PrimaryTabList = ({\n    size,\n    styles = {},\n    className,\n    containerClassName,\n    titles = [],\n    selectedId = titles.length ? titles[0].id : undefined,\n    scrollable = true,\n    collapsible,\n    collapsedTabsIds,\n    fullWidthScroll,\n    onChange,\n    dataTestId,\n    breakpoint = 1024,\n}: TabListProps & Styles) => {\n    const lineRef = useRef<HTMLDivElement>(null);\n\n    const { containerRef, addonRef, tablistTitles, selectedTab, focusedTab, getTabListItemProps } =\n        useTablistTitles({\n            titles,\n            selectedId,\n            collapsible,\n            collapsedTabsIds,\n            breakpoint,\n            onChange,\n        });\n\n    useEffect(() => {\n        if (selectedTab && lineRef.current) {\n            lineRef.current.style.width = `${selectedTab.offsetWidth}px`;\n            lineRef.current.style.transform = `translateX(${selectedTab.offsetLeft}px)`;\n        }\n    }, [selectedTab, tablistTitles]);\n\n    const collapsedOptions = useMemo(\n        () =>\n            tablistTitles.reduce<PickerButtonDesktopProps['options']>((options, title) => {\n                if (title.collapsed) {\n                    options.push({\n                        key: title.title,\n                        value: title.id,\n                        content: <Title {...title} styles={styles} isOption={true} />,\n                    });\n                }\n\n                return options;\n            }, []),\n        [tablistTitles, styles],\n    );\n\n    const collapsedAddonsLength = tablistTitles.filter(\n        (title) => title.collapsed && title.rightAddons,\n    ).length;\n\n    const handleOptionsChange = (\n        payload: Parameters<Required<PickerButtonDesktopProps>['onChange']>[0],\n    ) => {\n        if (payload.selected?.value && onChange) {\n            const nativeMouseEvent = new MouseEvent('change');\n            const syntheticMouseEvent = createSyntheticMouseEvent(nativeMouseEvent);\n\n            onChange(syntheticMouseEvent, { selectedId: payload.selected.value });\n        }\n    };\n\n    const renderContent = () => (\n        <div\n            role='tablist'\n            data-test-id={dataTestId}\n            className={cn(styles.component, className, size && styles[size], {\n                [styles.fullWidthScroll]: fullWidthScroll,\n            })}\n        >\n            {tablistTitles.map(({ dataTestId: _, ...restTitleProps }, index) => (\n                <KeyboardFocusable key={restTitleProps.id}>\n                    {(ref, focused) => (\n                        <Title\n                            {...getTabListItemProps(index, ref)}\n                            {...restTitleProps}\n                            focused={focused}\n                            styles={styles}\n                        />\n                    )}\n                </KeyboardFocusable>\n            ))}\n\n            {collapsedOptions.length ? (\n                <span ref={addonRef} role='menu' className={styles.pickerWrapper}>\n                    <PickerButtonDesktop\n                        fieldClassName={styles.title}\n                        optionClassName={cn(styles.pickerOption, size && styles[size])}\n                        options={collapsedOptions}\n                        onChange={handleOptionsChange}\n                        rightAddons={\n                            collapsedAddonsLength ? (\n                                <Badge view='count' content={collapsedAddonsLength} />\n                            ) : null\n                        }\n                        size='l'\n                        view='ghost'\n                        label='Ещё'\n                        popoverPosition='bottom-end'\n                    />\n                </span>\n            ) : null}\n\n            <div className={styles.line} ref={lineRef} />\n        </div>\n    );\n\n    return scrollable && !collapsible ? (\n        <ScrollableContainer\n            activeChild={focusedTab || selectedTab}\n            containerClassName={containerClassName}\n            fullWidthScroll={fullWidthScroll}\n        >\n            {renderContent()}\n        </ScrollableContainer>\n    ) : (\n        <div ref={containerRef} className={cn(styles.container, containerClassName)}>\n            {renderContent()}\n        </div>\n    );\n};\n","import { useMemo } from 'react';\n\nimport { useMedia } from '@alfalab/hooks';\n\nimport { TabListProps, TabsMatchMedia } from '../typings';\n\nimport { useCollapsibleElements } from './use-collapsible-elements';\nimport { useTabs } from './use-tabs';\n\nexport const useTablistTitles = ({\n    titles = [],\n    selectedId,\n    collapsible,\n    collapsedTabsIds,\n    breakpoint,\n    onChange,\n}: Pick<TabListProps, 'titles' | 'selectedId' | 'collapsible' | 'collapsedTabsIds' | 'onChange'> &\n    Required<Pick<TabListProps, 'breakpoint'>>) => {\n    const { containerRef, addonRef, idsCollapsedElements } = useCollapsibleElements<\n        HTMLDivElement,\n        HTMLInputElement\n    >('[role=tab]', [titles, collapsedTabsIds]);\n\n    const [view] = useMedia<TabsMatchMedia>(\n        [['desktop', `(min-width: ${breakpoint}px)`]],\n        'desktop',\n    );\n\n    const tablistTitles = useMemo(() => {\n        const idsCollapsedTitles: string[] = [];\n        const idsCollapsed = idsCollapsedElements.concat(collapsedTabsIds || []);\n\n        if (view === 'desktop' && collapsible) {\n            const visibleTitles = titles.filter(({ id }) => !idsCollapsed.includes(String(id)));\n            const lastVisibleTitle = collapsedTabsIds\n                ? null\n                : visibleTitles[visibleTitles.length - 1];\n\n            idsCollapsed.forEach((id) => {\n                if (selectedId === id && lastVisibleTitle) {\n                    idsCollapsedTitles.push(String(lastVisibleTitle.id));\n                }\n                if (selectedId !== id) {\n                    idsCollapsedTitles.push(id);\n                }\n            });\n        }\n\n        const titlesMapped = titles.map((title) => ({\n            ...title,\n            collapsed: idsCollapsedTitles.includes(String(title.id)),\n            selected: title.id === selectedId,\n        }));\n\n        if (collapsedTabsIds?.length) {\n            titlesMapped.sort((a, b) => {\n                const hasA = collapsedTabsIds.includes(String(a.id));\n                const hasB = collapsedTabsIds.includes(String(b.id));\n\n                if (hasA === hasB) {\n                    return 0;\n                }\n\n                return hasA ? 1 : -1;\n            });\n        }\n\n        return titlesMapped.sort((a, b) => {\n            if (a.collapsed === b.collapsed) {\n                return 0;\n            }\n\n            return a.collapsed ? 1 : -1;\n        });\n    }, [collapsedTabsIds, idsCollapsedElements, view, collapsible, titles, selectedId]);\n\n    const { selectedTab, focusedTab, getTabListItemProps } = useTabs({\n        titles: tablistTitles,\n        selectedId,\n        onChange,\n    });\n\n    return {\n        containerRef,\n        addonRef,\n        tablistTitles,\n        selectedTab,\n        focusedTab,\n        getTabListItemProps,\n    };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_H4S8N\",\"fullWidthScroll\":\"fullWidthScroll_NVhi_\"};","import React, { ReactNode, useEffect } from 'react';\nimport cn from 'classnames';\nimport computeScrollIntoView from 'compute-scroll-into-view';\n\nimport { TabsProps } from '../../typings';\n\nimport styles from './index.module.css';\n\n/**\n * Дополнительная прокрутка при клике на не поместившийся таб\n */\nconst ADDITIONAL_SCROLLLEFT_VALUE = 40;\n\nexport type ScrollableContainerProps = {\n    /**\n     * Дополнительный класс контейнера\n     */\n    containerClassName?: string;\n\n    /**\n     * Дочерние компоненты\n     */\n    children: ReactNode;\n\n    /**\n     * Активный элемент (всегда будет в видимой области)\n     */\n    activeChild: HTMLElement | null;\n};\n\nexport const ScrollableContainer = ({\n    containerClassName,\n    children,\n    activeChild,\n    fullWidthScroll,\n}: ScrollableContainerProps & Pick<TabsProps, 'fullWidthScroll'>) => {\n    useEffect(() => {\n        if (activeChild) {\n            const actions = computeScrollIntoView(activeChild, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n\n            // TODO: animate?\n            actions.forEach(({ el, left }, index) => {\n                if (index === 0) return;\n                // eslint-disable-next-line no-param-reassign\n                el.scrollLeft =\n                    el.scrollLeft > left\n                        ? left - ADDITIONAL_SCROLLLEFT_VALUE\n                        : left + ADDITIONAL_SCROLLLEFT_VALUE;\n            });\n        }\n    }, [activeChild]);\n\n    return (\n        <div\n            className={cn(styles.container, containerClassName, {\n                [styles.fullWidthScroll]: fullWidthScroll,\n            })}\n        >\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { SecondaryTabListProps } from '../../typings';\n\nimport { SecondaryTabList } from './Component';\n\nimport commonStyles from './index.module.css';\n\nexport type SecondaryTabListDesktopProps = Omit<SecondaryTabListProps, 'tagSize'>;\n\nexport const SecondaryTabListDesktop = ({\n    size = 's',\n    ...restProps\n}: SecondaryTabListDesktopProps) => (\n    <SecondaryTabList {...restProps} size={size} styles={commonStyles} tagSize={size} />\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { SecondaryTabListProps } from '../../typings';\n\nimport { SecondaryTabList } from './Component';\n\nimport commonStyles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nconst styles = {\n    ...commonStyles,\n    ...mobileStyles,\n};\n\nexport type SecondaryTabListMobileProps = Omit<SecondaryTabListProps, 'size' | 'tagSize'>;\n\nexport const SecondaryTabListMobile = ({\n    className,\n    ...restProps\n}: SecondaryTabListMobileProps) => (\n    <SecondaryTabList\n        {...restProps}\n        styles={styles}\n        className={cn(className, styles.mobile)}\n        tagSize='xs'\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_Blp64 title_g0PPD\",\"mobile\":\"mobile_gtqtT\"};","import React from 'react';\n\nimport { useMedia } from '@alfalab/hooks';\n\nimport { SecondaryTabListProps, TabsMatchMedia } from '../../typings';\n\nimport { SecondaryTabListDesktop } from './Component.desktop';\nimport { SecondaryTabListMobile } from './Component.mobile';\n\nexport const SecondaryTabListResponsive = ({\n    size,\n    defaultMatch = 'desktop',\n    fullWidthScroll,\n    ...restProps\n}: SecondaryTabListProps) => {\n    const [view] = useMedia<TabsMatchMedia>(\n        [\n            ['mobile', '(max-width: 767px)'],\n            ['desktop', '(min-width: 768px)'],\n        ],\n        defaultMatch,\n    );\n\n    return view === 'desktop' ? (\n        <SecondaryTabListDesktop size={size} {...restProps} />\n    ) : (\n        <SecondaryTabListMobile fullWidthScroll={fullWidthScroll} {...restProps} />\n    );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Tag } from '@alfalab/core-components-tag';\n\nimport { useTabs } from '../../hooks/use-tabs';\nimport { SecondaryTabListProps, Styles } from '../../typings';\nimport { ScrollableContainer } from '../scrollable-container';\n\nexport const SecondaryTabList = ({\n    styles = {},\n    className,\n    containerClassName,\n    size,\n    titles = [],\n    selectedId = titles.length ? titles[0].id : undefined,\n    scrollable = true,\n    fullWidthScroll,\n    tagSize = 'xs',\n    onChange,\n    dataTestId,\n}: SecondaryTabListProps & Styles) => {\n    const { focusedTab, selectedTab, getTabListItemProps } = useTabs({\n        titles,\n        selectedId,\n        onChange,\n    });\n\n    const renderContent = () => (\n        <div\n            role='tablist'\n            data-test-id={dataTestId}\n            className={cn(styles.component, className, size && styles[size], {\n                [styles.fullWidthScroll]: fullWidthScroll,\n            })}\n        >\n            {titles.map((item, index) => {\n                if (item.hidden) return null;\n\n                return (\n                    <Tag\n                        {...getTabListItemProps(index)}\n                        key={item.id}\n                        className={cn(styles.title, item.toggleClassName)}\n                        checked={item.id === selectedId}\n                        size={tagSize}\n                        rightAddons={item.rightAddons}\n                    >\n                        {item.title}\n                    </Tag>\n                );\n            })}\n        </div>\n    );\n\n    return scrollable ? (\n        <ScrollableContainer\n            activeChild={focusedTab || selectedTab}\n            containerClassName={containerClassName}\n            fullWidthScroll={fullWidthScroll}\n        >\n            {renderContent()}\n        </ScrollableContainer>\n    ) : (\n        <div className={cn(styles.container, containerClassName)}>{renderContent()}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_WoLcH\",\"hidden\":\"hidden_GyIkl\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { TabProps } from '../../typings';\n\nimport styles from './index.module.css';\n\nexport const Tab = ({ children, hidden, className, disabled, dataTestId }: TabProps) =>\n    children ? (\n        <div\n            className={cn(\n                styles.component,\n                {\n                    [styles.hidden]: hidden,\n                },\n                className,\n            )}\n            hidden={hidden}\n            role='tabpanel'\n            tabIndex={disabled ? -1 : 0}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    ) : null;\n","import React from 'react';\n\nimport { TabsProps } from '../../typings';\nimport { PrimaryTabListResponsive } from '../primary-tablist/Component.responsive';\nimport { SecondaryTabListResponsive } from '../secondary-tablist/Component.responsive';\n\nimport { Tabs } from './Component';\n\nconst views = {\n    primary: PrimaryTabListResponsive,\n    secondary: SecondaryTabListResponsive,\n};\n\nexport type TabsResponsiveProps = Omit<TabsProps, 'TabList'>;\n\nexport const TabsResponsive = ({\n    view = 'primary',\n    scrollable = false,\n    ...restProps\n}: TabsResponsiveProps) => <Tabs TabList={views[view]} scrollable={scrollable} {...restProps} />;\n","import React, { cloneElement } from 'react';\n\nimport { TabsProps } from '../../typings';\n\nexport const Tabs = ({\n    TabList,\n    className,\n    containerClassName,\n    size,\n    defaultMatch,\n    children,\n    selectedId,\n    scrollable,\n    collapsible,\n    collapsedTabsIds,\n    fullWidthScroll = false,\n    keepMounted = false,\n    dataTestId,\n    onChange,\n}: Omit<TabsProps, 'view'>) => {\n    const tabsArray = React.Children.toArray(children) as TabsProps['children'];\n    const titles = tabsArray.map(\n        ({\n            props: {\n                title,\n                id,\n                rightAddons,\n                disabled,\n                hidden,\n                toggleClassName,\n                dataTestId: toggleTestId,\n            },\n        }) => ({\n            title,\n            id,\n            disabled,\n            rightAddons,\n            hidden,\n            toggleClassName,\n            dataTestId: toggleTestId,\n        }),\n    );\n\n    const tabs = tabsArray.filter(\n        (tab) => tab.props.id === selectedId || tab.props.keepMounted || keepMounted,\n    );\n\n    return (\n        <div className={className}>\n            <TabList\n                containerClassName={containerClassName}\n                size={size}\n                titles={titles}\n                selectedId={selectedId}\n                scrollable={scrollable}\n                collapsible={collapsible}\n                collapsedTabsIds={collapsedTabsIds}\n                onChange={onChange}\n                dataTestId={dataTestId}\n                defaultMatch={defaultMatch}\n                fullWidthScroll={fullWidthScroll}\n            />\n\n            {tabs.map((tab) => cloneElement(tab, { hidden: tab.props.id !== selectedId }))}\n        </div>\n    );\n};\n","import { DependencyList, useRef, useState } from 'react';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\n\nimport { useLayoutEffect_SAFE_FOR_SSR } from '@alfalab/hooks';\n\nexport const useCollapsibleElements = <\n    ContainerType extends HTMLElement,\n    AddonType extends HTMLElement,\n>(\n    selectors: string,\n    deps: DependencyList = [],\n) => {\n    const [idsCollapsedElements, setIdsCollapsedElements] = useState<string[]>([]);\n\n    const containerRef = useRef<ContainerType>(null);\n    const addonRef = useRef<AddonType>(null);\n\n    useLayoutEffect_SAFE_FOR_SSR(() => {\n        const collapseElements = (inlineSize?: number) => {\n            const container = containerRef.current;\n\n            if (!container) return;\n\n            const addon = addonRef.current;\n            const containerWidth =\n                (inlineSize || container.clientWidth) - (addon?.scrollWidth || 0) * 1.5; // при расчётах, даём кнопке \"Ещё\" чуть больше места, чтобы точно влезла\n            const elements = Array.from(container.querySelectorAll(selectors)) as HTMLElement[];\n\n            const collapsedIds = elements.reduce<string[]>((acc, element) => {\n                const { offsetLeft, scrollWidth, id } = element;\n                const elementOffset = offsetLeft + scrollWidth;\n                const isCollapsedElement = getComputedStyle(element).visibility === 'collapse';\n                const maxWidth =\n                    addon && !isCollapsedElement\n                        ? containerWidth -\n                          (addon.scrollWidth + parseFloat(getComputedStyle(addon).marginLeft))\n                        : containerWidth;\n\n                if (elementOffset >= maxWidth) acc.push(id);\n\n                return acc;\n            }, []);\n\n            setIdsCollapsedElements(collapsedIds);\n        };\n\n        const handleElementsResize = (entries: ResizeObserverEntry[]) => {\n            const [{ inlineSize }] = entries[0].contentBoxSize;\n\n            collapseElements(inlineSize);\n        };\n\n        const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n        const observer = new ResizeObserver(handleElementsResize);\n\n        if (containerRef.current) {\n            collapseElements();\n            observer.observe(containerRef.current);\n        }\n\n        return () => observer.disconnect();\n    }, [selectors, ...deps]);\n\n    return {\n        containerRef,\n        addonRef,\n        idsCollapsedElements,\n    };\n};\n","import { KeyboardEvent, MouseEvent, MutableRefObject, useCallback, useRef, useState } from 'react';\n\nimport { getDataTestId } from '../../../utils';\nimport { TabListTitle, UseTabsProps } from '../typings';\n\nexport function useTabs({ titles = [], selectedId, onChange }: UseTabsProps) {\n    const [selectedTab, setSelectedTab] = useState<HTMLButtonElement | null>(null);\n    const [focusedTab, setFocusedTab] = useState<HTMLButtonElement | null>(null);\n    const itemRefs = useRef<HTMLButtonElement[]>([]);\n\n    const handleItemRef = useCallback(\n        (node: HTMLButtonElement, item: TabListTitle, index: number) => {\n            if (node && item.id === selectedId) setSelectedTab(node);\n            itemRefs.current[index] = node;\n        },\n        [selectedId],\n    );\n\n    const handleItemClick = useCallback(\n        (event: MouseEvent, item: TabListTitle) => {\n            if (onChange && item.id !== selectedId) {\n                onChange(event, { selectedId: item.id });\n            }\n        },\n        [onChange, selectedId],\n    );\n\n    const focusTab = useCallback(\n        (position: 'prev' | 'next' | 'start' | 'end') => {\n            const refs = itemRefs.current;\n\n            const tabAvailable = (ref: HTMLButtonElement) => ref && !ref.disabled;\n\n            if (refs.every((ref) => !tabAvailable(ref))) return;\n\n            let focusedTabIndex = refs.findIndex((node) => document.activeElement === node);\n\n            if (focusedTabIndex === -1) {\n                focusedTabIndex = refs.findIndex((node) => node === selectedTab);\n            }\n\n            let newFocusIndex;\n\n            switch (position) {\n                case 'prev':\n                    newFocusIndex = focusedTabIndex === 0 ? refs.length - 1 : focusedTabIndex - 1;\n                    break;\n                case 'next':\n                    newFocusIndex = focusedTabIndex === refs.length - 1 ? 0 : focusedTabIndex + 1;\n                    break;\n                case 'start':\n                    newFocusIndex = 0;\n                    break;\n                case 'end':\n                    newFocusIndex = refs.length - 1;\n                    break;\n            }\n\n            const shift = ['prev', 'end'].includes(position) ? -1 : 1;\n\n            while (!tabAvailable(refs[newFocusIndex])) {\n                newFocusIndex = (refs.length + newFocusIndex + shift) % refs.length;\n            }\n\n            refs[newFocusIndex].focus();\n\n            setFocusedTab(refs[newFocusIndex]);\n        },\n        [selectedTab, itemRefs],\n    );\n\n    const handleKeyDown = useCallback(\n        (event: KeyboardEvent<HTMLButtonElement>) => {\n            switch (event.key) {\n                case 'ArrowLeft':\n                    focusTab('prev');\n\n                    event.preventDefault();\n                    break;\n                case 'ArrowRight':\n                    focusTab('next');\n\n                    event.preventDefault();\n                    break;\n                case 'Home':\n                    focusTab('start');\n\n                    event.preventDefault();\n                    break;\n                case 'End':\n                    focusTab('end');\n\n                    event.preventDefault();\n                    break;\n                default:\n                    break;\n            }\n        },\n        [focusTab],\n    );\n\n    const getTabListItemProps = (index: number, outerRef?: MutableRefObject<HTMLElement>) => {\n        const item = titles[index];\n        const itemSelected = item.id === selectedId;\n\n        return {\n            role: 'tab',\n            tabIndex: itemSelected ? 0 : -1,\n            'aria-selected': itemSelected,\n            'data-test-id': getDataTestId(item.dataTestId, 'toggle'),\n            disabled: item.disabled,\n            ref: (node: HTMLButtonElement) => {\n                // eslint-disable-next-line no-param-reassign\n                if (outerRef) outerRef.current = node;\n                handleItemRef(node, item, index);\n            },\n            onKeyDown: handleKeyDown,\n            onClick: (event?: MouseEvent) => handleItemClick(event as MouseEvent, item),\n        };\n    };\n\n    return {\n        getTabListItemProps,\n        selectedTab,\n        focusedTab,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_yVvN7\",\"fullWidthScroll\":\"fullWidthScroll_YDehg\",\"container\":\"container_Kmcdv\",\"title\":\"title_lCCM3\",\"disabled\":\"disabled_OrqkF\",\"focused\":\"focused_psPxX\",\"collapsed\":\"collapsed_XCyOE\",\"selected\":\"selected_GQZlo\",\"line\":\"line_hwXjZ\",\"s\":\"s_fTMFk\",\"xs\":\"xs_HeSxS\",\"xxs\":\"xxs_becHE\",\"pickerWrapper\":\"pickerWrapper_pu2yo\",\"option\":\"option_p2SHn\",\"m\":\"m_BZ9G2\",\"l\":\"l_Aggn2\",\"xl\":\"xl_dCXVU\",\"rightAddons\":\"rightAddons_eguaI\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_OOWzT\",\"fullWidthScroll\":\"fullWidthScroll_CDPTr\",\"container\":\"container_B4Wet\",\"title\":\"title_g0PPD\",\"xxs\":\"xxs_e3vzd\",\"xs\":\"xs_u5rCC\",\"s\":\"s_xiDbB\",\"m\":\"m_OzBuG\",\"l\":\"l_DXFNf\",\"xl\":\"xl_bDydY\"};"],"names":["PrimaryTabListDesktop","_ref","_ref$size","size","restProps","_objectWithoutProperties","_excluded","_jsx","PrimaryTabList","_objectSpread","styles","commonStyles","PrimaryTabListMobile","className","cn","mobile","PrimaryTabListResponsive","_ref$defaultMatch","defaultMatch","collapsible","collapsedTabsIds","fullWidthScroll","_useMedia","useMedia","_slicedToArray","createSyntheticMouseEvent","event","createUIEvent","createSyntheticEvent","isDefaultPrevented","isPropagationStopped","nativeEvent","currentTarget","target","bubbles","cancelable","defaultPrevented","eventPhase","isTrusted","preventDefault","stopPropagation","persist","timeStamp","type","detail","view","styleMedia","matchMedium","document","altKey","button","buttons","clientX","clientY","ctrlKey","getModifierState","metaKey","movementX","movementY","pageX","pageY","relatedTarget","screenX","screenY","shiftKey","Title","forwardRef","ref","_cn","id","toggleClassName","title","_ref$styles","_ref$rightAddons","rightAddons","_ref$hidden","hidden","_ref$selected","selected","_ref$disabled","disabled","_ref$collapsed","collapsed","_ref$focused","focused","_ref$isOption","isOption","_jsxs","String","_defineProperty","option","children","content","containerClassName","_ref$titles","titles","_ref$selectedId","selectedId","length","undefined","_ref$scrollable","scrollable","onChange","dataTestId","_ref$breakpoint","breakpoint","lineRef","useRef","_useTablistTitles","useTablistTitles","_useCollapsibleElemen","useCollapsibleElements","containerRef","addonRef","idsCollapsedElements","concat","tablistTitles","useMemo","idsCollapsedTitles","idsCollapsed","visibleTitles","filter","_ref2","includes","lastVisibleTitle","forEach","push","titlesMapped","map","sort","a","b","hasA","_useTabs","useTabs","selectedTab","focusedTab","getTabListItemProps","useEffect","current","style","width","offsetWidth","transform","offsetLeft","collapsedOptions","reduce","options","key","value","collapsedAddonsLength","handleOptionsChange","payload","_payload$selected","nativeMouseEvent","MouseEvent","syntheticMouseEvent","renderContent","role","component","index","restTitleProps","KeyboardFocusable","pickerWrapper","PickerButtonDesktop","fieldClassName","optionClassName","pickerOption","Badge","label","popoverPosition","line","ScrollableContainer","activeChild","container","computeScrollIntoView","scrollMode","block","inline","el","left","scrollLeft","SecondaryTabListDesktop","SecondaryTabList","tagSize","SecondaryTabListMobile","SecondaryTabListResponsive","_ref$tagSize","item","_createElement","Tag","checked","Tab","tabIndex","views","primary","secondary","TabsResponsive","_ref$view","Tabs","TabList","_ref$fullWidthScroll","_ref$keepMounted","keepMounted","tabsArray","React","_ref2$props","props","tabs","tab","cloneElement","selectors","deps","arguments","_useState","useState","_useState2","setIdsCollapsedElements","useLayoutEffect_SAFE_FOR_SSR","collapseElements","inlineSize","addon","containerWidth","clientWidth","scrollWidth","collapsedIds","Array","from","querySelectorAll","acc","element","elementOffset","isCollapsedElement","getComputedStyle","visibility","parseFloat","marginLeft","observer","window","ResizeObserver","ResizeObserverPolyfill","handleElementsResize","entries","contentBoxSize","observe","disconnect","_toConsumableArray","setSelectedTab","_useState3","_useState4","setFocusedTab","itemRefs","handleItemRef","useCallback","node","handleItemClick","focusTab","position","refs","tabAvailable","every","newFocusIndex","focusedTabIndex","findIndex","activeElement","shift","focus","handleKeyDown","outerRef","itemSelected","getDataTestId","onKeyDown","onClick"],"sourceRoot":""}