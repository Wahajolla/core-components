{"version":3,"file":"indicator-src-docs-Component-stories-mdx.bd700246.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/indicator/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/indicator/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/indicator/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/indicator/src/index.module.css?e045","webpack://@alfalab/core-components/./packages/indicator/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"примеры\",\n      children: \"Примеры\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const styles = {\\n    display: 'flex',\\n    justifyContent: 'space-between',\\n    width: 233,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-tertiary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n\\nrender(\\n    <Container>\\n        <div style={styles}>\\n            <Indicator view='red' />\\n            <Indicator value={1} view='red' />\\n            <Indicator size='m' value={1} view='red' />\\n            <Indicator size='m' value={99} view='red' />\\n            <Indicator size='m' value={100} view='red' />\\n            <Indicator size='m' value={100} view='red' border={true} />\\n        </div>\\n        <Gap size='xs' />\\n        <div style={styles}>\\n            <Indicator view='grey' />\\n            <Indicator value={1} view='grey' />\\n            <Indicator size='m' value={1} view='grey' />\\n            <Indicator size='m' value={99} view='grey' />\\n            <Indicator size='m' value={100} view='grey' />\\n            <Indicator size='m' value={100} view='grey' border={true} />\\n        </div>\\n        <Gap size='xs' />\\n        <div style={styles}>\\n            <Indicator view='white' />\\n            <Indicator value={1} view='white' />\\n            <Indicator size='m' value={1} view='white' />\\n            <Indicator size='m' value={99} view='white' />\\n            <Indicator size='m' value={100} view='white' />\\n            <Indicator size='m' value={100} view='white' border={true} />\\n        </div>\\n        <Gap size='xs' />\\n        <div style={styles}>\\n            <Indicator\\n                backgroundColor='var(--color-light-graphic-positive)'\\n                color='var(--color-light-text-primary-inverted)'\\n            />\\n            <Indicator\\n                value={1}\\n                backgroundColor='var(--color-light-graphic-positive)'\\n                color='var(--color-light-text-primary-inverted)'\\n            />\\n            <Indicator\\n                size='m'\\n                value={1}\\n                backgroundColor='var(--color-light-graphic-positive)'\\n                color='var(--color-light-text-primary-inverted)'\\n            />\\n            <Indicator\\n                size='m'\\n                value={99}\\n                backgroundColor='var(--color-light-graphic-positive)'\\n                color='var(--color-light-text-primary-inverted)'\\n            />\\n            <Indicator\\n                size='m'\\n                value={100}\\n                backgroundColor='var(--color-light-graphic-positive)'\\n                color='var(--color-light-text-primary-inverted)'\\n            />\\n\\n            <Indicator\\n                size='m'\\n                value={100}\\n                backgroundColor='var(--color-light-graphic-positive)'\\n                color='var(--color-light-text-primary-inverted)'\\n                border={{\\n                    width: 2,\\n                    color: 'var(--color-light-bg-primary)',\\n                    style: 'dashed',\\n                }}\\n            />\\n        </div>\\n    </Container>,\\n);\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {Indicator as TSIndicator} from '../Component';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Indicator } from '@alfalab/core-components/indicator';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: TSIndicator\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Canvas*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story } from '@storybook/addon-docs';\nimport { select, text, number, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Indicator } from '@alfalab/core-components-indicator';\nimport { version } from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Indicator\",\n      component: Indicator,\n      id: \"Indicator\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Indicator\",\n      children: React.createElement(() => {\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: 'var(--color-light-bg-tertiary)',\n            padding: '8px',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          children: /*#__PURE__*/_jsx(Indicator, {\n            value: number('value', 1),\n            height: number('height', undefined),\n            size: select('size', ['xs', 's', 'm', 'l'], 's'),\n            color: text('color', ''),\n            backgroundColor: text('backgroundColor', ''),\n            border: boolean('border', true),\n            view: select('view', [undefined, 'red', 'grey', 'white'], undefined)\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Indicator\",\n      version: version,\n      package: \"@alfalab/core-components/indicator\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/branch/UbjMvmChTdD8nhHMCJ2End/Web-%3A%3A-Core-Default-Components?type=design&node-id=87344%3A115239&t=MNlF5zYf4GuQnRbs-1\",\n      children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A \\u0438\\u043D\\u0434\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u044F \\u0438\\u043B\\u0438 \\u0434\\u043B\\u044F \\u0432\\u0438\\u0437\\u0430\\u0443\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0439, \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u0438 \\u0442. \\u0434.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      development: /*#__PURE__*/_jsx(Development, {}),\n      changelog: /*#__PURE__*/_jsx(Changelog, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const indicator = () => React.createElement(() => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: \"var(--color-light-bg-tertiary)\",\n      padding: \"8px\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    children: /*#__PURE__*/_jsx(Indicator, {\n      value: number(\"value\", 1),\n      height: number(\"height\", undefined),\n      size: select(\"size\", [\"xs\", \"s\", \"m\", \"l\"], \"s\"),\n      color: text(\"color\", \"\"),\n      backgroundColor: text(\"backgroundColor\", \"\"),\n      border: boolean(\"border\", true),\n      view: select(\"view\", [undefined, \"red\", \"grey\", \"white\"], undefined)\n    })\n  });\n});\nindicator.storyName = 'Indicator';\nindicator.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  return <div style={{\\n    backgroundColor: \\\"var(--color-light-bg-tertiary)\\\",\\n    padding: \\\"8px\\\",\\n    position: \\\"absolute\\\",\\n    top: 0,\\n    left: 0,\\n    right: 0,\\n    bottom: 0\\n  }}>\\n                <Indicator value={number(\\\"value\\\", 1)} height={number(\\\"height\\\", undefined)} size={select(\\\"size\\\", [\\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\"], \\\"s\\\")} color={text(\\\"color\\\", \\\"\\\")} backgroundColor={text(\\\"backgroundColor\\\", \\\"\\\")} border={boolean(\\\"border\\\", true)} view={select(\\\"view\\\", [undefined, \\\"red\\\", \\\"grey\\\", \\\"white\\\"], undefined)} />\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Indicator',\n  id: 'Indicator',\n  component: Indicator,\n  tags: ['stories-mdx'],\n  includeStories: [\"indicator\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dps9B\",\"red\":\"red_aXXvQ\",\"border\":\"border_Cmy4J\",\"white\":\"white_K_qSw\",\"grey\":\"grey_rYijs\",\"xs\":\"xs_EpLNh\",\"s\":\"s_iVuD8\",\"content\":\"content_KtxO2\",\"m\":\"m_nROyp\",\"l\":\"l_yhn3E\",\"xl\":\"xl_K6gcc\",\"xxl\":\"xxl_RO3RL\"};","import React, { CSSProperties, forwardRef, ReactElement } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\n// TODO: вынести в общие типы\ntype Border = {\n    width?: number;\n    color?: string;\n    style?: 'solid' | 'dashed' | 'dotted';\n};\n\nexport type IndicatorProps = React.HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Значение индикатора\n     */\n    value?: number | ReactElement;\n\n    /**\n     * Цвет значения\n     */\n    color?: string;\n\n    /**\n     * Цвет заливки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Высота компонента, min = 16; max = 48\n     */\n    height?: number;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 's' | 'm' | 'l';\n\n    /**\n     * Настройки обводки\n     */\n    border?: boolean | Border;\n\n    /**\n     * Пресет компонента\n     */\n    view?: 'red' | 'grey' | 'white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nfunction getSize(height?: number, value?: IndicatorProps['value']) {\n    if (!height) {\n        return typeof value === 'undefined' ? 'xs' : 's';\n    }\n\n    if (height <= 8) return 'xs';\n    if (height <= 18) return 's';\n    if (height <= 24) return 'm';\n    if (height <= 32) return 'l';\n    if (height <= 40) return 'xl';\n\n    return 'xxl';\n}\n\nfunction formatValue(rawValue: IndicatorProps['value']) {\n    if (typeof rawValue === 'number' && rawValue >= 100) return '99+';\n\n    return rawValue;\n}\n\nfunction borderStyles(\n    border: IndicatorProps['border'],\n    view?: IndicatorProps['view'],\n): CSSProperties {\n    if (!border) return {};\n\n    if (typeof border === 'object') {\n        return {\n            outlineColor: border.color,\n            outlineWidth: border.width,\n            outlineStyle: border.style || 'solid',\n        };\n    }\n\n    if (view) return {};\n\n    return {\n        outlineWidth: 2,\n        outlineColor: 'var(--color-light-graphic-primary)',\n        outlineStyle: 'solid',\n    };\n}\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>(\n    (\n        {\n            value,\n            view,\n            color,\n            backgroundColor,\n            height,\n            border,\n            className,\n            dataTestId,\n            style,\n            size = getSize(height, value),\n            ...restProps\n        },\n        ref,\n    ) => {\n        const showContent = typeof value !== 'undefined' && size !== 'xs';\n\n        return (\n            <div\n                ref={ref}\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    view && styles[view],\n                    border === true && styles.border,\n                    className,\n                )}\n                style={{\n                    ...style,\n                    ...(!view && {\n                        backgroundColor,\n                        color,\n                    }),\n                    height,\n                    minWidth: height,\n                    ...borderStyles(border, view),\n                }}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                {showContent && <span className={styles.content}>{formatValue(value)}</span>}\n            </div>\n        );\n    },\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","pre","id","live","className","MDXContent","wrapper","MDXLayout","of","div","title","component","Indicator","name","style","backgroundColor","padding","position","top","left","right","bottom","number","height","undefined","size","select","color","text","border","boolean","view","version","package","design","description","development","changelog","indicator","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","borderStyles","outlineColor","outlineWidth","outlineStyle","forwardRef","ref","rawValue","dataTestId","_ref$size","getSize","restProps","_objectWithoutProperties","_excluded","showContent","_objectSpread","minWidth"],"sourceRoot":""}