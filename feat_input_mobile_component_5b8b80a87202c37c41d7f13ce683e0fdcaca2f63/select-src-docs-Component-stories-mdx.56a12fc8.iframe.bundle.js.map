{"version":3,"file":"select-src-docs-Component-stories-mdx.56a12fc8.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/select/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/select/src/vars.css?a0c2","webpack://@alfalab/core-components/./packages/select/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/select/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"стандартный-вид-компонента\",\n      children: \"Стандартный вид компонента\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"По умолчанию селект вызывает \", _jsx(_components.a, {\n        href: \"?path=/docs/components-popover--docs\",\n        children: \"Popover\"\n      }), \" с вариантами выбора.\\nНа мобильных устройствах варианты выбора отображаются в \", _jsx(_components.a, {\n        href: \"?path=/docs/components-bottomsheet--docs\",\n        children: \"BottomSheet\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"одиночный-выбор\",\n      children: \"Одиночный выбор\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Список селекта с единичным выбором закрывается сразу после выбора одного из значений.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const OPTIONS = [\\n    { key: '1', content: 'Neptunium' },\\n    { key: '2', content: 'Plutonium' },\\n    { key: '3', content: 'Americium' },\\n    { key: '4', content: 'Curium' },\\n    { key: '5', content: 'Berkelium' },\\n    { key: '6', content: 'Californium' },\\n    { key: '7', content: 'Einsteinium' },\\n    { key: '8', content: 'Fermium' },\\n];\\n\\nrender(() => {\\n    return (\\n        <div style={{ width: 320 }}>\\n            <Select\\n                allowUnselect={true}\\n                size='m'\\n                options={OPTIONS}\\n                placeholder='Выберите элемент'\\n                label='Одиночный выбор'\\n                Option={BaseOption}\\n                block={true}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nconst OPTIONS = [\\n    { key: '1', content: 'Neptunium' },\\n    { key: '2', content: 'Plutonium' },\\n    { key: '3', content: 'Americium' },\\n    { key: '4', content: 'Curium' },\\n    { key: '5', content: 'Berkelium' },\\n    { key: '6', content: 'Californium' },\\n    { key: '7', content: 'Einsteinium' },\\n    { key: '8', content: 'Fermium' },\\n];\\n\\nrender(() => {\\n    const [selected, setSelected] = React.useState();\\n\\n    const handleChange = ({ selected }) => {\\n        setSelected(selected);\\n    };\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <SelectMobile\\n                allowUnselect={true}\\n                options={OPTIONS}\\n                placeholder='Выберите элемент'\\n                label='Одиночный выбор'\\n                Option={BaseOption}\\n                block={true}\\n                selected={selected}\\n                onChange={handleChange}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"множественный-выбор\",\n      children: \"Множественный выбор\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В мультиселекте допустимы два паттерна:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"С подтверждением — изменения будут приняты только после нажатия на кнопку подтверждения.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Без подтверждения — изменения принимаются в момент выбора.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"На мобильных устройствах рекомендуется использовать только паттерн с подтверждением выбора.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const OPTIONS = [\\n    { key: '1', content: 'Neptunium' },\\n    { key: '2', content: 'Plutonium' },\\n    { key: '3', content: 'Americium' },\\n    { key: '4', content: 'Curium' },\\n    { key: '5', content: 'Berkelium' },\\n    { key: '6', content: 'Californium' },\\n    { key: '7', content: 'Einsteinium' },\\n    { key: '8', content: 'Fermium' },\\n];\\n\\nrender(() => {\\n    const [selectedFirst, setSelectedFirst] = React.useState([]);\\n    const [selectedSecond, setSelectedSecond] = React.useState([]);\\n\\n    return (\\n        <div style={{ width: 320 }}>\\n            <Select\\n                allowUnselect={true}\\n                size='m'\\n                placeholder='Выберите элементы'\\n                label='Множественный выбор'\\n                Option={BaseOption}\\n                multiple={true}\\n                block={true}\\n                {...useSelectWithApply({\\n                    options: OPTIONS,\\n                    selected: selectedFirst,\\n                    onChange: ({ selectedMultiple }) => {\\n                        setSelectedFirst(selectedMultiple.map((option) => option.key));\\n                    },\\n                })}\\n            />\\n            <div style={{ height: 'var(--gap-m)' }} />\\n            <Select\\n                selected={selectedSecond}\\n                allowUnselect={true}\\n                size='m'\\n                options={OPTIONS}\\n                placeholder='Выберите элементы'\\n                label='Множественный выбор'\\n                Option={BaseOption}\\n                multiple={true}\\n                block={true}\\n                onChange={({ selectedMultiple }) => {\\n                    setSelectedSecond(selectedMultiple.map((option) => option.key));\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nconst OPTIONS = [\\n    { key: '1', content: 'Neptunium' },\\n    { key: '2', content: 'Plutonium' },\\n    { key: '3', content: 'Americium' },\\n    { key: '4', content: 'Curium' },\\n    { key: '5', content: 'Berkelium' },\\n    { key: '6', content: 'Californium' },\\n    { key: '7', content: 'Einsteinium' },\\n    { key: '8', content: 'Fermium' },\\n];\\n\\nrender(() => {\\n    const [selectedFirst, setSelectedFirst] = React.useState([]);\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <SelectMobile\\n                multiple={true}\\n                allowUnselect={true}\\n                options={OPTIONS}\\n                placeholder='Выберите элементы'\\n                label='Множественный выбор'\\n                Option={BaseOption}\\n                block={true}\\n                selected={selectedFirst}\\n                onChange={({ selectedMultiple }) => {\\n                    setSelectedFirst(selectedMultiple.map((option) => option.key));\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"группировка\",\n      children: \"Группировка\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Пункты списка можно группировать.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const OPTIONS = [\\n    {\\n        label: 'nonmetals',\\n        options: [\\n            { key: '1', content: 'Hydrogen' },\\n            { key: '2', content: 'Helium' },\\n        ],\\n    },\\n    {\\n        label: 'metals',\\n        options: [\\n            { key: '3', content: 'Aurum' },\\n            { key: '4', content: 'Platinum' },\\n        ],\\n    },\\n];\\nrender(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Select\\n                allowUnselect={true}\\n                size='m'\\n                options={OPTIONS}\\n                placeholder='Выберите элемент'\\n                label='Сгруппированный список'\\n                Option={BaseOption}\\n                block={true}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nconst OPTIONS = [\\n    {\\n        label: 'nonmetals',\\n        options: [\\n            { key: '1', content: 'Hydrogen' },\\n            { key: '2', content: 'Helium' },\\n        ],\\n    },\\n    {\\n        label: 'metals',\\n        options: [\\n            { key: '3', content: 'Aurum' },\\n            { key: '4', content: 'Platinum' },\\n        ],\\n    },\\n];\\nrender(() => {\\n    const [selected, setSelected] = React.useState();\\n\\n    const handleChange = ({ selected }) => {\\n        setSelected(selected);\\n    };\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <SelectMobile\\n                allowUnselect={true}\\n                options={OPTIONS}\\n                placeholder='Выберите элемент'\\n                label='Сгруппированный список'\\n                Option={BaseOption}\\n                selected={selected}\\n                onChange={handleChange}\\n                block={true}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"подписи-у-пунктов\",\n      children: \"Подписи у пунктов\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Элементы списка могут содержать лейбл или подпись. В данных примерах подпись, расположенная над значением,\\nзамещает лейбл селекта, а подпись, расположенная под значением, не влияет на отображение селекта.\\nПодобное поведение является рекомендуемым и может потребовать кастомизации элементов выпадающего списка и самого поля селекта.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const renderOptionWithAmountOnTop = ({ amount, padding, text }) => {\\n    return (\\n        <GenericWrapper alignItems='center' padding={padding}>\\n            <GenericWrapper column>\\n                <Typography.Text view='component'>\\n                    <Amount\\n                        value={amount}\\n                        minority={100}\\n                        currency='RUR'\\n                        view='withZeroMinorPart'\\n                        transparentMinor={false}\\n                    />\\n                </Typography.Text>\\n                <Typography.Text color='secondary' view='primary-small'>\\n                    {text}\\n                </Typography.Text>\\n            </GenericWrapper>\\n        </GenericWrapper>\\n    );\\n};\\n\\nconst renderOption = ({ amount, padding, text }) => (\\n    <GenericWrapper alignItems='center' padding={padding}>\\n        <GenericWrapper column>\\n            <Typography.Text color='secondary' view='primary-small'>\\n                {text}\\n            </Typography.Text>\\n            <Typography.Text view='component'>\\n                <Amount\\n                    value={amount}\\n                    minority={100}\\n                    currency='RUR'\\n                    view='withZeroMinorPart'\\n                    transparentMinor={false}\\n                />\\n            </Typography.Text>\\n        </GenericWrapper>\\n    </GenericWrapper>\\n);\\n\\nconst DATA = [\\n    {\\n        amount: 3405116,\\n        text: 'Зарплатный счёт',\\n    },\\n    {\\n        amount: 600024,\\n        text: 'Накопительный счёт',\\n    },\\n];\\n\\nconst OPTIONS = DATA.map(({ amount, text }, idx) => ({\\n    key: idx,\\n    content: renderOption({ text, amount, padding: { top: 'xs', bottom: 'xs', left: 's' } }),\\n}));\\n\\nconst OPTIONS_WITH_AMOUNT_ON_TOP = DATA.map(({ amount, text }, idx) => ({\\n    key: idx,\\n    content: renderOptionWithAmountOnTop({\\n        text,\\n        amount,\\n        padding: { top: 'xs', bottom: 'xs', left: 's' },\\n    }),\\n}));\\n\\nrender(() => {\\n    const [selectedFirst, setSelectedFirst] = React.useState([]);\\n    const [selectedSecond, setSelectedSecond] = React.useState([]);\\n\\n    return (\\n        <div style={{ width: 320 }}>\\n            <Select\\n                allowUnselect={true}\\n                size='m'\\n                placeholder='Выберите счёт'\\n                label='Счёт'\\n                Option={BaseOption}\\n                block={true}\\n                selected={selectedFirst}\\n                options={OPTIONS_WITH_AMOUNT_ON_TOP}\\n                valueRenderer={({ selected }) => {\\n                    if (!selected) return '';\\n\\n                    const { amount } = DATA[selected.key];\\n\\n                    return (\\n                        <Amount\\n                            value={amount}\\n                            minority={100}\\n                            currency='RUR'\\n                            view='withZeroMinorPart'\\n                            transparentMinor={false}\\n                        />\\n                    );\\n                }}\\n                onChange={({ selected }) => setSelectedFirst(selected)}\\n            />\\n            <div style={{ height: 'var(--gap-m)' }} />\\n            <Select\\n                selected={selectedSecond}\\n                allowUnselect={true}\\n                size='m'\\n                options={OPTIONS}\\n                placeholder='Выберите счёт'\\n                Option={BaseOption}\\n                block={true}\\n                valueRenderer={({ selected }) => {\\n                    if (!selected) return '';\\n\\n                    const { text, amount } = DATA[selected.key];\\n\\n                    return renderOption({\\n                        text,\\n                        amount,\\n                        padding: { top: 'xs', bottom: 'xs' },\\n                    });\\n                }}\\n                onChange={({ selected }) => {\\n                    setSelectedSecond(selected);\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nconst renderOptionWithAmountOnTop = ({ amount, padding, text }) => {\\n    return (\\n        <GenericWrapper alignItems='center' padding={padding}>\\n            <GenericWrapper column>\\n                <Typography.Text view='component'>\\n                    <Amount\\n                        value={amount}\\n                        minority={100}\\n                        currency='RUR'\\n                        view='withZeroMinorPart'\\n                        transparentMinor={false}\\n                    />\\n                </Typography.Text>\\n                <Typography.Text color='secondary' view='primary-small'>\\n                    {text}\\n                </Typography.Text>\\n            </GenericWrapper>\\n        </GenericWrapper>\\n    );\\n};\\n\\nconst renderOption = ({ amount, padding, text }) => (\\n    <GenericWrapper alignItems='center' padding={padding}>\\n        <GenericWrapper column>\\n            <Typography.Text color='secondary' view='primary-small'>\\n                {text}\\n            </Typography.Text>\\n            <Typography.Text view='component'>\\n                <Amount\\n                    value={amount}\\n                    minority={100}\\n                    currency='RUR'\\n                    view='withZeroMinorPart'\\n                    transparentMinor={false}\\n                />\\n            </Typography.Text>\\n        </GenericWrapper>\\n    </GenericWrapper>\\n);\\n\\nconst DATA = [\\n    {\\n        amount: 3405116,\\n        text: 'Зарплатный счёт',\\n    },\\n    {\\n        amount: 600024,\\n        text: 'Накопительный счёт',\\n    },\\n];\\n\\nconst OPTIONS = DATA.map(({ amount, text }, idx) => ({\\n    key: idx,\\n    content: renderOption({ text, amount, padding: { top: 's', bottom: 's', left: 'm' } }),\\n}));\\n\\nconst OPTIONS_WITH_AMOUNT_ON_TOP = DATA.map(({ amount, text }, idx) => ({\\n    key: idx,\\n    content: renderOptionWithAmountOnTop({\\n        text,\\n        amount,\\n        padding: { top: 's', bottom: 's', left: 'm' },\\n    }),\\n}));\\n\\nrender(() => {\\n    const [selectedFirst, setSelectedFirst] = React.useState([]);\\n    const [selectedSecond, setSelectedSecond] = React.useState([]);\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <SelectMobile\\n                allowUnselect={true}\\n                options={OPTIONS_WITH_AMOUNT_ON_TOP}\\n                placeholder='Выберите счёт'\\n                label='Счёт'\\n                Option={BaseOption}\\n                block={true}\\n                selected={selectedFirst}\\n                onChange={({ selected }) => setSelectedFirst(selected)}\\n                valueRenderer={({ selected }) => {\\n                    if (!selected) return '';\\n\\n                    const { amount } = DATA[selected.key];\\n\\n                    return (\\n                        <Amount\\n                            value={amount}\\n                            minority={100}\\n                            currency='RUR'\\n                            view='withZeroMinorPart'\\n                            transparentMinor={false}\\n                        />\\n                    );\\n                }}\\n            />\\n            <div style={{ height: 'var(--gap-m)' }} />\\n            <SelectMobile\\n                allowUnselect={true}\\n                options={OPTIONS}\\n                placeholder='Выберите счёт'\\n                Option={BaseOption}\\n                block={true}\\n                selected={selectedSecond}\\n                onChange={({ selected }) => setSelectedSecond(selected)}\\n                valueRenderer={({ selected }) => {\\n                    if (!selected) return '';\\n\\n                    const { text, amount } = DATA[selected.key];\\n\\n                    return renderOption({\\n                        text,\\n                        amount,\\n                        padding: { top: 'xs', bottom: 'xs' },\\n                    });\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"другие-примеры-кастомизации\",\n      children: \"Другие примеры кастомизации\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Примеры ниже содержат кастомную вёрстку пунктов выпадающего списка и кастомную шапку выпадающего списка.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n            { key: '3', content: 'Americium' },\\n            { key: '4', content: 'Curium' },\\n            { key: '5', content: 'Berkelium' },\\n            { key: '6', content: 'Californium' },\\n            { key: '7', content: 'Einsteinium' },\\n            { key: '8', content: 'Fermium' },\\n        ],\\n        [],\\n    );\\n\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const handleChange = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple.map((option) => option.key));\\n    };\\n\\n    const selectWithHeader = (\\n        <Select\\n            allowUnselect={true}\\n            placeholder='Выберите элементы'\\n            label='Множественный выбор'\\n            block={true}\\n            optionsListWidth='field'\\n            Option={BaseOption}\\n            size='m'\\n            {...useSelectWithApply({\\n                options,\\n                selected,\\n                showHeaderWithSelectAll: true,\\n                onChange: handleChange,\\n            })}\\n        />\\n    );\\n\\n    const renderOption = ({ text, amount, icon, iconSize = 48, padding }) => {\\n        return (\\n            <GenericWrapper alignItems='center' padding={padding}>\\n                <GenericWrapper>\\n                    <SuperEllipse size={iconSize}>{icon}</SuperEllipse>\\n                </GenericWrapper>\\n                <Gap size='m' direction='horizontal' />\\n                <GenericWrapper>\\n                    <GenericWrapper column>\\n                        <Typography.Text color='secondary' view='primary-small'>\\n                            {text}\\n                        </Typography.Text>\\n                        <Gap size='3xs' />\\n                        <Typography.Text>\\n                            <Amount\\n                                value={amount}\\n                                minority={100}\\n                                currency='RUR'\\n                                view='withZeroMinorPart'\\n                                transparentMinor={true}\\n                            />\\n                        </Typography.Text>\\n                    </GenericWrapper>\\n                </GenericWrapper>\\n            </GenericWrapper>\\n        );\\n    };\\n\\n    const renderSelected = ({ selected }) => {\\n        return selected\\n            ? renderOption({\\n                  ...selected.value,\\n                  padding: undefined,\\n                  iconSize: 40,\\n              })\\n            : undefined;\\n    };\\n\\n    const data = [\\n        {\\n            key: 'Account1',\\n            value: {\\n                text: 'Зарплатный счёт',\\n                amount: 3405161,\\n                icon: <StarMIcon />,\\n                padding: { top: 's', bottom: 's', left: 'm' },\\n            },\\n        },\\n        {\\n            key: 'Account2',\\n            value: {\\n                text: 'Накопительный счёт',\\n                amount: 6000024,\\n                icon: <SafeBoxMIcon />,\\n                padding: { top: 's', bottom: 's', left: 'm' },\\n            },\\n        },\\n    ];\\n\\n    const pureCellOptions = data.map((item) => ({\\n        ...item,\\n        content: renderOption(item.value),\\n    }));\\n\\n    const selectWithPureCell = (\\n        <Select\\n            allowUnselect={true}\\n            placeholder='Выберите счёт'\\n            options={pureCellOptions}\\n            Option={BaseOption}\\n            size='m'\\n            valueRenderer={renderSelected}\\n            block={true}\\n        />\\n    );\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            {selectWithHeader}\\n            <div style={{ height: 'var(--gap-m)' }} />\\n            {selectWithPureCell}\\n        </div>\\n    );\\n});\\n//MOBILE\\nconst OPTIONS = [\\n    { key: '1', content: 'Neptunium' },\\n    { key: '2', content: 'Plutonium' },\\n    { key: '3', content: 'Americium' },\\n    { key: '4', content: 'Curium' },\\n    { key: '5', content: 'Berkelium' },\\n    { key: '6', content: 'Californium' },\\n    { key: '7', content: 'Einsteinium' },\\n    { key: '8', content: 'Fermium' },\\n];\\n\\nrender(() => {\\n    const [selectedFirst, setSelectedFirst] = React.useState();\\n    const [selected, setSelected] = React.useState();\\n\\n    const handleChange = ({ selected }) => {\\n        setSelected(selected);\\n    };\\n\\n    const renderOption = ({ text, amount, icon, iconSize = 48, padding }) => {\\n        return (\\n            <GenericWrapper alignItems='center' padding={padding}>\\n                <GenericWrapper>\\n                    <SuperEllipse size={iconSize}>{icon}</SuperEllipse>\\n                </GenericWrapper>\\n                <Gap size='m' direction='horizontal' />\\n                <GenericWrapper>\\n                    <GenericWrapper column>\\n                        <Typography.Text color='secondary' view='primary-small'>\\n                            {text}\\n                        </Typography.Text>\\n                        <Gap size='3xs' />\\n                        <Typography.Text>\\n                            <Amount\\n                                value={amount}\\n                                minority={100}\\n                                currency='RUR'\\n                                view='withZeroMinorPart'\\n                                transparentMinor={true}\\n                            />\\n                        </Typography.Text>\\n                    </GenericWrapper>\\n                </GenericWrapper>\\n            </GenericWrapper>\\n        );\\n    };\\n\\n    const renderSelected = ({ selected }) => {\\n        return selected\\n            ? renderOption({\\n                  ...selected.value,\\n                  padding: undefined,\\n                  iconSize: 40,\\n              })\\n            : undefined;\\n    };\\n\\n    const data = [\\n        {\\n            key: 'Account1',\\n            value: {\\n                text: 'Зарплатный счёт',\\n                amount: 3405161,\\n                icon: <StarMIcon />,\\n                padding: { top: 's', bottom: 's', left: 'm' },\\n            },\\n        },\\n        {\\n            key: 'Account2',\\n            value: {\\n                text: 'Накопительный счёт',\\n                amount: 6000024,\\n                icon: <SafeBoxMIcon />,\\n                padding: { top: 's', bottom: 's', left: 'm' },\\n            },\\n        },\\n    ];\\n\\n    const pureCellOptions = data.map((item) => ({\\n        ...item,\\n        content: renderOption(item.value),\\n    }));\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <SelectMobile\\n                selected={selectedFirst}\\n                allowUnselect={true}\\n                placeholder='Выберите элементы'\\n                label='Множественный выбор'\\n                block={true}\\n                optionsListWidth='field'\\n                Option={BaseOption}\\n                size='m'\\n                options={OPTIONS}\\n                multiple={true}\\n                showHeaderWithSelectAll={true}\\n                onChange={({ selectedMultiple }) =>\\n                    setSelectedFirst(selectedMultiple.map((option) => option.key))\\n                }\\n            />\\n            <Gap size='m' />\\n            <SelectMobile\\n                allowUnselect={true}\\n                placeholder='Выберите счёт'\\n                options={pureCellOptions}\\n                Option={BaseOption}\\n                size='m'\\n                valueRenderer={renderSelected}\\n                block={true}\\n                selected={selected}\\n                onChange={handleChange}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"формат-отображения-списков\",\n      children: \"Формат отображения списков\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"В редких кейсах может потребоваться использовать селект с нативным выпадающим списком или\\nоткрывать его в \", _jsx(_components.a, {\n        href: \"?path=/docs/components-modal--docs\",\n        children: \"Modal\"\n      }), \"\\nвместо \", _jsx(_components.a, {\n        href: \"?path=/docs/components-bottomsheet--docs\",\n        children: \"BottomSheet\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const groups = [\\n    {\\n        label: 'Группа №1',\\n        options: [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n        ],\\n    },\\n    {\\n        label: 'Группа №2',\\n        options: [\\n            { key: '3', content: 'Berkelium' },\\n            { key: '4', content: 'Californium' },\\n        ],\\n    },\\n];\\n\\nconst options = [\\n    { key: '1', content: 'Neptunium' },\\n    { key: '2', content: 'Plutonium' },\\n    { key: '3', content: 'Americium' },\\n    { key: '4', content: 'Curium' },\\n    { key: '5', content: 'Berkelium' },\\n    { key: '6', content: 'Californium' },\\n    { key: '7', content: 'Einsteinium' },\\n    { key: '8', content: 'Fermium' },\\n];\\n\\nrender(() => {\\n    const [selectedNative, setSelectedNative] = React.useState();\\n    const [selectedModal, setSelectedModal] = React.useState();\\n\\n    const handleChangeNative = ({ selected }) => {\\n        setSelectedNative(selected);\\n    };\\n\\n    const handleChangeModal = ({ selected }) => {\\n        setSelectedModal(selected);\\n    };\\n\\n    const isMobile = document.body.clientWidth < 450;\\n\\n    const MobileSelect = isMobile ? SelectModalMobile : Select;\\n\\n    return (\\n        <div style={{ width: isMobile ? '100%' : 320 }}>\\n            <Select\\n                allowUnselect={true}\\n                size='m'\\n                options={groups}\\n                placeholder='Выберите элемент'\\n                label='Одиночный выбор'\\n                nativeSelect={true}\\n                block={true}\\n                selected={selectedNative}\\n                onChange={handleChangeNative}\\n            />\\n            <div style={{ height: 'var(--gap-m)' }} />\\n            <MobileSelect\\n                size='m'\\n                allowUnselect={true}\\n                options={options}\\n                placeholder='Выберите элемент'\\n                label='Одиночный выбор'\\n                block={true}\\n                Option={BaseOption}\\n                selected={selectedModal}\\n                onChange={handleChangeModal}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"длинные-списки-и-ленивая-загрузка\",\n      children: \"Длинные списки и ленивая загрузка\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Для рендера большого количества данных используйте \", _jsx(_components.code, {\n        children: \"OptionsList={VirtualOptionsList}\"\n      }), \". На время подгрузки можно использовать скелетон.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const optionsForVirtualList = React.useMemo(\\n        () =>\\n            new Array(1000).fill().map((_, index) => {\\n                const variableSizeText = `Вы восхитительны!`;\\n\\n                return {\\n                    key: index.toString(),\\n                    content: `${index}. ${variableSizeText}`,\\n                };\\n            }),\\n        [],\\n    );\\n\\n    const [loading, setLoading] = React.useState(true);\\n\\n    const loadingProps = useSelectWithLoading({\\n        loading,\\n        Option: (props) => (\\n            <BaseOption\\n                {...props}\\n                option={{\\n                    ...props.option,\\n                    content: <div style={{ padding: 'var(--gap-s)' }}>{props.option.content}</div>,\\n                }}\\n            />\\n        ),\\n    });\\n\\n    const handleOpen = () => {\\n        setLoading(true);\\n        setTimeout(() => setLoading(false), 2000);\\n    };\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Select\\n                onOpen={handleOpen}\\n                size='m'\\n                block={true}\\n                placeholder='Выберите один из тысячи'\\n                label='Одиночный выбор'\\n                options={optionsForVirtualList}\\n                OptionsList={VirtualOptionsList}\\n                circularNavigation={true}\\n                allowUnselect={true}\\n                optionsListWidth='field'\\n                Option={BaseOption}\\n                {...loadingProps}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [selected, setSelected] = React.useState();\\n\\n    const handleChange = ({ selected }) => {\\n        setSelected(selected);\\n    };\\n\\n    const optionsForVirtualList = React.useMemo(\\n        () =>\\n            new Array(1000).fill().map((_, index) => {\\n                const variableSizeText = `Вы восхитительны!`;\\n\\n                return {\\n                    key: index.toString(),\\n                    content: `${index}. ${variableSizeText}`,\\n                };\\n            }),\\n        [],\\n    );\\n\\n    const [loading, setLoading] = React.useState(true);\\n\\n    const loadingProps = useSelectWithLoading({\\n        visibleOptions: 15,\\n        loading,\\n        Option: (props) => (\\n            <BaseOption\\n                {...props}\\n                option={{\\n                    ...props.option,\\n                    content: (\\n                        <div style={{ padding: 'var(--gap-m) var(--gap-s)' }}>\\n                            {props.option.content}\\n                        </div>\\n                    ),\\n                }}\\n            />\\n        ),\\n    });\\n\\n    const handleOpen = () => {\\n        setLoading(true);\\n        setTimeout(() => setLoading(false), 2000);\\n    };\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{`.hideScrollbar {overflow: hidden}`}</style>\\n            <SelectMobile\\n                bottomSheetProps={loading ? { containerClassName: 'hideScrollbar' } : undefined}\\n                size='m'\\n                onOpen={handleOpen}\\n                block={true}\\n                placeholder='Выберите один из тысячи'\\n                label='Одиночный выбор'\\n                options={optionsForVirtualList}\\n                OptionsList={VirtualOptionsList}\\n                circularNavigation={true}\\n                allowUnselect={true}\\n                Option={BaseOption}\\n                selected={selected}\\n                onChange={handleChange}\\n                {...loadingProps}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"использование-в-форме\",\n      children: \"Использование в форме\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Чтобы использовать селект внутри формы — следует указать атрибут \", _jsx(_components.code, {\n        children: \"name\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n            { key: '3', content: 'Americium' },\\n            { key: '4', content: 'Curium' },\\n            { key: '5', content: 'Berkelium' },\\n            { key: '6', content: 'Californium' },\\n            { key: '7', content: 'Einsteinium' },\\n            { key: '8', content: 'Fermium' },\\n        ],\\n        [],\\n    );\\n\\n    const [serialized, setSerialized] = React.useState();\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const onSubmit = (event) => {\\n        event.preventDefault();\\n\\n        const form = event.target;\\n        const formData = new FormData(form);\\n\\n        setSerialized(new URLSearchParams(formData).toString());\\n    };\\n\\n    const handleChange = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple.map((option) => option.key));\\n    };\\n\\n    return (\\n        <form onSubmit={onSubmit}>\\n            <Space>\\n                <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                    <Select\\n                        allowUnselect={true}\\n                        placeholder='Выберите элементы'\\n                        label='Множественный выбор'\\n                        block={true}\\n                        name='select'\\n                        optionsListWidth='field'\\n                        Option={BaseOption}\\n                        size='m'\\n                        selected={selected}\\n                        {...useSelectWithApply({\\n                            options,\\n                            selected,\\n                            onChange: handleChange,\\n                        })}\\n                    />\\n                </div>\\n\\n                <Button size='xs' type='submit'>\\n                    Отправить\\n                </Button>\\n\\n                <div>serialized: {serialized}</div>\\n            </Space>\\n        </form>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n            { key: '3', content: 'Americium' },\\n            { key: '4', content: 'Curium' },\\n            { key: '5', content: 'Berkelium' },\\n            { key: '6', content: 'Californium' },\\n            { key: '7', content: 'Einsteinium' },\\n            { key: '8', content: 'Fermium' },\\n        ],\\n        [],\\n    );\\n\\n    const [serialized, setSerialized] = React.useState();\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const onSubmit = (event) => {\\n        event.preventDefault();\\n\\n        const form = event.target;\\n        const formData = new FormData(form);\\n\\n        setSerialized(new URLSearchParams(formData).toString());\\n    };\\n\\n    const handleChange = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple.map((option) => option.key));\\n    };\\n\\n    return (\\n        <form onSubmit={onSubmit}>\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <SelectMobile\\n                    allowUnselect={true}\\n                    size='m'\\n                    block={true}\\n                    options={options}\\n                    placeholder='Выберите элемент'\\n                    label='Множественный выбор'\\n                    name='select'\\n                    multiple={true}\\n                    onChange={handleChange}\\n                    selected={selected}\\n                    Option={BaseOption}\\n                />\\n            </div>\\n\\n            <Gap size='m' />\\n\\n            <Button size='xs' type='submit'>\\n                Отправить\\n            </Button>\\n\\n            <Gap size='m' />\\n\\n            <div>serialized: {serialized}</div>\\n        </form>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"optionshape-вместо-ключей-для-выбранных-пунктов\",\n      children: \"OptionShape вместо ключей для выбранных пунктов\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Иногда может быть удобнее использовать в качестве выбранных значений не ключи, а сами объекты.\\nВ этом случае просто передавайте их через свойство \", _jsx(_components.code, {\n        children: \"selected\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n            { key: '3', content: 'Americium' },\\n            { key: '4', content: 'Curium' },\\n            { key: '5', content: 'Berkelium' },\\n            { key: '6', content: 'Californium' },\\n            { key: '7', content: 'Einsteinium' },\\n            { key: '8', content: 'Fermium' },\\n        ],\\n        [],\\n    );\\n\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const handleChange = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple);\\n    };\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Select\\n                allowUnselect={true}\\n                placeholder='Выберите элементы'\\n                label='Множественный выбор'\\n                block={true}\\n                name='select'\\n                optionsListWidth='field'\\n                Option={BaseOption}\\n                size='m'\\n                selected={selected}\\n                {...useSelectWithApply({\\n                    options,\\n                    selected,\\n                    onChange: handleChange,\\n                })}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n            { key: '3', content: 'Americium' },\\n            { key: '4', content: 'Curium' },\\n            { key: '5', content: 'Berkelium' },\\n            { key: '6', content: 'Californium' },\\n            { key: '7', content: 'Einsteinium' },\\n            { key: '8', content: 'Fermium' },\\n        ],\\n        [],\\n    );\\n\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const handleChange = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple);\\n    };\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <SelectMobile\\n                allowUnselect={true}\\n                size='m'\\n                block={true}\\n                options={options}\\n                placeholder='Выберите элемент'\\n                label='Множественный выбор'\\n                name='select'\\n                multiple={true}\\n                onChange={handleChange}\\n                selected={selected}\\n                Option={BaseOption}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"другие-селекты\",\n      children: \"Другие селекты\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"На основе селекта построены такие компоненты как \", _jsx(_components.a, {\n        href: \"?path=/docs/components-pickerbutton--docs\",\n        children: \"PickerButton\"\n      }), \" и\\n\", _jsx(_components.a, {\n        href: \"?path=/docs/components-inputautocomplete--docs\",\n        children: \"InputAutocomplete\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология-поля-ввода\",\n      children: \"Морфология поля ввода\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/components-formcontrol--docs\",\n        children: \"FormControl\"\n      }), \", поэтому наследует все доступные для него настройки.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"строение-списка\",\n      children: \"Строение списка\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Список состоит из трех частей: \", _jsx(_components.code, {\n        children: \"Header\"\n      }), \", \", _jsx(_components.code, {\n        children: \"Body\"\n      }), \", \", _jsx(_components.code, {\n        children: \"Footer\"\n      }), \". Каждая часть содержит слот в который можно передать кастомный контент.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Neptunium' },\\n            { key: '2', content: 'Plutonium' },\\n            { key: '3', content: 'Americium' },\\n            { key: '4', content: 'Curium' },\\n            { key: '5', content: 'Berkelium' },\\n        ],\\n        [],\\n    );\\n\\n    return (\\n        <div\\n            style={{\\n                width: document.body.clientWidth < 450 ? '100%' : 320,\\n                paddingTop: 'var(--select-options-list-top-padding)',\\n                paddingBottom: 'var(--select-options-list-bottom-padding)',\\n                boxShadow: 'var(--select-options-list-box-shadow)',\\n                borderRadius: 'var(--select-options-list-border-radius)',\\n                background: 'var(--select-option-background)',\\n                overflow: 'hidden',\\n            }}\\n        >\\n            <OptionsList\\n                Option={BaseOption}\\n                getOptionProps={(option, index) => ({\\n                    index,\\n                    option,\\n                    innerProps: {\\n                        style: {\\n                            background: 'var(--color-light-bg-positive-muted)',\\n                            borderBottom:\\n                                index + 1 !== options.length\\n                                    ? '1px solid var(--color-light-bg-info)'\\n                                    : 'none',\\n                        },\\n                    },\\n                })}\\n                options={options}\\n                header={\\n                    <div\\n                        style={{\\n                            height: 12,\\n                            background: 'var(--color-light-bg-negative-muted)',\\n                        }}\\n                    ></div>\\n                }\\n                footer={\\n                    <div\\n                        style={{\\n                            height: 12,\\n                            background: 'var(--color-light-bg-negative-muted)',\\n                        }}\\n                    ></div>\\n                }\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"ширина-списка\",\n      children: \"Ширина списка\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"По умолчанию ширину выпадающего меню задает контент пунктов.\\nЕсли контент слишком длинный, с помощью свойства \", _jsx(_components.code, {\n        children: \"optionsListWidth='field'\"\n      }), \" можно установить ширину списка равной ширине инициирующего контрола,\\nа лишний контент перенесётся или обрежется. При необходимости можно задать кастомную ширину списка.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"высота-списка\",\n      children: \"Высота списка\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Максимальную высоту списка можно настраивать с помощью свойства \", _jsx(_components.code, {\n        children: \"visibleOptions\"\n      }), \". По умолчанию она равна 5,5 ячейкам (\", _jsx(_components.code, {\n        children: \"visibleOptions=5\"\n      }), \").\\nЕсли ячеек на единицу больше переданного параметра, то они отобразятся без скролла.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"позиционирование-списка\",\n      children: \"Позиционирование списка\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"По умолчанию список располагается под вызвавшим его контролом.\\nПри необходимости положение выпадающего списка можно изменить с помощью свойства \", _jsx(_components.code, {\n        children: \"popoverPosition\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"строение-ячейки\",\n      children: \"Строение ячейки\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Для кастомных списков можно использовать ячейку \", _jsx(_components.a, {\n        href: \"?path=/docs/components-purecell--docs\",\n        children: \"PureCell\"\n      }), \" с расширением в виде контрола.\\nБлагодаря гибкой настройке такой ячейки можно получить необходимую конфигурацию элементов списка.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \":root {\\n    --select-error-color: var(--color-light-text-negative);\\n    --select-arrow-color: var(--color-light-graphic-primary);\\n    --select-arrow-hover-opacity: 0.7;\\n\\n    /* options list */\\n\\n    --select-options-list-border-radius: var(--border-radius-m);\\n    --select-options-list-box-shadow: var(--shadow-m);\\n    --select-options-list-offset: var(--gap-2xs);\\n    --select-options-list-top-padding: 0;\\n    --select-options-list-bottom-padding: 0;\\n    --select-options-list-empty-placeholder-color: var(--color-light-text-secondary);\\n    --select-option-divider-display: none;\\n    --select-option-divider-background: var(--color-light-border-primary);\\n\\n    /* option */\\n\\n    --select-option-left-padding: var(--gap-s);\\n    --select-option-right-padding: var(--gap-s);\\n    --select-option-l-left-padding: var(--gap-m);\\n    --select-option-l-right-padding: var(--gap-m);\\n    --select-option-background: var(--color-light-bg-primary);\\n    --select-option-selected-background: var(--color-light-bg-primary);\\n    --select-option-hover-background: var(--color-light-bg-secondary);\\n    --select-option-active-background: var(--color-light-bg-tertiary);\\n    --select-option-disabled-background: var(--color-light-bg-primary);\\n    --select-option-color: var(--color-light-text-primary);\\n    --select-option-selected-color: var(--color-light-text-primary);\\n    --select-option-hover-color: var(--color-light-text-primary);\\n    --select-option-active-color: var(--color-light-text-primary);\\n    --select-option-disabled-color: var(--color-light-text-secondary);\\n\\n    /* checkmark */\\n\\n    --select-checkmark-margin: 0 var(--gap-xs) 0 0;\\n    --select-checkmark-margin-after: var(--select-checkmark-margin);\\n    --select-checkmark-size: 4px;\\n    --select-checkmark-before-display: 'flex';\\n    --select-checkmark-after-display: none;\\n    --select-checkmark-before-display-multiple: block;\\n    --select-checkmark-after-display-single: none;\\n    --select-checkmark-unselected-opacity: 0;\\n    --select-checkmark-background: var(--color-light-graphic-primary);\\n    --select-checkmark-border-radius: var(--border-radius-circle);\\n    --select-mobile-checkmark-display-icon: block;\\n    --select-mobile-checkmark-display-badge: none;\\n\\n    /* optgroup */\\n\\n    --select-optgroup-color: var(--color-light-text-secondary);\\n    --select-optgroup-background: var(--color-light-bg-primary);\\n    --select-optgroup-left-padding: var(--gap-s);\\n    --select-optgroup-right-padding: var(--gap-s);\\n    --select-optgroup-l-left-padding: var(--gap-m);\\n    --select-optgroup-l-right-padding: var(--gap-m);\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport vars from '!!raw-loader!../vars.css';\nimport {Select as SelectTS} from '../Component';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Select } from '@alfalab/core-components/select';\\nimport { SelectResponsive } from '@alfalab/core-components/select/responsive';\\n\\n// BottomSheet version\\nimport { SelectMobile } from '@alfalab/core-components/select/mobile';\\n\\n// Modal version\\nimport { SelectModalMobile } from '@alfalab/core-components/select/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: SelectTS\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: vars\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, boolean, number, select as selectKnob } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Select } from '@alfalab/core-components-select';\nimport { SelectResponsive } from '@alfalab/core-components-select/responsive';\nimport { SelectMobile, SelectModalMobile } from '@alfalab/core-components-select/mobile';\nimport { Arrow as ArrowComponent } from '@alfalab/core-components-select/components/arrow';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const options = [{\n  key: '1',\n  content: 'Neptunium'\n}, {\n  key: '2',\n  content: 'Plutonium'\n}, {\n  key: '3',\n  content: 'Americium'\n}, {\n  key: '4',\n  content: 'Curium'\n}, {\n  key: '5',\n  content: 'Berkelium'\n}, {\n  key: '6',\n  content: 'Californium'\n}, {\n  key: '7',\n  content: 'Einsteinium'\n}, {\n  key: '8',\n  content: 'Fermium'\n}, {\n  key: '9',\n  content: 'Vanadium'\n}, {\n  key: '10',\n  content: 'Manganese'\n}, {\n  key: '11',\n  content: 'Silicon'\n}, {\n  key: '12',\n  content: 'Titanium'\n}, {\n  key: '13',\n  content: 'Neptunium'\n}, {\n  key: '14',\n  content: 'Plutonium'\n}, {\n  key: '15',\n  content: 'Americium'\n}, {\n  key: '16',\n  content: 'Curium'\n}, {\n  key: '17',\n  content: 'Berkelium'\n}];\nexport const POSITION_OPTIONS = ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Select\",\n      component: Select,\n      id: \"Select\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Select\",\n      children: React.createElement(() => {\n        const [selected, setSelected] = React.useState([]);\n        const handleChange = ({\n          selectedMultiple\n        }) => {\n          setSelected(selectedMultiple.map(option => option.key));\n        };\n        const block = boolean('block', false);\n        const size = selectKnob('size', ['s', 'm', 'l', 'xl'], 's');\n        const disabled = boolean('disabled', false);\n        const error = text('error', '');\n        const hint = text('hint', '');\n        const multiple = boolean('multiple', false);\n        const allowUnselect = boolean('allowUnselect', true);\n        const closeOnSelect = boolean('closeOnSelect', true);\n        const Arrow = boolean('Arrow', true) ? ArrowComponent : () => null;\n        const circularNavigation = boolean('circularNavigation', false);\n        const nativeSelect = boolean('nativeSelect', false);\n        const placeholder = text('placeholder', 'Выберите элемент');\n        const label = text('label', 'Элемент');\n        const labelView = selectKnob('labelView', ['inner', 'outer'], 'inner');\n        const visibleOptions = number('visibleOptions', 5);\n        const defaultOpen = boolean('defaultOpen', false);\n        const popoverPosition = selectKnob('popoverPosition', POSITION_OPTIONS, 'bottom-start');\n        const optionsListWidth = selectKnob('optionsListWidth', ['field', 'content'], 'field');\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: /*#__PURE__*/_jsx(Select, {\n            block: block,\n            size: size,\n            disabled: disabled,\n            error: error,\n            hint: hint,\n            options: options,\n            multiple: multiple,\n            onChange: handleChange,\n            selected: selected,\n            allowUnselect: allowUnselect,\n            closeOnSelect: closeOnSelect,\n            Arrow: Arrow,\n            circularNavigation: circularNavigation,\n            nativeSelect: nativeSelect,\n            placeholder: placeholder,\n            label: label,\n            labelView: labelView,\n            visibleOptions: visibleOptions,\n            defaultOpen: defaultOpen,\n            popoverPosition: popoverPosition,\n            optionsListWidth: optionsListWidth\n          })\n        });\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"SelectMobile\",\n      children: React.createElement(() => {\n        const [selected, setSelected] = React.useState([]);\n        const handleChange = ({\n          selectedMultiple\n        }) => {\n          setSelected(selectedMultiple.map(option => option.key));\n        };\n        const block = boolean('block', false);\n        const size = selectKnob('size', ['s', 'm', 'l', 'xl'], 's');\n        const disabled = boolean('disabled', false);\n        const error = text('error', '');\n        const hint = text('hint', '');\n        const multiple = boolean('multiple', false);\n        const allowUnselect = boolean('allowUnselect', true);\n        const closeOnSelect = boolean('closeOnSelect', true);\n        const Arrow = boolean('Arrow', true) ? ArrowComponent : () => null;\n        const circularNavigation = boolean('circularNavigation', false);\n        const placeholder = text('placeholder', 'Выберите элемент');\n        const label = text('label', 'Элемент');\n        const labelView = selectKnob('labelView', ['inner', 'outer'], 'inner');\n        const defaultOpen = boolean('defaultOpen', false);\n        const swipeable = boolean('swipeable', true);\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: /*#__PURE__*/_jsx(SelectMobile, {\n            block: block,\n            size: size,\n            disabled: disabled,\n            error: error,\n            hint: hint,\n            options: options,\n            multiple: multiple,\n            onChange: handleChange,\n            selected: selected,\n            allowUnselect: allowUnselect,\n            closeOnSelect: closeOnSelect,\n            Arrow: Arrow,\n            circularNavigation: circularNavigation,\n            placeholder: placeholder,\n            label: label,\n            labelView: labelView,\n            defaultOpen: defaultOpen,\n            swipeable: swipeable\n          })\n        });\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"SelectResponsive\",\n      children: React.createElement(() => {\n        const [selected, setSelected] = React.useState([]);\n        const handleChange = ({\n          selectedMultiple\n        }) => {\n          setSelected(selectedMultiple.map(option => option.key));\n        };\n        const block = boolean('block', false);\n        const size = selectKnob('size', ['s', 'm', 'l', 'xl'], 's');\n        const disabled = boolean('disabled', false);\n        const error = text('error', '');\n        const hint = text('hint', '');\n        const multiple = boolean('multiple', false);\n        const allowUnselect = boolean('allowUnselect', true);\n        const closeOnSelect = boolean('closeOnSelect', true);\n        const Arrow = boolean('Arrow', true) ? ArrowComponent : () => null;\n        const circularNavigation = boolean('circularNavigation', false);\n        const nativeSelect = boolean('nativeSelect', false);\n        const placeholder = text('placeholder', 'Выберите элемент');\n        const label = text('label', 'Элемент');\n        const labelView = selectKnob('labelView', ['inner', 'outer'], 'inner');\n        const visibleOptions = number('visibleOptions', 5);\n        const defaultOpen = boolean('defaultOpen', false);\n        const popoverPosition = selectKnob('popoverPosition', POSITION_OPTIONS, 'bottom-start');\n        const optionsListWidth = selectKnob('optionsListWidth', ['field', 'content'], 'field');\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: /*#__PURE__*/_jsx(SelectResponsive, {\n            block: block,\n            size: size,\n            disabled: disabled,\n            error: error,\n            hint: hint,\n            options: options,\n            multiple: multiple,\n            onChange: handleChange,\n            selected: selected,\n            allowUnselect: allowUnselect,\n            closeOnSelect: closeOnSelect,\n            Arrow: Arrow,\n            circularNavigation: circularNavigation,\n            nativeSelect: nativeSelect,\n            placeholder: placeholder,\n            label: label,\n            labelView: labelView,\n            visibleOptions: visibleOptions,\n            defaultOpen: defaultOpen,\n            popoverPosition: popoverPosition,\n            optionsListWidth: optionsListWidth\n          })\n        });\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"SelectModalMobile\",\n      children: React.createElement(() => {\n        const [selected, setSelected] = React.useState([]);\n        const handleChange = ({\n          selectedMultiple\n        }) => {\n          setSelected(selectedMultiple.map(option => option.key));\n        };\n        const block = boolean('block', false);\n        const size = selectKnob('size', ['s', 'm', 'l', 'xl'], 's');\n        const disabled = boolean('disabled', false);\n        const error = text('error', '');\n        const hint = text('hint', '');\n        const multiple = boolean('multiple', false);\n        const allowUnselect = boolean('allowUnselect', true);\n        const closeOnSelect = boolean('closeOnSelect', true);\n        const Arrow = boolean('Arrow', true) ? ArrowComponent : () => null;\n        const circularNavigation = boolean('circularNavigation', false);\n        const placeholder = text('placeholder', 'Выберите элемент');\n        const label = text('label', 'Элемент');\n        const labelView = selectKnob('labelView', ['inner', 'outer'], 'inner');\n        const defaultOpen = boolean('defaultOpen', false);\n        const swipeable = boolean('swipeable', true);\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: /*#__PURE__*/_jsx(SelectModalMobile, {\n            block: block,\n            size: size,\n            disabled: disabled,\n            error: error,\n            hint: hint,\n            options: options,\n            multiple: multiple,\n            onChange: handleChange,\n            selected: selected,\n            allowUnselect: allowUnselect,\n            closeOnSelect: closeOnSelect,\n            Arrow: Arrow,\n            circularNavigation: circularNavigation,\n            placeholder: placeholder,\n            label: label,\n            labelView: labelView,\n            defaultOpen: defaultOpen\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Select\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/select\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=184%3A19405\",\n      children: \"\\u041F\\u043E\\u043B\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0430 \\u0441 \\u0432\\u044B\\u043F\\u0430\\u0434\\u0430\\u044E\\u0449\\u0438\\u043C \\u0441\\u043F\\u0438\\u0441\\u043A\\u043E\\u043C.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const select = () => React.createElement(() => {\n  const [selected, setSelected] = React.useState([]);\n  const handleChange = ({\n    selectedMultiple\n  }) => {\n    setSelected(selectedMultiple.map(option => option.key));\n  };\n  const block = boolean(\"block\", false);\n  const size = selectKnob(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\");\n  const disabled = boolean(\"disabled\", false);\n  const error = text(\"error\", \"\");\n  const hint = text(\"hint\", \"\");\n  const multiple = boolean(\"multiple\", false);\n  const allowUnselect = boolean(\"allowUnselect\", true);\n  const closeOnSelect = boolean(\"closeOnSelect\", true);\n  const Arrow = boolean(\"Arrow\", true) ? ArrowComponent : () => null;\n  const circularNavigation = boolean(\"circularNavigation\", false);\n  const nativeSelect = boolean(\"nativeSelect\", false);\n  const placeholder = text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const label = text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const labelView = selectKnob(\"labelView\", [\"inner\", \"outer\"], \"inner\");\n  const visibleOptions = number(\"visibleOptions\", 5);\n  const defaultOpen = boolean(\"defaultOpen\", false);\n  const popoverPosition = selectKnob(\"popoverPosition\", POSITION_OPTIONS, \"bottom-start\");\n  const optionsListWidth = selectKnob(\"optionsListWidth\", [\"field\", \"content\"], \"field\");\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    children: /*#__PURE__*/_jsx(Select, {\n      block: block,\n      size: size,\n      disabled: disabled,\n      error: error,\n      hint: hint,\n      options: options,\n      multiple: multiple,\n      onChange: handleChange,\n      selected: selected,\n      allowUnselect: allowUnselect,\n      closeOnSelect: closeOnSelect,\n      Arrow: Arrow,\n      circularNavigation: circularNavigation,\n      nativeSelect: nativeSelect,\n      placeholder: placeholder,\n      label: label,\n      labelView: labelView,\n      visibleOptions: visibleOptions,\n      defaultOpen: defaultOpen,\n      popoverPosition: popoverPosition,\n      optionsListWidth: optionsListWidth\n    })\n  });\n});\nselect.storyName = 'Select';\nselect.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [selected, setSelected] = React.useState([]);\\n  const handleChange = ({\\n    selectedMultiple\\n  }) => {\\n    setSelected(selectedMultiple.map(option => option.key));\\n  };\\n  const block = boolean(\\\"block\\\", false);\\n  const size = selectKnob(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\");\\n  const disabled = boolean(\\\"disabled\\\", false);\\n  const error = text(\\\"error\\\", \\\"\\\");\\n  const hint = text(\\\"hint\\\", \\\"\\\");\\n  const multiple = boolean(\\\"multiple\\\", false);\\n  const allowUnselect = boolean(\\\"allowUnselect\\\", true);\\n  const closeOnSelect = boolean(\\\"closeOnSelect\\\", true);\\n  const Arrow = boolean(\\\"Arrow\\\", true) ? ArrowComponent : () => null;\\n  const circularNavigation = boolean(\\\"circularNavigation\\\", false);\\n  const nativeSelect = boolean(\\\"nativeSelect\\\", false);\\n  const placeholder = text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const label = text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const labelView = selectKnob(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\");\\n  const visibleOptions = number(\\\"visibleOptions\\\", 5);\\n  const defaultOpen = boolean(\\\"defaultOpen\\\", false);\\n  const popoverPosition = selectKnob(\\\"popoverPosition\\\", POSITION_OPTIONS, \\\"bottom-start\\\");\\n  const optionsListWidth = selectKnob(\\\"optionsListWidth\\\", [\\\"field\\\", \\\"content\\\"], \\\"field\\\");\\n  return <div style={{\\n    backgroundColor: \\\"transparent\\\"\\n  }}>\\n                <Select block={block} size={size} disabled={disabled} error={error} hint={hint} options={options} multiple={multiple} onChange={handleChange} selected={selected} allowUnselect={allowUnselect} closeOnSelect={closeOnSelect} Arrow={Arrow} circularNavigation={circularNavigation} nativeSelect={nativeSelect} placeholder={placeholder} label={label} labelView={labelView} visibleOptions={visibleOptions} defaultOpen={defaultOpen} popoverPosition={popoverPosition} optionsListWidth={optionsListWidth} />\\n            </div>;\\n})'\n  }\n};\nexport const selectMobile = () => React.createElement(() => {\n  const [selected, setSelected] = React.useState([]);\n  const handleChange = ({\n    selectedMultiple\n  }) => {\n    setSelected(selectedMultiple.map(option => option.key));\n  };\n  const block = boolean(\"block\", false);\n  const size = selectKnob(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\");\n  const disabled = boolean(\"disabled\", false);\n  const error = text(\"error\", \"\");\n  const hint = text(\"hint\", \"\");\n  const multiple = boolean(\"multiple\", false);\n  const allowUnselect = boolean(\"allowUnselect\", true);\n  const closeOnSelect = boolean(\"closeOnSelect\", true);\n  const Arrow = boolean(\"Arrow\", true) ? ArrowComponent : () => null;\n  const circularNavigation = boolean(\"circularNavigation\", false);\n  const placeholder = text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const label = text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const labelView = selectKnob(\"labelView\", [\"inner\", \"outer\"], \"inner\");\n  const defaultOpen = boolean(\"defaultOpen\", false);\n  const swipeable = boolean(\"swipeable\", true);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    children: /*#__PURE__*/_jsx(SelectMobile, {\n      block: block,\n      size: size,\n      disabled: disabled,\n      error: error,\n      hint: hint,\n      options: options,\n      multiple: multiple,\n      onChange: handleChange,\n      selected: selected,\n      allowUnselect: allowUnselect,\n      closeOnSelect: closeOnSelect,\n      Arrow: Arrow,\n      circularNavigation: circularNavigation,\n      placeholder: placeholder,\n      label: label,\n      labelView: labelView,\n      defaultOpen: defaultOpen,\n      swipeable: swipeable\n    })\n  });\n});\nselectMobile.storyName = 'SelectMobile';\nselectMobile.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [selected, setSelected] = React.useState([]);\\n  const handleChange = ({\\n    selectedMultiple\\n  }) => {\\n    setSelected(selectedMultiple.map(option => option.key));\\n  };\\n  const block = boolean(\\\"block\\\", false);\\n  const size = selectKnob(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\");\\n  const disabled = boolean(\\\"disabled\\\", false);\\n  const error = text(\\\"error\\\", \\\"\\\");\\n  const hint = text(\\\"hint\\\", \\\"\\\");\\n  const multiple = boolean(\\\"multiple\\\", false);\\n  const allowUnselect = boolean(\\\"allowUnselect\\\", true);\\n  const closeOnSelect = boolean(\\\"closeOnSelect\\\", true);\\n  const Arrow = boolean(\\\"Arrow\\\", true) ? ArrowComponent : () => null;\\n  const circularNavigation = boolean(\\\"circularNavigation\\\", false);\\n  const placeholder = text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const label = text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const labelView = selectKnob(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\");\\n  const defaultOpen = boolean(\\\"defaultOpen\\\", false);\\n  const swipeable = boolean(\\\"swipeable\\\", true);\\n  return <div style={{\\n    backgroundColor: \\\"transparent\\\"\\n  }}>\\n                <SelectMobile block={block} size={size} disabled={disabled} error={error} hint={hint} options={options} multiple={multiple} onChange={handleChange} selected={selected} allowUnselect={allowUnselect} closeOnSelect={closeOnSelect} Arrow={Arrow} circularNavigation={circularNavigation} placeholder={placeholder} label={label} labelView={labelView} defaultOpen={defaultOpen} swipeable={swipeable} />\\n            </div>;\\n})'\n  }\n};\nexport const selectResponsive = () => React.createElement(() => {\n  const [selected, setSelected] = React.useState([]);\n  const handleChange = ({\n    selectedMultiple\n  }) => {\n    setSelected(selectedMultiple.map(option => option.key));\n  };\n  const block = boolean(\"block\", false);\n  const size = selectKnob(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\");\n  const disabled = boolean(\"disabled\", false);\n  const error = text(\"error\", \"\");\n  const hint = text(\"hint\", \"\");\n  const multiple = boolean(\"multiple\", false);\n  const allowUnselect = boolean(\"allowUnselect\", true);\n  const closeOnSelect = boolean(\"closeOnSelect\", true);\n  const Arrow = boolean(\"Arrow\", true) ? ArrowComponent : () => null;\n  const circularNavigation = boolean(\"circularNavigation\", false);\n  const nativeSelect = boolean(\"nativeSelect\", false);\n  const placeholder = text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const label = text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const labelView = selectKnob(\"labelView\", [\"inner\", \"outer\"], \"inner\");\n  const visibleOptions = number(\"visibleOptions\", 5);\n  const defaultOpen = boolean(\"defaultOpen\", false);\n  const popoverPosition = selectKnob(\"popoverPosition\", POSITION_OPTIONS, \"bottom-start\");\n  const optionsListWidth = selectKnob(\"optionsListWidth\", [\"field\", \"content\"], \"field\");\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    children: /*#__PURE__*/_jsx(SelectResponsive, {\n      block: block,\n      size: size,\n      disabled: disabled,\n      error: error,\n      hint: hint,\n      options: options,\n      multiple: multiple,\n      onChange: handleChange,\n      selected: selected,\n      allowUnselect: allowUnselect,\n      closeOnSelect: closeOnSelect,\n      Arrow: Arrow,\n      circularNavigation: circularNavigation,\n      nativeSelect: nativeSelect,\n      placeholder: placeholder,\n      label: label,\n      labelView: labelView,\n      visibleOptions: visibleOptions,\n      defaultOpen: defaultOpen,\n      popoverPosition: popoverPosition,\n      optionsListWidth: optionsListWidth\n    })\n  });\n});\nselectResponsive.storyName = 'SelectResponsive';\nselectResponsive.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [selected, setSelected] = React.useState([]);\\n  const handleChange = ({\\n    selectedMultiple\\n  }) => {\\n    setSelected(selectedMultiple.map(option => option.key));\\n  };\\n  const block = boolean(\\\"block\\\", false);\\n  const size = selectKnob(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\");\\n  const disabled = boolean(\\\"disabled\\\", false);\\n  const error = text(\\\"error\\\", \\\"\\\");\\n  const hint = text(\\\"hint\\\", \\\"\\\");\\n  const multiple = boolean(\\\"multiple\\\", false);\\n  const allowUnselect = boolean(\\\"allowUnselect\\\", true);\\n  const closeOnSelect = boolean(\\\"closeOnSelect\\\", true);\\n  const Arrow = boolean(\\\"Arrow\\\", true) ? ArrowComponent : () => null;\\n  const circularNavigation = boolean(\\\"circularNavigation\\\", false);\\n  const nativeSelect = boolean(\\\"nativeSelect\\\", false);\\n  const placeholder = text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const label = text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const labelView = selectKnob(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\");\\n  const visibleOptions = number(\\\"visibleOptions\\\", 5);\\n  const defaultOpen = boolean(\\\"defaultOpen\\\", false);\\n  const popoverPosition = selectKnob(\\\"popoverPosition\\\", POSITION_OPTIONS, \\\"bottom-start\\\");\\n  const optionsListWidth = selectKnob(\\\"optionsListWidth\\\", [\\\"field\\\", \\\"content\\\"], \\\"field\\\");\\n  return <div style={{\\n    backgroundColor: \\\"transparent\\\"\\n  }}>\\n                <SelectResponsive block={block} size={size} disabled={disabled} error={error} hint={hint} options={options} multiple={multiple} onChange={handleChange} selected={selected} allowUnselect={allowUnselect} closeOnSelect={closeOnSelect} Arrow={Arrow} circularNavigation={circularNavigation} nativeSelect={nativeSelect} placeholder={placeholder} label={label} labelView={labelView} visibleOptions={visibleOptions} defaultOpen={defaultOpen} popoverPosition={popoverPosition} optionsListWidth={optionsListWidth} />\\n            </div>;\\n})'\n  }\n};\nexport const selectModalMobile = () => React.createElement(() => {\n  const [selected, setSelected] = React.useState([]);\n  const handleChange = ({\n    selectedMultiple\n  }) => {\n    setSelected(selectedMultiple.map(option => option.key));\n  };\n  const block = boolean(\"block\", false);\n  const size = selectKnob(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\");\n  const disabled = boolean(\"disabled\", false);\n  const error = text(\"error\", \"\");\n  const hint = text(\"hint\", \"\");\n  const multiple = boolean(\"multiple\", false);\n  const allowUnselect = boolean(\"allowUnselect\", true);\n  const closeOnSelect = boolean(\"closeOnSelect\", true);\n  const Arrow = boolean(\"Arrow\", true) ? ArrowComponent : () => null;\n  const circularNavigation = boolean(\"circularNavigation\", false);\n  const placeholder = text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const label = text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\");\n  const labelView = selectKnob(\"labelView\", [\"inner\", \"outer\"], \"inner\");\n  const defaultOpen = boolean(\"defaultOpen\", false);\n  const swipeable = boolean(\"swipeable\", true);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    children: /*#__PURE__*/_jsx(SelectModalMobile, {\n      block: block,\n      size: size,\n      disabled: disabled,\n      error: error,\n      hint: hint,\n      options: options,\n      multiple: multiple,\n      onChange: handleChange,\n      selected: selected,\n      allowUnselect: allowUnselect,\n      closeOnSelect: closeOnSelect,\n      Arrow: Arrow,\n      circularNavigation: circularNavigation,\n      placeholder: placeholder,\n      label: label,\n      labelView: labelView,\n      defaultOpen: defaultOpen\n    })\n  });\n});\nselectModalMobile.storyName = 'SelectModalMobile';\nselectModalMobile.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [selected, setSelected] = React.useState([]);\\n  const handleChange = ({\\n    selectedMultiple\\n  }) => {\\n    setSelected(selectedMultiple.map(option => option.key));\\n  };\\n  const block = boolean(\\\"block\\\", false);\\n  const size = selectKnob(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\");\\n  const disabled = boolean(\\\"disabled\\\", false);\\n  const error = text(\\\"error\\\", \\\"\\\");\\n  const hint = text(\\\"hint\\\", \\\"\\\");\\n  const multiple = boolean(\\\"multiple\\\", false);\\n  const allowUnselect = boolean(\\\"allowUnselect\\\", true);\\n  const closeOnSelect = boolean(\\\"closeOnSelect\\\", true);\\n  const Arrow = boolean(\\\"Arrow\\\", true) ? ArrowComponent : () => null;\\n  const circularNavigation = boolean(\\\"circularNavigation\\\", false);\\n  const placeholder = text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const label = text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\");\\n  const labelView = selectKnob(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\");\\n  const defaultOpen = boolean(\\\"defaultOpen\\\", false);\\n  const swipeable = boolean(\\\"swipeable\\\", true);\\n  return <div style={{\\n    backgroundColor: \\\"transparent\\\"\\n  }}>\\n                <SelectModalMobile block={block} size={size} disabled={disabled} error={error} hint={hint} options={options} multiple={multiple} onChange={handleChange} selected={selected} allowUnselect={allowUnselect} closeOnSelect={closeOnSelect} Arrow={Arrow} circularNavigation={circularNavigation} placeholder={placeholder} label={label} labelView={labelView} defaultOpen={defaultOpen} />\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Select',\n  id: 'Select',\n  component: Select,\n  tags: ['stories-mdx'],\n  includeStories: [\"select\", \"selectMobile\", \"selectResponsive\", \"selectModalMobile\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","ol","li","h3","id","href","live","mobileHeight","className","MDXContent","wrapper","MDXLayout","of","css","vars","options","content","POSITION_OPTIONS","div","title","component","Select","name","selected","setSelected","block","boolean","size","select","disabled","error","text","hint","multiple","allowUnselect","closeOnSelect","Arrow","circularNavigation","nativeSelect","placeholder","label","labelView","visibleOptions","number","defaultOpen","popoverPosition","optionsListWidth","style","backgroundColor","onChange","selectedMultiple","map","option","swipeable","SelectMobile","SelectResponsive","SelectModalMobile","version","package","design","description","changelog","development","storyName","parameters","storySource","source","selectMobile","selectResponsive","selectModalMobile","componentMeta","tags","includeStories","docs","page","Changelog","_ref","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","_nonIterableSpread","TypeError"],"sourceRoot":""}