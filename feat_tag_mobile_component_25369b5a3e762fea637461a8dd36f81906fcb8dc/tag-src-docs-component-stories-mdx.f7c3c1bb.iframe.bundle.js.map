{"version":3,"file":"tag-src-docs-component-stories-mdx.f7c3c1bb.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/tag/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/tag/src/vars.css?c8cc","webpack://@alfalab/core-components/./packages/tag/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/tag/src/docs/component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/tag/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tag/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tag/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tag/src/components/base-tag/Component.tsx","webpack://@alfalab/core-components/./packages/tag/src/default.module.css?8aba","webpack://@alfalab/core-components/./packages/tag/src/index.module.css?6673","webpack://@alfalab/core-components/./packages/tag/src/inverted.module.css?ad0d"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"размеры\",\n      children: \"Размеры\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Рекомендуется использовать S, XS и XXS размеры. Размеры XL, L, M — не рекомендованы к использованию.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const SIZES = ['s', 'xs', 'xxs'];\\n\\n    const [checked, setChecked] = React.useState(\\n        Object.fromEntries(SIZES.map((key) => [key, false])),\\n    );\\n\\n    return (\\n        <Container>\\n            <Row align='middle'>\\n                {SIZES.map((size) => (\\n                    <div key={size} style={{ marginRight: 12 }}>\\n                        <Tag\\n                            size={size}\\n                            checked={checked[size]}\\n                            onClick={() => setChecked({ ...checked, [size]: !checked[size] })}\\n                        >\\n                            Label\\n                        </Tag>\\n                    </div>\\n                ))}\\n            </Row>\\n        </Container>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"анатомия\",\n      children: \"Анатомия\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"С помощью слотов \", _jsx(_components.code, {\n        children: \"leftAddons\"\n      }), \" и \", _jsx(_components.code, {\n        children: \"rightAddons\"\n      }), \" можно кастомизировать тэг.\\nНапример, добавить иконку. Переданный контент будет отрисован слева или справа от текста тэга.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const addon = (\\n        <div\\n            style={{\\n                background: 'rgba(55, 120, 251, 0.1)',\\n                border: '1px dashed #3778FB',\\n                borderRadius: '8px',\\n                height: '24px',\\n                width: '24px',\\n                boxSizing: 'border-box',\\n            }}\\n        />\\n    );\\n\\n    const amountAddon = (\\n        <div style={{ paddingRight: '4px' }}>\\n            <Amount view='withZeroMinorPart' value={123400} currency='RUR' minority={100} />\\n        </div>\\n    );\\n\\n    return (\\n        <Container>\\n            <Row>\\n                <div style={{ marginRight: 12 }}>\\n                    <Tag size='s'>Label</Tag>\\n                </div>\\n                <div style={{ marginRight: 12 }}>\\n                    <Tag size='s' rightAddons={addon} leftAddons={addon}>\\n                        Label\\n                    </Tag>\\n                </div>\\n                <div style={{ marginRight: 12 }}>\\n                    <Tag size='s' rightAddons={<Badge view='count' height={24} content={1} />}>\\n                        Label\\n                    </Tag>\\n                </div>\\n                <div style={{ marginRight: 12 }}>\\n                    <Tag size='s' rightAddons={amountAddon}>\\n                        Label\\n                    </Tag>\\n                </div>\\n            </Row>\\n        </Container>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const addon = (\\n        <div\\n            style={{\\n                background: 'rgba(55, 120, 251, 0.1)',\\n                border: '1px dashed #3778FB',\\n                borderRadius: '8px',\\n                height: '24px',\\n                width: '24px',\\n                boxSizing: 'border-box',\\n            }}\\n        />\\n    );\\n\\n    const amountAddon = (\\n        <div style={{ paddingRight: '4px' }}>\\n            <Amount view='withZeroMinorPart' value={123400} currency='RUR' minority={100} />\\n        </div>\\n    );\\n\\n    return (\\n        <Container>\\n            <Row>\\n                <div style={{ marginRight: 12 }}>\\n                    <Tag size='s'>Label</Tag>\\n                </div>\\n                <div>\\n                    <Tag size='s' rightAddons={addon} leftAddons={addon}>\\n                        Label\\n                    </Tag>\\n                </div>\\n            </Row>\\n            <div style={{ display: 'flex', marginTop: 16 }}>\\n                <div style={{ marginRight: 12 }}>\\n                    <Tag size='s' rightAddons={<Badge view='count' height={24} content={1} />}>\\n                        Label\\n                    </Tag>\\n                </div>\\n                <div>\\n                    <Tag size='s' rightAddons={amountAddon}>\\n                        Label\\n                    </Tag>\\n                </div>\\n            </div>\\n        </Container>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"состояния-и-стили\",\n      children: \"Состояния и стили\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"У тега есть две опции, отвечающие за внешний вид:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"shape (форма) — овальные или прямоугольные.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"view (стиль) — залитые или бордерные.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Тег может находиться в активном и неактивном состоянии.\\nВзаимодействие с тегом может быть ограничено с помощью свойства \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [disabled, setDisabled] = React.useState(false);\\n\\n    const VIEWS = [\\n        { key: 'outlinedRounded', view: 'outlined', shape: 'rounded' },\\n        { key: 'filledRounded', view: 'filled', shape: 'rounded' },\\n        { key: 'outlinedRectangular', view: 'outlined', shape: 'rectangular' },\\n        { key: 'filledRectangular', view: 'filled', shape: 'rectangular' },\\n    ];\\n\\n    const [checked, setChecked] = React.useState(\\n        Object.fromEntries(VIEWS.map((item) => [item.key, false])),\\n    );\\n\\n    return (\\n        <Container>\\n            <Row align='middle'>\\n                {VIEWS.map((item) => (\\n                    <div key={item.key} style={{ marginRight: 12 }}>\\n                        <Tag\\n                            size='s'\\n                            view={item.view}\\n                            shape={item.shape}\\n                            disabled={disabled}\\n                            checked={checked[item.key]}\\n                            onClick={() =>\\n                                setChecked({ ...checked, [item.key]: !checked[item.key] })\\n                            }\\n                        >\\n                            Label\\n                        </Tag>\\n                    </div>\\n                ))}\\n            </Row>\\n\\n            <Gap size='l' />\\n\\n            <Switch\\n                checked={disabled}\\n                onChange={() => setDisabled((prevState) => !prevState)}\\n                label='Disabled'\\n            />\\n        </Container>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [disabled, setDisabled] = React.useState(false);\\n\\n    const ROUNDEDS = [\\n        { key: 'outlinedRounded', view: 'outlined', shape: 'rounded' },\\n        { key: 'filledRounded', view: 'filled', shape: 'rounded' },\\n    ];\\n\\n    const RECTANGLES = [\\n        { key: 'outlinedRectangular', view: 'outlined', shape: 'rectangular' },\\n        { key: 'filledRectangular', view: 'filled', shape: 'rectangular' },\\n    ];\\n    const [checkedRounded, setCheckedRounded] = React.useState(\\n        Object.fromEntries(ROUNDEDS.map((item) => [item.key, false])),\\n    );\\n    const [checkedRectangular, setCheckedRectangular] = React.useState(\\n        Object.fromEntries(ROUNDEDS.map((item) => [item.key, false])),\\n    );\\n\\n    return (\\n        <Container>\\n            <Row align='middle'>\\n                {ROUNDEDS.map((item) => (\\n                    <div key={item.key} style={{ marginRight: 12 }}>\\n                        <Tag\\n                            size='s'\\n                            view={item.view}\\n                            shape={item.shape}\\n                            disabled={disabled}\\n                            checked={checkedRounded[item.key]}\\n                            onClick={() =>\\n                                setCheckedRounded({\\n                                    ...checkedRounded,\\n                                    [item.key]: !checkedRounded[item.key],\\n                                })\\n                            }\\n                        >\\n                            Label\\n                        </Tag>\\n                    </div>\\n                ))}\\n            </Row>\\n            <Row align='middle'>\\n                {RECTANGLES.map((item) => (\\n                    <div key={item.key} style={{ marginRight: 12 }}>\\n                        <Tag\\n                            size='s'\\n                            view={item.view}\\n                            shape={item.shape}\\n                            disabled={disabled}\\n                            checked={checkedRectangular[item.key]}\\n                            onClick={() =>\\n                                setCheckedRectangular({\\n                                    ...checkedRectangular,\\n                                    [item.key]: !checkedRectangular[item.key],\\n                                })\\n                            }\\n                        >\\n                            Label\\n                        </Tag>\\n                    </div>\\n                ))}\\n            </Row>\\n\\n            <Gap size='l' />\\n\\n            <Switch\\n                checked={disabled}\\n                onChange={() => setDisabled((prevState) => !prevState)}\\n                label='Disabled'\\n            />\\n        </Container>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"связанные-компоненты\",\n      children: \"Связанные компоненты\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Служат триггерами для переключения контекста, см. компонент \", _jsx(_components.a, {\n        href: \"?path=/docs/components-tabs--docs\",\n        children: \"Tabs\"\n      }), \".\\nИспользуются для фильтрации контента, см. компонент \", _jsx(_components.a, {\n        href: \"?path=/docs/components-filtertag--docs\",\n        children: \"FilterTag\"\n      }), \".\\nВыполняют роль радио-кнопок см. компонент \", _jsx(_components.a, {\n        href: \"?path=/docs/components-radiogroup--docs\",\n        children: \"RadioGroup\"\n      }), \".\\nВыполняют роль чекбоксов см. компонент \", _jsx(_components.a, {\n        href: \"?path=/docs/components-checkboxgroup--docs\",\n        children: \"CheckboxGroup\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    /* border */\\n    --tag-border-color: var(--color-light-border-underline);\\n    --tag-filled-border-color: transparent;\\n    --tag-border-color-hover: var(--color-light-border-key);\\n    --tag-border-color-active: var(--color-light-border-key);\\n    --tag-border-color-checked: var(--color-light-border-key);\\n    --tag-border-color-disabled: var(--color-light-border-primary);\\n    --tag-border-color-checked-disabled: transparent;\\n    --tag-border-width: 1px;\\n    --tag-border-radius: var(--border-radius-pill);\\n    --tag-alt-border-radius: var(--border-radius-s);\\n    --tag-rectangular-xxs-border-radius: 6px;\\n    --tag-rectangular-xs-border-radius: var(--border-radius-m);\\n    --tag-rectangular-s-border-radius: var(--border-radius-m);\\n    --tag-rounded-xxs-border-radius: var(--border-radius-pill);\\n    --tag-rounded-xs-border-radius: var(--border-radius-pill);\\n    --tag-rounded-s-border-radius: var(--border-radius-pill);\\n\\n    /* background-color outlined */\\n    --tag-outlined-background-color: transparent;\\n    --tag-outlined-background-color-hover: transparent;\\n    --tag-outlined-background-color-active: var(--color-light-bg-primary-inverted-alpha-7);\\n    --tag-outlined-background-color-disabled: transparent;\\n\\n    /* background-color filled */\\n    --tag-filled-background-color: var(--color-light-specialbg-tertiary-transparent);\\n    --tag-filled-background-color-hover: var(--color-light-specialbg-tertiary-transparent-shade-7);\\n    --tag-filled-background-color-active: var(\\n        --color-light-specialbg-tertiary-transparent-shade-15\\n    );\\n    --tag-filled-background-color-disabled: var(--color-light-specialbg-tertiary-transparent);\\n\\n    /* background-color checked */\\n    --tag-background-color-checked: var(--color-light-bg-primary-inverted);\\n    --tag-background-color-checked-hover: var(--color-light-bg-primary-inverted-tint-15);\\n    --tag-background-color-checked-active: var(--color-light-bg-primary-inverted-tint-20);\\n    --tag-background-color-checked-disabled: var(--color-light-bg-primary-inverted-alpha-30);\\n\\n    /* text color */\\n    --tag-text-color: var(--color-light-text-primary);\\n    --tag-text-color-checked: var(--color-light-text-primary-inverted);\\n    --tag-text-color-disabled: var(--color-light-text-tertiary);\\n    --tag-text-color-checked-disabled: var(--color-light-text-primary-inverted);\\n\\n    /* inverted */\\n\\n    /* border */\\n    --tag-inverted-border-color: var(--color-light-border-underline-inverted);\\n    --tag-inverted-filled-border-color: transparent;\\n    --tag-inverted-border-color-hover: var(--color-light-border-key-inverted);\\n    --tag-inverted-border-color-active: var(--color-light-border-key-inverted);\\n    --tag-inverted-border-color-checked: var(--color-light-border-key-inverted);\\n    --tag-inverted-border-color-disabled: var(--color-light-border-primary-inverted);\\n    --tag-inverted-border-color-checked-disabled: transparent;\\n\\n    /* background-color outlined */\\n    --tag-inverted-outlined-background-color: transparent;\\n    --tag-inverted-outlined-background-color-hover: transparent;\\n    --tag-inverted-outlined-background-color-disabled: transparent;\\n    --tag-inverted-outlined-background-color-active: var(--color-light-bg-primary-alpha-15);\\n\\n    /* background-color filled */\\n    --tag-inverted-filled-background-color: var(\\n        --color-light-specialbg-tertiary-transparent-inverted\\n    );\\n    --tag-inverted-filled-background-color-hover: var(\\n        --color-light-specialbg-tertiary-transparent-inverted-tint-15\\n    );\\n    --tag-inverted-filled-background-color-disabled: var(\\n        --color-light-specialbg-tertiary-transparent-inverted\\n    );\\n    --tag-inverted-filled-background-color-active: var(\\n        --color-light-specialbg-tertiary-transparent-inverted-tint-20\\n    );\\n\\n    /* background-color checked */\\n    --tag-inverted-background-color-checked: var(--color-light-bg-primary);\\n    --tag-inverted-background-color-checked-hover: var(--color-light-bg-primary-shade-7);\\n    --tag-inverted-background-color-checked-active: var(--color-light-bg-primary-shade-15);\\n    --tag-inverted-background-color-checked-disabled: var(--color-light-bg-primary-alpha-30);\\n\\n    /* text color */\\n    --tag-inverted-text-color: var(--color-light-text-primary-inverted);\\n    --tag-inverted-text-color-checked: var(--color-light-text-primary);\\n    --tag-inverted-text-color-disabled: var(--color-light-text-tertiary-inverted);\\n    --tag-inverted-text-color-checked-disabled: var(--color-light-text-primary);\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {TagDesktop} from '../Component.desktop';\nimport {TagMobile} from '../Component.mobile';\nimport {TagResponsive} from '../Component.responsive';\nimport styles from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Tag } from '@alfalab/core-components/tag';\\nimport { TagResponsive } from '@alfalab/core-components/tag/responsive';\\nimport { TagDesktop } from '@alfalab/core-components/tag/desktop';\\nimport { TagMobile } from '@alfalab/core-components/tag/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Из индекса импортируется responsive версия компонента.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        TagDesktop,\n        TagMobile,\n        TagResponsive\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: styles\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { CopyMIcon } from '@alfalab/icons-glyph/CopyMIcon';\nimport { Tag } from '@alfalab/core-components-tag';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const SIZES = ['xxs', 'xs', 's', 'm', 'l', 'xl'];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Tag\",\n      component: Tag,\n      id: \"Tag\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Tag\",\n      children: React.createElement(() => {\n        const [checked, setChecked] = React.useState(false);\n        const handleClick = () => setChecked(!checked);\n        const colors = select('colors', ['default', 'inverted'], 'default');\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: colors === 'inverted' ? 'var(--color-light-bg-primary-inverted)' : 'transparent',\n            padding: '8px',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          children: /*#__PURE__*/_jsx(Tag, {\n            size: select('size', SIZES, 'm'),\n            variant: select('variant', ['default', 'alt'], 'default'),\n            shape: select('shape', ['rounded', 'rectangular'], 'rounded'),\n            view: select('view', ['outlined', 'filled'], 'outlined'),\n            disabled: boolean('disabled', false),\n            checked: checked || boolean('checked', false),\n            rightAddons: boolean('rightAddons', false) && /*#__PURE__*/_jsx(CopyMIcon, {}),\n            onClick: handleClick,\n            colors: colors,\n            children: text('label', 'Оплатить')\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Tag\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/tag\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=172%3A31248\",\n      children: \"\\u041C\\u043D\\u043E\\u0433\\u043E\\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B. \\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F \\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u043E\\u0432.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      development: /*#__PURE__*/_jsx(Development, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const tag = () => React.createElement(() => {\n  const [checked, setChecked] = React.useState(false);\n  const handleClick = () => setChecked(!checked);\n  const colors = select(\"colors\", [\"default\", \"inverted\"], \"default\");\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: colors === \"inverted\" ? \"var(--color-light-bg-primary-inverted)\" : \"transparent\",\n      padding: \"8px\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    children: /*#__PURE__*/_jsx(Tag, {\n      size: select(\"size\", SIZES, \"m\"),\n      variant: select(\"variant\", [\"default\", \"alt\"], \"default\"),\n      shape: select(\"shape\", [\"rounded\", \"rectangular\"], \"rounded\"),\n      view: select(\"view\", [\"outlined\", \"filled\"], \"outlined\"),\n      disabled: boolean(\"disabled\", false),\n      checked: checked || boolean(\"checked\", false),\n      rightAddons: boolean(\"rightAddons\", false) && /*#__PURE__*/_jsx(CopyMIcon, {}),\n      onClick: handleClick,\n      colors: colors,\n      children: text(\"label\", \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0438\\u0442\\u044C\")\n    })\n  });\n});\ntag.storyName = 'Tag';\ntag.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [checked, setChecked] = React.useState(false);\\n  const handleClick = () => setChecked(!checked);\\n  const colors = select(\\\"colors\\\", [\\\"default\\\", \\\"inverted\\\"], \\\"default\\\");\\n  return <div style={{\\n    backgroundColor: colors === \\\"inverted\\\" ? \\\"var(--color-light-bg-primary-inverted)\\\" : \\\"transparent\\\",\\n    padding: \\\"8px\\\",\\n    position: \\\"absolute\\\",\\n    top: 0,\\n    left: 0,\\n    right: 0,\\n    bottom: 0\\n  }}>\\n                <Tag size={select(\\\"size\\\", SIZES, \\\"m\\\")} variant={select(\\\"variant\\\", [\\\"default\\\", \\\"alt\\\"], \\\"default\\\")} shape={select(\\\"shape\\\", [\\\"rounded\\\", \\\"rectangular\\\"], \\\"rounded\\\")} view={select(\\\"view\\\", [\\\"outlined\\\", \\\"filled\\\"], \\\"outlined\\\")} disabled={boolean(\\\"disabled\\\", false)} checked={checked || boolean(\\\"checked\\\", false)} rightAddons={boolean(\\\"rightAddons\\\", false) && <CopyMIcon />} onClick={handleClick} colors={colors}>\\n                    {text(\\\"label\\\", \\\"\\\\u041E\\\\u043F\\\\u043B\\\\u0430\\\\u0442\\\\u0438\\\\u0442\\\\u044C\\\")}\\n                </Tag>\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Tag',\n  id: 'Tag',\n  component: Tag,\n  tags: ['stories-mdx'],\n  includeStories: [\"tag\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import React, { forwardRef } from 'react';\n\nimport { BaseTag, BaseTagProps } from './components/base-tag';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type TagDesktopProps = Omit<BaseTagProps, 'desktop' | 'colorStyles' | 'styles'>;\n\nexport const TagDesktop = forwardRef<HTMLButtonElement, BaseTagProps>((restProps, ref) => (\n    <BaseTag {...restProps} desktop={true} ref={ref} colorStylesMap={colorStyles} styles={styles} />\n));\n","import React, { forwardRef } from 'react';\n\nimport { BaseTag, BaseTagProps } from './components/base-tag';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type TagMobileProps = Omit<BaseTagProps, 'desktop' | 'colorStyles' | 'styles'>;\n\nexport const TagMobile = forwardRef<HTMLButtonElement, BaseTagProps>((restProps, ref) => (\n    <BaseTag {...restProps} ref={ref} colorStylesMap={colorStyles} styles={styles} />\n));\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseTagProps } from './components/base-tag';\nimport { TagDesktop } from './Component.desktop';\nimport { TagMobile } from './Component.mobile';\n\nexport type TagResponsiveProps = Omit<BaseTagProps, 'desktop' | 'colorStyles' | 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const TagResponsive = forwardRef<HTMLButtonElement, TagResponsiveProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? TagDesktop : TagMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","import React, { ButtonHTMLAttributes, forwardRef, ReactNode, RefObject, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nexport type StyleColors = {\n    default: {\n        [key: string]: string;\n    };\n    inverted: {\n        [key: string]: string;\n    };\n};\n\nexport type NativeProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type BaseTagProps = Omit<NativeProps, 'onClick'> & {\n    /**\n     * Отображение кнопки в отмеченном (зажатом) состоянии\n     */\n    checked?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс для обёртки children\n     */\n    childrenClassName?: string;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Обработчик нажатия\n     */\n    onClick?: (\n        event?: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        payload?: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * ref на children\n     */\n\n    childrenRef?: RefObject<HTMLSpanElement>;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * @deprecated данный проп больше не используется, временно оставлен для обратной совместимости\n     * Используйте props shape и view\n     * Вариант тега\n     */\n    variant?: 'default' | 'alt';\n\n    /**\n     * Форма тега\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Стиль тега\n     */\n    view?: 'outlined' | 'filled';\n\n    /**\n     * Основные стили компонента.\n     */\n    styles?: { [key: string]: string };\n\n    /**\n     * Стили компонента для default и inverted режима.\n     */\n    colorStylesMap?: StyleColors;\n    /**\n     * Вид компонента\n     */\n    desktop?: boolean;\n};\n\nexport const BaseTag = forwardRef<HTMLButtonElement, BaseTagProps>(\n    (\n        {\n            rightAddons,\n            leftAddons,\n            children,\n            size = 's',\n            checked,\n            className,\n            dataTestId,\n            name,\n            colors = 'default',\n            onClick,\n            variant = 'default',\n            shape,\n            view = 'outlined',\n            childrenClassName,\n            childrenRef,\n            colorStylesMap = {\n                default: {},\n                inverted: {},\n            },\n            styles = {},\n            desktop = false,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const colorStyles = colorStylesMap[colors];\n\n        const tagRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(tagRef, 'keyboard');\n\n        const variantClassName = variant === 'default' ? 'rounded' : 'rectangular';\n\n        const shapeClassName = shape || variantClassName;\n\n        const tagProps = {\n            className: cn(\n                styles.component,\n                colorStyles.component,\n                styles[size],\n                colorStyles[view],\n                styles[shapeClassName],\n                {\n                    [styles.checked]: checked,\n                    [colorStyles.hover]: desktop,\n                    [styles.borderRadius]: desktop,\n                    [colorStyles.checked]: checked,\n                    [styles.focused]: focused,\n                    [styles.withRightAddons]: Boolean(rightAddons),\n                    [styles.withLeftAddons]: Boolean(leftAddons),\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n        };\n\n        const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (onClick) {\n                onClick(event, { name, checked: !checked });\n            }\n        };\n\n        return (\n            <button\n                ref={mergeRefs([tagRef, ref])}\n                type='button'\n                onClick={handleClick}\n                {...tagProps}\n                {...restProps}\n            >\n                {leftAddons ? <span className={styles.addons}>{leftAddons}</span> : null}\n\n                {children && (\n                    <span ref={childrenRef} className={childrenClassName}>\n                        {children}\n                    </span>\n                )}\n\n                {rightAddons ? <span className={styles.addons}>{rightAddons}</span> : null}\n            </button>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PFQYT\",\"outlined\":\"outlined_qYlWJ\",\"hover\":\"hover_exQX8\",\"filled\":\"filled_xA7sP\",\"checked\":\"checked_PqIgl\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_LFaXK\",\"focused\":\"focused_VGmA9\",\"addons\":\"addons_QtcEs\",\"s\":\"s_qC9qp\",\"m\":\"m_e7QT9\",\"l\":\"l_cWWvC\",\"xl\":\"xl_POA18\",\"xxs\":\"xxs_VgLZB\",\"xs\":\"xs_AGi1U\",\"withRightAddons\":\"withRightAddons_bDS3n\",\"withLeftAddons\":\"withLeftAddons_xrENU\",\"rounded\":\"rounded_KGQVv\",\"rectangular\":\"rectangular_y46LB\",\"borderRadius\":\"borderRadius_hByph\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_jvqSN\",\"outlined\":\"outlined_G6Osv\",\"hover\":\"hover_mpZ73\",\"filled\":\"filled_kWwsr\",\"checked\":\"checked_UzsX7\"};"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","ul","li","id","live","className","href","MDXContent","wrapper","MDXLayout","TagDesktop","TagMobile","TagResponsive","css","SIZES","div","title","component","Tag","name","checked","setChecked","colors","select","style","backgroundColor","padding","position","top","left","right","bottom","size","variant","shape","view","disabled","boolean","rightAddons","CopyMIcon","onClick","text","version","package","design","description","development","changelog","tag","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","colorStyles","default","defaultColors","inverted","invertedColors","forwardRef","restProps","ref","BaseTag","_objectSpread","desktop","colorStylesMap","_ref$breakpoint","breakpoint","_objectWithoutProperties","_excluded","query","_cn","leftAddons","_ref$size","dataTestId","_ref$colors","_ref$variant","_ref$view","childrenClassName","childrenRef","_ref$colorStylesMap","_ref$styles","_ref$desktop","tagRef","useRef","_useFocus","useFocus","focused","shapeClassName","tagProps","hover","borderRadius","withRightAddons","Boolean","withLeftAddons","mergeRefs","handleClick","event","addons"],"sourceRoot":""}