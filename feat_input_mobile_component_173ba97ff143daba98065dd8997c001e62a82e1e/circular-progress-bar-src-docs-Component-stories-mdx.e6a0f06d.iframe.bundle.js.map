{"version":3,"file":"circular-progress-bar-src-docs-Component-stories-mdx.e6a0f06d.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/index.module.css?0149","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/index.module.css?d691","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Отображает круговой индикатор прогресса (0-100%).\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"размеры\",\n      children: \"Размеры\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Доступны XXL, XL, L, M, S, XS размеры компонента\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Container>\\n    <Row align='middle'>\\n        <Col>\\n            <CircularProgressBar value={25} size='xxl' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='xl' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='l' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='m' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='s' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='xs' icon={CheckmarkSIcon} contentColor='tertiary'/>\\n        </Col>\\n    </Row>\\n</Container>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Альтернативный способ задать размер — указать значение для [height] в px. При явном задании высоты, для значения 164px необходимо указать size xxl размера, а для значения 132px, соответственно, xl и т.д\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Доступны следующие значения [height] для компонента:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"xxl от 144px\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"xl  от 128px до 143px\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"l   от 80px до 127px\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"m   от 64px до 79px\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"s   от 48px до 63px\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"xs  от 24px до 47px\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"атрибуты\",\n      children: \"Атрибуты\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"У компонента есть два состояния — в процессе заполнения и полностью заполненный.\\nУправляя атрибутами можно задать направление заполнения, цвет прогрессбара, наличие желоба и контент для обоих состояний.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<Container>\\n    <Row align='middle'>\\n        <Col>\\n            <CircularProgressBar value={0} size='l' subtitle='Caption' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='l' subtitle='Caption'/>\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={100} size='l' icon={CheckmarkMIcon} contentColor='tertiary' completeIconColor='positive'/>\\n        </Col>\\n    </Row>\\n    <Row align='middle'>\\n        <Col>\\n            <CircularProgressBar value={0} size='l' icon={CheckmarkMIcon} contentColor='tertiary' stroke={false}/>\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='l' icon={CheckmarkMIcon} contentColor='tertiary' stroke={false} />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar \\n                value={100} \\n                size='l' \\n                icon={CheckmarkMIcon} \\n                contentColor='tertiary'\\n                completeIconColor='primary-inverted'\\n                fillComplete={true}\\n                />\\n        </Col>\\n    </Row>\\n    <Row align='middle'>\\n        <Col>\\n            <CircularProgressBar value={25} size='l' />\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={25} size='l' view='negative'/>\\n        </Col>\\n        <Col>\\n            <CircularProgressBar value={100} size='l' view='negative' completeTextColor='negative'/>\\n        </Col>\\n    </Row>\\n</Container>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    /* stroke */\\n    --circular-progress-bar-stroke-color: var(--color-light-border-primary);\\n\\n    /* positive */\\n    --circular-progress-bar-positive-color: var(--color-light-graphic-positive);\\n\\n    /* negative */\\n    --circular-progress-bar-negative-color: var(--color-light-graphic-negative);\\n\\n    /* theme */\\n    --circular-progress-bar-font-family: var(--font-family-system);\\n    --circular-progress-bar-font-weight: 600;\\n}\\n\\n.component {\\n    position: relative;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.svg {\\n    display: block;\\n    width: 100%;\\n}\\n\\n.title,\\n.subtitle {\\n    overflow: hidden;\\n    word-break: break-word;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    margin: 0 6px;\\n}\\n\\n.subtitle {\\n    max-height: 40px;\\n}\\n\\n.labelWrapper {\\n    text-align: center;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    width: 100%;\\n    transform: translate(-50%, -50%);\\n\\n    &.label {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n}\\n\\n.typography {\\n    font-feature-settings: 'ss01';\\n    font-weight: var(--circular-progress-bar-font-weight);\\n    font-family: var(--circular-progress-bar-font-family);\\n}\\n\\n.xxl {\\n    width: 144px;\\n    height: 144px;\\n\\n    & .labelWrapper {\\n        max-width: 128px;\\n    }\\n\\n    & .title {\\n        max-height: 32px;\\n    }\\n}\\n\\n.xl {\\n    width: 128px;\\n    height: 128px;\\n\\n    & .labelWrapper {\\n        max-width: 108px;\\n    }\\n\\n    & .title {\\n        max-height: 32px;\\n    }\\n}\\n\\n.l {\\n    width: 80px;\\n    height: 80px;\\n\\n    & .labelWrapper {\\n        max-width: 64px;\\n    }\\n\\n    & .title {\\n        max-height: 24px;\\n    }\\n}\\n\\n.m {\\n    width: 64px;\\n    height: 64px;\\n\\n    & .labelWrapper {\\n        max-width: 48px;\\n    }\\n\\n    & .title {\\n        max-height: 16px;\\n        margin: 0;\\n    }\\n}\\n\\n.s {\\n    width: 48px;\\n    height: 48px;\\n\\n    & .labelWrapper {\\n        max-width: 40px;\\n    }\\n\\n    & .title {\\n        max-height: 16px;\\n        margin: 0;\\n    }\\n}\\n\\n.xs {\\n    width: 24px;\\n    height: 24px;\\n\\n    & .labelWrapper {\\n        max-width: 24px;\\n    }\\n}\\n\\n.backgroundCircle,\\n.progressCircle {\\n    width: 100%;\\n    height: 100%;\\n    fill: transparent;\\n}\\n\\n.positive {\\n    stroke: var(--circular-progress-bar-positive-color);\\n}\\n\\n.negative {\\n    stroke: var(--circular-progress-bar-negative-color);\\n}\\n\\n.backgroundCircle {\\n    stroke: var(--circular-progress-bar-stroke-color);\\n\\n    &.stroke {\\n        stroke: transparent;\\n    }\\n}\\n\\n.progressCircle {\\n    stroke-linecap: round;\\n\\n    &.bg-positive {\\n        fill: var(--circular-progress-bar-positive-color);\\n    }\\n\\n    &.bg-negative {\\n        fill: var(--circular-progress-bar-negative-color);\\n    }\\n}\\n\\n.iconWrapper {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n\\n    &.xxl {\\n        max-width: 64px;\\n        max-height: 64px;\\n    }\\n\\n    &.xl {\\n        max-width: 64px;\\n        max-height: 64px;\\n    }\\n\\n    &.l {\\n        max-width: 48px;\\n        max-height: 48px;\\n    }\\n\\n    &.m {\\n        max-width: 36px;\\n        max-height: 36px;\\n    }\\n\\n    &.s {\\n        max-width: 24px;\\n        max-height: 24px;\\n    }\\n\\n    &.xs {\\n        max-width: 16px;\\n        max-height: 16px;\\n    }\\n\\n    &.icon-tertiary {\\n        color: var(--color-light-graphic-tertiary);\\n    }\\n\\n    &.icon-positive {\\n        color: var(--color-light-graphic-positive);\\n    }\\n\\n    &.icon-negative {\\n        color: var(--color-light-graphic-negative);\\n    }\\n\\n    &.icon-primary-inverted {\\n        color: var(--color-light-graphic-primary-inverted);\\n    }\\n\\n    &.icon-primary {\\n        color: var(--color-light-graphic-primary);\\n    }\\n\\n    &.icon-secondary {\\n        color: var(--color-light-graphic-secondary);\\n    }\\n}\\n\\n.icon {\\n    width: 100%;\\n    height: 100%;\\n}\\n\";","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { text, select, number, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs, CssVars } from 'storybook/blocks';\nimport { CircularProgressBar } from '@alfalab/core-components-circular-progress-bar';\nimport { CircularProgressBar as CircularProgressBarTS } from '../Component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport styles from '!!raw-loader!../index.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/CircularProgressBar\",\n      component: CircularProgressBar,\n      id: \"CircularProgressBar\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"CircularProgressBar\",\n      children: React.createElement(() => {\n        const value = number('value', 50);\n        const view = select('view', ['positive', 'negative']);\n        const completeTextColor = select('completeTextColor', ['primary', 'primary-inverted', 'positive', 'negative', 'secondary'], 'secondary');\n        const title = text('title', 'title');\n        const titleComplete = text('titleComplete');\n        const subtitle = text('subtitle', 'subtitle');\n        const contentColor = select('contentColor', ['primary', 'secondary', 'tertiary', 'positive', 'negative'], 'secondary');\n        const subtitleComplete = text('subtitleComplete');\n        return /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(CircularProgressBar, {\n            value: value,\n            view: view,\n            title: title,\n            titleComplete: titleComplete,\n            subtitle: subtitle,\n            contentColor: contentColor,\n            subtitleComplete: subtitleComplete,\n            stroke: boolean('stroke', true),\n            direction: select('direction', ['clockwise', 'counter-clockwise'], 'clockwise'),\n            fillComplete: boolean('fillComplete', false),\n            completeTextColor: completeTextColor,\n            height: number('height', 0),\n            size: select('size', ['xs', 's', 'm', 'l', 'xl', 'xxl'], 'l')\n          }), /*#__PURE__*/_jsx(_components.p, {\n            children: \"\\u0411\\u0435\\u0437 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 title \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F title \\u0431\\u0435\\u0440\\u0451\\u0442\\u0441\\u044F \\u0438\\u0437 value\"\n          }), /*#__PURE__*/_jsx(CircularProgressBar, {\n            value: value,\n            view: view,\n            subtitle: subtitle,\n            size: \"l\"\n          }), /*#__PURE__*/_jsx(_components.p, {\n            children: \"\\u0415\\u0441\\u043B\\u0438 \\u0435\\u0441\\u0442\\u044C children, \\u0442\\u043E \\u043E\\u043D\\u0438 \\u043F\\u043E\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u044E\\u0442\\u0441\\u044F \\u0432 \\u0446\\u0435\\u043D\\u0442\\u0440, \\u0430 title \\u0438 subtitle \\u0438\\u0433\\u043D\\u043E\\u0440\\u0438\\u0440\\u0443\\u044E\\u0442\\u0441\\u044F\"\n          }), /*#__PURE__*/_jsx(CircularProgressBar, {\n            value: value,\n            view: view,\n            title: title,\n            subtitle: subtitle,\n            size: \"l\",\n            children: /*#__PURE__*/_jsx(_components.p, {\n              children: \"Hello\"\n            })\n          })]\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"CircularProgressBar\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/circular-progress-bar\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=58951%3A84594\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { CircularProgressBar } from '@alfalab/core-components/circular-progress-bar';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: CircularProgressBarTS\n      }),\n      cssVars: /*#__PURE__*/_jsx(CssVars, {\n        css: styles\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const circularProgressBar = () => React.createElement(() => {\n  const value = number(\"value\", 50);\n  const view = select(\"view\", [\"positive\", \"negative\"]);\n  const completeTextColor = select(\"completeTextColor\", [\"primary\", \"primary-inverted\", \"positive\", \"negative\", \"secondary\"], \"secondary\");\n  const title = text(\"title\", \"title\");\n  const titleComplete = text(\"titleComplete\");\n  const subtitle = text(\"subtitle\", \"subtitle\");\n  const contentColor = select(\"contentColor\", [\"primary\", \"secondary\", \"tertiary\", \"positive\", \"negative\"], \"secondary\");\n  const subtitleComplete = text(\"subtitleComplete\");\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(CircularProgressBar, {\n      value: value,\n      view: view,\n      title: title,\n      titleComplete: titleComplete,\n      subtitle: subtitle,\n      contentColor: contentColor,\n      subtitleComplete: subtitleComplete,\n      stroke: boolean(\"stroke\", true),\n      direction: select(\"direction\", [\"clockwise\", \"counter-clockwise\"], \"clockwise\"),\n      fillComplete: boolean(\"fillComplete\", false),\n      completeTextColor: completeTextColor,\n      height: number(\"height\", 0),\n      size: select(\"size\", [\"xs\", \"s\", \"m\", \"l\", \"xl\", \"xxl\"], \"l\")\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: \"\\u0411\\u0435\\u0437 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430 title \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F title \\u0431\\u0435\\u0440\\u0451\\u0442\\u0441\\u044F \\u0438\\u0437 value\"\n    }), /*#__PURE__*/_jsx(CircularProgressBar, {\n      value: value,\n      view: view,\n      subtitle: subtitle,\n      size: \"l\"\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: \"\\u0415\\u0441\\u043B\\u0438 \\u0435\\u0441\\u0442\\u044C children, \\u0442\\u043E \\u043E\\u043D\\u0438 \\u043F\\u043E\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u044E\\u0442\\u0441\\u044F \\u0432 \\u0446\\u0435\\u043D\\u0442\\u0440, \\u0430 title \\u0438 subtitle \\u0438\\u0433\\u043D\\u043E\\u0440\\u0438\\u0440\\u0443\\u044E\\u0442\\u0441\\u044F\"\n    }), /*#__PURE__*/_jsx(CircularProgressBar, {\n      value: value,\n      view: view,\n      title: title,\n      subtitle: subtitle,\n      size: \"l\",\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: \"Hello\"\n      })\n    })]\n  });\n});\ncircularProgressBar.storyName = 'CircularProgressBar';\ncircularProgressBar.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const value = number(\\\"value\\\", 50);\\n  const view = select(\\\"view\\\", [\\\"positive\\\", \\\"negative\\\"]);\\n  const completeTextColor = select(\\\"completeTextColor\\\", [\\\"primary\\\", \\\"primary-inverted\\\", \\\"positive\\\", \\\"negative\\\", \\\"secondary\\\"], \\\"secondary\\\");\\n  const title = text(\\\"title\\\", \\\"title\\\");\\n  const titleComplete = text(\\\"titleComplete\\\");\\n  const subtitle = text(\\\"subtitle\\\", \\\"subtitle\\\");\\n  const contentColor = select(\\\"contentColor\\\", [\\\"primary\\\", \\\"secondary\\\", \\\"tertiary\\\", \\\"positive\\\", \\\"negative\\\"], \\\"secondary\\\");\\n  const subtitleComplete = text(\\\"subtitleComplete\\\");\\n  return <>\\n                <CircularProgressBar value={value} view={view} title={title} titleComplete={titleComplete} subtitle={subtitle} contentColor={contentColor} subtitleComplete={subtitleComplete} stroke={boolean(\\\"stroke\\\", true)} direction={select(\\\"direction\\\", [\\\"clockwise\\\", \\\"counter-clockwise\\\"], \\\"clockwise\\\")} fillComplete={boolean(\\\"fillComplete\\\", false)} completeTextColor={completeTextColor} height={number(\\\"height\\\", 0)} size={select(\\\"size\\\", [\\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\", \\\"xxl\\\"], \\\"l\\\")} />\\n                <p>Без атрибута title значение для title берётся из value</p>\\n                <CircularProgressBar value={value} view={view} subtitle={subtitle} size=\\\"l\\\" />\\n                <p>\\n                    Если есть children, то они подставляются в центр, а title и subtitle\\n                    игнорируются\\n                </p>\\n                <CircularProgressBar value={value} view={view} title={title} subtitle={subtitle} size=\\\"l\\\">\\n                    <p>Hello</p>\\n                </CircularProgressBar>\\n            </>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/CircularProgressBar',\n  id: 'CircularProgressBar',\n  component: CircularProgressBar,\n  tags: ['stories-mdx'],\n  includeStories: [\"circularProgressBar\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_mbXGM\",\"svg\":\"svg_Q6o_a\",\"title\":\"title__0K22\",\"subtitle\":\"subtitle_QTDIy\",\"labelWrapper\":\"labelWrapper_MSMUW\",\"label\":\"label_MbLVo\",\"typography\":\"typography__g495\",\"xxl\":\"xxl_xI5gR\",\"xl\":\"xl_ShAjG\",\"l\":\"l_x88_E\",\"m\":\"m_rE7QR\",\"s\":\"s_zY6Wg\",\"xs\":\"xs_Hr0Fv\",\"backgroundCircle\":\"backgroundCircle_bw9BV\",\"progressCircle\":\"progressCircle_aaN_x\",\"positive\":\"positive_svuAY\",\"negative\":\"negative_wJJEv\",\"stroke\":\"stroke_CNdC4\",\"bg-positive\":\"bg-positive_dPwM5\",\"bg-negative\":\"bg-negative_hPAkk\",\"iconWrapper\":\"iconWrapper_ptUAN\",\"icon-tertiary\":\"icon-tertiary_h2i8M\",\"icon-positive\":\"icon-positive_tYq7P\",\"icon-negative\":\"icon-negative_WrMrV\",\"icon-primary-inverted\":\"icon-primary-inverted_coYra\",\"icon-primary\":\"icon-primary_CRcj6\",\"icon-secondary\":\"icon-secondary_tq_K6\",\"icon\":\"icon_jja1U\"};","import React, { ElementType, ReactNode, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nconst SIZES = {\n    xs: 24,\n    s: 48,\n    m: 64,\n    l: 80,\n    xl: 128,\n    xxl: 144,\n};\n\nconst STROKE = {\n    xs: 4,\n    s: 4,\n    m: 6,\n    l: 8,\n    xl: 10,\n    xxl: 12,\n};\n\nconst VIEW_TITLE = {\n    xs: 'small',\n    s: 'small',\n    m: 'small',\n    l: 'xsmall',\n    xl: 'medium',\n    xxl: 'medium',\n} as const;\n\nconst VIEW_TEXT = {\n    xs: 'secondary-small',\n    s: 'secondary-small',\n    m: 'secondary-large',\n    l: 'secondary-large',\n    xl: 'secondary-large',\n    xxl: 'secondary-large',\n} as const;\n\nexport type CircularProgressBarProps = {\n    /**\n     * Уровень прогресса, %\n     */\n    value: number;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Основной текст\n     */\n    title?: ReactNode;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'primary' | 'secondary' | 'tertiary' | 'positive' | 'negative';\n\n    /**\n     * Дополнительный текст\n     */\n    subtitle?: ReactNode;\n\n    /**\n     * Основной текст при 100%\n     */\n    titleComplete?: ReactNode;\n\n    /**\n     * Дополнительный текст при 100%\n     */\n    subtitleComplete?: ReactNode;\n\n    /**\n     * Цвет заполнения\n     */\n    view?: 'positive' | 'negative';\n\n    /**\n     * Размер (xxl — 144×144px, xl — 128×128px, l — 80×80px, m — 64×64px, s — 48×48px, xs — 24×24px)\n     */\n    size?: 'xxl' | 'xl' | 'l' | 'm' | 's' | 'xs';\n\n    /**\n     * Наличие желоба\n     */\n    stroke?: boolean;\n\n    /**\n     * Заливка при 100%\n     */\n    fillComplete?: boolean;\n\n    /**\n     * Цвет текста при 100%\n     */\n    completeTextColor?: 'primary' | 'primary-inverted' | 'positive' | 'negative';\n\n    /**\n     * Цвет иконки при 100%\n     */\n    completeIconColor?: 'primary-inverted' | 'positive' | 'negative' | 'tertiary';\n\n    /**\n     * Компонент иконки\n     */\n    icon?: ElementType<{ className?: string }>;\n\n    /**\n     * Компонент иконки при 100%\n     */\n    iconComplete?: ElementType<{ className?: string }>;\n\n    /**\n     * Направление прогресса (clockwise - по часовой стрелке, counter-clockwise - против часовой стрелки)\n     */\n    direction?: 'clockwise' | 'counter-clockwise';\n\n    /**\n     * Высота компонента, min = 24; max = 144\n     * использовать совместно с size :\n     * xxl от 144\n     * xl  от 128 до 143\n     * l   от 80 до 127\n     * m   от 64 до 79\n     * s   от 48 до 63\n     * xs  от 24 до 47\n     */\n    height?: number;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\n/**\n * Компонент круглого прогресс бара.\n */\nexport const CircularProgressBar: React.FC<CircularProgressBarProps> = ({\n    value,\n    view = 'positive',\n    size = 'm',\n    className,\n    dataTestId,\n    title = value ? value.toString() : '0',\n    titleComplete,\n    subtitle,\n    contentColor = 'secondary',\n    subtitleComplete,\n    stroke = true,\n    fillComplete,\n    icon: Icon,\n    iconComplete: IconComplete,\n    completeTextColor,\n    completeIconColor = 'tertiary',\n    direction = 'clockwise',\n    height,\n    children,\n}) => {\n    const memorized = useMemo(() => {\n        const strokeWidth = STROKE[size];\n        const maxProgress = 100;\n        const minProgress = 0;\n        const widthSVG = SIZES[size];\n        const heightSVG = SIZES[size];\n        const center = widthSVG / 2;\n        const radius = center - strokeWidth / 2;\n        const circumference = Math.PI * radius * 2;\n        const progress = Math.min(Math.max(value, minProgress), maxProgress);\n        const strokeDasharray = circumference.toFixed(3);\n        const strokeDashoffset = (((100 - progress) / 100) * circumference).toFixed(3);\n\n        return {\n            widthSVG,\n            heightSVG,\n            center,\n            radius,\n            strokeDasharray,\n            strokeDashoffset,\n        };\n    }, [value, size]);\n\n    const isComplete = value === 100;\n    const isCompleteTextColor = isComplete && completeTextColor;\n    const titleContent = titleComplete && isComplete ? titleComplete : title;\n    const subtitleContent = subtitleComplete && isComplete ? subtitleComplete : subtitle;\n    const IconComponent = IconComplete && isComplete ? IconComplete : Icon;\n\n    const renderTitleString = () =>\n        SIZES[size] > 64 ? (\n            <Typography.TitleMobile\n                className={cn(styles.typography, styles.title)}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                tag='div'\n                font='system'\n                view={VIEW_TITLE[size]}\n            >\n                {titleContent}\n            </Typography.TitleMobile>\n        ) : (\n            <Typography.Text\n                className={styles.title}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                tag='div'\n                weight='bold'\n                view={VIEW_TEXT[size]}\n            >\n                {titleContent}\n            </Typography.Text>\n        );\n\n    const renderTitle = () => (typeof title === 'string' ? renderTitleString() : titleContent);\n\n    const renderSubTitle = () =>\n        typeof subtitle === 'string' ? (\n            <Typography.Text\n                tag='div'\n                className={styles.subtitle}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                view='primary-small'\n            >\n                {subtitleContent}\n            </Typography.Text>\n        ) : (\n            subtitleContent\n        );\n\n    const renderIcon = () => (\n        <span\n            className={cn(\n                styles.iconWrapper,\n                styles[size],\n                styles.tertiary,\n                styles[`icon-${contentColor}`],\n                {\n                    [styles[`icon-${completeIconColor}`]]: completeIconColor,\n                },\n            )}\n        >\n            {IconComponent && <IconComponent className={styles.icon} />}\n        </span>\n    );\n\n    const renderContent = () =>\n        Icon || (IconComplete && isComplete) ? (\n            renderIcon()\n        ) : (\n            <React.Fragment>\n                {SIZES[size] > 24 && renderTitle()}\n                {SIZES[size] > 64 && renderSubTitle()}\n            </React.Fragment>\n        );\n\n    return (\n        <div\n            className={cn(styles.component, styles[size], className)}\n            style={{\n                ...(height && { height, width: height }),\n            }}\n            data-test-id={dataTestId}\n        >\n            <svg\n                viewBox={`0 0 ${memorized.widthSVG} ${memorized.heightSVG}`}\n                className={styles.svg}\n                xmlns='http://www.w3.org/2000/svg'\n            >\n                <circle\n                    className={cn(styles.backgroundCircle, styles[size], {\n                        [styles.stroke]: !stroke,\n                    })}\n                    cx={memorized.center}\n                    cy={memorized.center}\n                    r={memorized.radius}\n                    strokeWidth={STROKE[size]}\n                />\n                <circle\n                    className={cn(styles.progressCircle, styles[view], styles[size], {\n                        [styles[`bg-${view}`]]: fillComplete && isComplete,\n                    })}\n                    cx={memorized.center}\n                    cy={memorized.center}\n                    r={memorized.radius}\n                    strokeWidth={STROKE[size]}\n                    strokeDasharray={memorized.strokeDasharray}\n                    strokeDashoffset={\n                        direction === 'counter-clockwise'\n                            ? -memorized.strokeDashoffset\n                            : memorized.strokeDashoffset\n                    }\n                    transform={`rotate(${-90} ${memorized.center} ${memorized.center})`}\n                />\n            </svg>\n            <div\n                className={cn(styles.labelWrapper, {\n                    [styles.label]: Icon || IconComplete,\n                })}\n            >\n                {children || renderContent()}\n            </div>\n        </div>\n    );\n};\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","h2","pre","ul","li","id","live","className","MDXContent","wrapper","MDXLayout","title","component","CircularProgressBar","name","number","view","select","completeTextColor","text","titleComplete","subtitle","contentColor","subtitleComplete","stroke","boolean","direction","fillComplete","height","size","version","package","design","description","changelog","of","cssVars","css","circularProgressBar","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","SIZES","xs","s","m","l","xl","xxl","STROKE","VIEW_TITLE","VIEW_TEXT","_ref$view","_ref$size","dataTestId","_ref$title","toString","_ref$contentColor","_ref$stroke","Icon","icon","IconComplete","iconComplete","_ref$completeIconColo","completeIconColor","_ref$direction","memorized","widthSVG","heightSVG","center","radius","circumference","PI","progress","min","max","strokeDasharray","toFixed","strokeDashoffset","isComplete","isCompleteTextColor","titleContent","subtitleContent","IconComponent","renderTitle","renderTitleString","font","weight","renderSubTitle","_objectSpread","cx","cy","r","strokeWidth","transform","renderContent","renderIcon","React"],"sourceRoot":""}