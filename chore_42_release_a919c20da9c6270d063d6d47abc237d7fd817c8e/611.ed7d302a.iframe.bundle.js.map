{"version":3,"file":"611.ed7d302a.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/mobile.module.css?3339","webpack://@alfalab/core-components/./packages/tabs/src/components/title/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/scrollable-container/index.module.css?add0","webpack://@alfalab/core-components/./packages/tabs/src/components/scrollable-container/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/mobile.module.css?ed3b","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tab/index.module.css?5702","webpack://@alfalab/core-components/./packages/tabs/src/components/tab/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tabs/Component.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tabs/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tabs/src/hooks/use-tabs.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tabs/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/tabs/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tabs/src/components/primary-tablist/index.module.css?ccb2","webpack://@alfalab/core-components/./packages/tabs/src/components/secondary-tablist/index.module.css?6e7c"],"sourcesContent":["import React from 'react';\n\nimport { TabListProps } from '../../typings';\n\nimport { PrimaryTabList } from './Component';\n\nimport styles from './index.module.css';\n\nexport const PrimaryTabListDesktop = ({ size = 'm', ...restProps }: TabListProps) => (\n    <PrimaryTabList {...restProps} size={size} styles={styles} />\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { TabListProps } from '../../typings';\n\nimport { PrimaryTabList } from './Component';\n\nimport commonStyles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nconst styles = {\n    ...commonStyles,\n    ...mobileStyles,\n};\n\nexport type PrimaryTabListMobileProps = Omit<TabListProps, 'size' | 'collapsedTabsIds'>;\n\nexport const PrimaryTabListMobile = ({ className, ...restProps }: PrimaryTabListMobileProps) => (\n    <PrimaryTabList {...restProps} styles={styles} className={cn(className, styles.mobile)} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_xt5yM title_lCCM3\",\"mobile\":\"mobile_rNUpv\"};","import React, { ButtonHTMLAttributes, forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { Styles, TabListTitle } from '../../typings';\n\ntype Props = TabListTitle &\n    Styles &\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'id'> & { focused?: boolean; isOption?: boolean };\n\nexport const Title = forwardRef<HTMLButtonElement, Props>(\n    (\n        {\n            id,\n            toggleClassName,\n            title,\n            styles = {},\n            rightAddons = null,\n            hidden = false,\n            selected = false,\n            disabled = false,\n            collapsed = false,\n            focused = false,\n            isOption = false,\n            ...restProps\n        },\n        ref,\n    ) =>\n        hidden ? null : (\n            <button\n                {...restProps}\n                ref={ref}\n                disabled={disabled}\n                type='button'\n                id={String(id)}\n                className={cn(\n                    styles.title,\n                    {\n                        [styles.selected]: selected,\n                        [styles.disabled]: disabled,\n                        [styles.collapsed]: collapsed && !isOption,\n                        [styles.option]: isOption,\n                    },\n                    toggleClassName,\n                )}\n            >\n                <span className={cn(styles.content, { [styles.focused]: focused })}>{title}</span>\n\n                {rightAddons && <span className={styles.rightAddons}>{rightAddons}</span>}\n            </button>\n        ),\n);\n","import React, { useEffect, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { KeyboardFocusable } from '@alfalab/core-components-keyboard-focusable';\n\nimport { useTabs } from '../../hooks/use-tabs';\nimport { Styles, TabListProps } from '../../typings';\nimport { ScrollableContainer } from '../scrollable-container';\nimport { Title } from '../title';\n\nexport const PrimaryTabList = ({\n    size,\n    styles = {},\n    className,\n    containerClassName,\n    titles = [],\n    selectedId = titles.length ? titles[0].id : undefined,\n    scrollable = true,\n    fullWidthScroll,\n    onChange,\n    dataTestId,\n}: TabListProps & Styles) => {\n    const lineRef = useRef<HTMLDivElement>(null);\n\n    const { selectedTab, focusedTab, getTabListItemProps } = useTabs({\n        titles,\n        selectedId,\n        onChange,\n    });\n\n    useEffect(() => {\n        if (selectedTab && lineRef.current) {\n            lineRef.current.style.width = `${selectedTab.offsetWidth}px`;\n            lineRef.current.style.transform = `translateX(${selectedTab.offsetLeft}px)`;\n        }\n    }, [selectedTab]);\n\n    const renderContent = () => (\n        <div\n            role='tablist'\n            data-test-id={dataTestId}\n            className={cn(styles.component, className, size && styles[size], {\n                [styles.fullWidthScroll]: fullWidthScroll,\n            })}\n        >\n            {titles.map(({ dataTestId: _, ...restTitleProps }, index) => (\n                <KeyboardFocusable key={restTitleProps.id}>\n                    {(ref, focused) => (\n                        <Title\n                            {...getTabListItemProps(index, ref)}\n                            {...restTitleProps}\n                            focused={focused}\n                            styles={styles}\n                        />\n                    )}\n                </KeyboardFocusable>\n            ))}\n\n            <div className={styles.line} ref={lineRef} />\n        </div>\n    );\n\n    return scrollable ? (\n        <ScrollableContainer\n            activeChild={focusedTab || selectedTab}\n            containerClassName={containerClassName}\n            fullWidthScroll={fullWidthScroll}\n        >\n            {renderContent()}\n        </ScrollableContainer>\n    ) : (\n        <div className={cn(styles.container, containerClassName)}>{renderContent()}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_H4S8N\",\"fullWidthScroll\":\"fullWidthScroll_NVhi_\"};","import React, { ReactNode, useEffect } from 'react';\nimport cn from 'classnames';\nimport computeScrollIntoView from 'compute-scroll-into-view';\n\nimport { TabsProps } from '../../typings';\n\nimport styles from './index.module.css';\n\n/**\n * Дополнительная прокрутка при клике на не поместившийся таб\n */\nconst ADDITIONAL_SCROLLLEFT_VALUE = 40;\n\nexport type ScrollableContainerProps = {\n    /**\n     * Дополнительный класс контейнера\n     */\n    containerClassName?: string;\n\n    /**\n     * Дочерние компоненты\n     */\n    children: ReactNode;\n\n    /**\n     * Активный элемент (всегда будет в видимой области)\n     */\n    activeChild: HTMLElement | null;\n};\n\nexport const ScrollableContainer = ({\n    containerClassName,\n    children,\n    activeChild,\n    fullWidthScroll,\n}: ScrollableContainerProps & Pick<TabsProps, 'fullWidthScroll'>) => {\n    useEffect(() => {\n        if (activeChild) {\n            const actions = computeScrollIntoView(activeChild, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n\n            // TODO: animate?\n            actions.forEach(({ el, left }, index) => {\n                if (index === 0) return;\n                // eslint-disable-next-line no-param-reassign\n                el.scrollLeft =\n                    el.scrollLeft > left\n                        ? left - ADDITIONAL_SCROLLLEFT_VALUE\n                        : left + ADDITIONAL_SCROLLLEFT_VALUE;\n            });\n        }\n    }, [activeChild]);\n\n    return (\n        <div\n            className={cn(styles.container, containerClassName, {\n                [styles.fullWidthScroll]: fullWidthScroll,\n            })}\n        >\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { SecondaryTabListProps } from '../../typings';\n\nimport { SecondaryTabList } from './Component';\n\nimport commonStyles from './index.module.css';\n\nexport type SecondaryTabListDesktopProps = Omit<SecondaryTabListProps, 'tagSize'>;\n\nexport const SecondaryTabListDesktop = ({\n    size = 's',\n    ...restProps\n}: SecondaryTabListDesktopProps) => (\n    <SecondaryTabList {...restProps} size={size} styles={commonStyles} tagSize={size} />\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { SecondaryTabListProps } from '../../typings';\n\nimport { SecondaryTabList } from './Component';\n\nimport commonStyles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nconst styles = {\n    ...commonStyles,\n    ...mobileStyles,\n};\n\nexport type SecondaryTabListMobileProps = Omit<SecondaryTabListProps, 'size' | 'tagSize'>;\n\nexport const SecondaryTabListMobile = ({\n    className,\n    ...restProps\n}: SecondaryTabListMobileProps) => (\n    <SecondaryTabList\n        {...restProps}\n        styles={styles}\n        className={cn(className, styles.mobile)}\n        tagSize='xs'\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_Blp64 title_g0PPD\",\"mobile\":\"mobile_gtqtT\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Tag } from '@alfalab/core-components-tag';\n\nimport { useTabs } from '../../hooks/use-tabs';\nimport { SecondaryTabListProps, Styles } from '../../typings';\nimport { ScrollableContainer } from '../scrollable-container';\n\nexport const SecondaryTabList = ({\n    styles = {},\n    className,\n    containerClassName,\n    size,\n    titles = [],\n    selectedId = titles.length ? titles[0].id : undefined,\n    scrollable = true,\n    fullWidthScroll,\n    tagSize = 'xs',\n    onChange,\n    dataTestId,\n}: SecondaryTabListProps & Styles) => {\n    const { focusedTab, selectedTab, getTabListItemProps } = useTabs({\n        titles,\n        selectedId,\n        onChange,\n    });\n\n    const renderContent = () => (\n        <div\n            role='tablist'\n            data-test-id={dataTestId}\n            className={cn(styles.component, className, size && styles[size], {\n                [styles.fullWidthScroll]: fullWidthScroll,\n            })}\n        >\n            {titles.map((item, index) => {\n                if (item.hidden) return null;\n\n                return (\n                    <Tag\n                        {...getTabListItemProps(index)}\n                        key={item.id}\n                        className={cn(styles.title, item.toggleClassName)}\n                        checked={item.id === selectedId}\n                        size={tagSize}\n                        rightAddons={item.rightAddons}\n                    >\n                        {item.title}\n                    </Tag>\n                );\n            })}\n        </div>\n    );\n\n    return scrollable ? (\n        <ScrollableContainer\n            activeChild={focusedTab || selectedTab}\n            containerClassName={containerClassName}\n            fullWidthScroll={fullWidthScroll}\n        >\n            {renderContent()}\n        </ScrollableContainer>\n    ) : (\n        <div className={cn(styles.container, containerClassName)}>{renderContent()}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_WoLcH\",\"hidden\":\"hidden_GyIkl\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { TabProps } from '../../typings';\n\nimport styles from './index.module.css';\n\nexport const Tab = ({ children, hidden, className, disabled, dataTestId }: TabProps) =>\n    children ? (\n        <div\n            className={cn(\n                styles.component,\n                {\n                    [styles.hidden]: hidden,\n                },\n                className,\n            )}\n            hidden={hidden}\n            role='tabpanel'\n            tabIndex={disabled ? -1 : 0}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    ) : null;\n","import React, { cloneElement } from 'react';\n\nimport { TabsProps } from '../../typings';\n\nexport const Tabs = ({\n    TabList,\n    className,\n    containerClassName,\n    size,\n    defaultMatchMediaValue,\n    children,\n    selectedId,\n    scrollable,\n    collapsedTabsIds,\n    fullWidthScroll = false,\n    keepMounted = false,\n    dataTestId,\n    onChange,\n}: Omit<TabsProps, 'view'>) => {\n    const tabsArray = React.Children.toArray(children) as TabsProps['children'];\n    const titles = tabsArray.map(\n        ({\n            props: {\n                title,\n                id,\n                rightAddons,\n                disabled,\n                hidden,\n                toggleClassName,\n                dataTestId: toggleTestId,\n            },\n        }) => ({\n            title,\n            id,\n            disabled,\n            rightAddons,\n            hidden,\n            toggleClassName,\n            dataTestId: toggleTestId,\n        }),\n    );\n\n    const tabs = tabsArray.filter(\n        (tab) => tab.props.id === selectedId || tab.props.keepMounted || keepMounted,\n    );\n\n    return (\n        <div className={className}>\n            <TabList\n                containerClassName={containerClassName}\n                size={size}\n                titles={titles}\n                selectedId={selectedId}\n                scrollable={scrollable}\n                collapsedTabsIds={collapsedTabsIds}\n                onChange={onChange}\n                dataTestId={dataTestId}\n                defaultMatchMediaValue={defaultMatchMediaValue}\n                fullWidthScroll={fullWidthScroll}\n            />\n\n            {tabs.map((tab) => cloneElement(tab, { hidden: tab.props.id !== selectedId }))}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { TabsProps } from '../../typings';\nimport { PrimaryTabListDesktop } from '../primary-tablist/Component.desktop';\nimport { SecondaryTabListDesktop } from '../secondary-tablist/Component.desktop';\n\nimport { Tabs } from './Component';\n\nconst views = {\n    primary: PrimaryTabListDesktop,\n    secondary: SecondaryTabListDesktop,\n};\n\nexport type TabsDesktopProps = Omit<TabsProps, 'TabList' | 'fullWidthScroll' | 'collapsedTabsIds'>;\n\nexport const TabsDesktop = ({\n    view = 'primary',\n    scrollable = false,\n    size = view === 'primary' ? 'm' : 's',\n    ...restProps\n}: TabsDesktopProps) => (\n    <Tabs TabList={views[view]} scrollable={scrollable} size={size} {...restProps} />\n);\n","import { KeyboardEvent, MouseEvent, MutableRefObject, useCallback, useRef, useState } from 'react';\n\nimport { getDataTestId } from '@alfalab/core-components-shared';\n\nimport { TabListTitle, UseTabsProps } from '../typings';\n\nexport function useTabs({ titles = [], selectedId, onChange }: UseTabsProps) {\n    const [selectedTab, setSelectedTab] = useState<HTMLButtonElement | null>(null);\n    const [focusedTab, setFocusedTab] = useState<HTMLButtonElement | null>(null);\n    const itemRefs = useRef<HTMLButtonElement[]>([]);\n\n    const handleItemRef = useCallback(\n        (node: HTMLButtonElement, item: TabListTitle, index: number) => {\n            if (node && item.id === selectedId) setSelectedTab(node);\n            itemRefs.current[index] = node;\n        },\n        [selectedId],\n    );\n\n    const handleItemClick = useCallback(\n        (event: MouseEvent, item: TabListTitle) => {\n            if (onChange && item.id !== selectedId) {\n                onChange(event, { selectedId: item.id });\n            }\n        },\n        [onChange, selectedId],\n    );\n\n    const focusTab = useCallback(\n        (position: 'prev' | 'next' | 'start' | 'end') => {\n            const refs = itemRefs.current;\n\n            const tabAvailable = (ref: HTMLButtonElement) => ref && !ref.disabled;\n\n            if (refs.every((ref) => !tabAvailable(ref))) return;\n\n            let focusedTabIndex = refs.findIndex((node) => document.activeElement === node);\n\n            if (focusedTabIndex === -1) {\n                focusedTabIndex = refs.findIndex((node) => node === selectedTab);\n            }\n\n            let newFocusIndex;\n\n            switch (position) {\n                case 'prev':\n                    newFocusIndex = focusedTabIndex === 0 ? refs.length - 1 : focusedTabIndex - 1;\n                    break;\n                case 'next':\n                    newFocusIndex = focusedTabIndex === refs.length - 1 ? 0 : focusedTabIndex + 1;\n                    break;\n                case 'start':\n                    newFocusIndex = 0;\n                    break;\n                case 'end':\n                    newFocusIndex = refs.length - 1;\n                    break;\n            }\n\n            const shift = ['prev', 'end'].includes(position) ? -1 : 1;\n\n            while (!tabAvailable(refs[newFocusIndex])) {\n                newFocusIndex = (refs.length + newFocusIndex + shift) % refs.length;\n            }\n\n            refs[newFocusIndex].focus();\n\n            setFocusedTab(refs[newFocusIndex]);\n        },\n        [selectedTab, itemRefs],\n    );\n\n    const handleKeyDown = useCallback(\n        (event: KeyboardEvent<HTMLButtonElement>) => {\n            switch (event.key) {\n                case 'ArrowLeft':\n                    focusTab('prev');\n\n                    event.preventDefault();\n                    break;\n                case 'ArrowRight':\n                    focusTab('next');\n\n                    event.preventDefault();\n                    break;\n                case 'Home':\n                    focusTab('start');\n\n                    event.preventDefault();\n                    break;\n                case 'End':\n                    focusTab('end');\n\n                    event.preventDefault();\n                    break;\n                default:\n                    break;\n            }\n        },\n        [focusTab],\n    );\n\n    const getTabListItemProps = (index: number, outerRef?: MutableRefObject<HTMLElement>) => {\n        const item = titles[index];\n        const itemSelected = item.id === selectedId;\n\n        return {\n            role: 'tab',\n            tabIndex: itemSelected ? 0 : -1,\n            'aria-selected': itemSelected,\n            selected: itemSelected,\n            'data-test-id': getDataTestId(item.dataTestId, 'toggle'),\n            disabled: item.disabled,\n            ref: (node: HTMLButtonElement) => {\n                // eslint-disable-next-line no-param-reassign\n                if (outerRef) outerRef.current = node;\n                handleItemRef(node, item, index);\n            },\n            onKeyDown: handleKeyDown,\n            onClick: (event?: MouseEvent) => handleItemClick(event as MouseEvent, item),\n        };\n    };\n\n    return {\n        getTabListItemProps,\n        selectedTab,\n        focusedTab,\n    };\n}\n","import React from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { TabListProps } from '../../typings';\n\nimport { PrimaryTabListDesktop } from './Component.desktop';\nimport { PrimaryTabListMobile } from './Component.mobile';\n\nexport const PrimaryTabListResponsive = ({\n    size,\n    breakpoint = 768,\n    fullWidthScroll,\n    defaultMatchMediaValue,\n    ...restProps\n}: TabListProps) => {\n    const [isDesktop] = useMatchMedia(`(min-width: ${breakpoint}px)`, defaultMatchMediaValue);\n\n    return isDesktop ? (\n        <PrimaryTabListDesktop\n            breakpoint={breakpoint}\n            size={size}\n            defaultMatchMediaValue={defaultMatchMediaValue}\n            {...restProps}\n        />\n    ) : (\n        <PrimaryTabListMobile\n            breakpoint={breakpoint}\n            defaultMatchMediaValue={defaultMatchMediaValue}\n            fullWidthScroll={fullWidthScroll}\n            {...restProps}\n        />\n    );\n};\n","import React from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { SecondaryTabListProps } from '../../typings';\n\nimport { SecondaryTabListDesktop } from './Component.desktop';\nimport { SecondaryTabListMobile } from './Component.mobile';\n\nexport const SecondaryTabListResponsive = ({\n    size,\n    defaultMatchMediaValue,\n    fullWidthScroll,\n    breakpoint = 768,\n    ...restProps\n}: SecondaryTabListProps) => {\n    const [isDesktop] = useMatchMedia(`(min-width: ${breakpoint}px)`, defaultMatchMediaValue);\n\n    return isDesktop ? (\n        <SecondaryTabListDesktop size={size} breakpoint={breakpoint} {...restProps} />\n    ) : (\n        <SecondaryTabListMobile\n            fullWidthScroll={fullWidthScroll}\n            breakpoint={breakpoint}\n            {...restProps}\n        />\n    );\n};\n","import React from 'react';\n\nimport { TabsProps } from '../../typings';\nimport { PrimaryTabListResponsive } from '../primary-tablist/Component.responsive';\nimport { SecondaryTabListResponsive } from '../secondary-tablist/Component.responsive';\n\nimport { Tabs } from './Component';\n\nconst views = {\n    primary: PrimaryTabListResponsive,\n    secondary: SecondaryTabListResponsive,\n};\n\nexport type TabsResponsiveProps = Omit<TabsProps, 'TabList' | 'collapsedTabsIds'>;\n\nexport const TabsResponsive = ({\n    view = 'primary',\n    scrollable = false,\n    ...restProps\n}: TabsResponsiveProps) => <Tabs TabList={views[view]} scrollable={scrollable} {...restProps} />;\n","import React from 'react';\n\nimport { TabsProps } from '../../typings';\nimport { PrimaryTabListMobile } from '../primary-tablist/Component.mobile';\nimport { SecondaryTabListMobile } from '../secondary-tablist/Component.mobile';\n\nimport { Tabs } from './Component';\n\nconst views = {\n    primary: PrimaryTabListMobile,\n    secondary: SecondaryTabListMobile,\n};\n\nexport type TabsMobileProps = Omit<TabsProps, 'TabList' | 'size' | 'collapsedTabsIds'>;\n\nexport const TabsMobile = ({\n    view = 'primary',\n    scrollable = true,\n    ...restProps\n}: TabsMobileProps) => <Tabs TabList={views[view]} scrollable={scrollable} {...restProps} />;\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_yVvN7\",\"fullWidthScroll\":\"fullWidthScroll_YDehg\",\"container\":\"container_Kmcdv\",\"title\":\"title_lCCM3\",\"disabled\":\"disabled_OrqkF\",\"focused\":\"focused_psPxX\",\"collapsed\":\"collapsed_XCyOE\",\"selected\":\"selected_GQZlo\",\"line\":\"line_hwXjZ\",\"s\":\"s_fTMFk\",\"xs\":\"xs_HeSxS\",\"xxs\":\"xxs_becHE\",\"pickerWrapper\":\"pickerWrapper_pu2yo\",\"option\":\"option_p2SHn\",\"m\":\"m_BZ9G2\",\"l\":\"l_Aggn2\",\"xl\":\"xl_dCXVU\",\"rightAddons\":\"rightAddons_eguaI\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_OOWzT\",\"fullWidthScroll\":\"fullWidthScroll_CDPTr\",\"container\":\"container_B4Wet\",\"title\":\"title_g0PPD\",\"xxs\":\"xxs_e3vzd\",\"xs\":\"xs_u5rCC\",\"s\":\"s_xiDbB\",\"m\":\"m_OzBuG\",\"l\":\"l_DXFNf\",\"xl\":\"xl_bDydY\"};"],"names":["PrimaryTabListDesktop","_ref","_ref$size","size","restProps","_objectWithoutProperties","_excluded","_jsx","PrimaryTabList","_objectSpread","styles","commonStyles","PrimaryTabListMobile","className","cn","mobile","Title","forwardRef","ref","_cn","id","toggleClassName","title","_ref$styles","_ref$rightAddons","rightAddons","_ref$hidden","hidden","_ref$selected","selected","_ref$disabled","disabled","_ref$collapsed","collapsed","_ref$focused","focused","_ref$isOption","isOption","_jsxs","type","String","_defineProperty","option","children","content","containerClassName","_ref$titles","titles","_ref$selectedId","selectedId","length","undefined","_ref$scrollable","scrollable","fullWidthScroll","onChange","dataTestId","lineRef","useRef","_useTabs","useTabs","selectedTab","focusedTab","getTabListItemProps","useEffect","current","style","width","concat","offsetWidth","transform","offsetLeft","renderContent","role","component","map","_ref2","index","restTitleProps","KeyboardFocusable","line","ScrollableContainer","activeChild","container","computeScrollIntoView","scrollMode","block","inline","forEach","el","left","scrollLeft","SecondaryTabListDesktop","SecondaryTabList","tagSize","SecondaryTabListMobile","_ref$tagSize","item","_createElement","Tag","key","checked","Tab","tabIndex","Tabs","TabList","defaultMatchMediaValue","collapsedTabsIds","_ref$fullWidthScroll","_ref$keepMounted","keepMounted","tabsArray","React","_ref2$props","props","tabs","filter","tab","cloneElement","views","primary","secondary","TabsDesktop","_ref$view","view","_useState","useState","_useState2","_slicedToArray","setSelectedTab","_useState3","_useState4","setFocusedTab","itemRefs","handleItemRef","useCallback","node","handleItemClick","event","focusTab","position","refs","tabAvailable","every","newFocusIndex","focusedTabIndex","findIndex","document","activeElement","shift","includes","focus","handleKeyDown","preventDefault","outerRef","itemSelected","getDataTestId","onKeyDown","onClick","PrimaryTabListResponsive","_ref$breakpoint","breakpoint","_useMatchMedia","useMatchMedia","SecondaryTabListResponsive","TabsResponsive","TabsMobile"],"sourceRoot":""}