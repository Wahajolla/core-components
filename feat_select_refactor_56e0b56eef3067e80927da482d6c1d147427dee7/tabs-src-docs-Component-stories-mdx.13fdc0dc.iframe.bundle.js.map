{"version":3,"file":"tabs-src-docs-Component-stories-mdx.13fdc0dc.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/tabs/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/tabs/src/vars.css?6321","webpack://@alfalab/core-components/./packages/tabs/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/tabs/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/utils/getDataTestId.ts","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://@alfalab/core-components/./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    br: \"br\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"tabsprimary\",\n      children: \"TabsPrimary\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Для переключения контента всей страницы рекомендуется использовать основной вид табов.\", _jsx(_components.br, {}), \"\\n\", \"Для TabsPrimary рекомендуется использовать только М размер.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    tabs = [\\n        { title: 'Aurum', id: 'tab-1' },\\n        { title: 'Bercelium', id: 'tab-2' },\\n        { title: 'Curium', id: 'tab-3' },\\n        { title: 'Neptunium', id: 'tab-4' },\\n        { title: 'Plutonuim', id: 'tab-5' },\\n        { title: 'Rubidium', id: 'tab-6' },\\n        { title: 'Californium', id: 'tab-7' },\\n    ];\\n\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [title, setTitle] = React.useState('Aurum');\\n\\n    const handleChange = (event, { selectedId }) => {\\n        const currentTab = tabs.filter((tab) => tab.id === selectedId)[0];\\n        setSelectedId(selectedId);\\n        setTitle(currentTab.title);\\n    };\\n\\n    return (\\n        <>\\n            <TabsDesktop selectedId={selectedId} onChange={handleChange}>\\n                <Tab title='Aurum' id='tab-1' />\\n                <Tab title='Bercelium' id='tab-2' />\\n                <Tab title='Curium' id='tab-3' />\\n                <Tab title='Neptunium' id='tab-4' />\\n                <Tab title='Plutonuim' id='tab-5' />\\n                <Tab title='Rubidium' id='tab-6' />\\n                <Tab title='Californium' id='tab-7' />\\n            </TabsDesktop>\\n            <br />\\n            <div>Выбран таб: {title}</div>\\n        </>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    tabs = [\\n        { title: 'Aurum', id: 'tab-1' },\\n        { title: 'Bercelium', id: 'tab-2' },\\n        { title: 'Curium', id: 'tab-3' },\\n        { title: 'Neptunium', id: 'tab-4' },\\n        { title: 'Plutonuim', id: 'tab-5' },\\n        { title: 'Rubidium', id: 'tab-6' },\\n        { title: 'Californium', id: 'tab-7' },\\n    ];\\n\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [title, setTitle] = React.useState('Aurum');\\n\\n    const handleChange = (event, { selectedId }) => {\\n        const currentTab = tabs.filter((tab) => tab.id === selectedId)[0];\\n        setSelectedId(selectedId);\\n        setTitle(currentTab.title);\\n    };\\n\\n    return (\\n        <>\\n            <TabsMobile selectedId={selectedId} onChange={handleChange}>\\n                <Tab title='Aurum' id='tab-1' />\\n                <Tab title='Bercelium' id='tab-2' />\\n                <Tab title='Curium' id='tab-3' />\\n                <Tab title='Neptunium' id='tab-4' />\\n                <Tab title='Plutonuim' id='tab-5' />\\n                <Tab title='Rubidium' id='tab-6' />\\n                <Tab title='Californium' id='tab-7' />\\n            </TabsMobile>\\n            <br />\\n            <div>Выбран таб: {title}</div>\\n        </>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"tabssecondary\",\n      children: \"TabsSecondary\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Для переключения контента внутри блока рекомендуется использовать второстепенный вид табов.\", _jsx(_components.br, {}), \"\\n\", \"Для десктопа рекомендуется использовать S и XS размер табов и XXS размер для мобильной версии интерфейса.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    tabs = [\\n        { title: 'Aurum', id: 'tab-1' },\\n        { title: 'Bercelium', id: 'tab-2' },\\n        { title: 'Curium', id: 'tab-3' },\\n        { title: 'Neptunium', id: 'tab-4' },\\n        { title: 'Plutonuim', id: 'tab-5' },\\n        { title: 'Rubidium', id: 'tab-6' },\\n        { title: 'Californium', id: 'tab-7' },\\n    ];\\n\\n    const [selectSecondaryId, setSelectedSecondaryId] = React.useState('tab-1');\\n    const [title, setTitle] = React.useState('Aurum');\\n\\n    const handleSecondaryChange = (event, { selectedId }) => {\\n        const currentTab = tabs.filter((tab) => tab.id === selectedId)[0];\\n        setSelectedSecondaryId(selectedId);\\n        setTitle(currentTab.title);\\n    };\\n\\n    return (\\n        <div style={{ marginTop: 20 }}>\\n            <TabsDesktop\\n                selectedId={selectSecondaryId}\\n                onChange={handleSecondaryChange}\\n                view='secondary'\\n                scrollable={true}\\n            >\\n                <Tab title='Aurum' id='tab-1' />\\n                <Tab title='Bercelium' id='tab-2' />\\n                <Tab title='Curium' id='tab-3' />\\n                <Tab title='Neptunium' id='tab-4' />\\n                <Tab title='Plutonuim' id='tab-5' />\\n                <Tab title='Rubidium' id='tab-6' />\\n                <Tab title='Californium' id='tab-7' />\\n            </TabsDesktop>\\n            <br />\\n            <div>Выбран таб: {title}</div>\\n        </div>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    tabs = [\\n        { title: 'Aurum', id: 'tab-1' },\\n        { title: 'Bercelium', id: 'tab-2' },\\n        { title: 'Curium', id: 'tab-3' },\\n        { title: 'Neptunium', id: 'tab-4' },\\n        { title: 'Plutonuim', id: 'tab-5' },\\n        { title: 'Rubidium', id: 'tab-6' },\\n        { title: 'Californium', id: 'tab-7' },\\n    ];\\n\\n    const [selectSecondaryId, setSelectedSecondaryId] = React.useState('tab-1');\\n    const [title, setTitle] = React.useState('Aurum');\\n\\n    const handleSecondaryChange = (event, { selectedId }) => {\\n        const currentTab = tabs.filter((tab) => tab.id === selectedId)[0];\\n        setSelectedSecondaryId(selectedId);\\n        setTitle(currentTab.title);\\n    };\\n\\n    return (\\n        <div style={{ marginTop: 20 }}>\\n            <TabsMobile\\n                selectedId={selectSecondaryId}\\n                onChange={handleSecondaryChange}\\n                view='secondary'\\n            >\\n                <Tab title='Aurum' id='tab-1' />\\n                <Tab title='Bercelium' id='tab-2' />\\n                <Tab title='Curium' id='tab-3' />\\n                <Tab title='Neptunium' id='tab-4' />\\n                <Tab title='Plutonuim' id='tab-5' />\\n                <Tab title='Rubidium' id='tab-6' />\\n                <Tab title='Californium' id='tab-7' />\\n            </TabsMobile>\\n            <br />\\n            <div>Выбран таб: {title}</div>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переполнение\",\n      children: \"Переполнение\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Если табов больше, чем может отобразиться на экране, можно воспользоваться одной из двух опций, горизонтальный скролл или скрытие табов в кнопку \", _jsx(_components.code, {\n        children: \"Eщё\"\n      }), \".\\nДля второстепенных табов опция Collapsible недоступна.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const tabs = [\\n    { title: 'Aurum', id: 'tab-1' },\\n    { title: 'Bercelium', id: 'tab-2' },\\n    { title: 'Curium', id: 'tab-3' },\\n    { title: 'Neptunium', id: 'tab-4' },\\n    { title: 'Plutonuim', id: 'tab-5' },\\n    { title: 'Rubidium', id: 'tab-6' },\\n    { title: 'Californium', id: 'tab-7' },\\n    { title: 'Einsteinium', id: 'tab-8', rightAddons: <Badge view='count' content={1} /> },\\n    { title: 'Fermium', id: 'tab-9' },\\n    { title: 'Mendelevium', id: 'tab-10' },\\n];\\nrender(() => {\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [title, setTitle] = React.useState('Aurum');\\n    const [view, setView] = React.useState('primary');\\n    const [overflow, setOverflow] = React.useState('scrollable');\\n    const [collapsibleTabsIds, setCollapsibleTabsIds] = React.useState({ 'tab-1': true });\\n\\n    const handleChange = (event, { selectedId }) => {\\n        const currentTab = tabs.filter((tab) => tab.id === selectedId)[0];\\n        setSelectedId(selectedId);\\n        setTitle(currentTab.title);\\n    };\\n    const handleViewChange = (event, { value }) => setView(value);\\n    const handleOverflowChange = (event, { value }) => setOverflow(value);\\n\\n    const handleCollapsedTabsChange = (event, payload) => {\\n        setCollapsibleTabsIds({ ...collapsibleTabsIds, [payload.name]: payload.checked });\\n    };\\n\\n    const manuallyCollapsedTabs = React.useMemo(() => {\\n        const v = Object.keys(collapsibleTabsIds).filter((k) => !!collapsibleTabsIds[k]);\\n        return v.length ? v : undefined;\\n    }, [collapsibleTabsIds]);\\n\\n    return (\\n        <div>\\n            <TabsDesktop\\n                scrollable={overflow !== 'collapsible'}\\n                collapsible={overflow !== 'scrollable'}\\n                collapsedTabsIds={overflow === 'collapsible' && manuallyCollapsedTabs}\\n                selectedId={selectedId}\\n                onChange={handleChange}\\n                view={view}\\n            >\\n                {tabs.map((tab) => (\\n                    <Tab key={tab.id} {...tab} />\\n                ))}\\n            </TabsDesktop>\\n            <br />\\n            <div>Выбран таб: {title}</div>\\n            <br />\\n            <br />\\n            <div style={{ marginTop: 12 }}>\\n                <Space size={40}>\\n                    <RadioGroup\\n                        name='viewGroup'\\n                        direction='vertical'\\n                        label='Тип табов'\\n                        value={view}\\n                        onChange={handleViewChange}\\n                    >\\n                        <Radio label='Primary' value='primary' />\\n                        <Radio label='Secondary' value='secondary' />\\n                    </RadioGroup>\\n                    <RadioGroup\\n                        name='componentGroup'\\n                        direction='vertical'\\n                        label='Обработка переполнения'\\n                        value={overflow}\\n                        onChange={handleOverflowChange}\\n                    >\\n                        <Radio label='Scrollable' value='scrollable' />\\n                        <Radio label='Collapsible' value='collapsible' />\\n                    </RadioGroup>\\n                    {overflow === 'collapsible' && (\\n                        <CheckboxGroup\\n                            label='Схлопнутые вкладки'\\n                            name='tabsCheckboxGroup'\\n                            direction='vertical'\\n                            value={collapsibleTabsIds}\\n                            onChange={handleCollapsedTabsChange}\\n                        >\\n                            {tabs.map((t) => (\\n                                <Checkbox\\n                                    key={t.id}\\n                                    label={t.title}\\n                                    name={t.id}\\n                                    checked={!!collapsibleTabsIds[t.id]}\\n                                />\\n                            ))}\\n                        </CheckboxGroup>\\n                    )}\\n                </Space>\\n            </div>\\n        </div>\\n    );\\n});\\n//MOBILE\\nconst tabs = [\\n    { title: 'Aurum', id: 'tab-1' },\\n    { title: 'Bercelium', id: 'tab-2' },\\n    { title: 'Curium', id: 'tab-3', rightAddons: <Badge view='count' content={1} /> },\\n    { title: 'Neptunium', id: 'tab-4' },\\n    { title: 'Plutonuim', id: 'tab-5' },\\n    { title: 'Rubidium', id: 'tab-6' },\\n    { title: 'Californium', id: 'tab-7' },\\n    { title: 'Einsteinium', id: 'tab-8' },\\n    { title: 'Fermium', id: 'tab-9' },\\n    { title: 'Mendelevium', id: 'tab-10' },\\n];\\nrender(() => {\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [title, setTitle] = React.useState('Aurum');\\n    const [view, setView] = React.useState('primary');\\n    const [overflow, setOverflow] = React.useState('scrollable');\\n\\n    const handleChange = (event, { selectedId }) => {\\n        const currentTab = tabs.filter((tab) => tab.id === selectedId)[0];\\n        setSelectedId(selectedId);\\n        setTitle(currentTab.title);\\n    };\\n    const handleViewChange = (event, { value }) => setView(value);\\n    const handleOverflowChange = (event, { value }) => setOverflow(value);\\n\\n    return (\\n        <div>\\n            <TabsMobile\\n                scrollable={overflow}\\n                selectedId={selectedId}\\n                onChange={handleChange}\\n                view={view}\\n            >\\n                {tabs.map((tab) => (\\n                    <Tab key={tab.id} {...tab} />\\n                ))}\\n            </TabsMobile>\\n            <br />\\n            <div>Выбран таб: {title}</div>\\n            <br />\\n            <br />\\n            <div style={{ marginTop: 12 }}>\\n                <Space size={40}>\\n                    <RadioGroup\\n                        name='viewGroup'\\n                        direction='vertical'\\n                        label='Тип табов'\\n                        value={view}\\n                        onChange={handleViewChange}\\n                    >\\n                        <Radio label='Primary' value='primary' />\\n                        <Radio label='Secondary' value='secondary' />\\n                    </RadioGroup>\\n                    <RadioGroup\\n                        name='componentGroup'\\n                        direction='vertical'\\n                        label='Обработка переполнения'\\n                        value={overflow}\\n                        onChange={handleOverflowChange}\\n                    >\\n                        <Radio label='Scrollable' value='scrollable' />\\n                    </RadioGroup>\\n                </Space>\\n            </div>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"анатомия\",\n      children: \"Анатомия\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"С помощью слота \", _jsx(_components.code, {\n        children: \"RightAddons\"\n      }), \" можно кастомизировать тэг. Например, добавить иконку.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [selectedSecondaryId, setSelectedSecondaryId] = React.useState('tab-1');\\n\\n    const handleChange = (event, { selectedId }) => setSelectedId(selectedId);\\n    const handleSecondaryChange = (event, { selectedId }) => setSelectedSecondaryId(selectedId);\\n\\n    const addon = (\\n        <div\\n            style={{\\n                background: 'rgba(55, 120, 251, 0.1)',\\n                border: '1px dashed #3778FB',\\n                borderRadius: '8px',\\n                height: '24px',\\n                width: '24px',\\n                boxSizing: 'border-box',\\n            }}\\n        />\\n    );\\n\\n    return (\\n        <>\\n            <TabsDesktop size='xs' selectedId={selectedId} onChange={handleChange}>\\n                <Tab title='Aurum' id='tab-1' rightAddons={addon} />\\n                <Tab title='Bercelium' id='tab-2' rightAddons={addon} />\\n                <Tab title='Curium' id='tab-3' rightAddons={addon} />\\n                <Tab title='Neptunium' id='tab-4' rightAddons={addon} />\\n            </TabsDesktop>\\n            <div style={{ marginTop: 20 }}>\\n                <TabsDesktop\\n                    selectedId={selectedSecondaryId}\\n                    onChange={handleSecondaryChange}\\n                    view='secondary'\\n                    size='xs'\\n                >\\n                    <Tab title='Aurum' id='tab-1' rightAddons={addon} />\\n                    <Tab title='Bercelium' id='tab-2' rightAddons={addon} />\\n                    <Tab title='Curium' id='tab-3' rightAddons={addon} />\\n                    <Tab title='Neptunium' id='tab-4' rightAddons={addon} />\\n                </TabsDesktop>\\n            </div>\\n        </>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [selectedSecondaryId, setSelectedSecondaryId] = React.useState('tab-1');\\n\\n    const handleChange = (event, { selectedId }) => setSelectedId(selectedId);\\n    const handleSecondaryChange = (event, { selectedId }) => setSelectedSecondaryId(selectedId);\\n\\n    const addon = (\\n        <div\\n            style={{\\n                background: 'rgba(55, 120, 251, 0.1)',\\n                border: '1px dashed #3778FB',\\n                borderRadius: '8px',\\n                height: '24px',\\n                width: '24px',\\n                boxSizing: 'border-box',\\n            }}\\n        />\\n    );\\n\\n    return (\\n        <>\\n            <TabsMobile size='xs' selectedId={selectedId} onChange={handleChange}>\\n                <Tab title='Aurum' id='tab-1' rightAddons={addon} />\\n                <Tab title='Bercelium' id='tab-2' rightAddons={addon} />\\n                <Tab title='Curium' id='tab-3' rightAddons={addon} />\\n                <Tab title='Neptunium' id='tab-4' rightAddons={addon} />\\n            </TabsMobile>\\n            <div style={{ marginTop: 20 }}>\\n                <TabsMobile\\n                    selectedId={selectedSecondaryId}\\n                    onChange={handleSecondaryChange}\\n                    view='secondary'\\n                    size='xs'\\n                >\\n                    <Tab title='Aurum' id='tab-1' rightAddons={addon} />\\n                    <Tab title='Bercelium' id='tab-2' rightAddons={addon} />\\n                    <Tab title='Curium' id='tab-3' rightAddons={addon} />\\n                    <Tab title='Neptunium' id='tab-4' rightAddons={addon} />\\n                </TabsMobile>\\n            </div>\\n        </>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"состояния\",\n      children: \"Состояния\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Таб может находиться в активном и неактивном состоянии. Взаимодействие может быть ограничено с помощью свойства \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \".\\nДисейблить активный таб недопустимо.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [selectedSecondaryId, setSelectedSecondaryId] = React.useState('tab-1');\\n\\n    const handleChange = (event, { selectedId }) => setSelectedId(selectedId);\\n    const handleSecondaryChange = (event, { selectedId }) => setSelectedSecondaryId(selectedId);\\n\\n    return (\\n        <>\\n            <TabsDesktop size='xs' selectedId={selectedId} onChange={handleChange}>\\n                <Tab title='Aurum' id='tab-1' />\\n                <Tab title='Bercelium' id='tab-2' disabled={true} />\\n                <Tab title='Curium' id='tab-3' />\\n                <Tab title='Neptunium' id='tab-4' />\\n                <Tab title='Plutonuim' id='tab-5' />\\n                <Tab title='Rubidium' id='tab-6' />\\n                <Tab title='Californium' id='tab-7' />\\n            </TabsDesktop>\\n            <div style={{ marginTop: 20 }}>\\n                <TabsDesktop\\n                    selectedId={selectedSecondaryId}\\n                    onChange={handleSecondaryChange}\\n                    view='secondary'\\n                    size='xs'\\n                >\\n                    <Tab title='Aurum' id='tab-1' />\\n                    <Tab title='Bercelium' id='tab-2' disabled={true} />\\n                    <Tab title='Curium' id='tab-3' />\\n                    <Tab title='Neptunium' id='tab-4' />\\n                    <Tab title='Plutonuim' id='tab-5' />\\n                    <Tab title='Rubidium' id='tab-6' />\\n                    <Tab title='Californium' id='tab-7' />\\n                </TabsDesktop>\\n            </div>\\n        </>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [selectedId, setSelectedId] = React.useState('tab-1');\\n    const [selectedSecondaryId, setSelectedSecondaryId] = React.useState('tab-1');\\n\\n    const handleChange = (event, { selectedId }) => setSelectedId(selectedId);\\n    const handleSecondaryChange = (event, { selectedId }) => setSelectedSecondaryId(selectedId);\\n\\n    return (\\n        <>\\n            <TabsMobile size='xs' selectedId={selectedId} onChange={handleChange}>\\n                <Tab title='Aurum' id='tab-1' />\\n                <Tab title='Bercelium' id='tab-2' disabled={true} />\\n                <Tab title='Curium' id='tab-3' />\\n                <Tab title='Neptunium' id='tab-4' />\\n                <Tab title='Plutonuim' id='tab-5' />\\n                <Tab title='Rubidium' id='tab-6' />\\n                <Tab title='Californium' id='tab-7' />\\n            </TabsMobile>\\n            <div style={{ marginTop: 20 }}>\\n                <TabsMobile\\n                    selectedId={selectedSecondaryId}\\n                    onChange={handleSecondaryChange}\\n                    view='secondary'\\n                    size='xs'\\n                >\\n                    <Tab title='Aurum' id='tab-1' />\\n                    <Tab title='Bercelium' id='tab-2' disabled={true} />\\n                    <Tab title='Curium' id='tab-3' />\\n                    <Tab title='Neptunium' id='tab-4' />\\n                    <Tab title='Plutonuim' id='tab-5' />\\n                    <Tab title='Rubidium' id='tab-6' />\\n                    <Tab title='Californium' id='tab-7' />\\n                </TabsMobile>\\n            </div>\\n        </>\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    --primary-tablist-color: var(--color-light-text-secondary);\\n    --primary-tablist-hover-color: var(--color-light-text-primary);\\n    --primary-tablist-selected-color: var(--color-light-text-primary);\\n    --primary-tablist-disabled-color: var(--color-light-text-tertiary);\\n    --primary-tablist-bottom-border-color: var(--color-light-border-primary);\\n    --primary-tablist-line-color: var(--color-light-border-accent);\\n    --primary-tablist-font-feature-settings: normal;\\n\\n    /* mobile */\\n    --primary-tablist-mobile-gaps: var(--gap-xl);\\n    --primary-tablist-mobile-font-size: 16px;\\n    --primary-tablist-mobile-line-height: 24px;\\n    --primary-tablist-mobile-font-weight: 400;\\n    --primary-tablist-mobile-font-family: var(--font-family-system);\\n    --primary-tablist-mobile-padding: 0 0 var(--gap-s);\\n\\n    /* size s */\\n    --primary-tablist-s-gaps: var(--gap-2xl);\\n    --primary-tablist-s-font-size: 18px;\\n    --primary-tablist-s-font-weight: 400;\\n    --primary-tablist-s-font-family: var(--font-family-system);\\n    --primary-tablist-s-padding: 0 0 var(--gap-s);\\n\\n    /* size m */\\n    --primary-tablist-m-gaps: var(--gap-2xl);\\n    --primary-tablist-m-font-size: 18px;\\n    --primary-tablist-m-font-weight: 400;\\n    --primary-tablist-m-font-family: var(--font-family-system);\\n    --primary-tablist-m-padding: 0 0 var(--gap-m);\\n\\n    /* size l */\\n    --primary-tablist-l-gaps: var(--gap-2xl);\\n    --primary-tablist-l-font-size: 18px;\\n    --primary-tablist-l-font-weight: 400;\\n    --primary-tablist-l-font-family: var(--font-family-system);\\n    --primary-tablist-l-padding: 0 0 var(--gap-l);\\n\\n    /* size xl */\\n    --primary-tablist-xl-gaps: var(--gap-2xl);\\n    --primary-tablist-xl-font-size: 18px;\\n    --primary-tablist-xl-font-weight: 400;\\n    --primary-tablist-xl-font-family: var(--font-family-system);\\n    --primary-tablist-xl-padding: 0 0 var(--gap-l);\\n\\n    /* mobile */\\n    --secondary-tablist-mobile-gaps: var(--gap-xs);\\n\\n    /* size xxs */\\n    --secondary-tablist-xxs-gaps: var(--gap-xs);\\n\\n    /* size xs */\\n    --secondary-tablist-xs-gaps: var(--gap-xs);\\n\\n    /* size s */\\n    --secondary-tablist-s-gaps: var(--gap-s);\\n\\n    /* size m */\\n    --secondary-tablist-m-gaps: var(--gap-s);\\n\\n    /* size l */\\n    --secondary-tablist-l-gaps: var(--gap-m);\\n\\n    /* size xl */\\n    --secondary-tablist-xl-gaps: var(--gap-m);\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {Tab as TabTS, TabsDesktop as TabsDesktopTS} from '../desktop';\nimport {TabsMobile as TabsMobileTS} from '../mobile';\nimport {TabsResponsive as TabsResponsiveTS} from '../responsive';\nimport vars from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Импорт адаптивных табов\\nimport { TabsResponsive, Tab } from '@alfalab/core-components/tabs';\\nimport { TabsResponsive, Tab } from '@alfalab/core-components/tabs/responsive';\\n\\n// Импорт только десктопных табов\\nimport { TabsDesktop, Tab } from '@alfalab/core-components/tabs/desktop';\\n\\n// Импорт только мобильных табов\\nimport { TabsMobile, Tab } from '@alfalab/core-components/tabs/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"tips--tricks\",\n      children: \"Tips & Tricks\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Свойство \", _jsx(_components.code, {\n            children: \"title\"\n          }), \" будет использовано для генерации заголовков, а \", _jsx(_components.code, {\n            children: \"id\"\n          }), \" для переключения табов.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"С помощью свойства \", _jsx(_components.code, {\n            children: \"disabled\"\n          }), \" таб можно заблокировать для выбора.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"По умолчанию в DOM рендерится контент только активного таба, с помощью \", _jsx(_components.code, {\n            children: \"keepMounted\"\n          }), \" можно указать, контент каких табов нужно рендерить в любом случае. Контент в таком случае останется невидимым, но всегда будет находиться в DOM.\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        TabsDesktop: TabsDesktopTS,\n        TabsMobile: TabsMobileTS,\n        TabsResponsive: TabsResponsiveTS,\n        Tab: TabTS\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: vars\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Tab, TabsDesktop, PrimaryTabListDesktop, SecondaryTabListDesktop } from '@alfalab/core-components-tabs/desktop';\nimport { TabsMobile, PrimaryTabListMobile, SecondaryTabListMobile } from '@alfalab/core-components-tabs/mobile';\nimport { TabsResponsive } from '@alfalab/core-components-tabs/responsive';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Tabs\",\n      id: \"Tabs\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Tabs\",\n      children: React.createElement(() => {\n        const [selectedId, setSelectedId] = React.useState('tab-1');\n        const handleChange = (event, {\n          selectedId\n        }) => setSelectedId(selectedId);\n        const component = select('TabsComponent', ['TabsResponsive', 'TabsDesktop', 'TabsMobile'], 'TabsResponsive');\n        const TabsComponent = React.useMemo(() => ({\n          TabsResponsive: TabsResponsive,\n          TabsDesktop: TabsDesktop,\n          TabsMobile: TabsMobile\n        })[component], [component]);\n        const props = TabsComponent !== TabsMobile ? {\n          size: select('size', ['xxs', 'xs', 's', 'm', 'l', 'xl'], 'm')\n        } : {};\n        const responsiveAndMobileProps = TabsComponent !== TabsDesktop ? {\n          fullWidthScroll: boolean('fullWidthScroll', false)\n        } : {};\n        return /*#__PURE__*/_jsxs(TabsComponent, {\n          ...props,\n          ...responsiveAndMobileProps,\n          view: select('view', ['primary', 'secondary'], 'primary'),\n          selectedId: selectedId,\n          keepMounted: boolean('keepMounted'),\n          onChange: handleChange,\n          scrollable: boolean('scrollable', false),\n          children: [/*#__PURE__*/_jsx(Tab, {\n            title: \"Aurum\",\n            id: \"tab-1\",\n            children: \"Aurum\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"Bercelium\",\n            id: \"tab-2\",\n            disabled: true,\n            children: \"Bercelium\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"\\u0422\\u0430\\u0431 3 (hidden)\",\n            id: \"tab-3\",\n            hidden: true,\n            children: \"\\u0422\\u0430\\u0431 3\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"Curium\",\n            id: \"tab-4\",\n            children: \"Curium\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"Neptunium\",\n            id: \"tab-5\",\n            children: \"Neptunium\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"Plutonuim\",\n            id: \"tab-6\",\n            children: \"Plutonuim\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"Rubidium\",\n            id: \"tab-7\",\n            children: \"Rubidium\"\n          }), /*#__PURE__*/_jsx(Tab, {\n            title: \"Californium\",\n            id: \"tab-8\",\n            children: \"Californium\"\n          })]\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Tabs\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/tabs\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=307%3A41282\",\n      children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0434\\u043B\\u044F \\u043F\\u0435\\u0440\\u0435\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u044F \\u043A\\u043E\\u043D\\u0442\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B \\u0438\\u043B\\u0438 \\u0431\\u043B\\u043E\\u043A\\u0430.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      development: /*#__PURE__*/_jsx(Development, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const tabs = () => React.createElement(() => {\n  const [selectedId, setSelectedId] = React.useState(\"tab-1\");\n  const handleChange = (event, {\n    selectedId\n  }) => setSelectedId(selectedId);\n  const component = select(\"TabsComponent\", [\"TabsResponsive\", \"TabsDesktop\", \"TabsMobile\"], \"TabsResponsive\");\n  const TabsComponent = React.useMemo(() => ({\n    TabsResponsive: TabsResponsive,\n    TabsDesktop: TabsDesktop,\n    TabsMobile: TabsMobile\n  })[component], [component]);\n  const props = TabsComponent !== TabsMobile ? {\n    size: select(\"size\", [\"xxs\", \"xs\", \"s\", \"m\", \"l\", \"xl\"], \"m\")\n  } : {};\n  const responsiveAndMobileProps = TabsComponent !== TabsDesktop ? {\n    fullWidthScroll: boolean(\"fullWidthScroll\", false)\n  } : {};\n  return /*#__PURE__*/_jsxs(TabsComponent, {\n    ...props,\n    ...responsiveAndMobileProps,\n    view: select(\"view\", [\"primary\", \"secondary\"], \"primary\"),\n    selectedId: selectedId,\n    keepMounted: boolean(\"keepMounted\"),\n    onChange: handleChange,\n    scrollable: boolean(\"scrollable\", false),\n    children: [/*#__PURE__*/_jsx(Tab, {\n      title: \"Aurum\",\n      id: \"tab-1\",\n      children: \"Aurum\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"Bercelium\",\n      id: \"tab-2\",\n      disabled: true,\n      children: \"Bercelium\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"\\\\u0422\\\\u0430\\\\u0431 3 (hidden)\",\n      id: \"tab-3\",\n      hidden: true,\n      children: \"\\u0422\\u0430\\u0431 3\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"Curium\",\n      id: \"tab-4\",\n      children: \"Curium\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"Neptunium\",\n      id: \"tab-5\",\n      children: \"Neptunium\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"Plutonuim\",\n      id: \"tab-6\",\n      children: \"Plutonuim\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"Rubidium\",\n      id: \"tab-7\",\n      children: \"Rubidium\"\n    }), /*#__PURE__*/_jsx(Tab, {\n      title: \"Californium\",\n      id: \"tab-8\",\n      children: \"Californium\"\n    })]\n  });\n});\ntabs.storyName = 'Tabs';\ntabs.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [selectedId, setSelectedId] = React.useState(\\\"tab-1\\\");\\n  const handleChange = (event, {\\n    selectedId\\n  }) => setSelectedId(selectedId);\\n  const component = select(\\\"TabsComponent\\\", [\\\"TabsResponsive\\\", \\\"TabsDesktop\\\", \\\"TabsMobile\\\"], \\\"TabsResponsive\\\");\\n  const TabsComponent = React.useMemo(() => ({\\n    TabsResponsive: TabsResponsive,\\n    TabsDesktop: TabsDesktop,\\n    TabsMobile: TabsMobile\\n  })[component], [component]);\\n  const props = TabsComponent !== TabsMobile ? {\\n    size: select(\\\"size\\\", [\\\"xxs\\\", \\\"xs\\\", \\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"m\\\")\\n  } : {};\\n  const responsiveAndMobileProps = TabsComponent !== TabsDesktop ? {\\n    fullWidthScroll: boolean(\\\"fullWidthScroll\\\", false)\\n  } : {};\\n  return <TabsComponent {...props} {...responsiveAndMobileProps} view={select(\\\"view\\\", [\\\"primary\\\", \\\"secondary\\\"], \\\"primary\\\")} selectedId={selectedId} keepMounted={boolean(\\\"keepMounted\\\")} onChange={handleChange} scrollable={boolean(\\\"scrollable\\\", false)}>\\n                <Tab title=\\\"Aurum\\\" id=\\\"tab-1\\\">\\n                    Aurum\\n                </Tab>\\n                <Tab title=\\\"Bercelium\\\" id=\\\"tab-2\\\" disabled>\\n                    Bercelium\\n                </Tab>\\n                <Tab title=\\\"\\\\u0422\\\\u0430\\\\u0431 3 (hidden)\\\" id=\\\"tab-3\\\" hidden>\\n                    Таб 3\\n                </Tab>\\n                <Tab title=\\\"Curium\\\" id=\\\"tab-4\\\">\\n                    Curium\\n                </Tab>\\n                <Tab title=\\\"Neptunium\\\" id=\\\"tab-5\\\">\\n                    Neptunium\\n                </Tab>\\n                <Tab title=\\\"Plutonuim\\\" id=\\\"tab-6\\\">\\n                    Plutonuim\\n                </Tab>\\n                <Tab title=\\\"Rubidium\\\" id=\\\"tab-7\\\">\\n                    Rubidium\\n                </Tab>\\n                <Tab title=\\\"Californium\\\" id=\\\"tab-8\\\">\\n                    Californium\\n                </Tab>\\n            </TabsComponent>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Tabs',\n  id: 'Tabs',\n  tags: ['stories-mdx'],\n  includeStories: [\"tabs\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","export const getDataTestId = (dataTestId?: string, element?: string) => {\n    const elementPart = element ? `-${element.toLowerCase()}` : '';\n\n    return dataTestId ? `${dataTestId}${elementPart}` : undefined;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","br","pre","id","live","className","MDXContent","wrapper","MDXLayout","ul","li","TabsDesktop","TabsMobile","TabsResponsive","Tab","css","vars","title","name","selectedId","setSelectedId","component","select","TabsComponent","size","responsiveAndMobileProps","fullWidthScroll","boolean","view","keepMounted","onChange","event","scrollable","disabled","hidden","version","package","design","description","development","changelog","tabs","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","useMemo","renderTabs","style","marginTop","filter","isValidElement","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","getDataTestId","dataTestId","elementPart","undefined","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","_nonIterableSpread","TypeError"],"sourceRoot":""}