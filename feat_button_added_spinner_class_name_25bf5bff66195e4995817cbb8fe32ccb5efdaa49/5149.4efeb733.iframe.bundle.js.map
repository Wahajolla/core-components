{"version":3,"file":"5149.4efeb733.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/action-button/src/index.module.css?7084","webpack://@alfalab/core-components/./packages/action-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/action-button/src/default.module.css?e1de","webpack://@alfalab/core-components/./packages/action-button/src/inverted.module.css?dea6","webpack://@alfalab/core-components/./packages/action-button/src/static.module.css?b7ac","webpack://@alfalab/core-components/./packages/action-button/src/hooks.ts","webpack://@alfalab/core-components/./packages/alert/src/index.module.css?c5c0","webpack://@alfalab/core-components/./packages/alert/src/Component.tsx","webpack://@alfalab/core-components/./packages/amount-input/src/utils/index.ts","webpack://@alfalab/core-components/./packages/amount-input/src/default.module.css?0a34","webpack://@alfalab/core-components/./packages/amount-input/src/index.module.css?f6ab","webpack://@alfalab/core-components/./packages/amount-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/amount-input/src/inverted.module.css?b68e","webpack://@alfalab/core-components/./packages/amount/src/index.module.css?2284","webpack://@alfalab/core-components/./packages/amount/src/component.tsx","webpack://@alfalab/core-components/./packages/amount/src/pure/index.module.css?b509","webpack://@alfalab/core-components/./packages/amount/src/pure/component.tsx","webpack://@alfalab/core-components/./packages/amount/src/index.ts","webpack://@alfalab/core-components/./packages/attach/src/index.module.css?ff0d","webpack://@alfalab/core-components/./packages/attach/src/Component.tsx","webpack://@alfalab/core-components/./packages/attach/src/utils/index.ts","webpack://@alfalab/core-components/./packages/backdrop/src/index.module.css?249a","webpack://@alfalab/core-components/./packages/backdrop/src/Component.tsx","webpack://@alfalab/core-components/./packages/bank-card/src/index.module.css?0d59","webpack://@alfalab/core-components/./packages/bank-card/src/Component.tsx","webpack://@alfalab/core-components/./packages/bank-card/src/utils.ts","webpack://@alfalab/core-components/./packages/base-modal/src/index.module.css?038f","webpack://@alfalab/core-components/./packages/base-modal/src/Component.tsx","webpack://@alfalab/core-components/./packages/base-modal/src/matches-polyfill.ts","webpack://@alfalab/core-components/./packages/base-modal/src/utils.ts","webpack://@alfalab/core-components/./packages/button/src/index.module.css?8d10","webpack://@alfalab/core-components/./packages/button/src/Component.tsx","webpack://@alfalab/core-components/./packages/button/src/default.module.css?5648","webpack://@alfalab/core-components/./packages/button/src/inverted.module.css?3c83","webpack://@alfalab/core-components/./packages/calendar-input/src/components/calendar-input/index.module.css?6768","webpack://@alfalab/core-components/./packages/calendar-input/src/components/calendar-input/Component.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/utils.ts","webpack://@alfalab/core-components/./packages/calendar-with-skeleton/src/index.module.css?1323","webpack://@alfalab/core-components/./packages/calendar-with-skeleton/src/Component.tsx","webpack://@alfalab/core-components/./packages/card-image/src/index.module.css?9a5d","webpack://@alfalab/core-components/./packages/card-image/src/Component.tsx","webpack://@alfalab/core-components/./packages/cdn-icon/src/index.module.css?fb96","webpack://@alfalab/core-components/./packages/cdn-icon/src/Component.tsx","webpack://@alfalab/core-components/./packages/checkbox-group/src/index.module.css?499c","webpack://@alfalab/core-components/./packages/checkbox-group/src/Component.tsx","webpack://@alfalab/core-components/./packages/checkbox/src/index.module.css?747a","webpack://@alfalab/core-components/./packages/checkbox/src/Component.tsx","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/index.module.css?d691","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/code-input/src/components/input/index.module.css?0ea6","webpack://@alfalab/core-components/./packages/code-input/src/components/input/component.tsx","webpack://@alfalab/core-components/./packages/code-input/src/index.module.css?944a","webpack://@alfalab/core-components/./packages/code-input/src/component.tsx","webpack://@alfalab/core-components/./packages/collapse/src/index.module.css?f046","webpack://@alfalab/core-components/./packages/collapse/src/Component.tsx","webpack://@alfalab/core-components/./packages/comment/src/index.module.css?86d9","webpack://@alfalab/core-components/./packages/comment/src/Component.tsx","webpack://@alfalab/core-components/./packages/custom-button/src/index.module.css?0c1d","webpack://@alfalab/core-components/./packages/custom-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/date-input/src/index.module.css?4373","webpack://@alfalab/core-components/./packages/date-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/date-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-input/src/utils/native-supports.ts","webpack://@alfalab/core-components/./packages/date-range-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-range-input/src/components/date-range-input/index.module.css?a053","webpack://@alfalab/core-components/./packages/date-range-input/src/components/date-range-input/Component.tsx","webpack://@alfalab/core-components/./packages/date-range-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/date-range-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/date-range-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-time-input/src/components/date-time-input/index.module.css?4eef","webpack://@alfalab/core-components/./packages/date-time-input/src/components/date-time-input/Component.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/divider/src/index.module.css?c405","webpack://@alfalab/core-components/./packages/divider/src/Component.tsx","webpack://@alfalab/core-components/./packages/drawer/src/index.module.css?49e2","webpack://@alfalab/core-components/./packages/drawer/src/Component.tsx","webpack://@alfalab/core-components/./packages/dropzone/src/components/overlay/index.module.css?b956","webpack://@alfalab/core-components/./packages/dropzone/src/components/overlay/Component.tsx","webpack://@alfalab/core-components/./packages/dropzone/src/utils.ts","webpack://@alfalab/core-components/./packages/dropzone/src/index.module.css?7c11","webpack://@alfalab/core-components/./packages/dropzone/src/Component.tsx","webpack://@alfalab/core-components/./packages/file-upload-item/src/utils.ts","webpack://@alfalab/core-components/./packages/file-upload-item/src/index.module.css?1f1e","webpack://@alfalab/core-components/./packages/file-upload-item/src/Component.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/index.module.css?a238","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.tsx","webpack://@alfalab/core-components/./packages/form-control/src/index.module.css?ab48","webpack://@alfalab/core-components/./packages/form-control/src/Component.tsx","webpack://@alfalab/core-components/./packages/form-control/src/default.module.css?4cb4","webpack://@alfalab/core-components/./packages/form-control/src/inverted.module.css?6f5b","webpack://@alfalab/core-components/./packages/gap/src/index.module.css?33e3","webpack://@alfalab/core-components/./packages/gap/src/Component.tsx","webpack://@alfalab/core-components/./packages/generic-wrapper/src/index.module.css?131f","webpack://@alfalab/core-components/./packages/generic-wrapper/src/Component.tsx","webpack://@alfalab/core-components/./packages/global-store/src/ModalStore.ts","webpack://@alfalab/core-components/./packages/global-store/src/GlobalStore.ts","webpack://@alfalab/core-components/./packages/global-store/src/index.ts","webpack://@alfalab/core-components/./packages/hatching-progress-bar/src/index.module.css?99a5","webpack://@alfalab/core-components/./packages/hatching-progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/icon-button/src/index.module.css?7279","webpack://@alfalab/core-components/./packages/icon-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/icon-button/src/default.module.css?85a2","webpack://@alfalab/core-components/./packages/icon-button/src/inverted.module.css?e344","webpack://@alfalab/core-components/./packages/indicator/src/index.module.css?e045","webpack://@alfalab/core-components/./packages/indicator/src/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-field/index.module.css?87c8","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-field/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-mobile-field/index.module.css?29f1","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/mobile.module.css?688a","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/input/src/index.module.css?434b","webpack://@alfalab/core-components/./packages/input/src/Component.tsx","webpack://@alfalab/core-components/./packages/input/src/default.module.css?1ad4","webpack://@alfalab/core-components/./packages/input/src/inverted.module.css?98db","webpack://@alfalab/core-components/./packages/keyboard-focusable/src/Component.tsx","webpack://@alfalab/core-components/./packages/link/src/index.module.css?6d86","webpack://@alfalab/core-components/./packages/link/src/Component.tsx","webpack://@alfalab/core-components/./packages/link/src/default.module.css?f933","webpack://@alfalab/core-components/./packages/link/src/inverted.module.css?fc64","webpack://@alfalab/core-components/./packages/list-header/src/index.module.css?89c8","webpack://@alfalab/core-components/./packages/list-header/src/Component.tsx","webpack://@alfalab/core-components/./packages/list/src/components/item/index.module.css?147e","webpack://@alfalab/core-components/./packages/list/src/components/item/Component.tsx","webpack://@alfalab/core-components/./packages/list/src/utils.ts","webpack://@alfalab/core-components/./packages/list/src/index.module.css?9713","webpack://@alfalab/core-components/./packages/list/src/Component.tsx","webpack://@alfalab/core-components/./packages/list/src/presets.ts","webpack://@alfalab/core-components/./packages/loader/src/index.module.css?40e8","webpack://@alfalab/core-components/./packages/loader/src/Component.tsx","webpack://@alfalab/core-components/./packages/masked-input/src/index.module.css?83b5","webpack://@alfalab/core-components/./packages/masked-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/modal/src/desktop.module.css?0b58","webpack://@alfalab/core-components/./packages/modal/src/mobile.module.css?97e9","webpack://@alfalab/core-components/./packages/modal/src/transitions.module.css?3dac","webpack://@alfalab/core-components/./packages/modal/src/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/Context.tsx","webpack://@alfalab/core-components/./packages/modal/src/ResponsiveContext.tsx","webpack://@alfalab/core-components/./packages/modal/src/components/content/desktop.module.css?4786","webpack://@alfalab/core-components/./packages/modal/src/components/content/index.module.css?9a9f","webpack://@alfalab/core-components/./packages/modal/src/components/content/mobile.module.css?fac7","webpack://@alfalab/core-components/./packages/modal/src/components/content/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/components/footer/desktop.module.css?8847","webpack://@alfalab/core-components/./packages/modal/src/components/footer/index.module.css?c2d2","webpack://@alfalab/core-components/./packages/modal/src/components/footer/layout.module.css?ba22","webpack://@alfalab/core-components/./packages/modal/src/components/footer/mobile.module.css?6a10","webpack://@alfalab/core-components/./packages/modal/src/components/footer/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/components/header/desktop.module.css?eebe","webpack://@alfalab/core-components/./packages/modal/src/components/header/index.module.css?6a04","webpack://@alfalab/core-components/./packages/modal/src/components/header/mobile.module.css?685c","webpack://@alfalab/core-components/./packages/modal/src/components/header/Component.tsx","webpack://@alfalab/core-components/./packages/mq/src/Component.tsx","webpack://@alfalab/core-components/./packages/mq/src/useMatchMedia.tsx","webpack://@alfalab/core-components/./packages/mq/src/utils.ts","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/back-arrow-addon/index.module.css?cdf1","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/back-arrow-addon/Component.tsx","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/closer/index.module.css?637b","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/closer/Component.tsx","webpack://@alfalab/core-components/./packages/navigation-bar/src/index.module.css?372f","webpack://@alfalab/core-components/./packages/navigation-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/notification-manager/src/components/notification/component.tsx","webpack://@alfalab/core-components/./packages/notification-manager/src/index.module.css?0e4f","webpack://@alfalab/core-components/./packages/notification-manager/src/component.tsx","webpack://@alfalab/core-components/./packages/notification/src/index.module.css?9b03","webpack://@alfalab/core-components/./packages/notification/src/Component.tsx","webpack://@alfalab/core-components/./packages/notification/src/utils/index.ts","webpack://@alfalab/core-components/./packages/number-input/src/utils.ts","webpack://@alfalab/core-components/./packages/number-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/pagination/src/components/tag/index.module.css?c91e","webpack://@alfalab/core-components/./packages/pagination/src/components/tag/index.tsx","webpack://@alfalab/core-components/./packages/pagination/src/components/default-view/index.module.css?653e","webpack://@alfalab/core-components/./packages/pagination/src/components/default-view/index.tsx","webpack://@alfalab/core-components/./packages/pagination/src/components/per-page-view/index.module.css?f72e","webpack://@alfalab/core-components/./packages/pagination/src/components/per-page-view/index.tsx","webpack://@alfalab/core-components/./packages/pagination/src/index.module.css?5a09","webpack://@alfalab/core-components/./packages/pagination/src/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/index.module.css?efe2","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/transitions.module.css?bf10","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPad/index.module.css?9bf8","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPad/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/index.module.css?a665","webpack://@alfalab/core-components/./packages/pass-code/src/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPadButton/index.module.css?21e1","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPadButton/Component.tsx","webpack://@alfalab/core-components/./packages/password-input/src/index.module.css?1dd8","webpack://@alfalab/core-components/./packages/password-input/src/component.tsx","webpack://@alfalab/core-components/./packages/pattern-lock/src/utils.ts","webpack://@alfalab/core-components/./packages/pattern-lock/src/index.module.css?19e5","webpack://@alfalab/core-components/./packages/pattern-lock/src/Component.tsx","webpack://@alfalab/core-components/./packages/pattern-lock/src/consts.ts","webpack://@alfalab/core-components/./packages/phone-input/src/utils/index.ts","webpack://@alfalab/core-components/./packages/phone-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/index.module.css?61cb","webpack://@alfalab/core-components/./packages/picker-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/field/index.module.css?e343","webpack://@alfalab/core-components/./packages/picker-button/src/field/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/utils/index.ts","webpack://@alfalab/core-components/./packages/picker-button/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/option/index.module.css?4cf5","webpack://@alfalab/core-components/./packages/picker-button/src/option/Component.tsx","webpack://@alfalab/core-components/./packages/popover/src/index.module.css?fd19","webpack://@alfalab/core-components/./packages/popover/src/Component.tsx","webpack://@alfalab/core-components/./packages/portal/src/utils.ts","webpack://@alfalab/core-components/./packages/portal/src/Component.tsx","webpack://@alfalab/core-components/./packages/progress-bar/src/index.module.css?6c8b","webpack://@alfalab/core-components/./packages/progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/addon/index.module.css?2261","webpack://@alfalab/core-components/./packages/pure-cell/src/components/addon/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount/index.module.css?6540","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount-title/index.module.css?5b83","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount-title/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/category/index.module.css?2699","webpack://@alfalab/core-components/./packages/pure-cell/src/components/category/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/content/index.module.css?f24e","webpack://@alfalab/core-components/./packages/pure-cell/src/components/content/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer/index.module.css?ff86","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer-button/index.module.css?913e","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer-button/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer-text/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/graphics/index.module.css?51be","webpack://@alfalab/core-components/./packages/pure-cell/src/components/graphics/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/main/index.module.css?162e","webpack://@alfalab/core-components/./packages/pure-cell/src/components/main/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/text/index.module.css?aff7","webpack://@alfalab/core-components/./packages/pure-cell/src/components/text/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/index.module.css?a419","webpack://@alfalab/core-components/./packages/pure-cell/src/component.tsx","webpack://@alfalab/core-components/./packages/pure-input/src/index.module.css?4403","webpack://@alfalab/core-components/./packages/pure-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/radio-group/src/index.module.css?af8a","webpack://@alfalab/core-components/./packages/radio-group/src/Component.tsx","webpack://@alfalab/core-components/./packages/radio/src/index.module.css?d349","webpack://@alfalab/core-components/./packages/radio/src/Component.tsx","webpack://@alfalab/core-components/./packages/screenshot-utils/screenshots-story/components.ts","webpack://@alfalab/core-components/./packages/scrollbar/src/index.module.css?8f47","webpack://@alfalab/core-components/./packages/scrollbar/src/Component.tsx","webpack://@alfalab/core-components/./packages/scrollbar/src/default.module.css?d27d","webpack://@alfalab/core-components/./packages/scrollbar/src/inverted.module.css?ceb9","webpack://@alfalab/core-components/./packages/segmented-control/src/context.ts","webpack://@alfalab/core-components/./packages/segmented-control/src/index.module.css?fbc4","webpack://@alfalab/core-components/./packages/segmented-control/src/Component.tsx","webpack://@alfalab/core-components/./packages/segmented-control/src/components/segment/index.module.css?e8c2","webpack://@alfalab/core-components/./packages/segmented-control/src/components/segment/Component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/utils/calculate-collapse-size.ts","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag/index.module.css?e9f6","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag/component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag-list/index.module.css?5829","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag-list/component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/utils/match.ts","webpack://@alfalab/core-components/./packages/select-with-tags/src/component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/footer/index.module.css?44c0","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/footer/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/hook.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/index.module.css?d71b","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/footer/index.module.css?36b8","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/footer/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/virtual-options-list/index.module.css?31c5","webpack://@alfalab/core-components/./packages/select/src/components/virtual-options-list/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/select-mobile/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/select-modal-mobile/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-checkmark/index.module.css?1a6e","webpack://@alfalab/core-components/./packages/select/src/components/base-checkmark/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-option/index.module.css?d6e4","webpack://@alfalab/core-components/./packages/select/src/components/base-option/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithLoading/index.module.css","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithLoading/hook.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useLazyLoading/index.module.css?b974","webpack://@alfalab/core-components/./packages/select/src/presets/useLazyLoading/hook.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/desktop.module.css?8aeb","webpack://@alfalab/core-components/./packages/side-panel/src/transitions.desktop.module.css?a8f7","webpack://@alfalab/core-components/./packages/side-panel/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/mobile.module.css?42e8","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/mobile.module.css?1871","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/mobile.module.css?a801","webpack://@alfalab/core-components/./packages/side-panel/src/transitions.mobile.module.css?e895","webpack://@alfalab/core-components/./packages/side-panel/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/Context.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/ResponsiveContext.ts","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/desktop.module.css?3a0a","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/index.module.css?3f90","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/Component.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/desktop.module.css?61ce","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/index.module.css?a93d","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/layout.module.css?2484","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/Component.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/desktop.module.css?9fce","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/index.module.css?18af","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/mobile.module.css?bf28","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/Component.tsx","webpack://@alfalab/core-components/./packages/skeleton/src/index.module.css?0c67","webpack://@alfalab/core-components/./packages/skeleton/src/Component.tsx","webpack://@alfalab/core-components/./packages/slider-input/src/index.module.css?cddf","webpack://@alfalab/core-components/./packages/slider-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/slider/src/index.module.css?06e8","webpack://@alfalab/core-components/./packages/slider/src/Component.tsx","webpack://@alfalab/core-components/./packages/sortable-list/src/components/item/index.module.css?da81","webpack://@alfalab/core-components/./packages/sortable-list/src/components/item/Components.tsx","webpack://@alfalab/core-components/./packages/sortable-list/src/utils.ts","webpack://@alfalab/core-components/./packages/sortable-list/src/index.module.css?4c33","webpack://@alfalab/core-components/./packages/sortable-list/src/Component.tsx","webpack://@alfalab/core-components/./packages/space/src/Item.tsx","webpack://@alfalab/core-components/./packages/space/src/index.module.css?8f6d","webpack://@alfalab/core-components/./packages/space/src/Component.tsx","webpack://@alfalab/core-components/./packages/spinner/src/index.module.css?a94c","webpack://@alfalab/core-components/./packages/spinner/src/Component.tsx","webpack://@alfalab/core-components/./packages/spinner/src/default.module.css?44e7","webpack://@alfalab/core-components/./packages/spinner/src/inverted.module.css?ee25","webpack://@alfalab/core-components/./packages/stack/src/component.tsx","webpack://@alfalab/core-components/./packages/stack/src/context.ts","webpack://@alfalab/core-components/./packages/status/src/index.module.css?46a6","webpack://@alfalab/core-components/./packages/status/src/Component.tsx","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/components/step-bar/index.module.css?6d30","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/components/step-bar/Component.tsx","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/default.module.css?f6ad","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/index.module.css?cb78","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/inverted.module.css?1cb3","webpack://@alfalab/core-components/./packages/steps/src/components/step-indicator/index.module.css?3e41","webpack://@alfalab/core-components/./packages/steps/src/components/step-indicator/Component.tsx","webpack://@alfalab/core-components/./packages/steps/src/components/step/index.module.css?92b0","webpack://@alfalab/core-components/./packages/steps/src/components/step/Component.tsx","webpack://@alfalab/core-components/./packages/steps/src/index.module.css?b521","webpack://@alfalab/core-components/./packages/steps/src/Component.tsx","webpack://@alfalab/core-components/./packages/switch/src/index.module.css?0491","webpack://@alfalab/core-components/./packages/switch/src/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/Context.ts","webpack://@alfalab/core-components/./packages/system-message/src/desktop.module.css?ae9f","webpack://@alfalab/core-components/./packages/system-message/src/index.module.css?5e4f","webpack://@alfalab/core-components/./packages/system-message/src/mobile.module.css?d7f8","webpack://@alfalab/core-components/./packages/system-message/src/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/caption/index.module.css?289c","webpack://@alfalab/core-components/./packages/system-message/src/components/caption/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/desktop.module.css?5290","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/index.module.css?fc38","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/mobile.module.css?d969","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/graphic/index.module.css?f210","webpack://@alfalab/core-components/./packages/system-message/src/components/graphic/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/subtitle/index.module.css?41b5","webpack://@alfalab/core-components/./packages/system-message/src/components/subtitle/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/title/desktop.module.css?be3f","webpack://@alfalab/core-components/./packages/system-message/src/components/title/index.module.css?ce06","webpack://@alfalab/core-components/./packages/system-message/src/components/title/mobile.module.css?69d7","webpack://@alfalab/core-components/./packages/system-message/src/components/title/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/Components.responsive.tsx","webpack://@alfalab/core-components/./packages/system-message/src/utils.ts","webpack://@alfalab/core-components/./packages/tag/src/index.module.css?6673","webpack://@alfalab/core-components/./packages/tag/src/Component.tsx","webpack://@alfalab/core-components/./packages/tag/src/default.module.css?8aba","webpack://@alfalab/core-components/./packages/tag/src/inverted.module.css?ad0d","webpack://@alfalab/core-components/./packages/textarea/src/index.module.css?3463","webpack://@alfalab/core-components/./packages/textarea/src/components/PseudoTextArea.tsx","webpack://@alfalab/core-components/./packages/textarea/src/default.module.css?83a0","webpack://@alfalab/core-components/./packages/textarea/src/Component.tsx","webpack://@alfalab/core-components/./packages/textarea/src/inverted.module.css?fb93","webpack://@alfalab/core-components/./packages/time-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/time-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/toast-plate/src/index.module.css?2fa5","webpack://@alfalab/core-components/./packages/toast-plate/src/component.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/default.module.css?5982","webpack://@alfalab/core-components/./packages/toast-plate/src/inverted.module.css?8a4e","webpack://@alfalab/core-components/./packages/toast/src/index.module.css?888e","webpack://@alfalab/core-components/./packages/toast/src/component.tsx","webpack://@alfalab/core-components/./packages/tooltip/src/index.module.css?3655","webpack://@alfalab/core-components/./packages/tooltip/src/Component.tsx","webpack://@alfalab/core-components/./packages/tooltip/src/default.module.css?6c25","webpack://@alfalab/core-components/./packages/tooltip/src/inverted.module.css?8670","webpack://@alfalab/core-components/./packages/tooltip/src/responsive.module.css?dca3","webpack://@alfalab/core-components/./packages/tooltip/src/component.responsive.tsx","webpack://@alfalab/core-components/./packages/tooltip/src/utils.ts","webpack://@alfalab/core-components/./packages/underlay/src/index.module.css?8deb","webpack://@alfalab/core-components/./packages/underlay/src/Component.tsx","webpack://@alfalab/core-components/./packages/utils/isClient.ts","webpack://@alfalab/core-components/./packages/with-suffix/src/index.module.css?e13b","webpack://@alfalab/core-components/./packages/with-suffix/src/Component.tsx","webpack://@alfalab/core-components/./packages/ sync ^\\.\\/(.*)\\/src\\/index.ts$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_v4bM2\",\"s\":\"s_ZhcKD\",\"disabled\":\"disabled_xdJ8j\",\"loading\":\"loading_nbY4J\",\"iconWrapper\":\"iconWrapper_F90SD\",\"label\":\"label_hb_Tg\",\"focused\":\"focused_P4sbI\"};","import React, {\n    AnchorHTMLAttributes,\n    ButtonHTMLAttributes,\n    forwardRef,\n    Fragment,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Loader } from '@alfalab/core-components-loader';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { useLoader } from './hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\nimport staticColors from './static.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n    static: staticColors,\n};\n\n/**\n * Минимальное время отображения лоадера - 500мс,\n * чтобы при быстрых ответах от сервера кнопка не «моргала».\n */\nconst LOADER_MIN_DISPLAY_INTERVAL = 500;\n\ntype Colors = 'default' | 'inverted' | 'static';\n\ntype ComponentProps = {\n    /**\n     * Иконка кнопки\n     */\n    icon: React.ReactNode;\n\n    /**\n     *  Размер кнопки\n     */\n    size?: 's';\n\n    /**\n     * Тип кнопки\n     */\n    view?: 'primary' | 'secondary';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для обертки иконки\n     */\n    iconWrapperClassName?: string;\n\n    /**\n     * Значение href для ссылки\n     */\n    href?: string;\n\n    /**\n     * Заблокировать кнопку\n     */\n    disabled?: boolean;\n\n    /**\n     * Показать лоадер\n     */\n    loading?: boolean;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Палитра, в контексте которой используется кнопка\n     */\n    colors?: Colors;\n};\n\ntype AnchorProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype ButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\nexport type ActionButtonProps = Partial<AnchorProps | ButtonProps>;\n\nexport const ActionButton = forwardRef<HTMLAnchorElement | HTMLButtonElement, ActionButtonProps>(\n    (\n        {\n            className,\n            icon,\n            children,\n            href,\n            size = 's',\n            view = 'primary',\n            type = 'button',\n            iconWrapperClassName,\n            disabled,\n            loading,\n            dataTestId,\n            colors = 'default',\n            ...rest\n        },\n        ref,\n    ) => {\n        const componentRef = useRef<HTMLElement>(null);\n\n        const [focused] = useFocus(componentRef, 'keyboard');\n\n        const { showLoader } = useLoader(!!loading, LOADER_MIN_DISPLAY_INTERVAL);\n\n        const componentProps = {\n            className: cn(\n                styles.component,\n                colorStyles[colors][view],\n                styles[size],\n                {\n                    [styles.focused]: focused,\n                    [styles.disabled]: disabled,\n                    [styles.loading]: showLoader,\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n        };\n\n        const buttonChildren = (\n            <Fragment>\n                <span\n                    role='img'\n                    className={cn(\n                        styles.iconWrapper,\n                        colorStyles[colors].iconWrapper,\n                        styles[size],\n                        iconWrapperClassName,\n                    )}\n                >\n                    {showLoader ? <Loader dataTestId='loader' /> : icon}\n                </span>\n                <span className={styles.label}>{children}</span>\n            </Fragment>\n        );\n\n        if (href) {\n            return (\n                <a\n                    role='button'\n                    ref={mergeRefs([componentRef, ref])}\n                    href={href}\n                    aria-disabled={disabled || loading}\n                    {...componentProps}\n                    {...(rest as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                >\n                    {buttonChildren}\n                </a>\n            );\n        }\n\n        return (\n            <button\n                ref={mergeRefs([componentRef, ref])}\n                // eslint-disable-next-line react/button-has-type\n                type={type as ButtonHTMLAttributes<HTMLButtonElement>['type']}\n                disabled={disabled || loading}\n                {...componentProps}\n                {...(rest as ButtonHTMLAttributes<HTMLButtonElement>)}\n            >\n                {buttonChildren}\n            </button>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_xjzHE\",\"iconWrapper\":\"iconWrapper_cThcS\",\"secondary\":\"secondary_CCKCs\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_NIflk\",\"iconWrapper\":\"iconWrapper_J6KRM\",\"secondary\":\"secondary_qHTA9\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_BA75F\",\"iconWrapper\":\"iconWrapper_LDHDj\",\"secondary\":\"secondary_P_g7p\"};","import { useEffect, useRef, useState } from 'react';\n\nexport const useLoader = (loading: boolean, timeout: number) => {\n    const timerId = useRef(0);\n\n    const [loaderTimePassed, setLoaderTimePassed] = useState(true);\n\n    const showLoader = loading || !loaderTimePassed;\n\n    useEffect(() => {\n        if (loading) {\n            setLoaderTimePassed(false);\n\n            if (timerId.current) {\n                window.clearTimeout(timerId.current);\n            }\n\n            timerId.current = window.setTimeout(() => {\n                setLoaderTimePassed(true);\n            }, timeout);\n        }\n    }, [loading, timeout]);\n\n    useEffect(() => {\n        if (timerId.current) {\n            window.clearTimeout(timerId.current);\n        }\n    }, []);\n\n    return { showLoader };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_aJ3S4\",\"title\":\"title_qFP8u\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Plate, PlateProps } from '@alfalab/core-components-plate';\n\nimport styles from './index.module.css';\n\nexport type AlertProps = Omit<PlateProps, 'foldable' | 'defaultFolded' | 'leftAddons'>;\n\nexport const Alert: FC<AlertProps> = ({ className, title, ...restProps }) => (\n    <Plate\n        className={cn(styles.component, className)}\n        title={title ? <span className={styles.title}>{title}</span> : null}\n        rounded={false}\n        limitContentWidth={false}\n        {...restProps}\n    />\n);\n","/**\n * https://github.com/core-ds/utils\n * TODO: нужно перенести утилиты в этот проект, когда он будет готов\n */\n\nimport { CurrencyCodes } from '@alfalab/data';\nimport { formatAmount } from '@alfalab/utils';\n\n/**\n * Форматирует введенное значение\n * @param enteredValue Значение введенное в инпут\n * @param currency валюта\n * @param minority количество минорных единиц\n */\nexport function getFormattedValue(enteredValue: string, currency: CurrencyCodes, minority: number) {\n    if (!enteredValue || enteredValue === '-') {\n        return enteredValue;\n    }\n\n    // eslint-disable-next-line prefer-const\n    let [head, tail] = enteredValue.split(',');\n\n    // При вводе \"-,\" указываем, что имеется в виду \"-0,\"\n    if (head === '-') {\n        head = '-0';\n    }\n\n    let { majorPart } = formatAmount({\n        value: Number(head) * minority,\n        currency,\n        minority,\n        negativeSymbol: 'hyphen-minus',\n    });\n\n    // Так как -0 === 0, formatAmount возвращает положительное значение. Исправляем это здесь\n    if (/^-(,|0),?/.test(enteredValue) && majorPart === '0') {\n        majorPart = `-${majorPart}`;\n    }\n\n    if (!tail && enteredValue.includes(',')) {\n        return majorPart.concat(',');\n    }\n\n    if (tail) {\n        return majorPart.concat(',', tail.slice(0, minority.toString().length - 1));\n    }\n\n    return majorPart;\n}\n\nexport function getAmountValueFromStr(str: string, minority: number) {\n    if (str === '' || str === '-') {\n        return null;\n    }\n\n    return Math.round(Number(str.replace(',', '.').replace(/[^0-9.-]/g, '')) * minority);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"minorPartAndCurrency\":\"minorPartAndCurrency_N7KPP\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_lBRr_\",\"bold\":\"bold_DQS_b\",\"input\":\"input_G8I9L\",\"suffixContainer\":\"suffixContainer_LcrIC\",\"filled\":\"filled_pcsxc\"};","import React, { forwardRef, Fragment, useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\nimport { withSuffix } from '@alfalab/core-components-with-suffix';\nimport { CurrencyCodes } from '@alfalab/data';\nimport { formatAmount, getCurrencySymbol, THINSP } from '@alfalab/utils';\n\nimport { getAmountValueFromStr, getFormattedValue } from './utils';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type AmountInputProps = Omit<InputProps, 'value' | 'onChange' | 'type'> & {\n    /**\n     * Денежное значение в минорных единицах\n     * Значение null - значит не установлено\n     */\n    value?: string | number | null;\n\n    /**\n     * Валюта\n     */\n    currency?: CurrencyCodes;\n\n    /**\n     * Дополнительный закрепленный текст справа от основного значения. (по умолчанию — символ валюты)\n     */\n    suffix?: string;\n\n    /**\n     * Максимальное число знаков до запятой\n     */\n    integerLength?: number;\n\n    /**\n     * Минорные единицы\n     */\n    minority?: number;\n\n    /**\n     * Позволяет вводить только целые значения\n     */\n    integersOnly?: boolean;\n\n    /**\n     * @default - true. Нельзя вводить отрицательные значения.\n     * Возможность вводить только положительные значения\n     */\n    positiveOnly?: boolean;\n\n    /**\n     * Жир\n     */\n    bold?: boolean;\n\n    /**\n     * Обработчик события изменения значения\n     */\n    onChange?: (\n        e: React.ChangeEvent<HTMLInputElement>,\n        payload: {\n            /**\n             * Денежное значение в минорных единицах\n             * Значение null - значит не установлено\n             */\n            value: number | null;\n            /**\n             * Значение инпута\n             */\n            valueString: string;\n        },\n    ) => void;\n};\n\n/**\n * Инпут, позволяющий закрепить значок валюты\n */\nconst SuffixInput = withSuffix(Input);\n\n/**\n * Компонент для ввода денежных значений\n */\nexport const AmountInput = forwardRef<HTMLInputElement, AmountInputProps>(\n    (\n        {\n            value = null,\n            integerLength = 9,\n            minority = 100,\n            currency = 'RUR',\n            suffix = currency,\n            placeholder = `0\\u2009${\n                suffix === currency ? getCurrencySymbol(currency) || '' : suffix\n            }`,\n            integersOnly = false,\n            positiveOnly = true,\n            bold = true,\n            colors = 'default',\n            className,\n            focusedClassName,\n            dataTestId,\n            clear = false,\n            onChange,\n            onClear,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const getFormattedAmount = useCallback(() => {\n            if (value === '' || value === null || value === '-') return '';\n\n            return formatAmount({\n                value: +value,\n                currency,\n                minority,\n                view: 'default',\n                negativeSymbol: 'hyphen-minus',\n            }).formatted;\n        }, [currency, minority, value]);\n\n        const [inputValue, setInputValue] = useState<string>(getFormattedAmount());\n\n        const currencySymbol = getCurrencySymbol(currency);\n\n        useEffect(() => {\n            const currentAmountValue = getAmountValueFromStr(inputValue, minority);\n\n            if (currentAmountValue !== value) {\n                return setInputValue(getFormattedAmount());\n            }\n\n            return () => undefined;\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [getFormattedAmount]);\n\n        const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            const input = e.target;\n            let enteredValue = input.value.replace(/\\s/g, '').replace('.', ',');\n\n            if (integersOnly) {\n                [enteredValue] = enteredValue.split(',');\n            }\n            // Сокращение минимальной длины мажорной части числа до 0 позволяет ввести \",\" => \"0,\"\n            const isCorrectEnteredValue = RegExp(\n                `(^${positiveOnly ? '' : '-?'}[0-9]{0,${integerLength}}(,([0-9]+)?)?$|^\\\\s*$)`,\n            ).test(enteredValue);\n\n            if (isCorrectEnteredValue) {\n                const newFormattedValue = getFormattedValue(enteredValue, currency, minority);\n\n                if (newFormattedValue === inputValue) {\n                    const caret = input.selectionStart;\n\n                    window.requestAnimationFrame(() => {\n                        input.selectionStart = caret;\n                        input.selectionEnd = caret;\n                    });\n                } else {\n                    /**\n                     * Поддержка положения каретки\n                     * Поскольку при форматировании введенного значения могут появляться символы типа пробела\n                     * или запятая - каретка прыгает в конец и ее необходимо ставить в правильное место\n                     */\n\n                    // Узнаем длину оригинального инпута с условием обрезания лишних символов\n\n                    const [head, tail] = input.value.split(/\\.|,/);\n                    let notFormattedEnteredValueLength = head.length;\n\n                    if (tail) {\n                        notFormattedEnteredValueLength += 1; // запятая или точка\n                        notFormattedEnteredValueLength += tail.slice(\n                            0,\n                            minority.toString().length - 1,\n                        ).length; // символы в минорной части\n                    }\n\n                    const diff = newFormattedValue.length - notFormattedEnteredValueLength;\n                    const caret = (input.selectionStart as number) + diff;\n\n                    window.requestAnimationFrame(() => {\n                        input.selectionStart = caret;\n                        input.selectionEnd = caret;\n                    });\n                }\n\n                setInputValue(newFormattedValue);\n                if (onChange) {\n                    onChange(e, {\n                        value: getAmountValueFromStr(newFormattedValue, minority),\n                        valueString: newFormattedValue,\n                    });\n                }\n            } else {\n                // Не двигаем каретку когда вставляется невалидный символ\n                const caret = (input.selectionStart as number) - 1;\n\n                window.requestAnimationFrame(() => {\n                    input.selectionStart = caret;\n                    input.selectionEnd = caret;\n                });\n            }\n        };\n\n        const handleClear = useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                setInputValue('');\n\n                if (onClear) {\n                    onClear(event);\n                }\n            },\n            [onClear],\n        );\n\n        const [majorPart, minorPart] = inputValue.split(',');\n\n        return (\n            <div\n                className={cn(styles.container, {\n                    [styles.bold]: bold,\n                    [styles.filled]: Boolean(inputValue),\n                })}\n            >\n                <SuffixInput\n                    {...restProps}\n                    suffix={\n                        <Fragment>\n                            {majorPart}\n\n                            <span className={colorStyles[colors].minorPartAndCurrency}>\n                                {minorPart !== undefined && `,${minorPart}`}\n                                {THINSP}\n                                {suffix === currency ? currencySymbol : suffix}\n                            </span>\n                        </Fragment>\n                    }\n                    suffixContainerClassName={styles.suffixContainer}\n                    clear={clear}\n                    placeholder={placeholder}\n                    value={inputValue}\n                    colors={colors}\n                    className={cn(styles.component, className)}\n                    focusedClassName={focusedClassName}\n                    inputClassName={styles.input}\n                    onChange={handleChange}\n                    onClear={handleClear}\n                    inputMode='decimal'\n                    pattern={`[${positiveOnly ? '' : '-'}0-9\\\\s\\\\.,]*`}\n                    dataTestId={dataTestId}\n                    ref={ref}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"minorPartAndCurrency\":\"minorPartAndCurrency_MKlN9\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_lJAPI\",\"transparentMinor\":\"transparentMinor_sBFro\",\"bold\":\"bold_RYrp0\",\"normalMinor\":\"normalMinor_AQCFO\",\"defaultStyles\":\"defaultStyles_nFL6k\",\"defaultMinor\":\"defaultMinor_pFHQ4\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR, formatAmount } from '@alfalab/utils';\n\nimport { AmountProps } from './types';\n\nimport styles from './index.module.css';\n\n/**\n * Компонент для отображения суммы, согласно следующему гайдлайну:\n * https://design.alfabank.ru/patterns/amount\n */\nexport const Amount: React.FC<AmountProps> = ({\n    value,\n    minority,\n    currency,\n    codeFormat = 'symbolic',\n    view = 'default',\n    bold,\n    transparentMinor,\n    rightAddons,\n    showPlus = false,\n    className,\n    dataTestId,\n}) => {\n    const { majorPart, minorPart, currencySymbol, currencySeparator } = formatAmount({\n        value,\n        currency,\n        minority,\n        view,\n        codeFormat,\n    });\n\n    const defaultStyles = bold === undefined && transparentMinor === undefined;\n\n    return (\n        <span\n            className={cn(styles.component, className, {\n                [styles.bold]: bold === 'full' || bold === 'major',\n                [styles.defaultStyles]: defaultStyles,\n            })}\n            data-test-id={dataTestId}\n        >\n            {showPlus && value > 0 ? '+' : ''}\n            {majorPart}\n            <span\n                className={cn(styles.minorPartAndCurrency, {\n                    [styles.transparentMinor]: transparentMinor,\n                    [styles.normalMinor]: bold === 'major',\n                    [styles.defaultMinor]: defaultStyles,\n                })}\n            >\n                {minorPart && AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR}\n                {minorPart}\n                {currency ? `${currencySeparator}${currencySymbol ?? currency}` : null}\n                {rightAddons}\n            </span>\n        </span>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_aVHko\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { formatAmount, THINSP } from '@alfalab/utils';\n\nimport { AmountProps } from '../types';\n\nimport styles from './index.module.css';\n\n/**\n * Компонент для отображения суммы, согласно следующему гайдлайну:\n * https://design.alfabank.ru/patterns/amount\n * Не содержит стилей кроме неразрывности строки\n *\n * @deprecated Используйте основной компонент. Стилизацию можно настроить через пропсы\n */\nexport const PureAmount: React.FC<AmountProps> = ({\n    value,\n    minority,\n    currency,\n    rightAddons,\n    view = 'default',\n    showPlus = false,\n    className,\n    dataTestId,\n}) => {\n    const { formatted, currencySymbol } = formatAmount({\n        value,\n        currency,\n        minority,\n        view,\n    });\n\n    return (\n        <span className={cn(styles.component, className)} data-test-id={dataTestId}>\n            {showPlus && value > 0 ? '+' : ''}\n            {formatted}\n            {currency ? `${THINSP}${currencySymbol}` : null}\n            {rightAddons}\n        </span>\n    );\n};\n","import { PureAmount } from './pure/component';\nimport { Amount as DefaultAmount } from './component';\n\ntype AmountType = typeof DefaultAmount & { Pure: typeof PureAmount };\nexport const Amount: AmountType = DefaultAmount as AmountType;\nAmount.Pure = PureAmount;\n\nexport * from './types';\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_bmgh9\",\"label\":\"label_ncC2g\",\"control\":\"control_QwVC6\",\"xxs\":\"xxs_oi_17\",\"file\":\"file_qEi9x\",\"noFile\":\"noFile_O5K0z\",\"xs\":\"xs_rWFfx\",\"s\":\"s_RGe0t\",\"m\":\"m_CizN2\",\"l\":\"l_B8iY9\",\"clear\":\"clear_g0aVv\",\"progressBar\":\"progressBar_aKDSz\",\"disabled\":\"disabled_gj6P1\",\"icon\":\"icon_YC2xP\",\"focused\":\"focused_n2YLe\"};","import React, {\n    ButtonHTMLAttributes,\n    ChangeEvent,\n    InputHTMLAttributes,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { KeyboardFocusable } from '@alfalab/core-components-keyboard-focusable';\nimport { ProgressBar } from '@alfalab/core-components-progress-bar';\nimport { PaperclipMIcon } from '@alfalab/icons-glyph/PaperclipMIcon';\nimport { PaperclipSIcon } from '@alfalab/icons-glyph/PaperclipSIcon';\nimport { pluralize } from '@alfalab/utils';\n\nimport { truncateFilename } from './utils';\n\nimport styles from './index.module.css';\n\nexport type AttachProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'size' | 'type' | 'value' | 'defaultValue' | 'onChange' | 'multiple' | 'enterKeyHint'\n> & {\n    /**\n     * Содержимое кнопки для выбора файла\n     */\n    buttonContent?: React.ReactNode;\n\n    /**\n     * Свойства для кнопки\n     */\n    buttonProps?: ButtonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для блока с файлами\n     */\n    fileClassName?: string;\n\n    /**\n     * Дополнительный класс для блока с подсказкой, когда файл не загружен\n     */\n    noFileClassName?: string;\n\n    /**\n     * Число символов, после которого имя файла будет обрезаться\n     */\n    maxFilenameLength?: number;\n\n    /**\n     * Текст для случая, когда файл не загружен\n     */\n    noFileText?: string;\n\n    /**\n     * Процент выполнения загрузки файла\n     */\n    progressBarPercent?: number;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l';\n\n    /**\n     * Возможность прикрепления нескольких файлов\n     */\n    multiple?: boolean;\n\n    /**\n     * Содержимое поля ввода. Принимает массив объектов типа File или null.\n     */\n    value?: File[] | null;\n\n    /**\n     * Содержимое поля ввода, указанное по умолчанию. Принимает массив объектов типа File или null.\n     */\n    defaultValue?: File[] | null;\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { files: File[] }) => void;\n\n    /**\n     * Обработчик нажатия на кнопку очистки\n     */\n    onClear?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nconst MULTIPLE_TEXTS: [string, string, string] = ['файл', 'файла', 'файлов'];\n\nexport const Attach = React.forwardRef<HTMLInputElement, AttachProps>(\n    (\n        {\n            size = 's',\n            accept,\n            buttonContent = 'Выберите файл',\n            buttonProps = {},\n            className,\n            fileClassName,\n            noFileClassName,\n            disabled,\n            dataTestId,\n            id,\n            maxFilenameLength,\n            multiple,\n            noFileText = 'Нет файла',\n            progressBarPercent,\n            defaultValue,\n            value,\n            onChange,\n            onClear,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const [files, setFiles] = useState(defaultValue || []);\n\n        const inputRef = useRef<HTMLInputElement>(null);\n        const labelRef = useRef<HTMLLabelElement>(null);\n        const buttonRef = useRef<HTMLButtonElement>(null);\n\n        const getDefaultLeftAddon = () => {\n            let IconComponent: React.FC<React.SVGProps<SVGSVGElement>>;\n\n            if (['xs', 'xxs'].includes(size)) {\n                IconComponent = PaperclipSIcon;\n            } else {\n                IconComponent = PaperclipMIcon;\n            }\n\n            return <IconComponent className={styles.icon} />;\n        };\n\n        const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            const filesArray = event.target.files ? Array.from(event.target.files) : [];\n\n            if (onChange) {\n                onChange(event, { files: filesArray });\n            }\n\n            if (uncontrolled && event.target.files) {\n                setFiles(filesArray);\n            }\n\n            if (inputRef.current) {\n                inputRef.current.value = '';\n            }\n        };\n\n        const handleButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n            if (labelRef.current) {\n                labelRef.current.click();\n            }\n            if (buttonRef.current) {\n                buttonRef.current.focus();\n            }\n\n            if (buttonProps.onClick) {\n                buttonProps.onClick(event);\n            }\n        };\n\n        const handleClearClick = (ev: React.MouseEvent<HTMLButtonElement>) => {\n            if (uncontrolled) {\n                setFiles([]);\n            }\n\n            if (onClear) {\n                onClear(ev);\n            }\n        };\n\n        const statusTextContent =\n            files.length === 1 ? (\n                truncateFilename(files[0].name, maxFilenameLength)\n            ) : (\n                <abbr title={files.map((file) => file.name).join()}>\n                    {files.length} {pluralize(files.length, ...MULTIPLE_TEXTS)}\n                </abbr>\n            );\n\n        useEffect(() => {\n            if (!uncontrolled) {\n                setFiles(value || []);\n            }\n        }, [uncontrolled, value]);\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    {\n                        [styles.disabled]: disabled,\n                    },\n                    className,\n                )}\n            >\n                <Button\n                    {...buttonProps}\n                    size={size}\n                    disabled={disabled}\n                    view={buttonProps?.view || 'secondary'}\n                    leftAddons={buttonProps?.leftAddons || getDefaultLeftAddon()}\n                    onClick={handleButtonClick}\n                    ref={buttonRef}\n                >\n                    <span>{buttonContent}</span>\n                </Button>\n                <label className={styles.label} htmlFor={id} ref={labelRef}>\n                    <input\n                        {...restProps}\n                        className={styles.control}\n                        accept={accept}\n                        disabled={disabled}\n                        id={id}\n                        multiple={multiple}\n                        tabIndex={-1}\n                        type='file'\n                        onChange={handleInputChange}\n                        ref={mergeRefs([ref, inputRef])}\n                        data-test-id={dataTestId}\n                    />\n                </label>\n                {files && files.length > 0 ? (\n                    <div className={cn(styles.file, fileClassName)}>\n                        <span>{statusTextContent}</span>\n                        <KeyboardFocusable>\n                            {(targetRef, focused) => (\n                                <button\n                                    aria-label='очистить'\n                                    type='button'\n                                    className={cn(styles.clear, {\n                                        [styles.focused]: focused,\n                                    })}\n                                    onClick={handleClearClick}\n                                    ref={targetRef}\n                                />\n                            )}\n                        </KeyboardFocusable>\n                        {progressBarPercent && (\n                            <ProgressBar\n                                className={styles.progressBar}\n                                value={progressBarPercent}\n                                view='positive'\n                            />\n                        )}\n                    </div>\n                ) : (\n                    <div className={cn(styles.noFile, noFileClassName)}>{noFileText}</div>\n                )}\n            </div>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nAttach.defaultProps = {\n    size: 's',\n    buttonContent: 'Выберите файл',\n    noFileText: 'Нет файла',\n};\n","export function truncateFilename(filename: string, maxFilenameLength?: number): string {\n    if (maxFilenameLength && filename.length > maxFilenameLength) {\n        const lengthOfPart = Math.round(maxFilenameLength / 2) - 1;\n\n        return `${filename.substr(0, lengthOfPart)}…${filename.substr(\n            filename.length - lengthOfPart,\n        )}`;\n    }\n\n    return filename;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"backdrop_Qhs_t\",\"appear\":\"appear_SCr4Z\",\"enter\":\"enter_SsHt0\",\"appearActive\":\"appearActive_OtF38\",\"enterActive\":\"enterActive_Ge0VI\",\"appearDone\":\"appearDone_YEkLR\",\"enterDone\":\"enterDone_d2Cu_\",\"exit\":\"exit_Jy9n9\",\"exitActive\":\"exitActive_duZZz\",\"exitDone\":\"exitDone_PGkvT\"};","import React, { MouseEvent, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { CSSTransitionClassNames } from 'react-transition-group/CSSTransition';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type BackdropProps = Partial<TransitionProps> & {\n    /**\n     * Прозрачный бэкдроп\n     */\n    invisible?: boolean;\n\n    /**\n     * Управляет видимостью компонента\n     */\n    open: boolean;\n\n    /**\n     * Обработчик клика по бэкдропу\n     */\n    onClose?: (event: MouseEvent<HTMLElement>) => void;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Классы анимации\n     *\n     * http://reactcommunity.org/react-transition-group/css-transition#CSSTransition-prop-classNames\n     */\n    transitionClassNames?: string | CSSTransitionClassNames;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Backdrop: React.FC<BackdropProps> = ({\n    className,\n    open = false,\n    invisible = false,\n    timeout = 200,\n    children,\n    onClose,\n    dataTestId,\n    transitionClassNames = styles,\n    ...restProps\n}) => (\n    <CSSTransition\n        timeout={timeout}\n        unmountOnExit={true}\n        classNames={transitionClassNames}\n        in={!invisible && open}\n        appear={true}\n        {...restProps}\n    >\n        <div\n            aria-hidden={true}\n            onClick={onClose}\n            data-test-id={dataTestId}\n            className={cn(styles.backdrop, className)}\n        >\n            {children}\n        </div>\n    </CSSTransition>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_MwOS5\",\"aspectRatioContainer\":\"aspectRatioContainer_xDsU6\",\"content\":\"content_eYAmN\",\"label\":\"label_MDQRj\",\"focused\":\"focused_CFuH8\",\"filled\":\"filled_u7HnA\",\"input\":\"input_R0GHs\",\"bankLogo\":\"bankLogo_ezQgG\",\"brandLogo\":\"brandLogo_aQrzo\",\"usePhoto\":\"usePhoto_oxrXa\"};","import React, { ChangeEvent, MouseEvent, ReactNode, useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { MaskedInput } from '@alfalab/core-components-masked-input';\nimport { CameraMIcon } from '@alfalab/icons-glyph/CameraMIcon';\nimport { AlfaBankLIcon } from '@alfalab/icons-logotype/AlfaBankLIcon';\nimport { MastercardLIcon } from '@alfalab/icons-logotype/MastercardLIcon';\nimport { MirXxlIcon } from '@alfalab/icons-logotype/MirXxlIcon';\nimport { VisaXxlIcon } from '@alfalab/icons-logotype/VisaXxlIcon';\n\nimport { validateCardNumber } from './utils';\n\nimport styles from './index.module.css';\n\nexport type BankCardProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Цвет фона карты\n     */\n    backgroundColor?: string;\n\n    /**\n     * Иконка логотипа банка (размер L)\n     */\n    bankLogo?: ReactNode;\n\n    /**\n     * Лэйбл поля ввода\n     */\n    inputLabel?: string;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Обработчик ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => void;\n\n    /**\n     * Обработчик вызова камеры\n     */\n    onUsePhoto?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\n// prettier-ignore\nconst cardMask = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/];\n// prettier-ignore\nconst accountNumberMask = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/];\n\nconst getBrandIcon = (value = '') => {\n    // Показываем логотип только после ввода всех цифр карты\n    if (value.replace(/\\s/g, '').length === 16 && validateCardNumber(value)) {\n        if (value.startsWith('2')) return <MirXxlIcon />;\n        if (value.startsWith('4')) return <VisaXxlIcon />;\n        if (value.startsWith('5')) return <MastercardLIcon />;\n        if (value.startsWith('6')) return <MastercardLIcon />;\n    }\n\n    return null;\n};\n\nexport const BankCard = React.forwardRef<HTMLInputElement, BankCardProps>(\n    (\n        {\n            bankLogo = <AlfaBankLIcon />,\n            backgroundColor = '#EF3124',\n            inputLabel = 'Номер карты или счёта',\n            value,\n            className,\n            onUsePhoto,\n            onChange,\n            dataTestId,\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const [brandIcon, setBrandIcon] = useState<ReactNode>(getBrandIcon(value));\n\n        const getMask = useCallback(\n            (newValue: string) =>\n                newValue.length <= cardMask.length ? cardMask : accountNumberMask,\n            [],\n        );\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => {\n                if (uncontrolled) {\n                    setBrandIcon(getBrandIcon(event.target.value));\n                }\n\n                if (onChange) {\n                    onChange(event, payload);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const renderRightAddons = useCallback(\n            () => (\n                <button type='button' className={styles.usePhoto} onClick={onUsePhoto}>\n                    <CameraMIcon />\n                </button>\n            ),\n            [onUsePhoto],\n        );\n\n        useEffect(() => {\n            setBrandIcon(getBrandIcon(value));\n        }, [value]);\n\n        return (\n            <div className={cn(styles.component, className)}>\n                <div className={styles.aspectRatioContainer}>\n                    <div className={styles.content} style={{ backgroundColor }}>\n                        <div className={styles.bankLogo}>{bankLogo}</div>\n\n                        <MaskedInput\n                            ref={ref}\n                            value={value}\n                            mask={getMask}\n                            block={true}\n                            label={inputLabel}\n                            size='m'\n                            rightAddons={renderRightAddons()}\n                            inputClassName={styles.input}\n                            labelClassName={styles.label}\n                            filledClassName={styles.filled}\n                            focusedClassName={styles.focused}\n                            onChange={handleInputChange}\n                            dataTestId={dataTestId}\n                            inputMode='numeric'\n                            pattern='[0-9]*'\n                        />\n\n                        {brandIcon && <div className={styles.brandLogo}>{brandIcon}</div>}\n                    </div>\n                </div>\n            </div>\n        );\n    },\n);\n\nBankCard.defaultProps = {\n    bankLogo: <AlfaBankLIcon />,\n    backgroundColor: '#EF3124',\n    inputLabel: 'Номер карты или счёта',\n};\n","/**\n * Проверяет номер карты по алгоритму Луна\n *\n * @param cardNumber - номер карты\n *\n */\nexport function validateCardNumber(cardNumber: string) {\n    const digits = cardNumber.replace(/\\s+/g, '');\n    let sum = 0;\n\n    for (let i = 0; i < digits.length; i++) {\n        let cardNum = parseInt(digits[i], 10);\n\n        if (cardNum > 9) return false;\n\n        if ((digits.length - i) % 2 === 0) {\n            cardNum *= 2;\n\n            if (cardNum > 9) {\n                cardNum -= 9;\n            }\n        }\n\n        sum += cardNum;\n    }\n\n    return sum % 10 === 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_MPFYr\",\"wrapper\":\"wrapper_tX3kF\",\"content\":\"content_S55jh\",\"hidden\":\"hidden_SCxBA\",\"backdrop\":\"backdrop_sjc2f\",\"appear\":\"appear_CNM3a\",\"enter\":\"enter_NSupV\",\"appearActive\":\"appearActive_h8jdA\",\"enterActive\":\"enterActive_bH2oj\",\"exit\":\"exit_x7k7E\",\"exitActive\":\"exitActive_MVzIe\",\"exitDone\":\"exitDone_TeQGG\"};","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, {\n    FC,\n    forwardRef,\n    KeyboardEvent,\n    MouseEvent,\n    MutableRefObject,\n    ReactNode,\n    Ref,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport FocusLock from 'react-focus-lock';\nimport mergeRefs from 'react-merge-refs';\nimport { CSSTransition } from 'react-transition-group';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport cn from 'classnames';\n\nimport { Backdrop as DefaultBackdrop, BackdropProps } from '@alfalab/core-components-backdrop';\nimport { Portal, PortalProps } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\n\nimport {\n    getScrollbarSize,\n    handleContainer,\n    hasScrollbar,\n    isScrolledToBottom,\n    isScrolledToTop,\n    restoreContainerStyles,\n} from './utils';\n\nimport styles from './index.module.css';\n\n// TODO Без полифила крашится FocusLock в IE11. Выпилить в будущем!!!.\nimport './matches-polyfill';\n\nexport type BaseModalProps = {\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Компонент бэкдропа\n     */\n    Backdrop?: FC<BackdropProps>;\n\n    /**\n     * Свойства для Бэкдропа\n     */\n    backdropProps?: Partial<BackdropProps> & Record<string, unknown>;\n\n    /**\n     * Нода, компонент или функция возвращающая их\n     *\n     * Контейнер к которому будут добавляться порталы\n     */\n    container?: PortalProps['getPortalContainer'];\n\n    /**\n     * Отключает автоматический перевод фокуса на модалку при открытии\n     * @default false\n     */\n    disableAutoFocus?: boolean;\n\n    /**\n     * Отключает ловушку фокуса\n     * @default false\n     */\n    disableFocusLock?: boolean;\n\n    /**\n     * Отключает восстановление фокуса на предыдущем элементе после закрытия модалки\n     * @default false\n     */\n    disableRestoreFocus?: boolean;\n\n    /**\n     * Отключает вызов `callback` при нажатии Escape\n     * @default false\n     */\n    disableEscapeKeyDown?: boolean;\n\n    /**\n     * Отключает вызов `callback` при клике на бэкдроп\n     * @default false\n     */\n    disableBackdropClick?: boolean;\n\n    /**\n     * Отключает блокировку скролла при открытии модального окна\n     * @default false\n     */\n    disableBlockingScroll?: boolean;\n\n    /**\n     * Содержимое модалки всегда в DOM\n     * @default false\n     */\n    keepMounted?: boolean;\n\n    /**\n     * Управление видимостью модалки\n     */\n    open: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для обертки (Modal)\n     */\n    wrapperClassName?: string;\n\n    /**\n     * Обработчик скролла контента\n     */\n    scrollHandler?: 'wrapper' | 'content' | MutableRefObject<HTMLDivElement | null>;\n\n    /**\n     * Пропсы для анимации (CSSTransition)\n     */\n    transitionProps?: Partial<TransitionProps>;\n\n    /**\n     * Рендерить ли в контейнер через портал.\n     * @default true\n     */\n    usePortal?: boolean;\n\n    /**\n     * Обработчик события нажатия на бэкдроп\n     */\n    onBackdropClick?: (event: MouseEvent) => void;\n\n    /**\n     * Обработчик события нажатия на Escape\n     *\n     * Если `disableEscapeKeyDown` - false и модальное окно в фокусе\n     */\n    onEscapeKeyDown?: (event: KeyboardEvent) => void;\n\n    /**\n     * Обработчик закрытия\n     */\n    onClose?: (\n        event: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>,\n        reason?: 'backdropClick' | 'escapeKeyDown' | 'closerClick',\n    ) => void;\n\n    /**\n     * Обработчик события onEntered компонента Transition\n     */\n    onMount?: () => void;\n\n    /**\n     * Обработчик события onExited компонента Transition\n     */\n    onUnmount?: () => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Реф, который должен быть установлен компонентной области\n     */\n    componentRef?: MutableRefObject<HTMLDivElement | null>;\n};\n\nexport type BaseModalContext = {\n    parentRef: React.RefObject<HTMLDivElement>;\n    componentRef: React.RefObject<HTMLDivElement>;\n    hasFooter?: boolean;\n    hasHeader?: boolean;\n    hasScroll?: boolean;\n    headerHighlighted?: boolean;\n    footerHighlighted?: boolean;\n    headerOffset?: number;\n    setHeaderOffset: (offset: number) => void;\n    contentRef: Ref<HTMLElement>;\n    setHasHeader: (exists: boolean) => void;\n    setHasFooter: (exists: boolean) => void;\n    onClose: Required<BaseModalProps>['onClose'];\n};\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const BaseModalContext = React.createContext<BaseModalContext>({\n    parentRef: { current: null },\n    componentRef: { current: null },\n    hasFooter: false,\n    hasHeader: false,\n    hasScroll: false,\n    headerHighlighted: false,\n    footerHighlighted: false,\n    headerOffset: 0,\n    setHeaderOffset: () => null,\n    contentRef: () => null,\n    setHasHeader: () => null,\n    setHasFooter: () => null,\n    onClose: () => null,\n});\n\nexport const BaseModal = forwardRef<HTMLDivElement, BaseModalProps>(\n    (\n        {\n            open,\n            container,\n            children,\n            scrollHandler = 'wrapper',\n            Backdrop = DefaultBackdrop,\n            backdropProps = {},\n            transitionProps = {},\n            disableBackdropClick,\n            disableAutoFocus = false,\n            disableFocusLock = false,\n            disableEscapeKeyDown = false,\n            disableRestoreFocus = false,\n            disableBlockingScroll = false,\n            keepMounted = false,\n            className,\n            contentClassName,\n            wrapperClassName,\n            onBackdropClick,\n            onClose,\n            onEscapeKeyDown,\n            onMount,\n            onUnmount,\n            dataTestId,\n            zIndex = stackingOrder.MODAL,\n            componentRef = null,\n            usePortal = true,\n        },\n        ref,\n    ) => {\n        const [exited, setExited] = useState<boolean | null>(null);\n        const [hasScroll, setHasScroll] = useState(false);\n        const [hasHeader, setHasHeader] = useState(false);\n        const [hasFooter, setHasFooter] = useState(false);\n        const [headerHighlighted, setHeaderHighlighted] = useState(false);\n        const [footerHighlighted, setFooterHighlighted] = useState(false);\n        const [headerOffset, setHeaderOffset] = useState(0);\n\n        const componentNodeRef = useRef<HTMLDivElement>(null);\n        const wrapperRef = useRef<HTMLDivElement>(null);\n        const scrollableNodeRef = useRef<HTMLDivElement | null>(null);\n        const contentNodeRef = useRef<HTMLDivElement | null>(null);\n        const restoreContainerStylesRef = useRef<null | (() => void)>(null);\n        const mouseDownTarget = useRef<HTMLElement>();\n        const resizeObserverRef = useRef<ResizeObserver>();\n\n        const checkToHasScrollBar = () => {\n            if (scrollableNodeRef.current) {\n                const scrollExists = hasScrollbar(scrollableNodeRef.current);\n\n                setFooterHighlighted(scrollExists);\n                setHasScroll(scrollExists);\n            }\n        };\n\n        const isExited = exited || exited === null;\n        const shouldRender = keepMounted || open || !isExited;\n\n        const getContainer = useCallback(\n            () => (container ? container() : document.body) as HTMLElement,\n            [container],\n        );\n\n        const addResizeHandle = useCallback(() => {\n            if (!resizeObserverRef.current) return;\n\n            if (scrollableNodeRef.current) {\n                resizeObserverRef.current.observe(scrollableNodeRef.current);\n            }\n            if (contentNodeRef.current) {\n                resizeObserverRef.current.observe(contentNodeRef.current);\n            }\n        }, []);\n\n        const removeResizeHandle = useCallback(() => resizeObserverRef.current?.disconnect(), []);\n\n        const contentRef = useCallback((node: HTMLDivElement) => {\n            if (node !== null) {\n                contentNodeRef.current = node;\n                if (resizeObserverRef.current) {\n                    resizeObserverRef.current.observe(node);\n                }\n                checkToHasScrollBar();\n            }\n        }, []);\n\n        const handleScroll = useCallback(() => {\n            if (!scrollableNodeRef.current || !componentNodeRef.current) return;\n\n            if (hasHeader) {\n                setHeaderHighlighted(\n                    !isScrolledToTop(scrollableNodeRef.current) &&\n                        componentNodeRef.current.getBoundingClientRect().top - headerOffset <= 0,\n                );\n            }\n\n            if (hasFooter) {\n                setFooterHighlighted(\n                    !isScrolledToBottom(scrollableNodeRef.current) &&\n                        componentNodeRef.current.getBoundingClientRect().bottom >=\n                            window.innerHeight,\n                );\n            }\n        }, [hasFooter, hasHeader, headerOffset]);\n\n        const handleClose = useCallback<Required<BaseModalProps>['onClose']>(\n            (event, reason) => {\n                if (onClose) {\n                    onClose(event, reason);\n                }\n\n                if (reason === 'backdropClick' && onBackdropClick) {\n                    onBackdropClick(event as MouseEvent);\n                }\n\n                if (reason === 'escapeKeyDown' && onEscapeKeyDown) {\n                    onEscapeKeyDown(event as KeyboardEvent);\n                }\n\n                return null;\n            },\n            [onBackdropClick, onClose, onEscapeKeyDown],\n        );\n\n        const handleBackdropMouseDown = (event: MouseEvent<HTMLElement>) => {\n            let clickedOnScrollbar = false;\n            const clientWidth = (event.target as HTMLElement)?.clientWidth;\n\n            if (event.clientX && clientWidth) {\n                // Устанавливаем смещение для абсолютно спозиционированного скроллбара в OSX в 17px.\n                const offset = getScrollbarSize() === 0 ? 17 : 0;\n\n                clickedOnScrollbar = event.clientX + offset > clientWidth;\n            }\n\n            if (!disableBackdropClick && !clickedOnScrollbar) {\n                mouseDownTarget.current = event.target as HTMLElement;\n            }\n        };\n\n        const handleBackdropMouseUp = (event: MouseEvent<HTMLElement>) => {\n            if (\n                !disableBackdropClick &&\n                event.target === wrapperRef.current &&\n                mouseDownTarget.current === wrapperRef.current\n            ) {\n                handleClose(event, 'backdropClick');\n            }\n\n            mouseDownTarget.current = undefined;\n        };\n\n        const handleKeyDown = useCallback(\n            (event: KeyboardEvent<HTMLDivElement>) => {\n                /*\n                 * Чтобы сохранить дефолтное поведение элементов и событий форм,\n                 * обработчик не устанавливает event.preventDefault()\n                 */\n                if (event.key !== 'Escape') {\n                    return;\n                }\n\n                // Если есть обработчик escape на body\n                event.stopPropagation();\n\n                if (!disableEscapeKeyDown && handleClose) {\n                    handleClose(event, 'escapeKeyDown');\n                }\n            },\n            [disableEscapeKeyDown, handleClose],\n        );\n\n        const getScrollHandler = useCallback(() => {\n            if (scrollHandler === 'wrapper') return wrapperRef.current;\n            if (scrollHandler === 'content') return componentNodeRef.current;\n\n            return scrollHandler.current || wrapperRef.current;\n        }, [scrollHandler]);\n\n        const handleEntered: Required<TransitionProps>['onEntered'] = useCallback(\n            (node, isAppearing) => {\n                scrollableNodeRef.current = getScrollHandler();\n\n                addResizeHandle();\n\n                if (scrollableNodeRef.current) {\n                    scrollableNodeRef.current.addEventListener('scroll', handleScroll);\n                    handleScroll();\n                }\n\n                if (transitionProps.onEntered) {\n                    transitionProps.onEntered(node, isAppearing);\n                }\n\n                if (onMount) onMount();\n            },\n            [addResizeHandle, getScrollHandler, handleScroll, onMount, transitionProps],\n        );\n\n        const handleExited: Required<TransitionProps>['onExited'] = useCallback(\n            (node) => {\n                removeResizeHandle();\n\n                setExited(true);\n\n                if (scrollableNodeRef.current) {\n                    scrollableNodeRef.current.removeEventListener('scroll', handleScroll);\n                }\n\n                if (transitionProps.onExited) {\n                    transitionProps.onExited(node);\n                }\n\n                if (onUnmount) onUnmount();\n\n                if (restoreContainerStylesRef.current) {\n                    restoreContainerStylesRef.current();\n                }\n            },\n            [handleScroll, onUnmount, removeResizeHandle, transitionProps],\n        );\n\n        useEffect(() => {\n            if (open && isExited) {\n                if (!disableBlockingScroll) {\n                    const el = getContainer();\n\n                    handleContainer(el);\n\n                    restoreContainerStylesRef.current = () => {\n                        restoreContainerStylesRef.current = null;\n                        restoreContainerStyles(el);\n                    };\n                }\n\n                setExited(false);\n            }\n        }, [getContainer, open, disableBlockingScroll, isExited]);\n\n        useEffect(() => {\n            const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n\n            resizeObserverRef.current = new ResizeObserver(checkToHasScrollBar);\n\n            return () => {\n                if (restoreContainerStylesRef.current) {\n                    restoreContainerStylesRef.current();\n                }\n\n                if (resizeObserverRef.current) {\n                    resizeObserverRef.current.disconnect();\n                }\n            };\n        }, []);\n\n        const contextValue = useMemo<BaseModalContext>(\n            () => ({\n                parentRef: wrapperRef,\n                componentRef: componentNodeRef,\n                hasHeader,\n                hasFooter,\n                hasScroll,\n                headerHighlighted,\n                footerHighlighted,\n                headerOffset,\n                setHeaderOffset,\n                contentRef,\n                setHasHeader,\n                setHasFooter,\n                onClose: handleClose,\n            }),\n            [\n                contentRef,\n                hasHeader,\n                hasFooter,\n                hasScroll,\n                headerHighlighted,\n                footerHighlighted,\n                headerOffset,\n                setHeaderOffset,\n                handleClose,\n            ],\n        );\n\n        const renderContent = () => (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <BaseModalContext.Provider value={contextValue}>\n                        <FocusLock\n                            autoFocus={!disableAutoFocus}\n                            disabled={disableFocusLock || !open}\n                            returnFocus={!disableRestoreFocus}\n                        >\n                            {Backdrop && (\n                                <Backdrop\n                                    {...backdropProps}\n                                    className={cn(backdropProps.className, styles.backdrop)}\n                                    open={open}\n                                    style={{\n                                        zIndex: computedZIndex,\n                                    }}\n                                />\n                            )}\n                            <div\n                                role='dialog'\n                                className={cn(styles.wrapper, wrapperClassName, {\n                                    [styles.hidden]: !open && isExited,\n                                })}\n                                ref={mergeRefs([ref, wrapperRef])}\n                                onKeyDown={handleKeyDown}\n                                onMouseDown={handleBackdropMouseDown}\n                                onMouseUp={handleBackdropMouseUp}\n                                // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n                                tabIndex={0}\n                                data-test-id={dataTestId}\n                                style={{\n                                    zIndex: computedZIndex,\n                                }}\n                            >\n                                <CSSTransition\n                                    appear={true}\n                                    timeout={200}\n                                    classNames={styles}\n                                    {...transitionProps}\n                                    in={open}\n                                    onEntered={handleEntered}\n                                    onExited={handleExited}\n                                >\n                                    <div\n                                        className={cn(styles.component, className)}\n                                        ref={mergeRefs([componentRef, componentNodeRef])}\n                                    >\n                                        <div className={cn(styles.content, contentClassName)}>\n                                            {children}\n                                        </div>\n                                    </div>\n                                </CSSTransition>\n                            </div>\n                        </FocusLock>\n                    </BaseModalContext.Provider>\n                )}\n            </Stack>\n        );\n\n        if (!shouldRender) return null;\n\n        return usePortal ? (\n            <Portal getPortalContainer={container} immediateMount={true}>\n                {renderContent()}\n            </Portal>\n        ) : (\n            renderContent()\n        );\n    },\n);\n","/* eslint-disable */\n// @ts-nocheck\n\nif (typeof window !== 'undefined') {\n    if (Element && !Element.prototype.matches) {\n        Element.prototype.matches =\n            Element.prototype.matchesSelector ||\n            Element.prototype.mozMatchesSelector ||\n            Element.prototype.msMatchesSelector ||\n            Element.prototype.oMatchesSelector ||\n            Element.prototype.webkitMatchesSelector ||\n            function (s) {\n                const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n                let i = matches.length;\n                while (--i >= 0 && matches.item(i) !== this) {}\n                return i > -1;\n            };\n    }\n}\n","import { getModalStore, SavedStyle } from '@alfalab/core-components-global-store';\n\nexport function isScrolledToTop(target: HTMLElement) {\n    return target.scrollTop <= 0;\n}\n\nexport function isScrolledToBottom(target: HTMLElement) {\n    return target.scrollHeight - target.offsetHeight <= target.scrollTop;\n}\n\nexport function hasScrollbar(target: HTMLElement) {\n    return target.scrollHeight > target.clientHeight;\n}\n\nexport const getScrollbarSize = (() => {\n    let cachedSize: number;\n\n    return () => {\n        if (cachedSize !== undefined) return cachedSize;\n\n        const scrollDiv = document.createElement('div');\n\n        scrollDiv.style.width = '99px';\n        scrollDiv.style.height = '99px';\n        scrollDiv.style.position = 'absolute';\n        scrollDiv.style.top = '-9999px';\n        scrollDiv.style.overflow = 'scroll';\n\n        document.body.appendChild(scrollDiv);\n        const scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        document.body.removeChild(scrollDiv);\n\n        cachedSize = scrollbarSize;\n\n        return scrollbarSize;\n    };\n})();\n\nconst isOverflowing = (container: Element) => {\n    if (document.body === container) {\n        return window.innerWidth > document.documentElement.clientWidth;\n    }\n\n    return container.scrollHeight > container.clientHeight;\n};\n\nconst getPaddingRight = (node: Element) =>\n    parseInt(window.getComputedStyle(node).paddingRight, 10) || 0;\n\nexport const restoreContainerStyles = (container: HTMLElement) => {\n    const modalRestoreStyles = getModalStore().getRestoreStyles();\n\n    const index = modalRestoreStyles.findIndex((s) => s.container === container);\n    const existingStyles = modalRestoreStyles[index];\n\n    if (!existingStyles) return;\n\n    existingStyles.modals -= 1;\n\n    if (existingStyles.modals <= 0) {\n        modalRestoreStyles.splice(index, 1);\n\n        existingStyles.styles.forEach(({ value, el, key }) => {\n            if (value) {\n                el.style.setProperty(key, value);\n            } else {\n                el.style.removeProperty(key);\n            }\n        });\n    }\n};\n\nexport const handleContainer = (container?: HTMLElement) => {\n    if (!container) return;\n\n    const modalRestoreStyles = getModalStore().getRestoreStyles();\n\n    const existingStyles = modalRestoreStyles.find((s) => s.container === container);\n\n    if (existingStyles) {\n        existingStyles.modals += 1;\n\n        return;\n    }\n\n    const containerStyles: SavedStyle[] = [];\n\n    if (isOverflowing(container)) {\n        // Вычисляет размер до применения `overflow hidden` для избежания скачков\n        const scrollbarSize = getScrollbarSize();\n\n        containerStyles.push({\n            value: container.style.paddingRight,\n            key: 'padding-right',\n            el: container,\n        });\n        // Вычисляем стили, чтобы получить реальный `padding` c шириной сколлбара\n        // eslint-disable-next-line no-param-reassign\n        container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`;\n    }\n\n    const parent = container.parentElement;\n    const scrollContainer =\n        // TODO: заменить на optional chaining\n        parent &&\n        parent.nodeName === 'HTML' &&\n        window.getComputedStyle(parent).overflowY === 'scroll'\n            ? parent\n            : container;\n\n    // Блокируем скролл даже если отсутствует скроллбар\n    if (scrollContainer.style.overflow !== 'hidden') {\n        containerStyles.push({\n            value: scrollContainer.style.overflow,\n            key: 'overflow',\n            el: scrollContainer,\n        });\n    }\n\n    scrollContainer.style.overflow = 'hidden';\n\n    modalRestoreStyles.push({\n        container,\n        modals: 1,\n        styles: containerStyles,\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_DRN0s\",\"focused\":\"focused_IzCV8\",\"loading\":\"loading_dD7su\",\"text\":\"text_zF4xQ\",\"addons\":\"addons_zaLpw\",\"stretchText\":\"stretchText_eXgdn\",\"loader\":\"loader_tFrDH\",\"xxs\":\"xxs_NGKhJ\",\"iconOnly\":\"iconOnly_M1IjS\",\"xs\":\"xs_gtbZP\",\"s\":\"s_dWBS3\",\"m\":\"m_eEYTa\",\"l\":\"l_fmM1Y\",\"xl\":\"xl_UXn_u\",\"withRightAddons\":\"withRightAddons_TXVbA\",\"ghost\":\"ghost_rwSMW\",\"withLeftAddons\":\"withLeftAddons_cVgGy\",\"link\":\"link_YH7yC\",\"block\":\"block_IqJfV\",\"nowrap\":\"nowrap_hO90g\"};","// TODO Вид кнопок зависит от порядка импорта стилей. Исправить!!!.\n/* eslint-disable simple-import-sort/imports */\nimport React, {\n    AnchorHTMLAttributes,\n    ButtonHTMLAttributes,\n    ElementType,\n    ReactNode,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Spinner } from '@alfalab/core-components-spinner';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { getDataTestId } from '../../utils';\n\nimport styles from './index.module.css';\nimport defaultColors from './default.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type ComponentProps = {\n    /**\n     * Тип кнопки\n     */\n    view?:\n        | 'accent'\n        | 'primary'\n        | 'secondary'\n        | 'tertiary'\n        | 'outlined' // deprecated\n        | 'filled' // deprecated\n        | 'transparent' // deprecated\n        | 'link'\n        | 'ghost';\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для спиннера\n     */\n    spinnerClassName?: string;\n\n    /**\n     * Выводит ссылку в виде кнопки\n     */\n    href?: string;\n\n    /**\n     * Позволяет использовать кастомный компонент для кнопки (например Link из роутера)\n     */\n    Component?: ElementType;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Показать лоадер\n     */\n    loading?: boolean;\n\n    /**\n     * Не переносить текст кнопки на новую строку\n     */\n    nowrap?: boolean;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport type AnchorButtonProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\nexport type NativeButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type ButtonProps = Partial<AnchorButtonProps | NativeButtonProps>;\n\n/**\n * Минимальное время отображения лоадера - 500мс,\n * чтобы при быстрых ответах от сервера кнопка не «моргала».\n */\nexport const LOADER_MIN_DISPLAY_INTERVAL = 500;\n\nconst logWarning = (view: Required<ComponentProps>['view']) => {\n    if (process.env.NODE_ENV !== 'development') {\n        return;\n    }\n\n    const viewsMap: { [key: string]: string } = {\n        filled: 'secondary',\n        transparent: 'secondary',\n        outlined: 'tertiary',\n    };\n\n    // eslint-disable-next-line no-console\n    console.warn(\n        // eslint-disable-next-line prefer-template\n        `@alfalab/core-components/button: view='${view}' будет удален в следующих мажорных версиях. ` +\n            `Используйте view='${viewsMap[view]}'. Чтобы поменять все кнопки на проекте разом, можно воспользоваться codemod: ` +\n            'npx @alfalab/core-components-codemod --transformers=button-views src/**/*.tsx',\n    );\n};\n\nexport const Button = React.forwardRef<HTMLAnchorElement | HTMLButtonElement, ButtonProps>(\n    (\n        {\n            children,\n            view = 'secondary',\n            leftAddons,\n            rightAddons,\n            size = 'm',\n            block = false,\n            className,\n            spinnerClassName,\n            dataTestId,\n            href,\n            loading = false,\n            nowrap = false,\n            colors = 'default',\n            Component = href ? 'a' : 'button',\n            onClick,\n            ...restProps\n        },\n        ref,\n    ) => {\n        if (['outlined', 'filled', 'transparent'].includes(view)) {\n            logWarning(view);\n        }\n\n        const buttonRef = useRef<HTMLElement>(null);\n\n        const [focused] = useFocus(buttonRef, 'keyboard');\n\n        const [loaderTimePassed, setLoaderTimePassed] = useState(true);\n\n        const timerId = useRef(0);\n\n        const showLoader = loading || !loaderTimePassed;\n\n        const iconOnly = !children;\n\n        const componentProps = {\n            className: cn(\n                styles.component,\n                styles[view],\n                styles[size],\n                colorStyles[colors].component,\n                colorStyles[colors][view],\n                {\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                    [styles.iconOnly]: iconOnly,\n                    [styles.loading]: showLoader,\n                    [styles.withRightAddons]: Boolean(rightAddons) && !iconOnly,\n                    [styles.withLeftAddons]: Boolean(leftAddons) && !iconOnly,\n                    [colorStyles[colors].loading]: showLoader,\n                },\n                className,\n            ),\n            'data-test-id': dataTestId || null,\n        };\n\n        const {\n            disabled,\n            type = 'button',\n            ...restButtonProps\n        } = restProps as ButtonHTMLAttributes<HTMLButtonElement>;\n\n        const buttonChildren = (\n            <React.Fragment>\n                {leftAddons && <span className={styles.addons}>{leftAddons}</span>}\n                {children && (\n                    <span\n                        className={cn(styles.text, {\n                            [styles.nowrap]: nowrap,\n                            [styles.stretchText]: !(leftAddons || rightAddons),\n                        })}\n                    >\n                        {children}\n                    </span>\n                )}\n\n                {showLoader && (\n                    <Spinner\n                        dataTestId={getDataTestId(dataTestId, 'loader')}\n                        visible={true}\n                        className={cn(styles.loader, colorStyles[colors].loader, spinnerClassName)}\n                    />\n                )}\n\n                {rightAddons && <span className={styles.addons}>{rightAddons}</span>}\n            </React.Fragment>\n        );\n\n        useEffect(() => {\n            if (loading) {\n                setLoaderTimePassed(false);\n\n                timerId.current = window.setTimeout(() => {\n                    setLoaderTimePassed(true);\n                }, LOADER_MIN_DISPLAY_INTERVAL);\n            }\n        }, [loading]);\n\n        useEffect(\n            () => () => {\n                window.clearTimeout(timerId.current);\n            },\n            [],\n        );\n\n        const handleClick = (\n            e: React.MouseEvent<HTMLAnchorElement, MouseEvent> &\n                React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        ) => {\n            if (disabled || showLoader) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                return;\n            }\n            onClick?.(e);\n        };\n\n        if (href) {\n            const { target } = restProps as AnchorHTMLAttributes<HTMLAnchorElement>;\n\n            // Для совместимости с react-router-dom, меняем href на to\n            const hrefProps = { [typeof Component === 'string' ? 'href' : 'to']: href };\n\n            return (\n                <Component\n                    rel={target === '_blank' ? 'noreferrer noopener' : undefined}\n                    {...componentProps}\n                    {...(restProps as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                    {...hrefProps}\n                    onClick={handleClick}\n                    disabled={disabled || showLoader}\n                    ref={mergeRefs([buttonRef, ref])}\n                >\n                    {buttonChildren}\n                </Component>\n            );\n        }\n\n        return (\n            <Component\n                {...componentProps}\n                {...restButtonProps}\n                onClick={handleClick}\n                type={type}\n                disabled={disabled || showLoader}\n                ref={mergeRefs([buttonRef, ref])}\n            >\n                {buttonChildren}\n            </Component>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nButton.defaultProps = {\n    view: 'secondary',\n    size: 'm',\n    block: false,\n    loading: false,\n    nowrap: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"accent\":\"accent_HhA3Y\",\"loader\":\"loader_BQ0mp\",\"primary\":\"primary_WlL6L\",\"secondary\":\"secondary_qerr_\",\"outlined\":\"outlined__m2cx\",\"tertiary\":\"tertiary_yyazM\",\"filled\":\"filled__sZJb\",\"transparent\":\"transparent_nQPFp\",\"link\":\"link_EoIN5\",\"ghost\":\"ghost_LocVa\",\"component\":\"component_QHSq8\",\"loading\":\"loading_uQdwR\"};","// extracted by mini-css-extract-plugin\nexport default {\"accent\":\"accent_BeNHQ\",\"loader\":\"loader_mhss9\",\"primary\":\"primary_oLEFC\",\"secondary\":\"secondary_IUjpj\",\"outlined\":\"outlined_emhOx\",\"tertiary\":\"tertiary_qzr4s\",\"filled\":\"filled_XG2GI\",\"transparent\":\"transparent_OGmq2\",\"link\":\"link_DrTND\",\"ghost\":\"ghost_PqYP3\",\"component\":\"component_upu8c\",\"loading\":\"loading_Uzk6t\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_sdfKf\",\"block\":\"block_xTK2O\",\"calendarContainer\":\"calendarContainer_Y1sM0\",\"calendarResponsive\":\"calendarResponsive_EJmFv\",\"calendarIcon\":\"calendarIcon_INpWt\",\"nativeInput\":\"nativeInput_pOvMB\"};","import React, {\n    ChangeEvent,\n    ElementType,\n    FocusEvent,\n    forwardRef,\n    KeyboardEvent,\n    MouseEvent,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport {\n    Calendar as DefaultCalendar,\n    CalendarMobileProps,\n    CalendarProps,\n    dateInLimits,\n} from '@alfalab/core-components-calendar';\nimport {\n    DateInput,\n    DateInputProps,\n    formatDate,\n    isCompleteDateInput,\n    parseDateString,\n} from '@alfalab/core-components-date-input';\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { CalendarMIcon } from '@alfalab/icons-glyph/CalendarMIcon';\n\nimport { SUPPORTS_INPUT_TYPE_DATE } from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type CalendarInputProps = Omit<DateInputProps, 'onChange' | 'mobileMode'> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popoverClassName?: string;\n\n    /**\n     * Доп. пропсы для календаря\n     */\n    calendarProps?:\n        | (CalendarProps & Record<string, unknown>)\n        | (CalendarMobileProps & Record<string, unknown>);\n\n    /**\n     * Значение инпута (используется и для календаря)\n     */\n    value?: string;\n\n    /**\n     * Начальное значение инпута\n     */\n    defaultValue?: string;\n\n    /**\n     * Состояние открытия по умолчанию\n     */\n    defaultOpen?: boolean;\n\n    /**\n     * Месяц в календаре по умолчанию (timestamp)\n     */\n    defaultMonth?: number;\n\n    /**\n     * Минимальная дата, доступная для выбора (timestamp)\n     */\n    minDate?: number;\n\n    /**\n     * Максимальная дата, доступная для выбора (timestamp)\n     */\n    maxDate?: number;\n\n    /**\n     * Список событий\n     */\n    events?: Array<Date | number>;\n\n    /**\n     * Список выходных\n     */\n    offDays?: Array<Date | number>;\n\n    /**\n     * Определяет, как рендерить календарь — в поповере или снизу инпута\n     */\n    calendarPosition?: 'static' | 'popover';\n\n    /**\n     * Запрещает поповеру менять свою позицию.\n     * Например, если места снизу недостаточно,то он все равно будет показан снизу\n     */\n    preventFlip?: boolean;\n\n    /**\n     * Управление нативным режимом на мобильных устройствах\n     */\n    mobileMode?: 'native' | 'popover' | 'input';\n\n    /**\n     * Компонент календаря\n     */\n    Calendar?: ElementType;\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | MouseEvent<HTMLButtonElement> | null,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик ввода в инпут\n     */\n    onInputChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { value: string; date: Date },\n    ) => void;\n\n    /**\n     * Обработчик изменения календаря\n     */\n    onCalendarChange?: CalendarProps['onChange'];\n\n    /**\n     * Позиционирование поповера с календарем\n     */\n    popoverPosition?: PopoverProps['position'];\n\n    /**\n     * z-index Popover\n     */\n    zIndexPopover?: PopoverProps['zIndex'];\n\n    /**\n     * Календарь будет принимать ширину инпута\n     */\n    useAnchorWidth?: boolean;\n\n    /**\n     * Отображение компонента в мобильном или десктопном виде\n     */\n    view?: 'desktop' | 'mobile';\n};\n\nexport const CalendarInput = forwardRef<HTMLInputElement, CalendarInputProps>(\n    (\n        {\n            block = false,\n            className,\n            inputClassName,\n            popoverClassName,\n            defaultOpen = false,\n            defaultMonth,\n            defaultValue = '',\n            calendarPosition = 'popover',\n            value,\n            dataTestId,\n            calendarProps = {},\n            minDate = calendarProps.minDate,\n            maxDate = calendarProps.maxDate,\n            offDays = calendarProps.offDays || [],\n            events = calendarProps.events || [],\n            preventFlip,\n            mobileMode = 'popover',\n            wrapperRef = null,\n            disabled,\n            onChange = () => null,\n            onInputChange,\n            onCalendarChange,\n            onKeyDown,\n            readOnly,\n            Calendar = DefaultCalendar,\n            popoverPosition = 'bottom-start',\n            zIndexPopover,\n            useAnchorWidth,\n            rightAddons,\n            error,\n            view = 'desktop',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const calendarResponsive = calendarProps?.responsive ?? true;\n        const shouldRenderNative = SUPPORTS_INPUT_TYPE_DATE && mobileMode === 'native';\n        const shouldRenderOnlyInput = mobileMode === 'input';\n        const shouldRenderStatic = calendarPosition === 'static' && !shouldRenderOnlyInput;\n        const shouldRenderPopover =\n            calendarPosition === 'popover' && !shouldRenderNative && !shouldRenderOnlyInput;\n\n        const [open, setOpen] = useState(false);\n\n        const [inputValue, setInputValue] = useState(value || defaultValue);\n\n        const calendarValue = inputValue ? parseDateString(inputValue).getTime() : undefined;\n\n        const checkInputValueIsValid = useCallback(\n            (newInputValue?: string) => {\n                if (!newInputValue) return false;\n\n                const dateValue = parseDateString(newInputValue).getTime();\n\n                return !!(\n                    dateValue &&\n                    isCompleteDateInput(newInputValue) &&\n                    dateInLimits(dateValue, minDate, maxDate) &&\n                    !offDays.includes(dateValue)\n                );\n            },\n            [maxDate, minDate, offDays],\n        );\n\n        const inputDisabled = disabled || readOnly;\n\n        const inputWrapperRef = useRef<HTMLDivElement>(null);\n        const calendarRef = useRef<HTMLDivElement>(null);\n\n        const handleKeyDown = useCallback(\n            (event: KeyboardEvent<HTMLDivElement>) => {\n                if ((event.target as HTMLElement).tagName === 'INPUT' && event.key === 'Enter') {\n                    setOpen(!open);\n                }\n\n                if (event.key === 'Escape') {\n                    setOpen(false);\n                }\n            },\n            [open],\n        );\n\n        const handleClick = useCallback(() => {\n            if (!open) setOpen(true);\n        }, [open]);\n\n        const handleFocus = useCallback(\n            (event: FocusEvent<HTMLDivElement>) => {\n                if (view === 'desktop') {\n                    setOpen(true);\n\n                    if (!open && event.target.tagName !== 'INPUT' && calendarRef.current) {\n                        calendarRef.current.focus();\n                    }\n                }\n            },\n            [open, view],\n        );\n\n        const handleBlur = useCallback(\n            (event: FocusEvent<HTMLDivElement>) => {\n                if (view === 'desktop') {\n                    const target = (event.relatedTarget || document.activeElement) as HTMLElement;\n\n                    if (calendarRef.current && calendarRef.current.contains(target) === false) {\n                        setOpen(false);\n                    }\n                }\n            },\n            [view],\n        );\n\n        const handleInputKeyDown = useCallback(\n            (event: KeyboardEvent<HTMLInputElement>) => {\n                if (['ArrowDown', 'ArrowUp'].includes(event.key) && calendarRef.current) {\n                    event.preventDefault();\n                    calendarRef.current.focus();\n                }\n\n                if (onKeyDown) onKeyDown(event);\n            },\n            [onKeyDown],\n        );\n\n        const changeHandler = useCallback(\n            (\n                event: ChangeEvent<HTMLInputElement> | null,\n                newValue: string,\n                newDate: Date,\n                initiator: 'input' | 'calendar' = 'input',\n                shouldChange = true,\n            ) => {\n                if (initiator === 'input' && event && onInputChange) {\n                    onInputChange(event, { value: newValue, date: newDate });\n                }\n\n                if (initiator === 'calendar' && onCalendarChange) {\n                    onCalendarChange(newDate.getTime());\n                }\n\n                setInputValue(newValue);\n\n                if (shouldChange) {\n                    onChange(event, { date: newDate, value: newValue });\n                }\n            },\n            [onCalendarChange, onChange, onInputChange],\n        );\n\n        const handleInputChange = useCallback<Required<DateInputProps>['onChange']>(\n            (event, payload) => {\n                changeHandler(\n                    event,\n                    payload.value,\n                    payload.date,\n                    'input',\n                    !payload.value || checkInputValueIsValid(payload.value),\n                );\n            },\n            [changeHandler, checkInputValueIsValid],\n        );\n\n        const handleCalendarChange = useCallback<Required<CalendarProps>['onChange']>(\n            (date?: number) => {\n                if (date) {\n                    changeHandler(null, formatDate(date), new Date(date), 'calendar');\n                }\n\n                if (view === 'desktop') {\n                    setOpen(false);\n                }\n            },\n            [changeHandler, view],\n        );\n\n        const handleCalendarWrapperMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n            // Не дает инпуту терять фокус при выборе даты\n            event.preventDefault();\n        }, []);\n\n        const handleCalendarClose = useCallback(() => {\n            setOpen(false);\n        }, []);\n\n        useEffect(() => {\n            setOpen(defaultOpen);\n        }, [defaultOpen]);\n\n        useEffect(() => {\n            if (typeof value !== 'undefined') {\n                setInputValue(value);\n            }\n        }, [value]);\n\n        const renderCalendar = () => (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div onMouseDown={handleCalendarWrapperMouseDown}>\n                <Calendar\n                    {...calendarProps}\n                    responsive={calendarResponsive}\n                    open={open}\n                    onClose={handleCalendarClose}\n                    ref={calendarRef}\n                    defaultMonth={defaultMonth}\n                    value={checkInputValueIsValid(inputValue) ? calendarValue : undefined}\n                    onChange={handleCalendarChange}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    offDays={offDays}\n                    events={events}\n                />\n            </div>\n        );\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                className={cn(styles.component, className, {\n                    [styles.block]: block,\n                })}\n                tabIndex={-1}\n                onKeyDown={inputDisabled ? undefined : handleKeyDown}\n                onClick={inputDisabled ? undefined : handleClick}\n                onFocus={inputDisabled ? undefined : handleFocus}\n                onBlur={handleBlur}\n                data-test-id={dataTestId}\n            >\n                <DateInput\n                    {...restProps}\n                    ref={ref}\n                    wrapperRef={mergeRefs([wrapperRef, inputWrapperRef])}\n                    value={inputValue}\n                    defaultValue={defaultValue}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    mobileMode={mobileMode === 'native' ? 'native' : 'input'}\n                    error={error}\n                    rightAddons={\n                        <React.Fragment>\n                            {rightAddons}\n                            {shouldRenderPopover && (\n                                <CalendarMIcon className={styles.calendarIcon} />\n                            )}\n                        </React.Fragment>\n                    }\n                    onKeyDown={handleInputKeyDown}\n                    onChange={handleInputChange}\n                    block={true}\n                />\n                {shouldRenderStatic && renderCalendar()}\n\n                {shouldRenderPopover && (\n                    <Popover\n                        open={open}\n                        useAnchorWidth={useAnchorWidth}\n                        anchorElement={inputWrapperRef.current as HTMLElement}\n                        popperClassName={cn(styles.calendarContainer, {\n                            [styles.calendarResponsive]: calendarResponsive,\n                        })}\n                        className={popoverClassName}\n                        position={popoverPosition}\n                        offset={[0, 4]}\n                        withTransition={false}\n                        preventFlip={preventFlip}\n                        zIndex={zIndexPopover}\n                    >\n                        {renderCalendar()}\n                    </Popover>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { DateInputProps } from '@alfalab/core-components-date-input';\n\nimport { CalendarInput, CalendarInputProps } from './components/calendar-input/Component';\n\nexport type CalendarInputDesktopProps = Omit<CalendarInputProps, 'view'>;\n\nexport const CalendarInputDesktop = forwardRef<HTMLInputElement, CalendarInputDesktopProps>(\n    (props, ref) => <CalendarInput {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { CalendarMobile } from '@alfalab/core-components-calendar';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { DateInputProps } from '@alfalab/core-components-date-input';\n\nimport { CalendarInput, CalendarInputProps } from './components/calendar-input/Component';\n\nexport type CalendarInputMobileProps = Omit<CalendarInputProps, 'view'>;\n\nexport const CalendarInputMobile = forwardRef<HTMLInputElement, CalendarInputMobileProps>(\n    (props, ref) => <CalendarInput Calendar={CalendarMobile} view='mobile' {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { DateInputProps } from '@alfalab/core-components-date-input';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { CalendarInputProps } from './components/calendar-input/Component';\nimport { CalendarInputDesktop } from './Component.desktop';\nimport { CalendarInputMobile } from './Component.mobile';\n\nexport type CalendarInputResponsiveProps = Omit<CalendarInputProps, 'view'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport type CalendarInputMedia = 'desktop' | 'mobile';\n\nexport const CalendarInputResponsive = forwardRef<HTMLInputElement, CalendarInputResponsiveProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<CalendarInputMedia>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <CalendarInputDesktop {...restProps} ref={ref} />\n        ) : (\n            <CalendarInputMobile {...restProps} ref={ref} />\n        );\n    },\n);\n","import format from 'date-fns/format';\nimport isSameDay from 'date-fns/isSameDay';\nimport parse from 'date-fns/parse';\n\nimport { dateInLimits } from '@alfalab/core-components-calendar';\nimport { isCompleteDateInput } from '@alfalab/core-components-date-input';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const NATIVE_DATE_FORMAT = 'yyyy-MM-dd';\nexport const DATE_MASK = [/\\d/, /\\d/, '.', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/];\nexport const IS_BROWSER = typeof window !== 'undefined';\nexport const SUPPORTS_INPUT_TYPE_DATE = IS_BROWSER && isInputDateSupported();\n\nexport const formatDate = (date: Date | number, dateFormat = DATE_FORMAT) =>\n    format(date, dateFormat);\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\n/**\n * Возвращает `true`, если поддерживается `input[type=\"date\"]`\n */\nexport function isInputDateSupported() {\n    const input = document.createElement('input');\n    const value = 'a';\n\n    input.setAttribute('type', 'date');\n    input.setAttribute('value', value);\n\n    return input.value !== value;\n}\n\nexport const isValidInputValue = (\n    newInputValue: string | undefined,\n    minDate: number | undefined,\n    maxDate: number | undefined,\n    offDays: Array<number | Date> = [],\n) => {\n    if (!newInputValue) return false;\n\n    const dateValue = parseDateString(newInputValue).getTime();\n\n    return Boolean(\n        dateValue &&\n            isCompleteDateInput(newInputValue) &&\n            dateInLimits(dateValue, minDate, maxDate) &&\n            !offDays.some((offDay) => isSameDay(offDay, dateValue)),\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_AMU09\",\"calendarVisible\":\"calendarVisible_ayhTw\",\"skeleton\":\"skeleton__Zuge\",\"header\":\"header_VXKce\",\"weekDays\":\"weekDays_vG9zt\",\"row\":\"row_CLZCs\",\"enter\":\"enter_HhDl8\",\"enterActive\":\"enterActive_FlNly\",\"exit\":\"exit_KNUF9\",\"exitActive\":\"exitActive_duNni\"};","import React, { forwardRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { Calendar, CalendarProps } from '@alfalab/core-components-calendar';\nimport { Skeleton } from '@alfalab/core-components-skeleton';\n\nimport styles from './index.module.css';\n\nexport type CalendarWithSkeletonProps = CalendarProps & {\n    /**\n     * Флаг включения анимации скелета\n     */\n    animate?: boolean;\n\n    /**\n     * Флаг управлением видимостью календаря\n     */\n    calendarVisible?: boolean;\n};\n\nexport const CalendarWithSkeleton = forwardRef<HTMLDivElement, CalendarWithSkeletonProps>(\n    ({ calendarVisible = true, animate = true, className, ...restProps }, ref) => {\n        const skeletonProps = { visible: true, animate };\n\n        return (\n            <div\n                className={cn(styles.component, className, {\n                    [styles.calendarVisible]: calendarVisible,\n                })}\n            >\n                {calendarVisible && <Calendar ref={ref} {...restProps} />}\n\n                <CSSTransition\n                    in={!calendarVisible}\n                    timeout={200}\n                    unmountOnExit={true}\n                    classNames={styles}\n                >\n                    <div className={styles.skeleton} ref={calendarVisible ? undefined : ref}>\n                        <Skeleton {...skeletonProps} className={styles.header} />\n\n                        <Skeleton {...skeletonProps} className={styles.weekDays} />\n\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"cardImage\":\"cardImage_ZY5gT\",\"rounded\":\"rounded_mEJub\",\"image\":\"image_Kyus_\",\"loaded\":\"loaded_X2PAN\"};","import React, { FC, useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport const ASPECT_RATIO = 0.63;\nexport const DEFAULT_WIDTH = 280;\nexport const DEFAULT_BASE_URL = 'https://online.alfabank.ru/cards-images/cards/';\n\nexport type CardImageProps = {\n    /**\n     * Идентификатор карты\n     * (например: ER, GQ, SU)\n     */\n    cardId?: string;\n\n    /**\n     * Какие слои показывать, через запятую без пробелов\n     * (полный набор: BACKGROUND,CARD_NUMBER,CARD_HOLDER,PAY_PASS,CHIP,LOGO,PAYMENT_SYSTEM,RESERVED_1,RESERVED_2,VALID_DATE)\n     */\n    layers?: string;\n\n    /**\n     * Ширина изображения\n     */\n    width?: number;\n\n    /**\n     * Скругление углов\n     */\n    rounded?: boolean;\n\n    /**\n     * Базовый URL сервиса с изображениями\n     */\n    baseUrl?: string;\n\n    /**\n     * Колбек, вызываемый при загрузке изображения\n     */\n    onLoad?: () => void;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    alt?: string;\n\n    /**\n     * Уникальный идентификатор блока\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const CardImage: FC<CardImageProps> = ({\n    cardId,\n    layers = 'BACKGROUND,CARD_NUMBER,CARD_HOLDER,PAY_PASS,CHIP,LOGO,PAYMENT_SYSTEM,RESERVED_1,RESERVED_2,VALID_DATE',\n    width = DEFAULT_WIDTH,\n    baseUrl = DEFAULT_BASE_URL,\n    rounded = true,\n    alt,\n    id,\n    dataTestId,\n    onLoad,\n    className,\n}) => {\n    const [loaded, setLoaded] = useState(false);\n    const image = useRef<HTMLImageElement>(null);\n    const height = width * ASPECT_RATIO;\n\n    useEffect(() => {\n        setLoaded((prevLoaded) => {\n            if (!prevLoaded && image.current?.complete) {\n                onLoad?.();\n\n                return true;\n            }\n\n            return prevLoaded;\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleLoadedImage = () => {\n        setLoaded((prevLoaded) => {\n            if (!prevLoaded) {\n                onLoad?.();\n\n                return true;\n            }\n\n            return prevLoaded;\n        });\n    };\n\n    const cardImageUrl = `${baseUrl}${cardId}/images?layers=${layers}&width=${width}`;\n    const cardImageUrl2x = `${baseUrl}${cardId}/images?layers=${layers}&width=${width * 2}`;\n\n    return (\n        <div\n            className={cn(\n                styles.cardImage,\n                rounded && styles.rounded,\n                loaded && styles.loaded,\n                className,\n            )}\n            style={{\n                width,\n                height,\n            }}\n            id={id}\n            data-test-id={dataTestId}\n        >\n            {cardId && (\n                <img\n                    ref={image}\n                    className={styles.image}\n                    width={width}\n                    height={height}\n                    src={cardImageUrl}\n                    srcSet={`${cardImageUrl2x} 2x`}\n                    alt={alt}\n                    role='presentation'\n                    onLoad={handleLoadedImage}\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_DyV9I\"};","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype CDNIconProps = {\n    /**\n     * Имя иконки\n     */\n    name: string;\n    /**\n     * Цвет иконки\n     */\n    color?: string;\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n    /**\n     * Базовый адрес cdn хранилища c иконками\n     * @default https://alfabank.servicecdn.ru/icons\n     */\n    baseUrl?: string;\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const CDNIcon: React.FC<CDNIconProps> = ({\n    name,\n    color,\n    dataTestId,\n    className,\n    baseUrl = 'https://alfabank.servicecdn.ru/icons',\n}) => {\n    const [icon, setIcon] = useState('');\n\n    useEffect(() => {\n        const xhr = new XMLHttpRequest();\n\n        xhr.open('GET', `${baseUrl}/${name}.svg`);\n        xhr.send();\n        xhr.onload = function onload() {\n            const svg = xhr.response;\n\n            if (svg.startsWith('<svg')) setIcon(svg);\n        };\n\n        return () => xhr.abort();\n    }, [name, baseUrl]);\n\n    return (\n        <span\n            style={{ color }}\n            className={cn(styles.component, className)}\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: icon }}\n            data-test-id={dataTestId}\n        />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_tp9qn\",\"error\":\"error_aSCZc\",\"checkboxList\":\"checkboxList_YaF5S\",\"vertical\":\"vertical_CMjml\",\"checkbox\":\"checkbox_CwDwd\",\"horizontal\":\"horizontal_CcnAL\",\"tagLabel\":\"tagLabel_P4o8o\",\"label\":\"label_Wtuex\",\"sub\":\"sub_wJ_95\",\"errorMessage\":\"errorMessage_cRLR0\",\"hint\":\"hint_ryB6_\",\"hiddenInput\":\"hiddenInput_pfhvP\"};","import React, {\n    ChangeEvent,\n    Children,\n    cloneElement,\n    FC,\n    FocusEvent,\n    isValidElement,\n    MouseEvent,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type Direction = 'horizontal' | 'vertical';\nexport type CheckboxGroupType = 'checkbox' | 'tag';\n\nexport type CheckboxGroupProps = {\n    /**\n     * Заголовок группы\n     */\n    label?: ReactNode;\n\n    /**\n     * Направление\n     */\n    direction?: Direction;\n\n    /**\n     * Тип компонента\n     */\n    type?: CheckboxGroupType;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Дочерние элементы. Ожидаются компоненты `Checkbox` или `Tag`\n     */\n    children: ReactNode;\n\n    /**\n     * Обработчик изменения значения 'checked' одного из дочерних компонентов\n     */\n    onChange?: (\n        event: ChangeEvent | MouseEvent,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * Обработчик блюра.\n     */\n    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Обработчик фокуса.\n     */\n    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Управление возможностью изменения состояния 'checked' дочерних компонентов CheckBox\n     */\n    disabled?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const CheckboxGroup: FC<CheckboxGroupProps> = ({\n    children,\n    className,\n    direction = 'vertical',\n    label,\n    error,\n    hint,\n    onChange,\n    onBlur,\n    onFocus,\n    type = 'checkbox',\n    dataTestId,\n    disabled = false,\n}) => {\n    const renderCheckbox = (child: ReactElement) => {\n        const { name, checked, className: childClassName } = child.props;\n\n        const handleChange = (event: ChangeEvent) => {\n            if (onChange) {\n                onChange(event, { name, checked: !checked });\n            }\n        };\n\n        return cloneElement(child, {\n            onChange: handleChange,\n            disabled,\n            ...child.props,\n            className: cn(childClassName, styles.checkbox),\n        });\n    };\n\n    const renderTag = (child: ReactElement) => {\n        const { name, checked } = child.props;\n\n        const handleChange = (event: ChangeEvent | MouseEvent) => {\n            if (onChange) {\n                onChange(event, { name, checked: !checked });\n            }\n        };\n\n        const clone = cloneElement(child, { onClick: handleChange, disabled, ...child.props });\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label className={cn(styles.checkbox, styles.tagLabel)}>\n                {clone}\n                <input\n                    type='checkbox'\n                    autoComplete='off'\n                    onChange={handleChange}\n                    disabled={disabled || child.props.disabled}\n                    checked={checked}\n                    className={styles.hiddenInput}\n                    tabIndex={-1}\n                />\n            </label>\n        );\n    };\n\n    const errorMessage = typeof error === 'boolean' ? '' : error;\n\n    return (\n        <div\n            className={cn(\n                styles.component,\n                styles[type],\n                styles[direction],\n                { [styles.error]: error },\n                className,\n            )}\n            data-test-id={dataTestId}\n        >\n            {label ? <span className={styles.label}>{label}</span> : null}\n\n            {children ? (\n                <div className={styles.checkboxList} onBlur={onBlur} onFocus={onFocus}>\n                    {Children.map(children, (child) => {\n                        if (isValidElement(child)) {\n                            return type === 'checkbox' ? renderCheckbox(child) : renderTag(child);\n                        }\n\n                        return null;\n                    })}\n                </div>\n            ) : null}\n\n            {errorMessage && (\n                <span className={cn(styles.sub, styles.errorMessage)} role='alert'>\n                    {errorMessage}\n                </span>\n            )}\n\n            {hint && !errorMessage && <span className={cn(styles.sub, styles.hint)}>{hint}</span>}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_wMAW6\",\"start\":\"start_pjU11\",\"center\":\"center_bKKBm\",\"addons\":\"addons_Iajre\",\"block\":\"block_xWByP\",\"box\":\"box_N1VWO\",\"checkedIcon\":\"checkedIcon_O4r_r\",\"s\":\"s_fgDUn\",\"disabled\":\"disabled_SV9zL\",\"inactive\":\"inactive_ibDB4\",\"checked\":\"checked_qCx69\",\"indeterminate\":\"indeterminate_vcJor\",\"label\":\"label_BzK_T\",\"hint\":\"hint_DZXO8\",\"focused\":\"focused_ii5aM\",\"content\":\"content_OWrSf\",\"errorMessage\":\"errorMessage_ScF7z\",\"indeterminateLine\":\"indeterminateLine_FVpJ1\"};","import React, { ChangeEvent, forwardRef, InputHTMLAttributes, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCompactMIcon } from '@alfalab/icons-glyph/CheckmarkCompactMIcon';\n\nimport styles from './index.module.css';\n\ntype NativeProps = InputHTMLAttributes<HTMLInputElement>;\ntype Align = 'start' | 'center';\n\nexport type CheckboxProps = Omit<NativeProps, 'size' | 'onChange' | 'enterKeyHint'> & {\n    /**\n     * Управление состоянием вкл/выкл чекбокса (native prop)\n     */\n    checked?: boolean;\n\n    /**\n     * Обработчик переключения чекбокса\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * Текст подписи к чекбоксу\n     */\n    label?: ReactNode;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Доп. класс чекбокса\n     */\n    boxClassName?: string;\n\n    /**\n     * Доп. класс контента\n     */\n    contentClassName?: string;\n\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Дополнительный слот\n     */\n    addons?: React.ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * Управление состоянием включен / выключен\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием активен / неактивен\n     */\n    inactive?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Управление неопределенным состоянием чекбокса\n     */\n    indeterminate?: boolean;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Флаг для скрытия нативного инпута.\n     * @default false\n     */\n    hiddenInput?: boolean;\n};\n\nexport const Checkbox = forwardRef<HTMLLabelElement, CheckboxProps>(\n    (\n        {\n            checked,\n            label,\n            hint,\n            size = 's',\n            boxClassName,\n            contentClassName,\n            align = 'start',\n            addons,\n            block,\n            onChange,\n            className,\n            name,\n            disabled,\n            inactive,\n            dataTestId,\n            indeterminate = false,\n            hiddenInput = false,\n            error,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const labelRef = useRef<HTMLLabelElement>(null);\n\n        const [focused] = useFocus(labelRef, 'keyboard');\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (onChange) {\n                onChange(event, { checked: event.target.checked, name });\n            }\n        };\n\n        const errorMessage = typeof error === 'boolean' ? '' : error;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label\n                className={cn(styles.component, styles[size], styles[align], className, {\n                    [styles.disabled]: disabled,\n                    [styles.inactive]: inactive,\n                    [styles.checked]: checked,\n                    [styles.indeterminate]: indeterminate,\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                })}\n                ref={mergeRefs([labelRef, ref])}\n            >\n                {!hiddenInput && (\n                    <input\n                        type='checkbox'\n                        onChange={handleChange}\n                        disabled={disabled || inactive}\n                        checked={checked}\n                        data-test-id={dataTestId}\n                        {...restProps}\n                    />\n                )}\n                <span className={cn(styles.box, boxClassName)}>\n                    {checked && <CheckmarkCompactMIcon className={styles.checkedIcon} />}\n\n                    {indeterminate && !checked && <span className={styles.indeterminateLine} />}\n                </span>\n\n                {(label || hint || errorMessage) && (\n                    <span className={cn(styles.content, contentClassName)}>\n                        {label && <span className={styles.label}>{label}</span>}\n\n                        {hint && !errorMessage && <span className={styles.hint}>{hint}</span>}\n\n                        {errorMessage && (\n                            <span className={styles.errorMessage} role='alert'>\n                                {errorMessage}\n                            </span>\n                        )}\n                    </span>\n                )}\n\n                {addons && <span className={styles.addons}>{addons}</span>}\n            </label>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nCheckbox.defaultProps = {\n    indeterminate: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_mbXGM\",\"svg\":\"svg_Q6o_a\",\"title\":\"title__0K22\",\"subtitle\":\"subtitle_QTDIy\",\"labelWrapper\":\"labelWrapper_MSMUW\",\"label\":\"label_MbLVo\",\"typography\":\"typography__g495\",\"xxl\":\"xxl_xI5gR\",\"xl\":\"xl_ShAjG\",\"l\":\"l_x88_E\",\"m\":\"m_rE7QR\",\"s\":\"s_zY6Wg\",\"xs\":\"xs_Hr0Fv\",\"backgroundCircle\":\"backgroundCircle_bw9BV\",\"progressCircle\":\"progressCircle_aaN_x\",\"positive\":\"positive_svuAY\",\"negative\":\"negative_wJJEv\",\"stroke\":\"stroke_CNdC4\",\"bg-positive\":\"bg-positive_dPwM5\",\"bg-negative\":\"bg-negative_hPAkk\",\"iconWrapper\":\"iconWrapper_ptUAN\",\"icon-tertiary\":\"icon-tertiary_h2i8M\",\"icon-positive\":\"icon-positive_tYq7P\",\"icon-negative\":\"icon-negative_WrMrV\",\"icon-primary-inverted\":\"icon-primary-inverted_coYra\",\"icon-primary\":\"icon-primary_CRcj6\",\"icon-secondary\":\"icon-secondary_tq_K6\",\"icon\":\"icon_jja1U\"};","import React, { ElementType, ReactNode, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nconst SIZES = {\n    xs: 24,\n    s: 48,\n    m: 64,\n    l: 80,\n    xl: 128,\n    xxl: 144,\n};\n\nconst STROKE = {\n    xs: 4,\n    s: 4,\n    m: 6,\n    l: 8,\n    xl: 10,\n    xxl: 12,\n};\n\nconst VIEW_TITLE = {\n    xs: 'small',\n    s: 'small',\n    m: 'small',\n    l: 'xsmall',\n    xl: 'medium',\n    xxl: 'medium',\n} as const;\n\nconst VIEW_TEXT = {\n    xs: 'secondary-small',\n    s: 'secondary-small',\n    m: 'secondary-large',\n    l: 'secondary-large',\n    xl: 'secondary-large',\n    xxl: 'secondary-large',\n} as const;\n\nexport type CircularProgressBarProps = {\n    /**\n     * Уровень прогресса, %\n     */\n    value: number;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Основной текст\n     */\n    title?: ReactNode;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'primary' | 'secondary' | 'tertiary' | 'positive' | 'negative';\n\n    /**\n     * Дополнительный текст\n     */\n    subtitle?: ReactNode;\n\n    /**\n     * Основной текст при 100%\n     */\n    titleComplete?: ReactNode;\n\n    /**\n     * Дополнительный текст при 100%\n     */\n    subtitleComplete?: ReactNode;\n\n    /**\n     * Цвет заполнения\n     */\n    view?: 'positive' | 'negative';\n\n    /**\n     * Размер (xxl — 144×144px, xl — 128×128px, l — 80×80px, m — 64×64px, s — 48×48px, xs — 24×24px)\n     */\n    size?: 'xxl' | 'xl' | 'l' | 'm' | 's' | 'xs';\n\n    /**\n     * Наличие желоба\n     */\n    stroke?: boolean;\n\n    /**\n     * Заливка при 100%\n     */\n    fillComplete?: boolean;\n\n    /**\n     * Цвет текста при 100%\n     */\n    completeTextColor?: 'primary' | 'primary-inverted' | 'positive' | 'negative';\n\n    /**\n     * Цвет иконки при 100%\n     */\n    completeIconColor?: 'primary-inverted' | 'positive' | 'negative' | 'tertiary';\n\n    /**\n     * Компонент иконки\n     */\n    icon?: ElementType<{ className?: string }>;\n\n    /**\n     * Компонент иконки при 100%\n     */\n    iconComplete?: ElementType<{ className?: string }>;\n\n    /**\n     * Направление прогресса (clockwise - по часовой стрелке, counter-clockwise - против часовой стрелки)\n     */\n    direction?: 'clockwise' | 'counter-clockwise';\n\n    /**\n     * Высота компонента, min = 24; max = 144\n     * использовать совместно с size :\n     * xxl от 144\n     * xl  от 128 до 143\n     * l   от 80 до 127\n     * m   от 64 до 79\n     * s   от 48 до 63\n     * xs  от 24 до 47\n     */\n    height?: number;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\n/**\n * Компонент круглого прогресс бара.\n */\nexport const CircularProgressBar: React.FC<CircularProgressBarProps> = ({\n    value,\n    view = 'positive',\n    size = 'm',\n    className,\n    dataTestId,\n    title = value ? value.toString() : '0',\n    titleComplete,\n    subtitle,\n    contentColor = 'secondary',\n    subtitleComplete,\n    stroke = true,\n    fillComplete,\n    icon: Icon,\n    iconComplete: IconComplete,\n    completeTextColor,\n    completeIconColor = 'tertiary',\n    direction = 'clockwise',\n    height,\n    children,\n}) => {\n    const memorized = useMemo(() => {\n        const strokeWidth = STROKE[size];\n        const maxProgress = 100;\n        const minProgress = 0;\n        const widthSVG = SIZES[size];\n        const heightSVG = SIZES[size];\n        const center = widthSVG / 2;\n        const radius = center - strokeWidth / 2;\n        const circumference = Math.PI * radius * 2;\n        const progress = Math.min(Math.max(value, minProgress), maxProgress);\n        const strokeDasharray = circumference.toFixed(3);\n        const strokeDashoffset = (((100 - progress) / 100) * circumference).toFixed(3);\n\n        return {\n            widthSVG,\n            heightSVG,\n            center,\n            radius,\n            strokeDasharray,\n            strokeDashoffset,\n        };\n    }, [value, size]);\n\n    const isComplete = value === 100;\n    const isCompleteTextColor = isComplete && completeTextColor;\n    const titleContent = titleComplete && isComplete ? titleComplete : title;\n    const subtitleContent = subtitleComplete && isComplete ? subtitleComplete : subtitle;\n    const IconComponent = IconComplete && isComplete ? IconComplete : Icon;\n\n    const renderTitleString = () =>\n        SIZES[size] > 64 ? (\n            <Typography.TitleMobile\n                className={cn(styles.typography, styles.title)}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                tag='div'\n                font='system'\n                view={VIEW_TITLE[size]}\n            >\n                {titleContent}\n            </Typography.TitleMobile>\n        ) : (\n            <Typography.Text\n                className={styles.title}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                tag='div'\n                weight='bold'\n                view={VIEW_TEXT[size]}\n            >\n                {titleContent}\n            </Typography.Text>\n        );\n\n    const renderTitle = () => (typeof title === 'string' ? renderTitleString() : titleContent);\n\n    const renderSubTitle = () =>\n        typeof subtitle === 'string' ? (\n            <Typography.Text\n                tag='div'\n                className={styles.subtitle}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                view='primary-small'\n            >\n                {subtitleContent}\n            </Typography.Text>\n        ) : (\n            subtitleContent\n        );\n\n    const renderIcon = () => (\n        <span\n            className={cn(\n                styles.iconWrapper,\n                styles[size],\n                styles.tertiary,\n                styles[`icon-${contentColor}`],\n                {\n                    [styles[`icon-${completeIconColor}`]]: completeIconColor,\n                },\n            )}\n        >\n            {IconComponent && <IconComponent className={styles.icon} />}\n        </span>\n    );\n\n    const renderContent = () =>\n        Icon || (IconComplete && isComplete) ? (\n            renderIcon()\n        ) : (\n            <React.Fragment>\n                {SIZES[size] > 24 && renderTitle()}\n                {SIZES[size] > 64 && renderSubTitle()}\n            </React.Fragment>\n        );\n\n    return (\n        <div\n            className={cn(styles.component, styles[size], className)}\n            style={{\n                ...(height && { height, width: height }),\n            }}\n            data-test-id={dataTestId}\n        >\n            <svg\n                viewBox={`0 0 ${memorized.widthSVG} ${memorized.heightSVG}`}\n                className={styles.svg}\n                xmlns='http://www.w3.org/2000/svg'\n            >\n                <circle\n                    className={cn(styles.backgroundCircle, styles[size], {\n                        [styles.stroke]: !stroke,\n                    })}\n                    cx={memorized.center}\n                    cy={memorized.center}\n                    r={memorized.radius}\n                    strokeWidth={STROKE[size]}\n                />\n                <circle\n                    className={cn(styles.progressCircle, styles[view], styles[size], {\n                        [styles[`bg-${view}`]]: fillComplete && isComplete,\n                    })}\n                    cx={memorized.center}\n                    cy={memorized.center}\n                    r={memorized.radius}\n                    strokeWidth={STROKE[size]}\n                    strokeDasharray={memorized.strokeDasharray}\n                    strokeDashoffset={\n                        direction === 'counter-clockwise'\n                            ? -memorized.strokeDashoffset\n                            : memorized.strokeDashoffset\n                    }\n                    transform={`rotate(${-90} ${memorized.center} ${memorized.center})`}\n                />\n            </svg>\n            <div\n                className={cn(styles.labelWrapper, {\n                    [styles.label]: Icon || IconComplete,\n                })}\n            >\n                {children || renderContent()}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UR_gn\",\"input\":\"input_MjxcO\",\"hasError\":\"hasError_LiYmj\",\"disabled\":\"disabled_t6dv0\",\"compact\":\"compact_VCCUd\"};","import React, {\n    ChangeEvent,\n    ChangeEventHandler,\n    forwardRef,\n    InputHTMLAttributes,\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n} from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type InputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'value' | 'onChange' | 'onKeyDown' | 'enterKeyHint'\n> & {\n    index: number;\n    value: string;\n    error: boolean;\n    compact?: boolean;\n    onChange: (event: ChangeEvent<HTMLInputElement>, payload: { index: number }) => void;\n    onKeyDown: (event: KeyboardEvent<HTMLInputElement>, payload: { index: number }) => void;\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n    (\n        { index, error, disabled, value = '', compact = false, onChange, onKeyDown, onFocus },\n        ref,\n    ) => {\n        const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n            onChange(event, { index });\n        };\n\n        const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n            onKeyDown(event, { index });\n        };\n\n        const handleClick: MouseEventHandler = (event) => {\n            const target = event.target as HTMLInputElement;\n\n            /**\n             * В сафари выделение корректно работает только с асинхронным вызовом\n             */\n            requestAnimationFrame(() => {\n                target.select();\n            });\n        };\n\n        return (\n            <input\n                ref={ref}\n                className={cn(styles.input, {\n                    [styles.hasError]: error,\n                    [styles.disabled]: disabled,\n                    [styles.compact]: compact,\n                })}\n                disabled={disabled}\n                value={value}\n                autoComplete={index === 0 ? 'one-time-code' : ''}\n                inputMode='numeric'\n                pattern='[0-9]*'\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                onFocus={onFocus}\n                onClick={handleClick}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_F9mua\",\"error\":\"error_c8hOT\",\"shake\":\"shake_HErDG\"};","import React, {\n    createRef,\n    FocusEventHandler,\n    forwardRef,\n    ReactNode,\n    RefObject,\n    useEffect,\n    useImperativeHandle,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { Input, InputProps } from './components';\n\nimport styles from './index.module.css';\n\nexport type CodeInputProps = {\n    /**\n     * Количество полей\n     */\n    fields?: number;\n\n    /**\n     * Значение для предзаполнения\n     */\n    initialValues?: string;\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Состояние с ошибкой\n     */\n    error?: ReactNode;\n\n    /**\n     * Дополнительный класс (native prop)\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Флаг - нужно ли очищать код при возникновении ошибки\n     * @default true\n     */\n    clearCodeOnError?: boolean;\n\n    /**\n     * Коллбэк вызываемый после окончания проигрывания анимации при возникновении ошибки.\n     */\n    onErrorAnimationEnd?: () => void;\n\n    /**\n     * Коллбек ввода значения\n     */\n    onChange?: (code: string) => void;\n\n    /**\n     * Коллбек полного заполнения\n     */\n    onComplete?: (code: string) => void;\n};\n\nexport type CustomInputRef = {\n    focus: (index?: number) => void;\n    blur: () => void;\n    reset: () => void;\n    unselect: () => void;\n};\n\ninterface CredentialRequestOtpOptions extends CredentialRequestOptions {\n    otp: { transport: Array<'sms'> };\n}\n\ninterface CredentialOtp extends Credential {\n    code?: string;\n}\n\n/** После истечения этого времени код очищается */\nconst CODE_ERROR_HINT_VISIBLE_DURATION = 300;\n\nexport const CodeInput = forwardRef<CustomInputRef, CodeInputProps>(\n    (\n        {\n            className,\n            disabled,\n            error,\n            fields = 4,\n            initialValues = '',\n            dataTestId,\n            clearCodeOnError = true,\n            onErrorAnimationEnd,\n            onChange,\n            onComplete,\n        },\n        ref,\n    ) => {\n        const inputRefs = useMemo(\n            () =>\n                Array(fields)\n                    .fill({})\n                    .map(() => createRef<HTMLInputElement>()),\n            [fields],\n        );\n\n        const [values, setValues] = useState(initialValues.split(''));\n\n        const clearErrorTimerId = useRef<ReturnType<typeof setTimeout>>();\n\n        const focusOnInput = (inputRef: RefObject<HTMLInputElement>) => {\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        };\n\n        const focus = (index = 0) => {\n            focusOnInput(inputRefs[index]);\n        };\n\n        const blur = () => {\n            const input = document.activeElement;\n\n            if (input?.tagName === 'INPUT') {\n                (input as HTMLInputElement).blur();\n            }\n        };\n\n        const unselect = () => {\n            const input = document.activeElement;\n\n            if (input?.tagName === 'INPUT') {\n                (input as HTMLInputElement).setSelectionRange(0, 0);\n            }\n        };\n\n        const reset = () => {\n            setValues([]);\n        };\n\n        useImperativeHandle(ref, () => ({ focus, blur, reset, unselect }));\n\n        const triggerChange = (argumentValues: string[]) => {\n            const newValue = (argumentValues || values).join('');\n\n            if (onChange) {\n                onChange(newValue);\n            }\n\n            if (onComplete && newValue.length >= fields) {\n                onComplete(newValue);\n            }\n        };\n\n        const handleChange = (value: string, index: number, valid: boolean) => {\n            const newValue = value.replace(/\\D/g, '');\n\n            if (newValue === '' || !valid) {\n                return;\n            }\n\n            let nextRef;\n\n            const newValues = [...values];\n\n            if (newValue.length > 1) {\n                let nextIndex = newValue.length + index - 1;\n\n                if (nextIndex >= fields) {\n                    nextIndex = fields - 1;\n                }\n\n                nextRef = inputRefs[nextIndex];\n\n                newValue.split('').forEach((item, i) => {\n                    const cursor = index + i;\n\n                    if (cursor < fields) {\n                        newValues[cursor] = item;\n                    }\n                });\n            } else {\n                nextRef = inputRefs[index + 1];\n\n                newValues[index] = newValue;\n            }\n\n            setValues(newValues);\n\n            if (nextRef && nextRef.current) {\n                nextRef.current.focus();\n\n                nextRef.current.select();\n            }\n\n            triggerChange(newValues);\n        };\n\n        const handleChangeFromEvent: InputProps['onChange'] = (event, { index }) => {\n            const {\n                target: {\n                    value,\n                    validity: { valid },\n                },\n            } = event;\n\n            handleChange(value, index, valid);\n        };\n\n        const handleKeyDown: InputProps['onKeyDown'] = (event, { index }) => {\n            const prevIndex = index - 1;\n            const nextIndex = index + 1;\n\n            const prevRef = inputRefs[prevIndex];\n            const nextRef = inputRefs[nextIndex];\n            const curtRef = inputRefs[index];\n\n            const newValues = [...values];\n\n            switch (event.key) {\n                case 'Backspace':\n                    event.preventDefault();\n\n                    if (values[index]) {\n                        newValues[index] = '';\n                    } else if (prevRef) {\n                        newValues[prevIndex] = '';\n\n                        focusOnInput(prevRef);\n                    }\n\n                    setValues(newValues);\n\n                    triggerChange(newValues);\n\n                    break;\n                case 'Delete':\n                    event.preventDefault();\n\n                    newValues[index] = '';\n\n                    if (!values[nextIndex]) {\n                        focusOnInput(curtRef);\n                    }\n\n                    if (nextRef) {\n                        focusOnInput(nextRef);\n                    }\n\n                    setValues(newValues);\n\n                    triggerChange(newValues);\n\n                    break;\n                case 'ArrowLeft':\n                    event.preventDefault();\n\n                    if (prevRef) {\n                        focusOnInput(prevRef);\n                    }\n\n                    break;\n                case 'ArrowRight':\n                    event.preventDefault();\n\n                    if (nextRef) {\n                        focusOnInput(nextRef);\n                    }\n\n                    break;\n                case 'ArrowUp':\n                case 'ArrowDown':\n                    event.preventDefault();\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        const handleFocus: FocusEventHandler<HTMLInputElement> = (event) => {\n            const target = event.target as HTMLInputElement;\n\n            /**\n             * В сафари выделение корректно работает только с асинхронным вызовом\n             */\n            requestAnimationFrame(() => {\n                target.select();\n            });\n        };\n\n        const handleErrorAnimationEnd = () => {\n            clearErrorTimerId.current = setTimeout(() => {\n                if (clearCodeOnError) {\n                    focus();\n                    /** Очищаем только в случае, если код не изменился */\n                    setValues((prevState) => (values === prevState ? [] : prevState));\n                }\n\n                onErrorAnimationEnd?.();\n            }, CODE_ERROR_HINT_VISIBLE_DURATION);\n        };\n\n        useEffect(\n            () => () => {\n                if (clearErrorTimerId.current) {\n                    clearTimeout(clearErrorTimerId.current);\n                    clearErrorTimerId.current = undefined;\n                }\n            },\n            [error],\n        );\n\n        useEffect(() => {\n            let ac: AbortController | null = null;\n            const unMountReason = 'component unMount';\n\n            if ('OTPCredential' in window && navigator?.credentials?.get) {\n                ac = new AbortController();\n                const options: CredentialRequestOtpOptions = {\n                    otp: { transport: ['sms'] },\n                    signal: ac.signal,\n                };\n\n                navigator.credentials\n                    .get(options)\n                    .then((res: CredentialOtp | null) => {\n                        if (res?.code) handleChange(res.code, 0, true);\n                    })\n                    .catch((err) => {\n                        if (err !== unMountReason) {\n                            // eslint-disable-next-line no-console\n                            console.error(err);\n                        }\n                    });\n            }\n\n            return () => {\n                if (ac) ac.abort(unMountReason);\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        return (\n            <div\n                className={cn(styles.component, className)}\n                data-test-id={dataTestId}\n                onAnimationEnd={handleErrorAnimationEnd}\n            >\n                <div className={cn({ [styles.shake]: Boolean(error) })}>\n                    {/* eslint-disable react/no-array-index-key */}\n                    {new Array(fields).fill('').map((_, index) => (\n                        <Input\n                            ref={inputRefs[index]}\n                            key={index.toString()}\n                            index={index}\n                            value={values[index]}\n                            disabled={disabled}\n                            error={!!error}\n                            onChange={handleChangeFromEvent}\n                            onFocus={handleFocus}\n                            onKeyDown={handleKeyDown}\n                            className={styles.input}\n                            compact={fields > 6}\n                        />\n                    ))}\n                </div>\n\n                {error && (\n                    <div className={styles.error} role='alert'>\n                        {error}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"collapse_P61MV\",\"content\":\"content_qoCdp\",\"expandedContent\":\"expandedContent_KIBur\",\"expandedLabel\":\"expandedLabel_hXOVi\"};","import React, { forwardRef, useCallback, useEffect, useRef, useState } from 'react';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport cn from 'classnames';\nimport debounce from 'lodash.debounce';\n\nimport { Link } from '@alfalab/core-components-link';\nimport { ArrowDownMBlackIcon } from '@alfalab/icons-classic/ArrowDownMBlackIcon';\nimport { ArrowUpMBlackIcon } from '@alfalab/icons-classic/ArrowUpMBlackIcon';\n\nimport styles from './index.module.css';\n\nexport type CollapseProps = {\n    /**\n     * Состояние компонента\n     *\n     */\n    expanded?: boolean;\n\n    /**\n     * Текст ссылки в `expanded` состоянии\n     *\n     */\n    collapsedLabel?: string;\n\n    /**\n     * Текст ссылки в `collapsed` состоянии\n     *\n     */\n    expandedLabel?: string;\n\n    /**\n     * Дочерние элементы `Collapse`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс обертки\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для скрываемого контента\n     */\n    expandedContentClassName?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Начальное состояние uncontrolled компонента\n     * @default false\n     */\n    defaultExpanded?: boolean;\n\n    /**\n     * Обработчик смены состояний `expanded/collapsed`\n     */\n    onExpandedChange?: (expanded: boolean) => void;\n\n    /**\n     * Обработчик события завершения анимации\n     */\n    onTransitionEnd?: (expanded: boolean) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Collapse = forwardRef<HTMLDivElement, CollapseProps>(\n    (\n        {\n            expanded,\n            collapsedLabel,\n            expandedLabel,\n            children,\n            className,\n            expandedContentClassName,\n            id,\n            onTransitionEnd,\n            onExpandedChange,\n            defaultExpanded = false,\n            dataTestId,\n        },\n        ref,\n    ) => {\n        const uncontrolled = expanded === undefined;\n\n        const contentRef = useRef<HTMLDivElement>(null);\n        const contentCaseRef = useRef<HTMLDivElement>(null);\n        const [expandedState, setExpandedState] = useState(\n            uncontrolled ? defaultExpanded : expanded,\n        );\n\n        const isExpanded = uncontrolled ? expandedState : expanded;\n\n        const recalculate = useCallback(() => {\n            let contentHeight;\n\n            if (!contentCaseRef.current || !contentRef.current) {\n                return;\n            }\n\n            if (isExpanded) {\n                contentHeight = contentCaseRef.current.offsetHeight;\n            } else {\n                contentHeight = 0;\n            }\n\n            contentRef.current.style.height = `${contentHeight}px`;\n        }, [isExpanded]);\n\n        const handleTransitionEnd = useCallback(() => {\n            if (onTransitionEnd) onTransitionEnd(isExpanded);\n        }, [isExpanded, onTransitionEnd]);\n\n        const handleExpandedChange = useCallback(() => {\n            if (uncontrolled) {\n                setExpandedState(!isExpanded);\n            }\n\n            if (onExpandedChange) onExpandedChange(!isExpanded);\n        }, [isExpanded, onExpandedChange, uncontrolled]);\n\n        useEffect(() => {\n            const handleResize = debounce(() => recalculate(), 300);\n\n            window.addEventListener('resize', handleResize);\n\n            return () => window.removeEventListener('resize', handleResize);\n        }, [recalculate]);\n\n        useEffect(() => {\n            const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n            const observer = new ResizeObserver(recalculate);\n\n            if (contentCaseRef.current) {\n                observer.observe(contentCaseRef.current);\n            }\n\n            return () => {\n                observer.disconnect();\n            };\n        }, [recalculate]);\n\n        useEffect(() => recalculate(), [isExpanded, recalculate]);\n\n        const ToggledIcon = isExpanded ? ArrowUpMBlackIcon : ArrowDownMBlackIcon;\n\n        return (\n            <div\n                ref={ref}\n                className={cn(className, styles.collapse)}\n                id={id}\n                data-test-id={dataTestId}\n            >\n                <div\n                    ref={contentRef}\n                    className={cn(styles.content, expandedContentClassName, {\n                        [styles.expandedContent]: isExpanded,\n                    })}\n                    onTransitionEnd={handleTransitionEnd}\n                >\n                    <div ref={contentCaseRef}>{children}</div>\n                </div>\n                {(expandedLabel || collapsedLabel) && (\n                    <Link\n                        className={cn({ [styles.expandedLabel]: isExpanded })}\n                        pseudo={true}\n                        onClick={handleExpandedChange}\n                        rightAddons={<ToggledIcon />}\n                    >\n                        {isExpanded ? expandedLabel : collapsedLabel}\n                    </Link>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_oE5Op\",\"rowLimit2\":\"rowLimit2_P7xjW\",\"rowLimit5\":\"rowLimit5_YZGHs\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nexport type CommentProps = {\n    /**\n     * Количество строк\n     */\n    rowLimit?: 2 | 5;\n    /**\n     *  Сss класс для стилизации общей обёртки\n     */\n    className?: string;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Comment: React.FC<CommentProps> = ({ className, dataTestId, children, rowLimit }) => {\n    const textClassName = rowLimit && styles[`rowLimit${rowLimit}`];\n\n    return (\n        <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n            <Typography.Text tag='div' view='component' className={textClassName} color='primary'>\n                {children}\n            </Typography.Text>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"customButton\":\"customButton_PgaWT\",\"white\":\"white_dlAho\",\"black\":\"black_SkdGZ\",\"darkening\":\"darkening_Y0jpS\",\"lightening\":\"lightening_uLTt0\",\"customLoading\":\"customLoading_Yjvef\"};","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ComponentProps as ButtonComponentProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type ComponentProps = Omit<ButtonComponentProps, 'view' | 'colors'> & {\n    /**\n     * Цвет кнопки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'black' | 'white';\n\n    /**\n     * Затемнение или осветление кнопки при hover и active\n     */\n    stateType?: 'darkening' | 'lightening';\n};\n\ntype AnchorButtonProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype NativeButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type CustomButtonProps = Partial<AnchorButtonProps | NativeButtonProps>;\n\nexport const CustomButton = React.forwardRef<\n    HTMLAnchorElement | HTMLButtonElement,\n    CustomButtonProps\n>(\n    (\n        {\n            children,\n            className,\n            loading,\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const buttonProps = {\n            style: { background: backgroundColor },\n            ...restProps,\n        };\n\n        const buttonClassName = cn(\n            styles.customButton,\n            className,\n            styles[contentColor],\n            styles[stateType],\n            {\n                [styles.customLoading]: loading,\n            },\n        );\n\n        return (\n            <Button\n                {...buttonProps}\n                view='primary'\n                ref={ref}\n                className={buttonClassName}\n                loading={loading}\n            >\n                {children}\n            </Button>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nCustomButton.defaultProps = {\n    size: 'm',\n    block: false,\n    loading: false,\n    nowrap: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"nativeInput\":\"nativeInput_vCIEk\"};","import React, {\n    ChangeEvent,\n    FocusEvent,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport {\n    format,\n    formatDate,\n    isCompleteDateInput,\n    isInputDateSupported,\n    isValid,\n    NATIVE_DATE_FORMAT,\n    parseDateString,\n} from './utils';\n\nimport styles from './index.module.css';\n\nexport type DateInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Управление нативным режимом на мобильных устройствах\n     */\n    mobileMode?: 'input' | 'native';\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { date: Date; value: string },\n    ) => void;\n};\n\nexport const DateInput = forwardRef<HTMLInputElement, DateInputProps>(\n    (\n        {\n            mobileMode = 'input',\n            defaultValue = '',\n            rightAddons,\n            error,\n            value: propValue,\n            onBlur,\n            onChange,\n            onComplete,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [shouldRenderNative, setShouldRenderNative] = useState(false);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n\n        const handleChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                const { value: newValue } = event.target;\n\n                // Позволяем вводить только цифры и точки\n                if (/[^\\d.]/.test(newValue)) {\n                    return;\n                }\n\n                const dots = newValue.match(/\\./g);\n\n                // Не даем вводить больше, чем 2 точки\n                if (dots && dots.length > 2) {\n                    return;\n                }\n\n                // Форматируем введенное значение (добавляем точки)\n                const formattedValue = format(newValue);\n                const date = parseDateString(formattedValue);\n\n                setValue(formattedValue);\n\n                if (onChange) onChange(event, { date, value: formattedValue });\n\n                if (isCompleteDateInput(formattedValue)) {\n                    const valid = formattedValue.length > 0 && isValid(formattedValue);\n\n                    if (!valid) return;\n\n                    if (onComplete) onComplete(event, { date, value: formattedValue });\n                }\n            },\n            [onChange, onComplete],\n        );\n\n        const handleNativeInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                const newDate = parseDateString(event.target.value, NATIVE_DATE_FORMAT);\n                const newValue = event.target.value === '' ? '' : formatDate(newDate);\n\n                setValue(newValue);\n\n                if (onComplete) onComplete(event, { date: newDate, value: newValue });\n                if (onChange) onChange(event, { date: newDate, value: newValue });\n            },\n            [onComplete, onChange],\n        );\n\n        const handleBlur = useCallback(\n            (event: FocusEvent<HTMLInputElement>) => {\n                if (onBlur) onBlur(event);\n            },\n            [onBlur],\n        );\n\n        useEffect(() => {\n            if (mobileMode === 'native' && isInputDateSupported()) {\n                setShouldRenderNative(true);\n            }\n        }, [mobileMode]);\n\n        useEffect(() => {\n            if (typeof propValue !== 'undefined') {\n                setValue(propValue);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [propValue]);\n\n        return (\n            <Input\n                {...restProps}\n                ref={mergeRefs([ref, inputRef])}\n                value={value}\n                inputMode='decimal'\n                pattern='[0-9\\.]*'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder='ДД.ММ.ГГГГ'\n                error={error}\n                rightAddons={\n                    <React.Fragment>\n                        {rightAddons}\n\n                        {shouldRenderNative && (\n                            <input\n                                type='date'\n                                ref={ref}\n                                defaultValue={defaultValue}\n                                onChange={handleNativeInputChange}\n                                className={styles.nativeInput}\n                            />\n                        )}\n                    </React.Fragment>\n                }\n            />\n        );\n    },\n);\n","import dateFnsFormat from 'date-fns/format';\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const NATIVE_DATE_FORMAT = 'yyyy-MM-dd';\nexport const DATE_MASK = [/\\d/, /\\d/, '.', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/];\n\nexport const isCompleteDateInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const formatDate = (date: Date | number, dateFormat = DATE_FORMAT) =>\n    dateFnsFormat(date, dateFormat);\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\nexport const isValid = (inputValue?: string) =>\n    !inputValue || (isCompleteDateInput(inputValue) && dateFnsIsValid(parseDateString(inputValue)));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d).*/, '$1') // 12.12.20056 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 01.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 01..2005123123 => 01..2005\n        .replace(/^(\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 1..2005123123 => 1..2005\n        .replace(/^()\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // ..2005123123 => ..2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n","/**\n * Возвращает `true`, если поддерживается `input[type=\"date\"]`\n */\nexport function isInputDateSupported() {\n    const input = document.createElement('input');\n    const value = 'a';\n\n    input.setAttribute('type', 'date');\n    input.setAttribute('value', value);\n\n    return input.value !== value;\n}\n","/* eslint-disable no-useless-escape */\n\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const DATE_MASK = [\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    ' ',\n    '-',\n    ' ',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n];\n\nexport const isCompleteDateInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\nexport const isValid = (inputValue: string, dateFrom: string, dateTo: string) =>\n    !inputValue ||\n    (isCompleteDateInput(inputValue) &&\n        dateFnsIsValid(parseDateString(dateFrom)) &&\n        dateFnsIsValid(parseDateString(dateTo)));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/\\ $/, '') // 1 2 => 12\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)(\\d) - (\\d.*)/, '$1 - $3') // 12.12.20051 - 12.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) (\\d)- (\\d.*)/, '$1 - $3') // 12.12.2005 1- 12.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) -(\\d) (\\d.*)/, '$1 - $3') // 12.12.2005 -1 12.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d)(\\d\\d.\\d\\d.\\d\\d\\d)/, '$1 - $3') // 12.12.2005 - 112.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d)(\\d\\d.\\d.\\d\\d\\d\\d)/, '$1 - $3') // 12.12.2005 - 112.1.2001 => 12.12.2005 - 12.1.2001\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d.*)/, '$1.$2') // 1212 => 12.12\n        .replace(/^(\\d\\d.\\d\\d)(\\d.*)/, '$1.$2') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)(\\d)/, '$1 - $2') // 12.12.20056 => 12.12.2005 - 6\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d\\d)(\\d)/, '$1 - $2.$3') // 12.12.2005 - 123 => 12.12.2005 - 12.3\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d\\d).(\\d\\d)(\\d)/, '$1 - $2.$3.$4') // 12.12.2005 - 12.123 => 12.12.2005 - 12.12.3\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)- (\\d.*)/, '$1 - $2') // 12.12.2005- 12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) -(\\d.*)/, '$1 - $2') // 12.12.2005 -12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) -/, '$1') // 12.12.2005 - => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) (\\d.*)/, '$1 - $2') // 12.12.2005 12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)  {2}(\\d.*)/, '$1 - $2') // 12.12.2005  12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)-/, '$1') // 12.12.2005- => 12.12.2005\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 1.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n\nexport const parseTimestampToDate = (timestamp: number): string => {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n\n    let month: number | string = date.getMonth() + 1;\n    let day: number | string = date.getDate();\n\n    if (month < 10) {\n        month = `0${month}`;\n    }\n    if (day < 10) {\n        day = `0${day}`;\n    }\n\n    return `${day}.${month}.${year}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_oe2U2\",\"calendarContainer\":\"calendarContainer_o4ZCa\",\"calendarResponsive\":\"calendarResponsive_Uf5v8\",\"block\":\"block_yYGNM\",\"calendarIcon\":\"calendarIcon_foTRj\"};","/* eslint-disable no-useless-escape, jsx-a11y/click-events-have-key-events */\n\nimport React, {\n    ChangeEvent,\n    ElementType,\n    FocusEvent,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport { startOfMonth } from 'date-fns';\nimport dateFnsIsValid from 'date-fns/isValid';\n\nimport {\n    Calendar as DefaultCalendar,\n    CalendarMobileProps,\n    CalendarProps,\n    usePeriod,\n} from '@alfalab/core-components-calendar';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { Input, InputProps } from '@alfalab/core-components-input';\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { useDidUpdateEffect } from '@alfalab/hooks';\nimport { CalendarMIcon } from '@alfalab/icons-glyph/CalendarMIcon';\n\nimport {\n    DATE_FORMAT,\n    DATE_MASK,\n    format,\n    isCompleteDateInput,\n    isValid,\n    parseDateString,\n    parseTimestampToDate,\n} from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type ConditionalProps =\n    | {\n          /**\n           * Обработчик изменения значения\n           */\n          picker: true;\n\n          /**\n           * Обработчик закрытия календаря\n           */\n          onClose?: () => void;\n      }\n    | { picker?: false; onClose?: never };\n\nexport type DateRangeInputProps = Omit<InputProps, 'onChange'> &\n    ConditionalProps & {\n        /**\n         * Дополнительный класс\n         */\n        className?: string;\n\n        /**\n         * Дополнительный класс для инпута\n         */\n        inputClassName?: string;\n\n        /**\n         * Дополнительный класс для поповера\n         */\n        popoverClassName?: string;\n\n        /**\n         * Обработчик изменения значения\n         */\n        onChange?: (\n            payload: { dateFrom?: Date; dateTo?: Date; value: string },\n            event?: ChangeEvent<HTMLInputElement>,\n        ) => void;\n\n        /**\n         * Обработчик окончания ввода\n         */\n        onComplete?: (\n            payload: { dateFrom: Date; dateTo: Date; value: string },\n            event?: ChangeEvent<HTMLInputElement>,\n        ) => void;\n\n        /**\n         * Компонент календаря\n         */\n        Calendar?: ElementType;\n\n        /**\n         * Доп. пропсы для календаря\n         */\n        calendarProps?:\n            | (CalendarProps & Record<string, unknown>)\n            | (CalendarMobileProps & Record<string, unknown>);\n\n        /**\n         * Месяц в календаре по умолчанию (timestamp)\n         */\n        defaultMonth?: number;\n\n        /**\n         * Минимальная дата, доступная для выбора (timestamp)\n         */\n        minDate?: number;\n\n        /**\n         * Максимальная дата, доступная для выбора (timestamp)\n         */\n        maxDate?: number;\n\n        /**\n         * Список событий\n         */\n        events?: Array<Date | number>;\n\n        /**\n         * Список выходных\n         */\n        offDays?: Array<Date | number>;\n\n        /**\n         * Состояние открытия по умолчанию\n         */\n        defaultOpen?: boolean;\n\n        /**\n         * Позиционирование поповера с календарем\n         */\n        popoverPosition?: PopoverProps['position'];\n\n        /**\n         * z-index Popover\n         */\n        zIndexPopover?: PopoverProps['zIndex'];\n\n        /**\n         * Запрещает поповеру менять свою позицию.\n         * Например, если места снизу недостаточно, то он все равно будет показан снизу\n         */\n        preventFlip?: boolean;\n\n        /**\n         * Календарь будет принимать ширину инпута\n         */\n        useAnchorWidth?: boolean;\n\n        /**\n         * Растягивает компонент на ширину контейнера\n         */\n        block?: boolean;\n\n        /**\n         * Отображение компонента в мобильном или десктопном виде\n         */\n        view?: 'desktop' | 'mobile';\n    };\n\ntype GetDatesRet = { formattedValue: string; dateFrom?: Date; dateTo?: Date; dateArr: string[] };\n\nexport const DateRangeInput = React.forwardRef<HTMLInputElement, DateRangeInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            popoverClassName,\n            disabled,\n            readOnly,\n            picker,\n            defaultValue = '',\n            value: propValue,\n            onChange,\n            onComplete,\n            onClose,\n            rightAddons,\n            useAnchorWidth,\n            block,\n            popoverPosition = 'bottom-start',\n            zIndexPopover,\n            preventFlip,\n            Calendar = DefaultCalendar,\n            calendarProps = {},\n            defaultMonth,\n            minDate = calendarProps.minDate,\n            maxDate = calendarProps.maxDate,\n            offDays = calendarProps.offDays || [],\n            events = calendarProps.events || [],\n            defaultOpen = false,\n            view = 'desktop',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n        const iconRef = useRef<HTMLButtonElement>(null);\n        const calendarRef = useRef<HTMLDivElement>(null);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n        const [open, setOpen] = useState(defaultOpen);\n\n        const inputDisabled = disabled || readOnly;\n\n        const calendarResponsive = calendarProps?.responsive ?? true;\n\n        const { selectedFrom, selectedTo, updatePeriod, resetPeriod, setStart, setEnd } = usePeriod(\n            { onPeriodChange: handlePeriodChange },\n        );\n\n        useEffect(() => {\n            if (value) {\n                setCalendarPeriod(getDates(value));\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        useEffect(() => {\n            setValue((prevValue) => {\n                if (selectedFrom && selectedTo) {\n                    const from = parseTimestampToDate(selectedFrom);\n                    const to = parseTimestampToDate(selectedTo);\n\n                    return `${from} - ${to}`;\n                }\n                if (selectedFrom && prevValue.length < DATE_FORMAT.length) {\n                    return parseTimestampToDate(selectedFrom);\n                }\n\n                return prevValue;\n            });\n        }, [selectedFrom, selectedTo]);\n\n        useDidUpdateEffect(() => {\n            const newPropValue = propValue || '';\n\n            setValue((prevValue) => {\n                if (prevValue === newPropValue) {\n                    return prevValue;\n                }\n\n                const dates = getDates(newPropValue);\n\n                setCalendarPeriod(dates);\n\n                return dates.formattedValue;\n            });\n        }, [propValue]);\n\n        function getDates(val: string): GetDatesRet {\n            const formattedValue = format(val);\n\n            const dateArr = formattedValue.split('-').map((v) => v.trim());\n            const dateFrom = dateArr[0] ? parseDateString(dateArr[0]) : undefined;\n            const dateTo = dateArr[1] ? parseDateString(dateArr[1]) : undefined;\n\n            return { formattedValue, dateFrom, dateTo, dateArr };\n        }\n\n        function setCalendarPeriod({ dateFrom, dateTo }: GetDatesRet) {\n            setStart(dateFrom?.getTime());\n            setEnd(dateTo?.getTime());\n        }\n\n        function handlePeriodChange(from?: number, to?: number) {\n            if (from && !to && value.length === DATE_MASK.length) {\n                setValue(parseTimestampToDate(from));\n            } else if (\n                (!from && !to && value.length === DATE_FORMAT.length) ||\n                (from === to && value.length === DATE_MASK.length)\n            ) {\n                setValue('');\n            }\n\n            const dateFrom = from ? new Date(from) : undefined;\n            const dateTo = to ? new Date(to) : undefined;\n\n            const newValue = ([from, to].filter(Boolean) as number[])\n                .map((timestamp) => parseTimestampToDate(timestamp))\n                .join(' - ');\n\n            onChange?.({\n                dateFrom,\n                dateTo,\n                value: newValue,\n            });\n\n            if (dateFrom && dateTo) {\n                onComplete?.({\n                    dateFrom,\n                    dateTo,\n                    value: newValue,\n                });\n            }\n        }\n\n        const handleInputWrapperFocus = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                if (picker) {\n                    setOpen(true);\n                }\n\n                if (!open && event.target.tagName !== 'INPUT' && calendarRef.current) {\n                    calendarRef.current.focus();\n                }\n            }\n        };\n\n        const handleBlur = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                const target = (event.relatedTarget || document.activeElement) as HTMLElement;\n\n                if (\n                    calendarRef.current?.contains(target) === false &&\n                    inputRef.current?.contains(target) === false &&\n                    iconRef.current?.contains(target) === false\n                ) {\n                    setOpen(false);\n\n                    if (onClose) {\n                        onClose();\n                    }\n                }\n            }\n        };\n\n        // eslint-disable-next-line complexity\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const { value: newValue } = event.target;\n\n            if (newValue.length > DATE_MASK.length) return;\n\n            // Позволяем вводить только цифры, точки, дефис и пробелы\n            if (/[^\\d. -]/.test(newValue)) {\n                return;\n            }\n\n            const dots = newValue.match(/\\./g);\n            const hyphen = newValue.match(/\\-/g);\n\n            // Не даем вводить больше, чем 4 точки и 1 дефис\n            if ((dots && dots.length > 4) || (hyphen && hyphen.length > 1)) {\n                return;\n            }\n\n            const { formattedValue, dateFrom, dateTo, dateArr } = getDates(newValue);\n\n            if (!dateFrom && !dateTo) {\n                resetPeriod();\n            } else if (selectedFrom && formattedValue.length < DATE_FORMAT.length) {\n                setStart();\n            } else if (selectedFrom && selectedTo) {\n                setEnd();\n            } else if (\n                dateFrom &&\n                dateFnsIsValid(dateFrom) &&\n                dateArr[0]?.length === DATE_FORMAT.length &&\n                dateFrom.getTime() !== selectedFrom\n            ) {\n                setStart(dateFrom.getTime());\n            } else if (\n                dateTo &&\n                dateFnsIsValid(dateTo) &&\n                dateArr[1]?.length === DATE_FORMAT.length &&\n                dateTo.getTime() !== selectedTo\n            ) {\n                setEnd(dateTo.getTime());\n            }\n\n            setValue(formattedValue);\n\n            onChange?.({ dateFrom, dateTo, value: formattedValue }, event);\n\n            if (isCompleteDateInput(formattedValue)) {\n                const valid = isValid(formattedValue, dateArr[0], dateArr[1]);\n\n                if (!valid) return;\n\n                if (dateFrom && dateTo) {\n                    onComplete?.({ dateFrom, dateTo, value: formattedValue }, event);\n                }\n            }\n        };\n\n        const handleCalendarClose = () => {\n            if (view === 'mobile' && onClose) {\n                onClose();\n            }\n\n            setOpen(false);\n        };\n\n        const handleClear = () => {\n            setValue('');\n            resetPeriod();\n        };\n\n        const handleCalendarChange = (date?: number) => {\n            if (date) {\n                updatePeriod(date);\n            }\n        };\n\n        const handleCalendarWrapperMouseDown = (event: MouseEvent<HTMLDivElement>) => {\n            // Не дает инпуту терять фокус при выборе даты\n            event.preventDefault();\n        };\n\n        const handleIconButtonClick = () => {\n            if (!open) setOpen(true);\n\n            if (view === 'desktop' && inputRef.current) {\n                inputRef.current.focus();\n            }\n        };\n\n        const renderCalendar = () => {\n            const activeMonth =\n                (selectedTo && startOfMonth(selectedTo)) ||\n                (selectedFrom && startOfMonth(selectedFrom));\n\n            return (\n                // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n                <div onMouseDown={handleCalendarWrapperMouseDown}>\n                    <Calendar\n                        {...calendarProps}\n                        responsive={calendarResponsive}\n                        open={open}\n                        onClose={handleCalendarClose}\n                        ref={calendarRef}\n                        defaultMonth={activeMonth || defaultMonth}\n                        selectedFrom={selectedFrom}\n                        selectedTo={selectedTo}\n                        onChange={handleCalendarChange}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        offDays={offDays}\n                        events={events}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <div\n                className={cn(styles.component, className, {\n                    [styles.block]: block,\n                })}\n                onFocus={inputDisabled ? undefined : handleInputWrapperFocus}\n                onBlur={handleBlur}\n            >\n                <Input\n                    {...restProps}\n                    block={block}\n                    ref={mergeRefs([ref, inputRef])}\n                    value={value}\n                    onChange={handleChange}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={inputClassName}\n                    onClear={handleClear}\n                    rightAddons={\n                        <React.Fragment>\n                            {rightAddons}\n                            {picker && (\n                                <IconButton\n                                    className={styles.calendarIcon}\n                                    ref={iconRef}\n                                    onClick={inputDisabled ? undefined : handleIconButtonClick}\n                                    icon={CalendarMIcon}\n                                    size='s'\n                                />\n                            )}\n                        </React.Fragment>\n                    }\n                />\n                {picker && (\n                    <Popover\n                        open={open}\n                        useAnchorWidth={useAnchorWidth}\n                        anchorElement={inputRef.current as HTMLElement}\n                        popperClassName={cn(styles.calendarContainer, {\n                            [styles.calendarResponsive]: calendarResponsive,\n                        })}\n                        className={popoverClassName}\n                        position={popoverPosition}\n                        offset={[0, 8]}\n                        withTransition={false}\n                        preventFlip={preventFlip}\n                        zIndex={zIndexPopover}\n                    >\n                        {renderCalendar()}\n                    </Popover>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\n\nimport {\n    ConditionalProps,\n    DateRangeInput,\n    DateRangeInputProps,\n} from './components/date-range-input';\n\nexport type DateRangeInputDesktopProps = Omit<DateRangeInputProps, 'view' | 'picker' | 'onClose'> &\n    ConditionalProps;\n\nexport const DateRangeInputDesktop = forwardRef<HTMLInputElement, DateRangeInputDesktopProps>(\n    (props, ref) => <DateRangeInput {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { CalendarMobile } from '@alfalab/core-components-calendar';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\n\nimport {\n    ConditionalProps,\n    DateRangeInput,\n    DateRangeInputProps,\n} from './components/date-range-input';\n\nexport type DateRangeInputMobileProps = Omit<DateRangeInputProps, 'view' | 'picker' | 'onClose'> &\n    ConditionalProps;\n\nexport const DateRangeInputMobile = forwardRef<HTMLInputElement, DateRangeInputMobileProps>(\n    (props, ref) => <DateRangeInput Calendar={CalendarMobile} view='mobile' {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { ConditionalProps, DateRangeInputProps } from './components/date-range-input';\nimport { DateRangeInputDesktop } from './Component.desktop';\nimport { DateRangeInputMobile } from './Component.mobile';\n\nexport type DateRangeInputResponsiveProps = Omit<\n    DateRangeInputProps,\n    'view' | 'picker' | 'onClose'\n> &\n    ConditionalProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport type DateRangeInputMedia = 'desktop' | 'mobile';\n\nexport const DateRangeInputResponsive = forwardRef<HTMLInputElement, DateRangeInputResponsiveProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<DateRangeInputMedia>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <DateRangeInputDesktop {...restProps} ref={ref} />\n        ) : (\n            <DateRangeInputMobile {...restProps} ref={ref} />\n        );\n    },\n);\n","/* eslint-disable no-useless-escape */\n\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const DATE_MASK = [\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    ',',\n    ' ',\n    /\\d/,\n    /\\d/,\n    ':',\n    /\\d/,\n    /\\d/,\n];\n\nexport const DATE_WITH_TIME_LENGTH = DATE_MASK.length;\nexport const isCompleteDateInput = (input: string) => input.length === DATE_WITH_TIME_LENGTH;\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\nexport const isValidTimeFormat = (value: string): boolean => {\n    const timeArr = value.split(':');\n    const hours = timeArr[0];\n    const mins = timeArr[1];\n\n    if (hours.length !== 2 || Number(hours) > 23) {\n        return false;\n    }\n\n    if (mins.length !== 2 || Number(mins) > 59) {\n        return false;\n    }\n\n    return true;\n};\n\nexport const isValid = (inputValue: string) => {\n    const inputValueArr = inputValue.split(', ');\n    const date = inputValueArr[0];\n    const time = inputValueArr[1];\n\n    return (\n        !inputValue ||\n        (isCompleteDateInput(inputValue) &&\n            dateFnsIsValid(parseDateString(date)) &&\n            isValidTimeFormat(time))\n    );\n};\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/\\ $/, '') // 1 2 => 12\n        .replace(/\\:$/, '') // 1:2 => 12\n        .replace(/^(\\d\\d)(\\d.*)/, '$1.$2') // 1212 => 12.12\n        .replace(/^(\\d\\d.\\d\\d)(\\d.*)/, '$1.$2') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d),/, '$1') // 12.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d)(\\d)/, '$1, $2') // 12.12.20050 => 12.12.2005, 0\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d),(\\d.*)/, '$1, $2') // 12.12.2005,00:00 => 12.12.2005, 00:00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d) (\\d.*)/, '$1, $2') // 12.12.2005 00:00 => 12.12.2005, 00:00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d)(\\d.*)/, '$1, $2') // 12.12.200500:00=> 12.12.2005, 00:00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d), (\\d\\d):/, '$1, $2') // 12.12.2005, 00: => 12.12.2005, 00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d), (\\d\\d)(\\d)/, '$1, $2:$3') // 12.12.2005, 000 => 12.12.2005, 00:0\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 1.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^(\\d\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 01..2005123123 => 01..2005\n        .replace(/^(\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 1..2005123123 => 1..2005\n        .replace(/^()\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // ..2005123123 => ..2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n\nexport const parseTimestampToDate = (timestamp: number): string => {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n\n    let month: number | string = date.getMonth() + 1;\n    let day: number | string = date.getDate();\n\n    if (month < 10) {\n        month = `0${month}`;\n    }\n    if (day < 10) {\n        day = `0${day}`;\n    }\n\n    return `${day}.${month}.${year}`;\n};\n\nexport const getDateWithoutTime = (value: string): Date => {\n    const valueArr = value.split(', ');\n\n    let day;\n    let month;\n    let year;\n\n    if (valueArr[0]) {\n        const date = valueArr[0].split('.');\n\n        [day, month, year] = date;\n    }\n\n    const date = new Date();\n\n    date.setFullYear(Number(year), Number(month) - 1, Number(day));\n    date.setHours(0, 0, 0, 0);\n\n    return date;\n};\n\nexport const getFullDateTime = (value: string): Date => {\n    const valueArr = value.split(', ');\n\n    let day;\n    let month;\n    let year;\n    let hours;\n    let mins;\n\n    if (valueArr[0]) {\n        const date = valueArr[0].split('.');\n\n        [day, month, year] = date;\n    }\n    if (valueArr[1]) {\n        const time = valueArr[1].split(':');\n\n        hours = Number(time[0]);\n        mins = Number(time[1]);\n    }\n\n    const fullDate = new Date();\n\n    fullDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    fullDate.setHours(Number(hours) || 0);\n    fullDate.setMinutes(Number(mins) || 0);\n    fullDate.setSeconds(0);\n    fullDate.setMilliseconds(0);\n\n    return fullDate;\n};\n\nexport const addTimeToDate = (value: string): string => {\n    if (value.length === 10 && dateFnsIsValid(parseDateString(value))) {\n        return `${value}, 00:00`;\n    }\n\n    return value;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_lz1Zt\",\"calendarContainer\":\"calendarContainer_a28Be\",\"calendarResponsive\":\"calendarResponsive_HBfGw\",\"block\":\"block_fKJaX\",\"calendarIcon\":\"calendarIcon_tGsKy\"};","/* eslint-disable no-useless-escape, jsx-a11y/click-events-have-key-events */\n\nimport React, {\n    ChangeEvent,\n    ElementType,\n    FocusEvent,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport {\n    Calendar as DefaultCalendar,\n    CalendarMobileProps,\n    CalendarProps,\n    dateInLimits,\n} from '@alfalab/core-components-calendar';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { Input, InputProps } from '@alfalab/core-components-input';\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { useDidUpdateEffect } from '@alfalab/hooks';\nimport { CalendarMIcon } from '@alfalab/icons-glyph/CalendarMIcon';\n\nimport {\n    addTimeToDate,\n    DATE_WITH_TIME_LENGTH,\n    format,\n    getDateWithoutTime,\n    getFullDateTime,\n    isCompleteDateInput,\n    isValid,\n    parseTimestampToDate,\n} from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type DateTimeInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popoverClassName?: string;\n\n    /**\n     * Обработчик изменения значения\n     */\n    picker?: boolean;\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Компонент календаря\n     */\n    Calendar?: ElementType;\n\n    /**\n     * Доп. пропсы для календаря\n     */\n    calendarProps?:\n        | (CalendarProps & Record<string, unknown>)\n        | (CalendarMobileProps & Record<string, unknown>);\n\n    /**\n     * Месяц в календаре по умолчанию (timestamp)\n     */\n    defaultMonth?: number;\n\n    /**\n     * Минимальная дата, доступная для выбора (timestamp)\n     */\n    minDate?: number;\n\n    /**\n     * Максимальная дата, доступная для выбора (timestamp)\n     */\n    maxDate?: number;\n\n    /**\n     * Список событий\n     */\n    events?: Array<Date | number>;\n\n    /**\n     * Список выходных\n     */\n    offDays?: Array<Date | number>;\n\n    /**\n     * Состояние открытия по умолчанию\n     */\n    defaultOpen?: boolean;\n\n    /**\n     * Позиционирование поповера с календарем\n     */\n    popoverPosition?: PopoverProps['position'];\n\n    /**\n     * z-index Popover\n     */\n    zIndexPopover?: PopoverProps['zIndex'];\n\n    /**\n     * Запрещает поповеру менять свою позицию.\n     * Например, если места снизу недостаточно,то он все равно будет показан снизу\n     */\n    preventFlip?: boolean;\n\n    /**\n     * Календарь будет принимать ширину инпута\n     */\n    useAnchorWidth?: boolean;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Отображение компонента в мобильном или десктопном виде\n     */\n    view?: 'desktop' | 'mobile';\n};\n\nexport const DateTimeInput = React.forwardRef<HTMLInputElement, DateTimeInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            popoverClassName,\n            disabled,\n            readOnly,\n            picker,\n            defaultValue = '',\n            value: propValue,\n            onChange,\n            onComplete,\n            rightAddons,\n            useAnchorWidth,\n            block,\n            popoverPosition = 'bottom-start',\n            zIndexPopover,\n            preventFlip,\n            Calendar = DefaultCalendar,\n            calendarProps = {},\n            defaultMonth,\n            minDate = calendarProps.minDate,\n            maxDate = calendarProps.maxDate,\n            offDays = calendarProps.offDays || [],\n            events = calendarProps.events || [],\n            defaultOpen = false,\n            error,\n            view = 'desktop',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n        const calendarRef = useRef<HTMLDivElement>(null);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n        const [open, setOpen] = useState(false);\n\n        const calendarValue = value ? getDateWithoutTime(value).getTime() : undefined;\n\n        const inputDisabled = disabled || readOnly;\n\n        const calendarResponsive = calendarProps?.responsive ?? true;\n\n        useEffect(() => {\n            setOpen(defaultOpen);\n        }, [defaultOpen]);\n\n        useDidUpdateEffect(() => {\n            const newPropValue = propValue || '';\n\n            setValue((prevValue) => (prevValue === propValue ? prevValue : newPropValue));\n        }, [propValue]);\n\n        const checkInputValueIsValid = (newInputValue?: string) => {\n            if (!newInputValue || error) return false;\n\n            const dateValue = getDateWithoutTime(newInputValue).getTime();\n\n            return (\n                dateValue &&\n                dateInLimits(dateValue, minDate, maxDate) &&\n                !offDays.includes(dateValue)\n            );\n        };\n\n        const setTimeToDate = () => {\n            setValue((prevValue) => {\n                const dateWithTime = addTimeToDate(prevValue);\n\n                if (dateWithTime !== prevValue && dateWithTime.length === DATE_WITH_TIME_LENGTH) {\n                    onComplete?.(null, {\n                        date: getFullDateTime(dateWithTime),\n                        value: dateWithTime,\n                    });\n                }\n\n                return dateWithTime;\n            });\n        };\n\n        const handleInputWrapperFocus = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                if (picker) {\n                    setOpen(true);\n                }\n                if (!open && event.target.tagName !== 'INPUT' && calendarRef.current) {\n                    calendarRef.current.focus();\n                }\n            }\n        };\n\n        const handleBlur = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                const target = (event.relatedTarget || document.activeElement) as HTMLElement;\n\n                if (calendarRef.current && calendarRef.current.contains(target) === false) {\n                    setOpen(false);\n                    setTimeToDate();\n                }\n            }\n        };\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const { value: newValue } = event.target;\n\n            if (newValue.length > DATE_WITH_TIME_LENGTH) return;\n\n            // Позволяем вводить только цифры, точки, запятую, двоеточие и пробел\n            if (/[^\\d., :]/.test(newValue)) {\n                return;\n            }\n\n            const dots = newValue.match(/\\./g);\n            const colon = newValue.match(/:/g);\n            const comma = newValue.match(/,/g);\n\n            // Не даем вводить больше, чем 2 точки, 1 двоеточие и 1 запятую\n            if (\n                (dots && dots.length > 2) ||\n                (colon && colon.length > 1) ||\n                (comma && comma.length > 1)\n            ) {\n                return;\n            }\n\n            const formattedValue = format(newValue);\n            const date = getFullDateTime(formattedValue);\n\n            setValue(formattedValue);\n\n            if (onChange) onChange(event, { date, value: formattedValue });\n\n            if (isCompleteDateInput(formattedValue)) {\n                const valid = isValid(formattedValue);\n\n                if (!valid) return;\n\n                if (onComplete) {\n                    onComplete(event, { date, value: formattedValue });\n                }\n            }\n        };\n\n        const handleMobileCalendarClose = () => {\n            setOpen(false);\n            setTimeToDate();\n        };\n\n        const handleClear = () => {\n            setValue('');\n        };\n\n        const handleCalendarChange = (date?: number) => {\n            if (date) {\n                const newValue = parseTimestampToDate(date);\n\n                setValue(newValue);\n                onChange?.(null, { date: getFullDateTime(newValue), value: newValue });\n            }\n        };\n\n        const handleCalendarWrapperMouseDown = (event: MouseEvent<HTMLDivElement>) => {\n            // Не дает инпуту терять фокус при выборе даты\n            event.preventDefault();\n        };\n\n        const handleIconButtonClick = () => {\n            if (!open) setOpen(true);\n\n            if (view === 'desktop' && inputRef.current) {\n                inputRef.current.focus();\n            }\n        };\n\n        const renderCalendar = () => (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div onMouseDown={handleCalendarWrapperMouseDown}>\n                <Calendar\n                    {...calendarProps}\n                    responsive={calendarResponsive}\n                    open={open}\n                    onClose={handleMobileCalendarClose}\n                    ref={calendarRef}\n                    defaultMonth={defaultMonth}\n                    value={checkInputValueIsValid(value) ? calendarValue : undefined}\n                    onChange={handleCalendarChange}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    offDays={offDays}\n                    events={events}\n                />\n            </div>\n        );\n\n        return (\n            <div\n                className={cn(styles.component, className, {\n                    [styles.block]: block,\n                })}\n                onFocus={inputDisabled ? undefined : handleInputWrapperFocus}\n                onBlur={handleBlur}\n            >\n                <Input\n                    {...restProps}\n                    block={block}\n                    ref={mergeRefs([ref, inputRef])}\n                    value={value}\n                    onChange={handleChange}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={inputClassName}\n                    onClear={handleClear}\n                    error={error}\n                    rightAddons={\n                        <React.Fragment>\n                            {rightAddons}\n                            {picker && (\n                                <IconButton\n                                    className={styles.calendarIcon}\n                                    onClick={inputDisabled ? undefined : handleIconButtonClick}\n                                    icon={CalendarMIcon}\n                                    size='s'\n                                />\n                            )}\n                        </React.Fragment>\n                    }\n                />\n                {picker && (\n                    <Popover\n                        open={open}\n                        useAnchorWidth={useAnchorWidth}\n                        anchorElement={inputRef.current as HTMLElement}\n                        popperClassName={cn(styles.calendarContainer, {\n                            [styles.calendarResponsive]: calendarResponsive,\n                        })}\n                        className={popoverClassName}\n                        position={popoverPosition}\n                        offset={[0, 8]}\n                        withTransition={false}\n                        preventFlip={preventFlip}\n                        zIndex={zIndexPopover}\n                    >\n                        {renderCalendar()}\n                    </Popover>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\n\nimport { DateTimeInput, DateTimeInputProps } from './components/date-time-input/Component';\n\nexport type DateTimeInputDesktopProps = Omit<DateTimeInputProps, 'view'>;\n\nexport const DateTimeInputDesktop = forwardRef<HTMLInputElement, DateTimeInputDesktopProps>(\n    (props, ref) => <DateTimeInput {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { CalendarMobile } from '@alfalab/core-components-calendar';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\n\nimport { DateTimeInput, DateTimeInputProps } from './components/date-time-input/Component';\n\nexport type DateTimeInputMobileProps = Omit<DateTimeInputProps, 'view'>;\n\nexport const DateTimeInputMobile = forwardRef<HTMLInputElement, DateTimeInputMobileProps>(\n    (props, ref) => <DateTimeInput Calendar={CalendarMobile} view='mobile' {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { DateTimeInputProps } from './components/date-time-input/Component';\nimport { DateTimeInputDesktop } from './Component.desktop';\nimport { DateTimeInputMobile } from './Component.mobile';\n\nexport type DateTimeInputResponsiveProps = Omit<DateTimeInputProps, 'view'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport type DateTimeInputMedia = 'desktop' | 'mobile';\n\nexport const DateTimeInputResponsive = forwardRef<HTMLInputElement, DateTimeInputResponsiveProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<DateTimeInputMedia>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <DateTimeInputDesktop {...restProps} ref={ref} />\n        ) : (\n            <DateTimeInputMobile {...restProps} ref={ref} />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PlKe8\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type DividerProps = {\n    /**\n     * Кастомный класс\n     */\n    className?: string;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n};\n\nexport const Divider: React.FC<DividerProps> = ({ className, dataTestId }) => (\n    <hr className={cn(styles.component, className)} data-test-id={dataTestId} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_vLydz\",\"rightPlacement\":\"rightPlacement_d4tZx\",\"leftPlacement\":\"leftPlacement_Wd_VZ\",\"content\":\"content_RL5Ks\",\"simplebar\":\"simplebar_LXBkN\",\"enterRight\":\"enterRight_vT83w\",\"enterLeft\":\"enterLeft_VN0v7\",\"contentEnter\":\"contentEnter_oL67X\",\"backdropEnter\":\"backdropEnter_m_rL0\",\"enterActive\":\"enterActive_PZUWn\",\"backdropEnterActive\":\"backdropEnterActive_ypABt\",\"backdropEnterDone\":\"backdropEnterDone_xMDIF\",\"contentEnterActive\":\"contentEnterActive_d_n28\",\"exit\":\"exit_POUYD\",\"backdropExit\":\"backdropExit_FgNUz\",\"contentExit\":\"contentExit_CxuT5\",\"exitActiveRight\":\"exitActiveRight_vNDIZ\",\"exitActiveLeft\":\"exitActiveLeft_BfGuc\",\"backdropExitActive\":\"backdropExitActive_Rj6Te\",\"backdropExitDone\":\"backdropExitDone_Aitdr\",\"contentExitActive\":\"contentExitActive_VwIT3\"};","import React, { forwardRef, useMemo } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport cn from 'classnames';\n\nimport { BaseModal, BaseModalContext, BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { Scrollbar, ScrollbarProps } from '@alfalab/core-components-scrollbar';\n\nimport styles from './index.module.css';\n\nexport const ANIMATION_DURATION = 600;\n\nexport type DrawerProps = Omit<BaseModalProps, 'container'> & {\n    /**\n     * Край экрана, с которого может появиться Drawer.\n     * @default \"right\"\n     */\n    placement?: 'left' | 'right';\n\n    /**\n     * Нужно ли использовать нативный скроллбар\n     * @default true\n     */\n    nativeScrollbar?: boolean;\n\n    /**\n     * Пропсы кастомного скроллбара.\n     */\n    scrollbarProps?: Partial<Omit<ScrollbarProps, 'children'>>;\n\n    /**\n     * Пропсы для анимации контента (CSSTransition)\n     */\n    contentTransitionProps?: Partial<TransitionProps>;\n};\n\nexport const DrawerContext = BaseModalContext;\n\nconst backdropProps = {\n    classNames: {\n        enter: styles.backdropEnter,\n        appear: styles.backdropEnter,\n        enterActive: styles.backdropEnterActive,\n        appearActive: styles.backdropEnterActive,\n        enterDone: styles.backdropEnterDone,\n        appearDone: styles.backdropEnterDone,\n        exit: styles.backdropExit,\n        exitActive: styles.backdropExitActive,\n        exitDone: styles.backdropExitDone,\n    },\n    timeout: ANIMATION_DURATION,\n};\n\nconst contentProps = {\n    classNames: {\n        enter: styles.contentEnter,\n        appear: styles.contentEnter,\n        enterActive: styles.contentEnterActive,\n        appearActive: styles.contentEnterActive,\n        exit: styles.contentExit,\n        exitActive: styles.contentExitActive,\n    },\n    timeout: ANIMATION_DURATION,\n};\n\nexport const Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n    (\n        {\n            open,\n            className,\n            children,\n            contentTransitionProps,\n            nativeScrollbar = true,\n            placement = 'right',\n            scrollbarProps,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const isRightPlacement = placement === 'right';\n        const isLeftPlacement = placement === 'left';\n\n        const transitionProps = useMemo(() => {\n            const enterClassName = cn({\n                [styles.enterRight]: isRightPlacement,\n                [styles.enterLeft]: isLeftPlacement,\n            });\n\n            const exitClassName = cn({\n                [styles.exitActiveRight]: isRightPlacement,\n                [styles.exitActiveLeft]: isLeftPlacement,\n            });\n\n            return {\n                classNames: {\n                    enter: enterClassName,\n                    appear: enterClassName,\n                    enterActive: styles.enterActive,\n                    appearActive: styles.enterActive,\n                    exit: styles.exit,\n                    exitActive: exitClassName,\n                },\n                timeout: ANIMATION_DURATION,\n                ...restProps.transitionProps,\n            };\n        }, [restProps.transitionProps, isLeftPlacement, isRightPlacement]);\n\n        const renderWithNativeScrollbar = () => <div className={styles.content}>{children}</div>;\n\n        const renderWithCustomScrollbar = () => (\n            <Scrollbar\n                {...scrollbarProps}\n                className={cn(styles.simplebar, scrollbarProps?.className)}\n            >\n                {children}\n            </Scrollbar>\n        );\n\n        return (\n            <BaseModal\n                {...restProps}\n                scrollHandler='content'\n                ref={ref}\n                open={open}\n                className={cn(styles.component, className, {\n                    [styles.rightPlacement]: isRightPlacement,\n                    [styles.leftPlacement]: isLeftPlacement,\n                })}\n                transitionProps={transitionProps}\n                backdropProps={{ ...backdropProps, ...restProps.backdropProps }}\n            >\n                <CSSTransition\n                    {...{ ...contentProps, ...contentTransitionProps }}\n                    appear={true}\n                    in={open}\n                >\n                    {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n                </CSSTransition>\n            </BaseModal>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"overlay_SxncF\",\"visible\":\"visible_P3PYx\",\"text\":\"text_pNpuV\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { ContainerMIcon } from '@alfalab/icons-glyph/ContainerMIcon';\n\nimport styles from './index.module.css';\n\nexport type OverlayProps = {\n    /**\n     * Подпись для заглушки\n     */\n    text?: string;\n\n    /**\n     * Управление видимостью\n     */\n    visible?: boolean;\n};\n\nexport const Overlay: FC<OverlayProps> = ({ text = 'Перетащите файлы', visible = false }) => (\n    <div\n        className={cn(styles.overlay, {\n            [styles.visible]: visible,\n        })}\n    >\n        <ContainerMIcon />\n        <span className={styles.text}>{text}</span>\n    </div>\n);\n","export const preventAndStopEvent = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_gxayQ\",\"disabled\":\"disabled_H_DRi\",\"block\":\"block_OXdQR\",\"dragOver\":\"dragOver_HzDtF\",\"error\":\"error_Ky_Dd\"};","import React, { ComponentType, FC, ReactNode, useCallback, useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Overlay as DefaultOverlay, OverlayProps } from './components';\nimport { preventAndStopEvent } from './utils';\n\nimport styles from './index.module.css';\n\nexport type DropzoneProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Подпись для заглушки\n     */\n    text?: string;\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Состояние ошибки\n     */\n    error?: boolean;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * @deprecated(используйте Overlay)\n     * Позволяет вручную управлять видимостью заглушки\n     */\n    overlayVisible?: boolean;\n\n    /**\n     * Компонент оверлея\n     */\n    Overlay?: ComponentType<OverlayProps>;\n\n    /**\n     * Обработчик события 'drop'\n     */\n    onDrop?: (files: FileList) => void;\n\n    /**\n     * Обработчик события 'dragover'\n     */\n    onDragOver?: (event: React.DragEvent<HTMLElement>) => void;\n\n    /**\n     * Обработчик события 'dragleave'\n     */\n    onDragLeave?: (event: React.DragEvent<HTMLElement>) => void;\n\n    /**\n     * Обработчик события 'dragenter'\n     */\n    onDragEnter?: (event: React.DragEvent<HTMLElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Dropzone: FC<DropzoneProps> = ({\n    className,\n    children,\n    text = 'Перетащите файлы',\n    error = false,\n    overlayVisible,\n    Overlay = DefaultOverlay,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n    block = false,\n    disabled,\n    dataTestId,\n}) => {\n    const [dragOver, setDragOver] = useState(false);\n\n    /**\n     * При ховере дочерних элементов срабатывает dragLeave, из-за чего пропадает оверлей\n     * https://stackoverflow.com/a/21002544\n     */\n    const dragCounter = useRef(0);\n\n    const handleDragOver = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            if (onDragOver) {\n                onDragOver(event);\n            }\n        },\n        [onDragOver, disabled],\n    );\n\n    const handleDragEnter = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            dragCounter.current += 1;\n\n            setDragOver(true);\n\n            if (onDragEnter) {\n                onDragEnter(event);\n            }\n        },\n        [disabled, onDragEnter],\n    );\n\n    const handleDragLeave = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            dragCounter.current -= 1;\n\n            if (dragCounter.current > 0) return;\n\n            setDragOver(false);\n\n            if (onDragLeave) {\n                onDragLeave(event);\n            }\n        },\n        [disabled, onDragLeave],\n    );\n\n    const handleDrop = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            setDragOver(false);\n            dragCounter.current = 0;\n\n            if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n                if (onDrop) {\n                    onDrop(event.dataTransfer.files);\n                }\n\n                event.dataTransfer.clearData();\n            }\n        },\n        [disabled, onDrop],\n    );\n\n    return (\n        <div\n            className={cn(styles.component, className, {\n                [styles.dragOver]: dragOver,\n                [styles.error]: error,\n                [styles.block]: block,\n                [styles.disabled]: disabled,\n            })}\n            data-test-id={dataTestId}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n        >\n            {children}\n            {Overlay && <Overlay text={text} visible={Boolean(dragOver || overlayVisible)} />}\n        </div>\n    );\n};\n","import { DocumentDocMIcon } from '@alfalab/icons-glyph/DocumentDocMIcon';\nimport { DocumentImageMIcon } from '@alfalab/icons-glyph/DocumentImageMIcon';\nimport { DocumentPdfMIcon } from '@alfalab/icons-glyph/DocumentPdfMIcon';\nimport { DocumentTxtMIcon } from '@alfalab/icons-glyph/DocumentTxtMIcon';\nimport { DocumentUnknownMIcon } from '@alfalab/icons-glyph/DocumentUnknownMIcon';\n\nexport function humanFileSize(size: string | number) {\n    const units = ['B', 'KB', 'MB', 'GB'];\n\n    let humanSize: string | number = Number(size);\n    let factor = 0;\n\n    while (humanSize >= 1024 && factor < units.length - 1) {\n        humanSize /= 1024;\n        factor += 1;\n    }\n\n    humanSize = humanSize.toFixed(2);\n\n    return `${Number(humanSize)} ${units[factor]}`;\n}\n\nexport const getExtension = (filename: string) => filename.toLowerCase().split('.').pop();\n\nexport function fileIcon(filename: string) {\n    const extension = getExtension(filename);\n\n    switch (extension) {\n        case 'png':\n        case 'jpg':\n        case 'jpeg':\n        case 'svg':\n        case 'tif':\n        case 'tiff':\n            return DocumentImageMIcon;\n        case 'doc':\n        case 'docx':\n            return DocumentDocMIcon;\n        case 'pdf':\n            return DocumentPdfMIcon;\n        case 'txt':\n            return DocumentTxtMIcon;\n        default:\n            return DocumentUnknownMIcon;\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_x47Zs\",\"infoSection\":\"infoSection_vdwqI\",\"info\":\"info_QU4jX\",\"icon\":\"icon_k4SCL\",\"errorIcon\":\"errorIcon_mkXou\",\"successIcon\":\"successIcon_GqLC2\",\"name\":\"name_JBDKh\",\"meta\":\"meta_DZ6GZ\",\"size\":\"size_Ii2Ll\",\"delete\":\"delete_ef9Y3\",\"download\":\"download__UqIP\",\"errorWrapper\":\"errorWrapper_Mq9f8\",\"restore\":\"restore_MW4yX\",\"spinnerWrapper\":\"spinnerWrapper_vDeny\",\"spinner\":\"spinner_gYDql\",\"uploadPercent\":\"uploadPercent_F867z\"};","import React, { ElementType, MouseEvent, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { Link } from '@alfalab/core-components-link';\nimport { Spinner } from '@alfalab/core-components-spinner';\nimport { AlertCircleMIcon } from '@alfalab/icons-glyph/AlertCircleMIcon';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { ClockMIcon } from '@alfalab/icons-glyph/ClockMIcon';\nimport { CrossSIcon } from '@alfalab/icons-glyph/CrossSIcon';\nimport { PointerDownSIcon } from '@alfalab/icons-glyph/PointerDownSIcon';\n\nimport { fileIcon, humanFileSize } from './utils';\n\nimport styles from './index.module.css';\n\nexport type FileStatuses = 'ERROR' | 'SUCCESS' | 'LOADING' | 'UPLOADING';\n\nexport type FileUploadItemProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор элемента\n     */\n    id?: string;\n\n    /**\n     * Имя файла с расширением\n     */\n    name?: string;\n\n    /**\n     * Размер файла\n     */\n    size?: string | number;\n\n    /**\n     * Дата загрузки файла\n     */\n    uploadDate?: string;\n\n    /**\n     * Ссылка на файл. Если прокидывается этот параметр, то появляется кнопка скачивания\n     */\n    downloadLink?: string;\n\n    /**\n     * Рекомендует браузеру скачивать контент по ссылке.\n     * В проп может быть передано рекомендуемое название скачиваемого файла.\n     */\n    download?: string | true;\n\n    /**\n     * Отображение кнопки удаления\n     */\n    showDelete?: boolean;\n\n    /**\n     * Отображение кнопки восстановления\n     */\n    showRestore?: boolean;\n\n    /**\n     * Процент загрузки файла\n     */\n    uploadPercent?: number;\n\n    /**\n     * Статус загрузки файла\n     */\n    uploadStatus?: FileStatuses;\n\n    /**\n     * Сообщение об ошибке\n     */\n    error?: ReactNode;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Компонент кастомной иконки\n     */\n    icon?: ElementType<{ className?: string }>;\n\n    /**\n     * Обработчик загрузки файла\n     */\n    onDownload?: (id: string) => void;\n\n    /**\n     * Обработчик удаления файла\n     */\n    onDelete?: (id: string) => void;\n\n    /**\n     * Обработчик восстановления файла\n     */\n    onRestore?: (id: string) => void;\n\n    /**\n     * Управление активностью кнопок\n     */\n    disableButtons?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const FileUploadItem: React.FC<FileUploadItemProps> = ({\n    className,\n    children,\n    id = '0',\n    name = '',\n    size,\n    icon: Icon = fileIcon(name),\n    uploadDate,\n    downloadLink,\n    download,\n    uploadStatus,\n    uploadPercent = 0,\n    error,\n    showDelete,\n    showRestore,\n    onDelete,\n    onDownload,\n    onRestore,\n    disableButtons,\n    dataTestId,\n}) => {\n    const handleDownload = (event: MouseEvent<HTMLElement>) => {\n        if (onDownload) {\n            event.preventDefault();\n            onDownload(id);\n        }\n    };\n\n    const handleDelete = () => {\n        if (onDelete) onDelete(id);\n    };\n\n    const handleRestore = () => {\n        if (onRestore) onRestore(id);\n    };\n\n    const renderIcon = () => {\n        if (showRestore) {\n            return <ClockMIcon className={styles.restoreIcon} />;\n        }\n\n        switch (uploadStatus) {\n            case 'ERROR':\n                return <AlertCircleMIcon className={styles.errorIcon} />;\n            case 'SUCCESS':\n                return <CheckmarkCircleMIcon className={styles.successIcon} />;\n            case 'LOADING':\n            case 'UPLOADING':\n                return (\n                    <div className={styles.spinnerWrapper}>\n                        <Spinner visible={true} className={styles.spinner} />\n                    </div>\n                );\n            default: {\n                return <Icon className={styles.icon} />;\n            }\n        }\n    };\n\n    const renderInfoSection = () => {\n        const shouldShownError = uploadStatus === 'ERROR' || !!error;\n        const errorContent =\n            uploadStatus === 'ERROR' && !error ? 'Не удалось загрузить файл' : error;\n\n        return (\n            <div className={styles.infoSection}>\n                <div className={styles.name}>{name}</div>\n\n                {shouldShownError && (\n                    <div className={styles.errorWrapper} role='alert'>\n                        {errorContent}\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    const showMeta = !showRestore && (!uploadStatus || uploadStatus === 'SUCCESS');\n    const showDownload = Boolean(downloadLink) && !showRestore;\n\n    return (\n        <div\n            className={cn(\n                className,\n                styles.component,\n                uploadStatus && styles[uploadStatus.toLocaleLowerCase()],\n            )}\n            data-test-id={dataTestId}\n        >\n            <div className={styles.info}>\n                {renderIcon()}\n\n                {renderInfoSection()}\n\n                {children}\n\n                {uploadStatus === 'UPLOADING' && (\n                    <span className={styles.uploadPercent}>{`${Math.round(uploadPercent)}%`}</span>\n                )}\n\n                {showMeta && (\n                    <div className={styles.meta}>\n                        {uploadDate && <span key={uploadDate}>{uploadDate}</span>}\n\n                        {size && (\n                            <span key={size} className={styles.size}>\n                                {humanFileSize(size)}\n                            </span>\n                        )}\n                    </div>\n                )}\n            </div>\n\n            {showRestore && (\n                <Link pseudo={true} className={styles.restore} onClick={handleRestore}>\n                    Восстановить\n                </Link>\n            )}\n\n            {showDownload && (\n                <IconButton\n                    size='xxs'\n                    icon={PointerDownSIcon}\n                    className={styles.download}\n                    aria-label='скачать'\n                    href={downloadLink}\n                    onClick={handleDownload}\n                    disabled={disableButtons}\n                    download={download}\n                />\n            )}\n\n            {showDelete && !showRestore && (\n                <IconButton\n                    size='xxs'\n                    icon={CrossSIcon}\n                    onClick={handleDelete}\n                    disabled={disableButtons}\n                    className={styles.delete}\n                    aria-label='удалить'\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_nwwCJ\",\"disabled\":\"disabled_K17X4\",\"rounded\":\"rounded_HSmCF\",\"xxs\":\"xxs_K6K4R\",\"xs\":\"xs_Ie3fh\",\"s\":\"s_naLbG\",\"rectangular\":\"rectangular_CeHKB\",\"checked\":\"checked_G41QN\",\"focused\":\"focused_G7KCb\",\"chevron\":\"chevron_Tq4Dt\",\"valueButton\":\"valueButton_ykNQh\",\"outlined\":\"outlined_byhLW\",\"filled\":\"filled_XFSui\",\"open\":\"open_OF22J\",\"close\":\"close_neWQJ\",\"clear\":\"clear_j2OLH\",\"iconWrapper\":\"iconWrapper_z8Wza\"};","import React, { forwardRef, KeyboardEvent, MouseEvent, ReactNode, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { ChevronDownCompactSIcon } from '@alfalab/icons-glyph/ChevronDownCompactSIcon';\nimport { ChevronDownMIcon } from '@alfalab/icons-glyph/ChevronDownMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossCircleSIcon } from '@alfalab/icons-glyph/CrossCircleSIcon';\n\nimport styles from './index.module.css';\n\nexport type FilterTagProps = {\n    /**\n     * Состояние выбора\n     */\n    checked?: boolean;\n\n    /**\n     * Состояние открытия\n     */\n    open?: boolean;\n\n    /**\n     * Состояние блокировки\n     */\n    disabled?: boolean;\n\n    /**\n     * Обработчик клика\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик очистки\n     */\n    onClear?: () => void;\n\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Показывать крестик для очистки выбора\n     */\n    showClear?: boolean;\n\n    /**\n     * @deprecated данный проп больше не используется, временно оставлен для обратной совместимости\n     * Используйте props shape и view\n     * Вариант тега\n     */\n    variant?: 'default' | 'alt';\n\n    /**\n     * Форма тега\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Стиль тега\n     */\n    view?: 'outlined' | 'filled';\n};\n\nconst isKeyBoardEvent = (\n    event: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>,\n): event is KeyboardEvent<HTMLDivElement> =>\n    (event as KeyboardEvent<HTMLDivElement>).key !== undefined;\n\nexport const FilterTag = forwardRef<HTMLDivElement, FilterTagProps>(\n    (\n        {\n            children,\n            checked,\n            disabled,\n            open,\n            onClick,\n            size = 's',\n            variant = 'default',\n            shape,\n            view = 'outlined',\n            onClear = () => null,\n            showClear = true,\n            className,\n            dataTestId,\n        },\n        ref,\n    ) => {\n        const valueRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(valueRef, 'keyboard');\n\n        const handleClear = (event: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>) => {\n            event.stopPropagation();\n\n            if (isKeyBoardEvent(event)) {\n                const clickSimilarKeys = ['Enter'].includes(event.key);\n\n                if (clickSimilarKeys) onClear();\n\n                return;\n            }\n\n            onClear();\n        };\n\n        const variantClassName = variant === 'default' ? 'rounded' : 'rectangular';\n\n        const shapeClassName = shape || variantClassName;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n            <div\n                className={cn(className, [styles.component], styles[shapeClassName], styles[size], {\n                    [styles.checked]: checked,\n                    [styles.disabled]: disabled,\n                    [styles.focused]: focused,\n                    [styles.open]: open,\n                })}\n                ref={ref}\n                data-test-id={dataTestId}\n                onClick={disabled ? undefined : onClick}\n            >\n                <button\n                    type='button'\n                    ref={valueRef}\n                    disabled={disabled}\n                    className={cn(\n                        styles.valueButton,\n                        styles[size],\n                        styles[shapeClassName],\n                        styles[view],\n                        {\n                            [styles.checked]: checked,\n                            [styles.open]: open,\n                            [styles.close]: !showClear,\n                        },\n                    )}\n                >\n                    <span>{children}</span>\n                    <span className={styles.chevron}>\n                        {size === 'xxs' ? <ChevronDownCompactSIcon /> : <ChevronDownMIcon />}\n                    </span>\n                </button>\n\n                {checked && !disabled && showClear && (\n                    <div\n                        role='button'\n                        className={cn(styles.clear, styles[size], styles[shapeClassName])}\n                        onClick={handleClear}\n                        onKeyDown={handleClear}\n                        tabIndex={0}\n                    >\n                        <span className={styles.iconWrapper}>\n                            {size === 'xxs' ? <CrossCircleSIcon /> : <CrossCircleMIcon />}\n                        </span>\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_EM9cT\",\"inner\":\"inner_E7iMM\",\"inputWrapper\":\"inputWrapper_IBRUI\",\"input\":\"input_GcfQh\",\"label\":\"label_xqS9Z\",\"labelInner\":\"labelInner_DUCDa\",\"addons\":\"addons_tGRE0\",\"leftAddons\":\"leftAddons_uw5qh\",\"rightAddons\":\"rightAddons_CSLUl\",\"sub\":\"sub_Ob3XI\",\"above\":\"above_rsVLw\",\"block\":\"block_nRyrY\",\"s\":\"s_A9Jpb\",\"hasInnerLabel\":\"hasInnerLabel_fFBER\",\"m\":\"m_sDBjU\",\"l\":\"l_vtSzP\",\"xl\":\"xl_Z9cg7\",\"hasLeftAddons\":\"hasLeftAddons_bskjJ\",\"hasRightAddons\":\"hasRightAddons_o6Yrn\",\"disabled\":\"disabled_JaCnY\",\"focused\":\"focused_Tsru4\",\"hasError\":\"hasError_HezW1\",\"filled\":\"filled_q436G\",\"hiddenLabel\":\"hiddenLabel_b4g1J\"};","import React, { HTMLAttributes, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type FormControlProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Cостояние только для чтения\n     */\n    readOnly?: boolean;\n\n    /**\n     * Заполненное состояние\n     */\n    filled?: boolean;\n\n    /**\n     * Выбранное (фокус) состояние\n     */\n    focused?: boolean;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Текст подсказки\n     */\n    hint?: ReactNode;\n\n    /**\n     * Лейбл компонента\n     */\n    label?: ReactNode;\n\n    /**\n     * Вид лейбла внутри / снаружи\n     */\n    labelView?: 'inner' | 'outer';\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Слот под полем\n     */\n    bottomAddons?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    fieldClassName?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    inputWrapperClassName?: string;\n\n    /**\n     * Дополнительный класс для лейбла\n     */\n    labelClassName?: string;\n\n    /**\n     * Дополнительный класс для аддонов\n     */\n    addonsClassName?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Компонент поля (инпут, textarea и пр.)\n     */\n    children?: ReactNode;\n};\n\nexport const FormControl = React.forwardRef<HTMLDivElement, FormControlProps>(\n    (\n        {\n            block = false,\n            size = 's',\n            colors = 'default',\n            className,\n            fieldClassName,\n            inputWrapperClassName,\n            labelClassName,\n            addonsClassName,\n            disabled,\n            readOnly,\n            focused,\n            filled,\n            error,\n            hint,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            rightAddons,\n            bottomAddons,\n            children,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const errorMessage = typeof error === 'boolean' ? '' : error;\n\n        return (\n            <div\n                data-test-id={dataTestId}\n                className={cn(\n                    styles.component,\n                    colorStyles[colors].component,\n                    className,\n                    styles[size],\n                    {\n                        [styles.block]: block,\n                        [styles.hasLeftAddons]: leftAddons,\n                        [styles.hasRightAddons]: rightAddons || error,\n                    },\n                )}\n            >\n                {label && labelView === 'outer' && (\n                    <span className={cn(styles.above, colorStyles[colors].label)}>{label}</span>\n                )}\n                <div\n                    {...restProps}\n                    className={cn(fieldClassName, styles.inner, colorStyles[colors].inner, {\n                        [styles.disabled]: disabled || readOnly,\n                        [colorStyles[colors].disabled]: disabled || readOnly,\n                        [styles.filled]: filled,\n                        [colorStyles[colors].filled]: filled,\n                        [styles.hasInnerLabel]: label && labelView === 'inner',\n                        [styles.focused]: focused,\n                        [colorStyles[colors].focused]: focused,\n                        [styles.hasError]: error,\n                        [colorStyles[colors].hasError]: error,\n                    })}\n                    ref={ref}\n                >\n                    {leftAddons && (\n                        <div className={cn(styles.addons, styles.leftAddons, addonsClassName)}>\n                            {leftAddons}\n                        </div>\n                    )}\n\n                    <div className={cn(styles.inputWrapper, inputWrapperClassName)}>\n                        {label && labelView === 'inner' && (\n                            <React.Fragment>\n                                <span className={styles.hiddenLabel} aria-hidden={true}>\n                                    {label}\n                                </span>\n                                <div\n                                    className={cn(\n                                        styles.label,\n                                        colorStyles[colors].label,\n                                        labelClassName,\n                                    )}\n                                >\n                                    <span className={styles.labelInner}>{label}</span>\n                                </div>\n                            </React.Fragment>\n                        )}\n\n                        <div className={styles.input}>{children}</div>\n                    </div>\n\n                    {rightAddons && (\n                        <div className={cn(styles.addons, styles.rightAddons, addonsClassName)}>\n                            {rightAddons}\n                        </div>\n                    )}\n                </div>\n                {bottomAddons}\n\n                {errorMessage && (\n                    <span\n                        className={cn(styles.sub, styles.error, colorStyles[colors].error)}\n                        role='alert'\n                    >\n                        {errorMessage}\n                    </span>\n                )}\n\n                {hint && !errorMessage && (\n                    <span className={cn(styles.sub, colorStyles[colors].hint)}>{hint}</span>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_jaPAY\",\"inner\":\"inner_mrvBg\",\"label\":\"label_RMZnh\",\"hint\":\"hint_eACkb\",\"disabled\":\"disabled_LYnkb\",\"hasError\":\"hasError_OEHLU\",\"filled\":\"filled_9kagD\",\"focused\":\"focused_R5eJ9\",\"error\":\"error_yAXyM\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PoAB0\",\"inner\":\"inner_fQapl\",\"label\":\"label_ofaiQ\",\"hint\":\"hint_mrge7\",\"disabled\":\"disabled_brFwE\",\"hasError\":\"hasError_D4gZ3\",\"filled\":\"filled_uLOjP\",\"focused\":\"focused_dzZox\",\"error\":\"error_Yb_8x\"};","// extracted by mini-css-extract-plugin\nexport default {\"gap\":\"gap_t03go\",\"vertical\":\"vertical_IPAUH\",\"horizontal\":\"horizontal_g8xV3\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Size =\n    | '3xs'\n    | '2xs'\n    | 'xs'\n    | 's'\n    | 'm'\n    | 'l'\n    | 'xl'\n    | '2xl'\n    | '3xl'\n    | '4xl'\n    | '5xl'\n    | '6xl'\n    | '7xl'\n    | '8xl';\n\nexport type GapProps = {\n    /**\n     * Размер отступа\n     */\n    size: Size;\n\n    /**\n     * Вид отступа (вертикальный или горизонтальный)\n     * @default - 'vertical'\n     */\n    direction?: 'horizontal' | 'vertical';\n\n    /**\n     * HTML тег\n     * @default 'div'\n     */\n    tag?: 'div' | 'span';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Gap = ({\n    size,\n    direction = 'vertical',\n    tag: Component = 'div',\n    className,\n    dataTestId,\n}: GapProps) => (\n    <Component\n        data-test-id={dataTestId}\n        data-gap-size={size}\n        className={cn(styles.gap, styles[direction], className)}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_IJ2MC\",\"column\":\"column_YN5Ec\",\"align-stretch\":\"align-stretch_VDwAD\",\"align-start\":\"align-start_MsMLb\",\"align-end\":\"align-end_US8BN\",\"align-center\":\"align-center_iaSQx\",\"align-baseline\":\"align-baseline_syFgd\",\"justify-center\":\"justify-center_LFKb0\",\"justify-between\":\"justify-between_V4_Kx\",\"justify-around\":\"justify-around_GtrD6\",\"justify-evenly\":\"justify-evenly_xmiIO\",\"justify-start\":\"justify-start_wnJoR\",\"justify-end\":\"justify-end_sw3KC\",\"grow\":\"grow_vcTO_\",\"padding-top-3xs\":\"padding-top-3xs_B30Ey\",\"padding-top-2xs\":\"padding-top-2xs_Nh726\",\"padding-top-xs\":\"padding-top-xs_kbaNM\",\"padding-top-s\":\"padding-top-s_TawHU\",\"padding-top-m\":\"padding-top-m_YhyTm\",\"padding-top-l\":\"padding-top-l_yvMtE\",\"padding-top-xl\":\"padding-top-xl_jwnWx\",\"padding-right-3xs\":\"padding-right-3xs_fMni2\",\"padding-right-2xs\":\"padding-right-2xs_G6ugp\",\"padding-right-xs\":\"padding-right-xs_SPOcH\",\"padding-right-s\":\"padding-right-s_aWpRd\",\"padding-right-m\":\"padding-right-m_j6lMI\",\"padding-right-l\":\"padding-right-l_wzVE_\",\"padding-right-xl\":\"padding-right-xl_T5D5k\",\"padding-bottom-3xs\":\"padding-bottom-3xs_JOWec\",\"padding-bottom-2xs\":\"padding-bottom-2xs_xVsZM\",\"padding-bottom-xs\":\"padding-bottom-xs_zwYk_\",\"padding-bottom-s\":\"padding-bottom-s_exaVf\",\"padding-bottom-m\":\"padding-bottom-m_lFSb8\",\"padding-bottom-l\":\"padding-bottom-l_VUxWf\",\"padding-bottom-xl\":\"padding-bottom-xl_vsMp4\",\"padding-left-3xs\":\"padding-left-3xs_l46Hb\",\"padding-left-2xs\":\"padding-left-2xs_F0jao\",\"padding-left-xs\":\"padding-left-xs_obXQm\",\"padding-left-s\":\"padding-left-s_saR4k\",\"padding-left-m\":\"padding-left-m_tdjUU\",\"padding-left-l\":\"padding-left-l_twxEe\",\"padding-left-xl\":\"padding-left-xl_Nausb\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { GapProps } from '@alfalab/core-components-gap';\n\nimport styles from './index.module.css';\n\nexport type ReducedGapType = Omit<\n    GapProps['size'],\n    '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl'\n>;\n\nexport type PaddingPropType = {\n    top?: ReducedGapType;\n    right?: ReducedGapType;\n    bottom?: ReducedGapType;\n    left?: ReducedGapType;\n};\n\nexport type GenericWrapperProps = {\n    /**\n     * Дочерние элементы.\n     */\n    children: ReactNode;\n\n    /**\n     * Свойство управляет направлением основной оси внутри флекс-контейнера\n     */\n    column?: boolean;\n\n    /**\n     * Внутренние отступы\n     */\n    padding?: PaddingPropType;\n\n    /**\n     * Свойство для выравнивания элементов внутри контейнера по поперечной оси.\n     */\n    alignItems?: 'stretch' | 'end' | 'start' | 'center' | 'baseline';\n\n    /**\n     * Свойство выравнивает флекс-элементы внутри флекс-контейнера по основной оси.\n     */\n    justifyContent?: 'between' | 'around' | 'evenly' | 'center' | 'start' | 'end';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Позволяет заполнить всё доступное пространство родительского элемента.\n     */\n    grow?: boolean;\n};\n\nexport const GenericWrapper = ({\n    children,\n    padding,\n    alignItems,\n    justifyContent,\n    className,\n    dataTestId,\n    column = false,\n    grow = false,\n}: GenericWrapperProps) => {\n    const paddingStyles = padding && {\n        [styles[`padding-top-${padding.top}`]]: padding.top,\n        [styles[`padding-right-${padding.right}`]]: padding.right,\n        [styles[`padding-bottom-${padding.bottom}`]]: padding.bottom,\n        [styles[`padding-left-${padding.left}`]]: padding.left,\n    };\n    const alignmentStyles = alignItems && styles[`align-${alignItems}`];\n    const justifyContentStyles = justifyContent && styles[`justify-${justifyContent}`];\n    const growStyles = grow && styles.grow;\n    const columnsStyles = column && styles.column;\n\n    return (\n        <div\n            className={cn(\n                styles.component,\n                columnsStyles,\n                alignmentStyles,\n                paddingStyles,\n                justifyContentStyles,\n                growStyles,\n                className,\n            )}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n","export type SavedStyle = {\n    value: string;\n    key: string;\n    el: HTMLElement;\n};\n\ntype RestoreStyle = {\n    container: HTMLElement;\n    modals: number;\n    styles: SavedStyle[];\n};\n\nexport class ModalStore {\n    private readonly restoreStyles: RestoreStyle[];\n\n    constructor() {\n        this.restoreStyles = [];\n    }\n\n    getRestoreStyles = () => this.restoreStyles;\n}\n","import { ModalStore } from './ModalStore';\n\nexport class GlobalStore {\n    private readonly modalStore: ModalStore;\n\n    constructor() {\n        this.modalStore = new ModalStore();\n    }\n\n    getModalStore = () => this.modalStore;\n}\n","import { GlobalStore } from './GlobalStore';\nimport { ModalStore, SavedStyle } from './ModalStore';\n\nexport type { SavedStyle };\n\nconst getCoreComponentsStore = (): GlobalStore => {\n    if (!window.coreComponentsStore) {\n        window.coreComponentsStore = new GlobalStore();\n\n        return window.coreComponentsStore;\n    }\n\n    return window.coreComponentsStore;\n};\n\nexport const getModalStore = (): ModalStore => getCoreComponentsStore().getModalStore();\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_Ko3hQ\",\"hatch\":\"hatch_BSCyW\",\"filled\":\"filled_W7uye\",\"positive\":\"positive_zjmGh\",\"attention\":\"attention_tCtBQ\",\"negative\":\"negative_M8h9I\",\"link\":\"link_a5i6v\",\"tertiary\":\"tertiary_I6Spr\",\"secondary\":\"secondary_cUgeC\",\"primary\":\"primary_gRkuF\",\"accent\":\"accent_Q8lOm\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type HatchingProgressBarProps = {\n    /**\n     * Значение заполненной части 0-100\n     */\n    value: number;\n\n    /**\n     * Значение будущей заполненной части 0-100\n     */\n    hatchValue: number;\n\n    /**\n     * Css-класс для стилизации\n     */\n    className?: string;\n\n    /**\n     * Цвет заполнения\n     */\n    view?:\n        | 'positive'\n        | 'negative'\n        | 'attention'\n        | 'link'\n        | 'tertiary'\n        | 'secondary'\n        | 'primary'\n        | 'accent';\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n};\n\nexport const HatchingProgressBar = React.forwardRef<HTMLDivElement, HatchingProgressBarProps>(\n    ({ className, value, hatchValue, view = 'positive', dataTestId }, ref) => (\n        <div\n            role='progressbar'\n            aria-valuenow={Math.round(value)}\n            aria-valuemin={0}\n            aria-valuemax={100}\n            className={cn(styles.container, className)}\n            data-test-id={dataTestId}\n            ref={ref}\n        >\n            <div\n                className={styles.hatch}\n                style={{ transform: `translateX(${hatchValue - 100}%)` }}\n            />\n            <div\n                className={cn(styles.filled, styles[view])}\n                style={{ transform: `translateX(${value - 100}%)` }}\n            />\n        </div>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"xxs\":\"xxs_UlGqR\",\"xs\":\"xs_lUVWU\",\"s\":\"s_ioNgg\",\"iconWrapper\":\"iconWrapper_Qmq5c\",\"center\":\"center_qMRzh\",\"left\":\"left_laRGY\",\"right\":\"right_CvqHm\",\"icon\":\"icon__huU2\"};","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes, ElementType, forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type IconButtonProps = {\n    /**\n     * Компонент иконки\n     */\n    icon: ElementType<{ className?: string }>;\n\n    /**\n     * Тип кнопки\n     */\n    view?: 'primary' | 'secondary' | 'transparent' | 'tertiary' | 'negative';\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Выравнивание иконки\n     * @default 'center'\n     */\n    alignIcon?: 'left' | 'center' | 'right';\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n} & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'size'> &\n    Pick<ButtonProps, 'href' | 'loading'> &\n    Pick<AnchorHTMLAttributes<HTMLAnchorElement>, 'target' | 'download'>;\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n    (\n        {\n            className,\n            icon: Icon,\n            view = 'primary',\n            size = 's',\n            colors = 'default',\n            alignIcon = 'center',\n            ...restProps\n        },\n        ref,\n    ) => (\n        <Button\n            {...restProps}\n            ref={ref}\n            view='ghost'\n            className={cn(\n                'cc-icon-button',\n                className,\n                colorStyles[colors][view],\n                colorStyles[colors].component,\n                {\n                    [colorStyles[colors].loader]: restProps.loading,\n                },\n            )}\n            size='s'\n        >\n            <span className={cn(styles.iconWrapper, styles[size], styles[alignIcon])}>\n                <Icon className={styles.icon} />\n            </span>\n        </Button>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_mrk6x\",\"secondary\":\"secondary_FLdLE\",\"transparent\":\"transparent_VMdra\",\"negative\":\"negative_obA3j\",\"tertiary\":\"tertiary_i42d9\",\"component\":\"component_fJqZU\",\"loader\":\"loader_pgtEx\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_YS_4z\",\"secondary\":\"secondary_5vwsr\",\"transparent\":\"transparent_ZlVKE\",\"negative\":\"negative_ReUKu\",\"tertiary\":\"tertiary_iWHyh\",\"component\":\"component_ywWfd\",\"loader\":\"loader_Mx9xJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dps9B\",\"red\":\"red_aXXvQ\",\"border\":\"border_Cmy4J\",\"white\":\"white_K_qSw\",\"grey\":\"grey_rYijs\",\"xs\":\"xs_EpLNh\",\"s\":\"s_iVuD8\",\"content\":\"content_KtxO2\",\"m\":\"m_nROyp\",\"l\":\"l_yhn3E\",\"xl\":\"xl_K6gcc\",\"xxl\":\"xxl_RO3RL\"};","import React, { CSSProperties, forwardRef, ReactElement } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\n// TODO: вынести в общие типы\ntype Border = {\n    width?: number;\n    color?: string;\n    style?: 'solid' | 'dashed' | 'dotted';\n};\n\nexport type IndicatorProps = React.HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Значение индикатора\n     */\n    value?: number | ReactElement;\n\n    /**\n     * Цвет значения\n     */\n    color?: string;\n\n    /**\n     * Цвет заливки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Высота компонента, min = 16; max = 48\n     */\n    height?: number;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 's' | 'm' | 'l';\n\n    /**\n     * Настройки обводки\n     */\n    border?: boolean | Border;\n\n    /**\n     * Пресет компонента\n     */\n    view?: 'red' | 'grey' | 'white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nfunction getSize(height?: number, value?: IndicatorProps['value']) {\n    if (!height) {\n        return typeof value === 'undefined' ? 'xs' : 's';\n    }\n\n    if (height <= 8) return 'xs';\n    if (height <= 18) return 's';\n    if (height <= 24) return 'm';\n    if (height <= 32) return 'l';\n    if (height <= 40) return 'xl';\n\n    return 'xxl';\n}\n\nfunction formatValue(rawValue: IndicatorProps['value']) {\n    if (typeof rawValue === 'number' && rawValue >= 100) return '99+';\n\n    return rawValue;\n}\n\nfunction borderStyles(\n    border: IndicatorProps['border'],\n    view?: IndicatorProps['view'],\n): CSSProperties {\n    if (!border) return {};\n\n    if (typeof border === 'object') {\n        return {\n            outlineColor: border.color,\n            outlineWidth: border.width,\n            outlineStyle: border.style || 'solid',\n        };\n    }\n\n    if (view) return {};\n\n    return {\n        outlineWidth: 2,\n        outlineColor: 'var(--color-light-graphic-primary)',\n        outlineStyle: 'solid',\n    };\n}\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>(\n    (\n        {\n            value,\n            view,\n            color,\n            backgroundColor,\n            height,\n            border,\n            className,\n            dataTestId,\n            style,\n            size = getSize(height, value),\n            ...restProps\n        },\n        ref,\n    ) => {\n        const showContent = typeof value !== 'undefined' && size !== 'xs';\n\n        return (\n            <div\n                ref={ref}\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    view && styles[view],\n                    border === true && styles.border,\n                    className,\n                )}\n                style={{\n                    ...style,\n                    ...(!view && {\n                        backgroundColor,\n                        color,\n                    }),\n                    height,\n                    minWidth: height,\n                    ...borderStyles(border, view),\n                }}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                {showContent && <span className={styles.content}>{formatValue(value)}</span>}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"arrow\":\"arrow_RWc1Z\",\"error\":\"error_HXxNm\"};","import React, { useCallback, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Input as DefaultInput } from '@alfalab/core-components-input';\nimport { FieldProps } from '@alfalab/core-components-select';\n\nimport { InputAutocompleteDesktopProps } from '../Component.desktop';\n\nimport styles from './index.module.css';\n\nexport type AutocompleteFieldProps = FieldProps &\n    Pick<InputAutocompleteDesktopProps, 'Input' | 'inputProps' | 'value' | 'onInput' | 'readOnly'>;\n\nexport const AutocompleteField = ({\n    label,\n    labelView = 'inner',\n    placeholder,\n    size,\n    Arrow,\n    Input = DefaultInput,\n    value,\n    error,\n    success,\n    hint,\n    disabled,\n    readOnly,\n    onInput,\n    inputProps = {},\n    innerProps,\n}: AutocompleteFieldProps) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const { onClick, onFocus } = innerProps;\n\n    const inputDisabled = disabled || readOnly;\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            if (onClick) onClick(event);\n\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [onClick],\n    );\n\n    return (\n        <Input\n            {...inputProps}\n            {...innerProps}\n            wrapperRef={mergeRefs([\n                innerProps.ref as React.Ref<HTMLElement>,\n                inputProps.wrapperRef as React.Ref<HTMLElement>,\n            ])}\n            ref={mergeRefs([inputRef, inputProps.ref as React.Ref<HTMLElement>])}\n            disabled={disabled}\n            readOnly={readOnly}\n            block={true}\n            label={label}\n            labelView={labelView}\n            placeholder={placeholder}\n            size={size}\n            error={error}\n            success={success}\n            hint={hint}\n            onChange={onInput}\n            onClick={inputDisabled ? undefined : handleClick}\n            onFocus={inputDisabled ? undefined : onFocus}\n            autoComplete='off'\n            value={value}\n            rightAddons={\n                (Arrow || inputProps.rightAddons) && (\n                    <React.Fragment>\n                        {inputProps.rightAddons}\n                        {Arrow && (\n                            <span\n                                className={cn(styles.arrow, {\n                                    [styles.error]: error,\n                                })}\n                            >\n                                {Arrow}\n                            </span>\n                        )}\n                    </React.Fragment>\n                )\n            }\n        />\n    );\n};\n","import React, { ChangeEvent, FC, forwardRef, RefAttributes } from 'react';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport {\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    Option as DefaultOption,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { AutocompleteField } from './autocomplete-field';\n\nexport type InputAutocompleteDesktopProps = Omit<BaseSelectProps, 'Field' | 'nativeSelect'> & {\n    /**\n     * Компонент ввода значения\n     */\n    Input?: FC<InputProps & RefAttributes<HTMLInputElement>>;\n\n    /**\n     * Пропсы, которые будут прокинуты в инпут\n     */\n    inputProps?: InputProps & Record<string, unknown>;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Поле доступно только для чтения\n     */\n    readOnly?: InputProps['readOnly'];\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Обработчик ввода\n     */\n    onInput?: (event: ChangeEvent<HTMLInputElement>) => void;\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение поповера\n     */\n    updatePopover?: BaseSelectProps['updatePopover'];\n};\n\nexport const InputAutocompleteDesktop = forwardRef<HTMLInputElement, InputAutocompleteDesktopProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            Input,\n            inputProps = {},\n            onInput,\n            value,\n            success,\n            readOnly,\n            closeOnSelect = false,\n            options,\n            ...restProps\n        },\n        ref,\n    ) => (\n        <BaseSelect\n            ref={ref}\n            autocomplete={true}\n            options={options}\n            closeOnSelect={closeOnSelect}\n            Option={Option}\n            Field={AutocompleteField}\n            fieldProps={{\n                Input,\n                onInput,\n                value,\n                inputProps,\n                readOnly,\n                success,\n            }}\n            Optgroup={Optgroup}\n            OptionsList={OptionsList}\n            {...restProps}\n        />\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_shmZr\",\"field\":\"field_lHc4C\",\"disabled\":\"disabled_fvYlN\",\"placeholder\":\"placeholder__30Tu\",\"contentWrapper\":\"contentWrapper_sbKRl\",\"value\":\"value_GSNlj\",\"focusVisible\":\"focusVisible_lmfo8\"};","import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { FormControl, FormControlProps } from '@alfalab/core-components-form-control';\nimport { InputAutocompleteProps } from '@alfalab/core-components-input-autocomplete';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select';\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nexport type AutocompleteMobileFieldProps = FormControlProps &\n    Omit<BaseFieldProps, 'selected' | 'multiple' | 'success'> &\n    Pick<InputAutocompleteProps, 'value'>;\n\nexport const AutocompleteMobileField = ({\n    size = 'm',\n    open,\n    error,\n    hint,\n    disabled,\n    label,\n    labelView = 'inner',\n    placeholder,\n    value,\n    innerProps,\n    dataTestId,\n    fieldClassName,\n    Arrow,\n    valueRenderer,\n    toggleMenu,\n    setSelectedItems,\n    selectedMultiple,\n    ...restProps\n}: AutocompleteMobileFieldProps) => {\n    const [focused, setFocused] = useState(false);\n\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    const [focusVisible] = useFocus(wrapperRef, 'keyboard');\n\n    const filled = Boolean(value);\n    const showLabel = !!label && (filled || !placeholder || labelView === 'outer');\n\n    return (\n        <div\n            className={styles.component}\n            ref={wrapperRef}\n            onFocus={() => setFocused(true)}\n            onBlur={() => setFocused(false)}\n        >\n            <FormControl\n                fieldClassName={cn(styles.field, fieldClassName, {\n                    [styles.disabled]: disabled,\n                    [styles.focusVisible]: focusVisible,\n                })}\n                block={true}\n                size={size}\n                focused={focused}\n                disabled={disabled}\n                filled={filled}\n                label={showLabel && label}\n                labelView={labelView}\n                error={error}\n                hint={hint}\n                rightAddons={Arrow}\n                data-test-id={dataTestId}\n                {...restProps}\n                {...innerProps}\n            >\n                <div className={styles.contentWrapper}>\n                    {placeholder && !filled && (\n                        <span className={styles.placeholder}>{placeholder}</span>\n                    )}\n                    {filled && <div className={styles.value}>{value}</div>}\n                </div>\n            </FormControl>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"bottomSheetInput\":\"bottomSheetInput_F5C4G\",\"footer\":\"footer_WM8GQ\"};","import React, { ChangeEvent, ElementType, RefObject, useMemo, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport throttle from 'lodash.throttle';\n\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { Input as CoreInput } from '@alfalab/core-components-input';\nimport {\n    BaseSelectChangePayload,\n    BaseSelectProps,\n    SelectMobile,\n    SelectMobileProps,\n} from '@alfalab/core-components-select';\n\nimport { AutocompleteMobileField } from './autocomplete-mobile-field';\n\nimport styles from './mobile.module.css';\n\nexport type InputAutocompleteMobileProps = Omit<\n    BaseSelectProps,\n    'OptionsList' | 'Checkmark' | 'onScroll' | 'nativeSelect' | 'autocomplete' | 'valueRenderer'\n> & {\n    /**\n     * Обработчик выбора\n     */\n    onChange: (payload: string | BaseSelectChangePayload) => void;\n\n    /**\n     * Обработчик ввода фильтра.\n     */\n    onFilter: (event: ChangeEvent<HTMLInputElement>) => void;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Значение фильтра.\n     */\n    filter?: string;\n\n    /**\n     * Обработчик нажатия на кнопку \"Отмена\".\n     */\n    onCancel?: () => void;\n\n    /**\n     * Обработчик нажатия на крестик в инпуте фильтра.\n     */\n    onClearFilter?: () => void;\n\n    /**\n     * Дополнительные пропсы компонента BottomSheet\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Дополнительные пропсы на слот под заголовком компонента BottomSheet\n     */\n    bottomSheetHeaderAddonsProps?: Record<string, unknown>;\n\n    /**\n     * Дополнительные пропсы на кнопку \"продолжить\"\n     */\n    continueButtonProps?: ButtonProps;\n\n    /**\n     * Дополнительные пропсы на кнопку \"отмена\"\n     */\n    cancelButtonProps?: ButtonProps;\n\n    /**\n     * Кастомный инпут\n     */\n    Input?: ElementType;\n};\n\nconst SELECTED: string[] = [];\n\nexport const InputAutocompleteMobile = React.forwardRef(\n    (\n        {\n            Input,\n            bottomSheetProps = {},\n            bottomSheetHeaderAddonsProps = {},\n            value = '',\n            filter = '',\n            name,\n            Arrow = null,\n            label,\n            placeholder,\n            size = 's',\n            open: openProp,\n            onFilter,\n            onChange,\n            onOpen,\n            onCancel,\n            onClearFilter,\n            continueButtonProps,\n            cancelButtonProps,\n            selected,\n            multiple,\n            ...restProps\n        }: InputAutocompleteMobileProps,\n        ref,\n    ) => {\n        const [open, setOpen] = useState(false);\n        const bottomSheetInputRef = useRef<HTMLInputElement>(null);\n        const targetRef = useRef<HTMLDivElement>(null);\n\n        const setBottomSheetVisibility = (isOpen: boolean) => {\n            if (openProp === undefined) {\n                setOpen(isOpen);\n            }\n\n            if (onOpen) {\n                onOpen({ open: isOpen, name });\n            }\n        };\n\n        const handleOpen: SelectMobileProps['onOpen'] = (payload) => {\n            setBottomSheetVisibility(Boolean(payload.open));\n        };\n\n        const handleOptionsListTouchMove = useMemo(\n            () =>\n                throttle(() => {\n                    const input = bottomSheetInputRef.current;\n\n                    if (input && document.activeElement === input) {\n                        input.blur();\n                    }\n                }, 300),\n            [],\n        );\n\n        const handleApply = () => {\n            setBottomSheetVisibility(false);\n            onChange(filter);\n        };\n\n        const handleChange: SelectMobileProps['onChange'] = (payload) => {\n            onChange(payload);\n\n            if (multiple) {\n                // После выбора опции возвращаем фокус в поле ввода.\n                requestAnimationFrame(() => bottomSheetInputRef.current?.focus());\n            }\n        };\n\n        const handleCancel = () => {\n            setBottomSheetVisibility(false);\n\n            if (onCancel) {\n                onCancel();\n            }\n        };\n\n        const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n            const input = bottomSheetInputRef.current;\n\n            // Перед закрытием шторки снимаем фокус с инпута, чтобы предотвратить скачок шторки.\n            if (\n                event.relatedTarget === targetRef.current &&\n                input &&\n                input === document.activeElement\n            ) {\n                input.blur();\n            }\n        };\n\n        const getBottomSheetProps = (): InputAutocompleteMobileProps['bottomSheetProps'] => {\n            const Component = Input || CoreInput;\n\n            return {\n                actionButton: (\n                    <div className={styles.footer}>\n                        <Button\n                            block={true}\n                            view='primary'\n                            size='s'\n                            onClick={handleApply}\n                            {...continueButtonProps}\n                        >\n                            Продолжить\n                        </Button>\n                        <Button\n                            block={true}\n                            view='secondary'\n                            size='s'\n                            onClick={handleCancel}\n                            {...cancelButtonProps}\n                        >\n                            Отмена\n                        </Button>\n                    </div>\n                ),\n                title: label || placeholder,\n                bottomAddons: (\n                    <Component\n                        block={true}\n                        clear={!!onClearFilter}\n                        onClear={onClearFilter}\n                        value={filter}\n                        onInput={onFilter}\n                        placeholder={placeholder}\n                        onFocus={handleInputFocus}\n                        {...bottomSheetHeaderAddonsProps}\n                        className={cn(\n                            styles.bottomSheetInput,\n                            bottomSheetHeaderAddonsProps.className as string,\n                        )}\n                        ref={mergeRefs([\n                            bottomSheetInputRef,\n                            bottomSheetHeaderAddonsProps.ref as RefObject<HTMLInputElement>,\n                        ])}\n                    />\n                ),\n                initialHeight: 'full',\n                ...bottomSheetProps,\n                containerProps: {\n                    onTouchMove: handleOptionsListTouchMove,\n                    ...bottomSheetProps.containerProps,\n                },\n            };\n        };\n\n        return (\n            <SelectMobile\n                ref={mergeRefs([targetRef, ref])}\n                selected={selected || SELECTED}\n                open={Boolean(open || openProp)}\n                onOpen={handleOpen}\n                onChange={handleChange}\n                Arrow={Arrow}\n                Field={AutocompleteMobileField}\n                fieldProps={{ value }}\n                placeholder={placeholder}\n                label={label}\n                size={size}\n                name={name}\n                multiple={multiple}\n                bottomSheetProps={getBottomSheetProps()}\n                optionsListProps={{ showFooter: false }}\n                {...restProps}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BaseSelectProps } from '@alfalab/core-components-select';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { InputAutocompleteDesktop, InputAutocompleteDesktopProps } from './Component.desktop';\nimport { InputAutocompleteMobile, InputAutocompleteMobileProps } from './Component.mobile';\n\nexport type InputAutocompleteResponsiveProps = InputAutocompleteDesktopProps &\n    InputAutocompleteMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport type InputAutocompleteMedia = 'desktop' | 'mobile';\n\nexport const InputAutocompleteResponsive = forwardRef<\n    HTMLInputElement | HTMLDivElement,\n    InputAutocompleteResponsiveProps\n>(({ breakpoint = 1024, ...restProps }, ref) => {\n    const [view] = useMedia<InputAutocompleteMedia>(\n        [\n            ['mobile', `(max-width: ${breakpoint - 1}px)`],\n            ['desktop', `(min-width: ${breakpoint}px)`],\n        ],\n        'desktop',\n    );\n\n    return view === 'desktop' ? (\n        <InputAutocompleteDesktop {...restProps} ref={ref as React.Ref<HTMLInputElement>} />\n    ) : (\n        <InputAutocompleteMobile {...restProps} ref={ref} />\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_C0d9b\",\"hasInnerLabel\":\"hasInnerLabel_yRnKX\",\"s\":\"s_v1wlX\",\"m\":\"m_o6nWc\",\"l\":\"l_DXDjT\",\"xl\":\"xl_mPIz9\",\"block\":\"block_XBEOs\",\"clearIcon\":\"clearIcon_MoTZM\",\"errorIcon\":\"errorIcon_HsX_x\",\"errorColorIcon\":\"errorColorIcon_y8Bji\",\"clearButton\":\"clearButton_KfeHL\",\"successIcon\":\"successIcon_PtrJ_\",\"successColorIcon\":\"successColorIcon_ePWYD\",\"focusVisible\":\"focusVisible_BEGpe\",\"onautofillstart\":\"onautofillstart_rGNnQ\",\"onautofillcancel\":\"onautofillcancel_o8TSx\"};","import React, {\n    AnimationEvent,\n    ChangeEvent,\n    Fragment,\n    InputHTMLAttributes,\n    MouseEvent,\n    ReactNode,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { Button } from '@alfalab/core-components-button';\nimport { FormControl } from '@alfalab/core-components-form-control';\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { ExclamationCircleMIcon } from '@alfalab/icons-glyph/ExclamationCircleMIcon';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type InputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    | 'size'\n    | 'type'\n    | 'value'\n    | 'defaultValue'\n    | 'onChange'\n    | 'onClick'\n    | 'onMouseDown'\n    | 'enterKeyHint'\n> & {\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Начальное значение поля\n     */\n    defaultValue?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Крестик для очистки поля\n     */\n    clear?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Текст подсказки\n     */\n    hint?: ReactNode;\n\n    /**\n     * Лейбл компонента\n     */\n    label?: React.ReactNode;\n\n    /**\n     * Вид лейбла внутри / снаружи\n     */\n    labelView?: 'inner' | 'outer';\n\n    /**\n     * Атрибут type\n     */\n    type?: 'number' | 'card' | 'email' | 'money' | 'password' | 'tel' | 'text';\n\n    /**\n     * Ref для обертки input\n     */\n    wrapperRef?: React.Ref<HTMLDivElement>;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: React.ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: React.ReactNode;\n\n    /**\n     * Слот под инпутом\n     */\n    bottomAddons?: React.ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    fieldClassName?: string;\n\n    /**\n     * Дополнительный класс инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для лейбла\n     */\n    labelClassName?: string;\n\n    /**\n     * Дополнительный класс для аддонов\n     */\n    addonsClassName?: string;\n\n    /**\n     * Класс, который будет установлен при фокусе\n     */\n    focusedClassName?: string;\n\n    /**\n     * Класс, который будет установлен, если в поле есть значение\n     */\n    filledClassName?: string;\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => void;\n\n    /**\n     * Обработчик нажатия на кнопку очистки\n     */\n    onClear?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Обработчик клика по полю\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseDown по полю\n     */\n    onMouseDown?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseUp по полю\n     */\n    onMouseUp?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n    (\n        {\n            size = 's',\n            type = 'text',\n            block = false,\n            colors = 'default',\n            bottomAddons,\n            dataTestId,\n            clear = false,\n            disabled,\n            error,\n            success,\n            hint,\n            className,\n            fieldClassName,\n            inputClassName,\n            labelClassName,\n            addonsClassName,\n            focusedClassName,\n            filledClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onClear,\n            onClick,\n            onMouseDown,\n            onMouseUp,\n            onAnimationStart,\n            rightAddons,\n            value,\n            defaultValue,\n            wrapperRef,\n            readOnly,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        const [focused, setFocused] = useState(restProps.autoFocus);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const [autofilled, setAutofilled] = useState(false);\n\n        // отображаем крестик только для заполненного и активного инпута\n        const clearButtonVisible = clear && filled && !disabled && !readOnly;\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const handleInputFocus = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                if (!readOnly) {\n                    setFocused(true);\n                }\n\n                if (onFocus) {\n                    onFocus(event);\n                }\n            },\n            [onFocus, readOnly],\n        );\n\n        const handleInputBlur = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                setFocused(false);\n\n                if (onBlur) {\n                    onBlur(event);\n                }\n            },\n            [onBlur],\n        );\n\n        const handleInputChange = useCallback(\n            (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (onChange) {\n                    onChange(event, { value: event.target.value });\n                }\n\n                if (uncontrolled) {\n                    setStateValue(event.target.value);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                if (!clearButtonVisible) return;\n\n                if (uncontrolled) {\n                    setStateValue('');\n                }\n\n                if (onClear) {\n                    onClear(event);\n                }\n\n                if (inputRef.current && !focused) {\n                    inputRef.current.focus();\n                }\n            },\n            [clearButtonVisible, focused, onClear, uncontrolled],\n        );\n\n        const handleAnimationStart = useCallback(\n            (event: AnimationEvent<HTMLInputElement>) => {\n                if (onAnimationStart) {\n                    onAnimationStart(event);\n                }\n\n                setAutofilled(event.animationName.includes('start'));\n            },\n            [onAnimationStart],\n        );\n\n        const renderRightAddons = () => {\n            const addonsVisible = clearButtonVisible || rightAddons || error || success;\n\n            return (\n                addonsVisible && (\n                    <Fragment>\n                        {clearButtonVisible && (\n                            <Button\n                                type='button'\n                                view='ghost'\n                                disabled={disabled}\n                                aria-label='Очистить'\n                                className={styles.clearButton}\n                                onClick={handleClear}\n                                tabIndex={-1}\n                            >\n                                <CrossCircleMIcon\n                                    className={cn(styles.clearIcon, colorStyles[colors].clearIcon)}\n                                />\n                            </Button>\n                        )}\n                        {rightAddons}\n                        {error && (\n                            <div className={styles.errorIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='negative'\n                                    content={\n                                        <ExclamationCircleMIcon className={styles.errorColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                        {success && !error && (\n                            <div className={styles.successIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='positive'\n                                    content={\n                                        <CheckmarkCircleMIcon className={styles.successColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )\n            );\n        };\n\n        return (\n            <FormControl\n                ref={wrapperRef}\n                className={cn(className, focused && focusedClassName, filled && filledClassName)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                labelClassName={labelClassName}\n                addonsClassName={addonsClassName}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                readOnly={readOnly}\n                filled={filled || autofilled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={renderRightAddons()}\n                bottomAddons={bottomAddons}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n            >\n                <input\n                    {...restProps}\n                    className={cn(\n                        styles.input,\n                        colorStyles[colors].input,\n                        {\n                            [styles.error]: error,\n                            [colorStyles[colors].error]: error,\n                            [styles[size]]: hasInnerLabel,\n                            [styles.hasInnerLabel]: hasInnerLabel,\n                            [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                        },\n                        inputClassName,\n                    )}\n                    disabled={disabled}\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    onChange={handleInputChange}\n                    onAnimationStart={handleAnimationStart}\n                    ref={mergeRefs([ref, inputRef])}\n                    type={type}\n                    value={uncontrolled ? stateValue : value}\n                    readOnly={readOnly}\n                    data-test-id={dataTestId}\n                    aria-label={typeof label === 'string' ? label : undefined}\n                />\n            </FormControl>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nInput.defaultProps = {\n    size: 's',\n    type: 'text',\n    block: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_hk5F7\",\"hasInnerLabel\":\"hasInnerLabel_MjKbH\",\"clearIcon\":\"clearIcon_FDQqO\",\"error\":\"error_OKfim\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_qJTKO\",\"hasInnerLabel\":\"hasInnerLabel_XqipF\",\"clearIcon\":\"clearIcon_Nvkp0\",\"error\":\"error_T3UAo\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RefObject, useRef } from 'react';\n\nimport { useFocus } from '@alfalab/hooks';\n\ntype KeyboardFocusableProps = {\n    /**\n     * Рендер-проп, в который передается состояние фокуса и реф.\n     *\n     * Реф нужно установить на интерактивный элемент или на одного из его родителей.\n     */\n    children: (ref: RefObject<any>, focused: boolean) => JSX.Element;\n};\n\nexport const KeyboardFocusable = ({ children }: KeyboardFocusableProps) => {\n    const targetRef = useRef<HTMLElement | null>(null);\n\n    const [focused] = useFocus(targetRef, 'keyboard');\n\n    return children(targetRef, focused);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_lMFXL\",\"text\":\"text_aPya0\",\"withAddons\":\"withAddons_N7SYb\",\"focused\":\"focused_hQu__\",\"pseudo\":\"pseudo_kpIHn\",\"withoutUnderline\":\"withoutUnderline_IhODm\",\"addons\":\"addons_Q30kx\"};","import React, { AnchorHTMLAttributes, ElementType, forwardRef, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\ntype NativeProps = AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport type LinkProps = NativeProps & {\n    /**\n     * URL для перехода (native prop)\n     */\n    href?: string;\n\n    /**\n     * Тип ссылки\n     */\n    view?: 'primary' | 'secondary' | 'default';\n\n    /**\n     * Пунктирное подчеркивание\n     */\n    pseudo?: boolean;\n\n    /**\n     * Включает / отключает подчеркивание\n     * @default true\n     */\n    underline?: boolean;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Позволяет использовать кастомный компонент для кнопки (например Link из роутера)\n     */\n    Component?: ElementType;\n\n    /**\n     * Дополнительный класс (native prop)\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Обработчик нажатия (native prop)\n     */\n    onClick?: NativeProps['onClick'];\n\n    /**\n     * Дочерние элементы (native prop)\n     */\n    children: ReactNode;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n};\n\nexport const Link = forwardRef<HTMLAnchorElement, LinkProps>(\n    (\n        {\n            view = 'primary',\n            pseudo = false,\n            underline = true,\n            leftAddons,\n            rightAddons,\n            className,\n            dataTestId,\n            children,\n            colors = 'default',\n            href,\n            Component = pseudo ? 'button' : 'a',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const linkRef = useRef<HTMLAnchorElement>(null);\n\n        const [focused] = useFocus(linkRef, 'keyboard');\n\n        const viewClassName = view === 'default' ? 'defaultView' : view;\n\n        const componentProps = {\n            className: cn(\n                styles.component,\n                colorStyles[colors][viewClassName],\n                {\n                    [styles.withoutUnderline]: !underline && !pseudo,\n                    [styles.pseudo]: pseudo,\n                    [styles.focused]: focused,\n                    [styles.withAddons]: leftAddons || rightAddons,\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n            rel: restProps.target === '_blank' ? 'noreferrer noopener' : undefined,\n            // Для совместимости с react-router-dom, меняем href на to\n            [typeof Component === 'string' ? 'href' : 'to']: href,\n            ...(pseudo && { type: 'button' }),\n        };\n\n        return (\n            <Component {...componentProps} {...restProps} ref={mergeRefs([linkRef, ref])}>\n                {leftAddons || rightAddons ? (\n                    <React.Fragment>\n                        {leftAddons && <span className={styles.addons}>{leftAddons}</span>}\n                        {children && (\n                            <span>\n                                <span className={styles.text}>{children}</span>\n                            </span>\n                        )}\n                        {rightAddons && <span className={styles.addons}>{rightAddons}</span>}\n                    </React.Fragment>\n                ) : (\n                    <span className={styles.text}>{children}</span>\n                )}\n            </Component>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nLink.defaultProps = {\n    view: 'primary',\n    pseudo: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_ToVKN\",\"secondary\":\"secondary_UPo_S\",\"defaultView\":\"defaultView_Vv_pD\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_XvGVZ\",\"secondary\":\"secondary_jZLuE\",\"defaultView\":\"defaultView_em4fi\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_h7GV6\",\"description\":\"description_rfDiA\",\"filled\":\"filled_M8E8n\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nexport type ListHeaderProps = {\n    /**\n     * Заголовок\n     */\n    title: string;\n\n    /**\n     * Дополнительное описание\n     */\n    description?: string;\n\n    /**\n     * Наличие фоновой подложки\n     */\n    filled?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const ListHeader: React.FC<ListHeaderProps> = ({\n    title,\n    description,\n    filled = true,\n    className,\n    dataTestId,\n}) => (\n    <div\n        data-test-id={dataTestId}\n        className={cn(styles.component, { [styles.filled]: filled }, className)}\n    >\n        <Typography.Text view='secondary-large'>{title}</Typography.Text>\n        {description && (\n            <Typography.Text view='secondary-large' className={cn(styles.description)}>\n                {`, ${description}`}\n            </Typography.Text>\n        )}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"item_wo5BR\",\"reversed\":\"reversed_WoAsG\",\"unorderedItem\":\"unorderedItem_xBIso\",\"slot\":\"slot_FB574\",\"defaultColor\":\"defaultColor_MZoxA\",\"disc\":\"disc_CkVQ4\",\"caption\":\"caption_DQlVD\"};","import React, { ReactNode, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { ListContext } from '../../Component';\n\nimport styles from './index.module.css';\n\nexport type ItemProps = {\n    /**\n     * Дополнительный текст\n     */\n    caption?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Item: React.FC<ItemProps> = ({ caption, children }) => {\n    const {\n        orderedList,\n        markerType,\n        colorMarker,\n        reversed,\n        index = 0,\n        start = 0,\n    } = useContext(ListContext);\n\n    const markerLowerAlpha = markerType === 'lower-alpha';\n\n    const itemClassNames = cn(styles.item, {\n        [styles.unorderedItem]: markerLowerAlpha,\n        [styles.reversed]: reversed,\n    });\n\n    const isDisc = markerType === '•';\n\n    const count = start === 0 ? index + 1 : start + index;\n    const marker = orderedList || markerType === 'decimal' ? `${count}.` : markerType;\n\n    return (\n        <li className={cn(itemClassNames)}>\n            {!markerLowerAlpha && (\n                <Typography.Text\n                    tag='div'\n                    color={colorMarker}\n                    monospaceNumbers={true}\n                    view='primary-medium'\n                    className={cn(styles.slot, {\n                        [styles.disc]: isDisc && !orderedList,\n                        [styles.defaultColor]: !colorMarker,\n                    })}\n                >\n                    {marker}\n                </Typography.Text>\n            )}\n            <div>\n                <Typography.Text tag='div' view='primary-medium'>\n                    {children}\n                </Typography.Text>\n                {caption && (\n                    <Typography.Text\n                        tag='div'\n                        view='primary-small'\n                        color='secondary'\n                        className={styles.caption}\n                    >\n                        {caption}\n                    </Typography.Text>\n                )}\n            </div>\n        </li>\n    );\n};\n\nItem.displayName = 'ListItem';\n","import { isValidElement, ReactNode } from 'react';\n\nexport const isItemElement = (obj: JSX.Element, name?: string): boolean =>\n    typeof obj === 'object' && obj.type.displayName === name;\n\nexport const isItem = (child: ReactNode) =>\n    isValidElement(child) && isItemElement(child, 'ListItem');\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"list_qvd0s\",\"lowerAlpha\":\"lowerAlpha_ZrKFj\",\"decimal\":\"decimal_Hatns\",\"reversed\":\"reversed_DWhfe\"};","import React, { Children, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Item } from './components/item';\nimport { isItem } from './utils';\n\nimport styles from './index.module.css';\n\nexport type TListContext = {\n    /**\n     * Упорядоченный список\n     */\n    orderedList?: boolean;\n\n    /**\n     * Маркер\n     * @default '—' for ul and 'decimal' for ol\n     */\n    markerType?: 'lower-alpha' | 'decimal' | string | ReactNode;\n\n    /**\n     * Цвет маркера\n     */\n    colorMarker?: ColorMarkerType;\n\n    /**\n     * Список обратного счета\n     */\n    reversed?: boolean;\n\n    /**\n     * Номер пункта\n     */\n    index?: number;\n\n    /**\n     * Начало отсчета элементов списка\n     */\n    start?: number;\n};\n\nexport const ListContext = React.createContext<TListContext>({});\n\ntype ColorMarkerType =\n    | 'tertiary'\n    | 'accent'\n    | 'primary'\n    | 'attention'\n    | 'positive'\n    | 'secondary'\n    | 'tertiary-inverted'\n    | 'primary-inverted'\n    | 'secondary-inverted'\n    | 'link'\n    | 'negative';\n\nexport type ListProps = {\n    /**\n     * HTML тег\n     * @default 'ul'\n     */\n    tag?: 'ul' | 'ol';\n\n    /**\n     * Маркер\n     * @default '—' for ul and 'decimal' for ol\n     */\n    marker?: 'lower-alpha' | 'decimal' | string | ReactNode;\n\n    /**\n     * Css-класс для стилизации\n     */\n    className?: string;\n\n    /**\n     * Цвет маркера\n     */\n    colorMarker?: ColorMarkerType;\n\n    /**\n     * Список обратного счета\n     */\n    reversed?: boolean;\n\n    /**\n     * Начало отсчета элементов списка\n     */\n    start?: number;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: ReactNode;\n} & Omit<React.OlHTMLAttributes<HTMLOListElement>, 'type'>;\n\nconst ListComponent: React.FC<ListProps> = ({\n    tag = 'ul',\n    marker,\n    className,\n    dataTestId,\n    colorMarker,\n    children,\n    reversed,\n    start,\n    ...restProps\n}) => {\n    const markerType = marker || (tag === 'ul' ? '—' : 'decimal');\n    const alphaMarker = markerType === 'lower-alpha';\n    const decimalMarker = markerType === 'decimal';\n    const Component = tag === 'ul' || alphaMarker ? 'ul' : 'ol';\n\n    const orderedList = Component === 'ol';\n\n    const listClassNames = cn(\n        styles.list,\n        {\n            [styles.lowerAlpha]: alphaMarker,\n            [styles.decimal]: decimalMarker,\n            [styles.reversed]: reversed,\n        },\n        className,\n    );\n\n    /* eslint-disable react/jsx-no-constructed-context-values */\n    return (\n        <Component className={listClassNames} data-test-id={dataTestId} {...restProps}>\n            {Children.map(children, (child, index) => (\n                <ListContext.Provider\n                    value={{ orderedList, markerType, colorMarker, reversed, index, start }}\n                >\n                    {isItem(child) ? child : <Item>{child}</Item>}\n                </ListContext.Provider>\n            ))}\n        </Component>\n    );\n};\n\nexport const List = Object.assign(ListComponent, {\n    Item,\n});\n","export const listPresets = {\n    mobile: {\n        tag: 'ul',\n        marker: '–',\n    },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_XRPUW\",\"blink\":\"blink_ItqMJ\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type LoaderProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Loader: React.FC<LoaderProps> = ({ className, dataTestId }) => (\n    <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n        <div />\n        <div />\n        <div />\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"textHidden\":\"textHidden_XBnIp\"};","import React, { ChangeEvent, MouseEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport { createTextMaskInputElement, TextMaskInputElement } from 'text-mask-core';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport styles from './index.module.css';\n\n// TODO: заставить rollup добавлять кастомные декларации в сборку\ntype Mask = Array<string | RegExp>;\ntype TextMaskConfig = {\n    currentCaretPosition: number;\n    rawValue: string;\n    previousConformedValue: string;\n    mask?: Mask | ((rawValue: string) => Mask);\n    guide?: boolean;\n    showMask?: boolean;\n    placeholderChar?: string;\n    keepCharPositions?: boolean;\n    pipe?: (\n        conformedValue: string,\n        config: TextMaskConfig,\n    ) => false | string | { value: string; indexesOfPipedChars: number[] };\n};\n\nexport type MaskedInputProps = InputProps & {\n    /**\n     * Маска для поля ввода\n     * https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#mask-array\n     */\n    mask?: TextMaskConfig['mask'];\n\n    /**\n     * Управляет поведением компонента при удалении символов\n     */\n    keepCharPositions?: TextMaskConfig['keepCharPositions'];\n\n    /**\n     * Дает возможность изменить значение поля перед рендером\n     */\n    onBeforeDisplay?: TextMaskConfig['pipe'];\n};\n\n// Символ плейсхолдера не может входить в маску, поэтому вместо пробела используется \\u2000\nexport const PLACEHOLDER_CHAR = '\\u2000';\n\nexport const MaskedInput = React.forwardRef<HTMLInputElement, MaskedInputProps>(\n    (\n        {\n            mask,\n            keepCharPositions = false,\n            value,\n            defaultValue,\n            className,\n            onBeforeDisplay,\n            onChange,\n            onClear,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n        const textMask = useRef<TextMaskInputElement | null>(null);\n\n        const [inputValue, setInputValue] = useState(value || defaultValue || '');\n        // Не показываем сырое значение до применения маски\n        const [textHidden, setTextHidden] = useState(true);\n\n        const update = useCallback((newValue = '') => {\n            if (textMask.current && inputRef.current) {\n                try {\n                    textMask.current.update(newValue);\n                } catch (e) {\n                    // ignore masking errors\n                }\n\n                setInputValue(inputRef.current.value);\n            }\n        }, []);\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                update(event.target.value);\n\n                if (onChange) {\n                    onChange(event, {\n                        value: event.target.value,\n                    });\n                }\n            },\n            [onChange, update],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                update('');\n                if (onClear) onClear(event);\n            },\n            [onClear, update],\n        );\n\n        useEffect(() => {\n            if (inputRef.current) {\n                textMask.current = createTextMaskInputElement({\n                    mask,\n                    inputElement: inputRef.current,\n                    pipe: onBeforeDisplay,\n                    guide: false,\n                    keepCharPositions,\n                    showMask: false,\n                    placeholderChar: PLACEHOLDER_CHAR,\n                    rawValue: '',\n                    currentCaretPosition: 0,\n                    previousConformedValue: '',\n                });\n            }\n        }, [onBeforeDisplay, mask, keepCharPositions]);\n\n        useEffect(() => {\n            update(value || defaultValue);\n        }, [value, update, defaultValue]);\n\n        useEffect(() => {\n            setTextHidden(false);\n        }, []);\n\n        return (\n            <Input\n                {...restProps}\n                className={cn(className, { [styles.textHidden]: textHidden })}\n                value={inputValue}\n                onChange={handleInputChange}\n                onClear={handleClear}\n                ref={mergeRefs([ref, inputRef])}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { Closer } from '@alfalab/core-components-navigation-bar';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { Content } from './components/content/Component';\nimport { Footer } from './components/footer/Component';\nimport { Header } from './components/header/Component';\nimport { Modal } from './Component';\nimport type { ModalResponsiveProps, View } from './typings';\n\nconst ModalResponsiveComponent = forwardRef<HTMLDivElement, ModalResponsiveProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<View>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return (\n            <Modal ref={ref} {...restProps} view={view}>\n                {children}\n            </Modal>\n        );\n    },\n);\n\nexport const ModalResponsive = Object.assign(ModalResponsiveComponent, {\n    Header,\n    Content,\n    Footer,\n    Closer,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper_UeFvW\",\"component\":\"component_SB8Cu\",\"fullscreen\":\"fullscreen_rEQ4W\",\"s\":\"s_Zxh1t\",\"m\":\"m_iMxS5\",\"l\":\"l_t1yA2\",\"xl\":\"xl_d8fZM\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_deED_\"};","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"appear_LrTZw\",\"enter\":\"enter_AtgMD\",\"appearActive\":\"appearActive_clLT0\",\"enterActive\":\"enterActive_tUpmB\",\"exit\":\"exit_Tq_ZS\",\"exitActive\":\"exitActive_h8Khg\",\"exitDone\":\"exitDone_vF503\"};","import React, { forwardRef, useMemo, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { BaseModal } from '@alfalab/core-components-base-modal';\n\nimport { ResponsiveContext } from './ResponsiveContext';\nimport { ModalDesktopProps, View } from './typings';\n\nimport desktopStyles from './desktop.module.css';\nimport mobileStyles from './mobile.module.css';\nimport transitions from './transitions.module.css';\n\nexport const Modal = forwardRef<HTMLDivElement, ModalDesktopProps & { view: View }>(\n    (\n        {\n            size = 's',\n            fixedPosition,\n            fullscreen,\n            children,\n            className,\n            wrapperClassName,\n            transitionProps = {},\n            view,\n            ...restProps\n        },\n        ref,\n    ) => {\n        // TODO: удалить, после удаления пропсы fullscreen\n        const componentSize = fullscreen ? 'fullscreen' : size;\n\n        const modalRef = useRef<HTMLElement>(null);\n\n        const handleEntered = (node: HTMLElement, isAppearing: boolean) => {\n            if (fixedPosition && modalRef.current) {\n                const content = modalRef.current.querySelector<HTMLElement>(\n                    `.${desktopStyles.component}`,\n                );\n\n                if (content) {\n                    const { marginTop } = window.getComputedStyle(content);\n\n                    content.style.marginTop = marginTop;\n                }\n            }\n\n            if (transitionProps.onEntered) {\n                transitionProps.onEntered(node, isAppearing);\n            }\n        };\n\n        const baseModalProps =\n            view === 'desktop'\n                ? {\n                      ref: mergeRefs([ref, modalRef]),\n                      wrapperClassName: cn(desktopStyles.wrapper, wrapperClassName, {\n                          [desktopStyles.fullscreen]: componentSize === 'fullscreen',\n                      }),\n                      className: cn(\n                          desktopStyles.component,\n                          className,\n                          desktopStyles[componentSize],\n                      ),\n                      backdropProps: {\n                          invisible: componentSize === 'fullscreen',\n                          ...restProps.backdropProps,\n                      },\n                      transitionProps: {\n                          classNames: transitions,\n                          ...transitionProps,\n                          onEntered: handleEntered,\n                      },\n                  }\n                : {\n                      ref,\n                      transitionProps: {\n                          classNames: transitions,\n                          ...transitionProps,\n                      },\n                      className: cn(className, mobileStyles.component),\n                  };\n\n        const contextValue = useMemo(() => ({ size: componentSize, view }), [componentSize, view]);\n\n        return (\n            <ResponsiveContext.Provider value={contextValue}>\n                <BaseModal {...restProps} {...baseModalProps}>\n                    {children}\n                </BaseModal>\n            </ResponsiveContext.Provider>\n        );\n    },\n);\n","import { BaseModalContext } from '@alfalab/core-components-base-modal';\n\nexport const ModalContext = BaseModalContext;\n","import React from 'react';\n\nimport type { TResponsiveModalContext } from './typings';\n\nexport const ResponsiveContext = React.createContext<TResponsiveModalContext>({\n    view: 'desktop',\n    size: 's',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"s\":\"s_Ncl87\",\"m\":\"m_YExQ4\",\"l\":\"l_gIHAZ\",\"xl\":\"xl_hYNMd\",\"fullscreen\":\"fullscreen_iip2_\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_kFpdR\",\"withHeader\":\"withHeader_ghmvm\",\"flex\":\"flex_lRFJp\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_ZF1C_\"};","import React, { FC, Ref, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\nimport { ContentProps } from '../../typings';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport const Content: FC<ContentProps> = ({ children, flex, className }) => {\n    const { contentRef, hasHeader } = useContext(ModalContext);\n    const { size, view } = useContext(ResponsiveContext);\n\n    return (\n        <div\n            className={cn(styles.content, className, {\n                [styles.flex]: flex,\n                [styles.withHeader]: hasHeader,\n                [desktopStyles[size]]: view === 'desktop' && size,\n                [mobileStyles.content]: view === 'mobile',\n            })}\n            ref={contentRef as Ref<HTMLDivElement>}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_RWnDU\",\"sticky\":\"sticky_Oj5Qu\",\"fullscreen\":\"fullscreen_KxKrO\",\"s\":\"s_Vfikl\",\"m\":\"m_FlaoK\",\"l\":\"l_DoD4w\",\"xl\":\"xl_Ntozq\"};","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_Ztyb3\",\"sticky\":\"sticky_W13Fn\",\"highlighted\":\"highlighted_cHU5Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"column\":\"column_MRxXG\",\"gap-16\":\"gap-16_hOErc\",\"gap-24\":\"gap-24_ZmSnR\",\"gap-32\":\"gap-32_FjKeu\",\"start\":\"start_FQhkR\",\"center\":\"center_ru3zB\",\"space-between\":\"space-between_o5htd\"};","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_v_jwp\",\"sticky\":\"sticky_rBGBQ\"};","import React, { FC, ReactNode, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport layoutStyles from './layout.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport type FooterProps = {\n    /**\n     * Контент футера\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Фиксирует футер\n     */\n    sticky?: boolean;\n\n    /**\n     * Выравнивание элементов футера\n     */\n    layout?: 'start' | 'center' | 'space-between' | 'column';\n\n    /**\n     * Отступы между элементами футера\n     */\n    gap?: 16 | 24 | 32;\n};\n\nexport const Footer: FC<FooterProps> = ({ children, className, sticky, layout = 'start', gap }) => {\n    const { footerHighlighted, setHasFooter } = useContext(ModalContext);\n    const { size, view } = useContext(ResponsiveContext);\n\n    useEffect(() => {\n        setHasFooter(true);\n    }, [setHasFooter]);\n\n    return (\n        <div\n            className={cn(\n                styles.footer,\n                className,\n                layoutStyles[layout],\n                gap && layoutStyles[`gap-${gap}`],\n                {\n                    [styles.highlighted]: sticky && footerHighlighted,\n                    [styles.sticky]: sticky,\n                    [desktopStyles.footer]: view === 'desktop',\n                    [desktopStyles.sticky]: view === 'desktop' && sticky,\n                    [desktopStyles[size]]: view === 'desktop',\n                    [mobileStyles.footer]: view === 'mobile',\n                    [mobileStyles.sticky]: view === 'mobile' && sticky,\n                },\n            )}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_p28h1\",\"content\":\"content_sMxQ9\",\"s\":\"s_GHQwK\",\"m\":\"m_FWwDT\",\"l\":\"l_sI_c0\",\"xl\":\"xl_sTIcp\",\"fullscreen\":\"fullscreen_Gy4BX\",\"sticky\":\"sticky_tAsHv\"};","// extracted by mini-css-extract-plugin\nexport default {\"highlighted\":\"highlighted_A5oYe\",\"sticky\":\"sticky_U72b8\",\"hasContent\":\"hasContent_xQ0kf\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_ReV_7\",\"sticky\":\"sticky_Zw9wp\",\"content\":\"content_I3W29\"};","import React, { FC, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { NavigationBar, NavigationBarProps } from '@alfalab/core-components-navigation-bar';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport type HeaderProps = Omit<NavigationBarProps, 'size' | 'view' | 'parentRef'>;\n\nexport const Header: FC<HeaderProps> = ({\n    className,\n    sticky,\n    title,\n    children,\n    contentClassName,\n    hasCloser = true,\n    ...restProps\n}) => {\n    const { setHasHeader, headerHighlighted, parentRef, onClose } = useContext(ModalContext);\n    const { view, size } = useContext(ResponsiveContext);\n\n    useEffect(() => {\n        setHasHeader(true);\n    }, [setHasHeader]);\n\n    const hasContent = Boolean(title || children);\n\n    return (\n        <NavigationBar\n            {...restProps}\n            scrollableParentRef={parentRef}\n            hasCloser={hasCloser}\n            sticky={sticky}\n            view={view}\n            title={title}\n            onClose={onClose}\n            className={cn(className, {\n                [styles.highlighted]: hasContent && sticky && headerHighlighted,\n                [styles.sticky]: sticky,\n                [styles.hasContent]: hasContent,\n                [desktopStyles.header]: view === 'desktop',\n                [desktopStyles.sticky]: view === 'desktop' && sticky,\n                [desktopStyles[size]]: view === 'desktop',\n                [mobileStyles.header]: view === 'mobile',\n                [mobileStyles.sticky]: view === 'mobile' && sticky,\n            })}\n            contentClassName={cn(contentClassName, {\n                [desktopStyles.content]: view === 'desktop',\n                [mobileStyles.content]: view === 'mobile',\n            })}\n        >\n            {children}\n        </NavigationBar>\n    );\n};\n","import React, { FC, Fragment, ReactNode, useEffect } from 'react';\n\nimport { useMatchMedia } from './useMatchMedia';\nimport { isPointerEventsSupported, isTouchSupported } from './utils';\n\nconst IS_BROWSER = typeof window !== 'undefined';\nconst SUPPORTS_TOUCH = IS_BROWSER && (isPointerEventsSupported() || isTouchSupported());\n\nexport type MqProps = {\n    /**\n     * Media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n     */\n    query?: string;\n\n    /**\n     * Запрос на поддержку тач-событий\n     */\n    touch?: boolean;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n\n    /**\n     * Обработчик изменений в совпадении запросов\n     */\n    onMatchChange?: (isMatched: boolean) => void;\n};\n\nexport const Mq: FC<MqProps> = ({ children, query = '', touch, onMatchChange }) => {\n    const [queryMatches] = useMatchMedia(query);\n\n    const touchPass = touch === undefined ? true : touch === SUPPORTS_TOUCH;\n\n    const matches = touchPass && (!query || queryMatches);\n\n    useEffect(() => {\n        if (onMatchChange) {\n            onMatchChange(matches);\n        }\n    }, [matches, onMatchChange]);\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <Fragment>{matches && IS_BROWSER ? children : null}</Fragment>;\n};\n","import { useState } from 'react';\n\nimport { useLayoutEffect_SAFE_FOR_SSR } from '@alfalab/hooks';\n\nimport { getMatchMedia, releaseMatchMedia } from './utils';\n\n/**\n * Хук для медиа запросов.\n * @param query media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n * @param defaultValue Значение по-умолчанию.\n */\nexport const useMatchMedia = (query: string, defaultValue: boolean | (() => boolean) = false) => {\n    const [matches, setMatches] = useState(defaultValue);\n\n    useLayoutEffect_SAFE_FOR_SSR(() => {\n        const mql = getMatchMedia(query);\n\n        const handleMatchChange = () => setMatches(mql.matches);\n\n        handleMatchChange();\n\n        if (mql.addListener) {\n            mql.addListener(handleMatchChange);\n        } else {\n            mql.addEventListener('change', handleMatchChange);\n        }\n\n        return () => {\n            if (mql.removeListener) {\n                mql.removeListener(handleMatchChange);\n            } else {\n                mql.removeEventListener('change', handleMatchChange);\n            }\n\n            releaseMatchMedia(query);\n        };\n    }, [query]);\n\n    return [matches];\n};\n","import MqList from './mq.json';\n\ntype AvailableMediaQueries = keyof typeof MqList;\n\ntype QueriesPool = Record<string, MediaQueryList>;\n\ntype Counters = Record<string, number>;\n\n// TODO: перенести в alfalab/utils\nconst pool: QueriesPool = {};\nconst refCounters: Counters = {};\n\n/**\n * Возвращает MediaQueryList для заданного media-выражения.\n *\n * @param queryProp media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n */\nexport function getMatchMedia(queryProp: string): MediaQueryList {\n    const query = MqList[queryProp as AvailableMediaQueries] || queryProp;\n\n    if (pool[query]) {\n        refCounters[query] += 1;\n    } else {\n        pool[query] = window.matchMedia(query);\n        refCounters[query] = 1;\n    }\n\n    return pool[query];\n}\n\n/**\n * Удаляет MediaQueryList.\n *\n * @param queryProp media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n */\nexport function releaseMatchMedia(queryProp: string): void {\n    const query = MqList[queryProp as AvailableMediaQueries] || queryProp;\n\n    refCounters[query] -= 1;\n\n    if (pool[query] && refCounters[query] === 0) {\n        delete pool[query];\n        delete refCounters[query];\n    }\n}\n\n/**\n * Возвращает `true`, если есть поддержка `Pointer Events`\n */\nexport function isPointerEventsSupported() {\n    return 'PointerEvent' in window || 'msPointerEnabled' in window.navigator;\n}\n\n/**\n * Возвращает `true`, если есть поддержка `Touch Events`\n */\nexport function isTouchSupported() {\n    return (\n        'ontouchstart' in window ||\n        window.navigator.maxTouchPoints > 0 ||\n        // eslint-disable-next-line\n        (window.navigator as any).msMaxTouchPoints > 0\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_SFZbO\",\"mobileComponent\":\"mobileComponent_Urtqx\",\"flex\":\"flex_MwBNC\",\"iconWrapper\":\"iconWrapper_RFwkf\",\"text\":\"text_X8HkJ\",\"mobileWrapper\":\"mobileWrapper_tyKbs\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Button } from '@alfalab/core-components-button';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { ArrowLeftMediumMIcon } from '@alfalab/icons-glyph/ArrowLeftMediumMIcon';\nimport { ArrowLeftMIcon } from '@alfalab/icons-glyph/ArrowLeftMIcon';\n\nimport styles from './index.module.css';\n\nexport interface BackArrowAddonProps extends React.HTMLAttributes<HTMLButtonElement> {\n    /**\n     * Текст после иконки\n     */\n    text?: string;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Вид компонента\n     */\n    view: 'mobile' | 'desktop';\n\n    /**\n     * Прозрачность текста\n     */\n    textOpacity?: number;\n\n    /**\n     * Обработчик клика\n     */\n    onClick?: () => void;\n}\n\nexport const BackArrowAddon: React.FC<BackArrowAddonProps> = ({\n    text = 'Назад',\n    onClick,\n    className,\n    textOpacity = 1,\n    view,\n    ...htmlAttributes\n}) => {\n    const Icon = view === 'desktop' ? ArrowLeftMediumMIcon : ArrowLeftMIcon;\n\n    return (\n        <Button\n            view='ghost'\n            size={view === 'mobile' ? 'xxs' : 's'}\n            onClick={onClick}\n            aria-label='назад'\n            className={cn(\n                styles.component,\n                { [styles.mobileComponent]: view === 'mobile' },\n                className,\n            )}\n            {...htmlAttributes}\n        >\n            <div className={styles.flex}>\n                <div\n                    className={cn(styles.iconWrapper, {\n                        [styles.mobileWrapper]: view === 'mobile',\n                    })}\n                >\n                    <Icon />\n                </div>\n                {textOpacity > 0 && (\n                    <Typography.Text\n                        className={styles.text}\n                        view={view === 'desktop' ? 'primary-large' : 'component'}\n                        weight='medium'\n                        style={{ opacity: textOpacity }}\n                    >\n                        {text}\n                    </Typography.Text>\n                )}\n            </div>\n        </Button>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"closer\":\"closer_XFkDP\",\"button\":\"button__K5zq\",\"mobile\":\"mobile_ataB1\",\"sticky\":\"sticky_Q2q7w\"};","import React, { ButtonHTMLAttributes, ElementType, FC } from 'react';\nimport cn from 'classnames';\n\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { CrossHeavyMIcon } from '@alfalab/icons-glyph/CrossHeavyMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\n\nimport styles from './index.module.css';\n\nexport interface CloserProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    /**\n     * Вид компонента\n     */\n    view: 'desktop' | 'mobile';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Позиция крестика\n     */\n    align?: 'left' | 'right';\n\n    /**\n     * Фиксирует крестик\n     */\n    sticky?: boolean;\n\n    /**\n     * Иконка\n     */\n    icon?: ElementType;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Коллбэк закрытия.\n     */\n    onClose?: (\n        event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n        reason?: 'backdropClick' | 'escapeKeyDown' | 'closerClick',\n    ) => void;\n}\n\nexport const Closer: FC<CloserProps> = ({\n    view,\n    className,\n    sticky,\n    icon = view === 'desktop' ? CrossHeavyMIcon : CrossMIcon,\n    dataTestId,\n    onClose,\n    ...restProps\n}) => {\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClose?.(event, 'closerClick');\n    };\n\n    return (\n        <div\n            className={cn(styles.closer, className, {\n                [styles.sticky]: sticky,\n            })}\n        >\n            <IconButton\n                size={view === 'desktop' ? 's' : 'xs'}\n                className={cn(styles.button, { [styles.mobile]: view === 'mobile' })}\n                aria-label='закрыть'\n                onClick={handleClick}\n                icon={icon}\n                dataTestId={dataTestId}\n                {...restProps}\n            />\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_M7HbQ\",\"backgroundImage\":\"backgroundImage_S_aJf\",\"mainLine\":\"mainLine_Rjfok\",\"mainLineSticky\":\"mainLineSticky_vDDkv\",\"mainLineWithImageBg\":\"mainLineWithImageBg_W8KXy\",\"content\":\"content_fhDJa\",\"withBothAddons\":\"withBothAddons_S4PoF\",\"withCompactTitle\":\"withCompactTitle_yNLPw\",\"children\":\"children_euV39\",\"title\":\"title_T5iLd\",\"contentOnBotDesktop\":\"contentOnBotDesktop_NoygE\",\"contentOnBotMobile\":\"contentOnBotMobile_Rgs8g\",\"subtitle\":\"subtitle_qZ7GZ\",\"addonsWrapper\":\"addonsWrapper_NM40V\",\"rightAddons\":\"rightAddons_TvDJ0\",\"addon\":\"addon_EiOTV\",\"bottomAddons\":\"bottomAddons_TgNOu\",\"closer\":\"closer_gTVx0\",\"left\":\"left_eFWha\",\"center\":\"center_dcbw0\",\"trim\":\"trim_OdgXt\"};","/* eslint-disable complexity */\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useLayoutEffect_SAFE_FOR_SSR } from '@alfalab/hooks';\n\nimport { getDataTestId } from '../../utils';\n\nimport { BackArrowAddon } from './components/back-arrow-addon';\nimport { Closer } from './components/closer';\nimport type { ContentParams, NavigationBarProps } from './types';\n\nimport styles from './index.module.css';\n\nconst ADDONS_HEIGHT = 48;\n\nexport const NavigationBar = forwardRef<HTMLDivElement, NavigationBarProps>(\n    (\n        {\n            addonClassName,\n            className,\n            contentClassName,\n            closerClassName,\n            leftAddons,\n            rightAddons,\n            bottomAddons,\n            bottomAddonsClassName,\n            children,\n            align = 'left',\n            trim = true,\n            title,\n            titleSize = 'default',\n            subtitle,\n            hasCloser,\n            hasBackButton,\n            backButtonClassName,\n            dataTestId,\n            imageUrl,\n            closerIcon,\n            onClose,\n            view,\n            scrollableParentRef,\n            sticky,\n            onBack,\n        },\n        ref,\n    ) => {\n        const [scrollTop, setScrollTop] = useState(0);\n        const [titleMargin, setTitleMargin] = useState({ left: 0, right: 0 });\n        const bottomContentRef = useRef<HTMLDivElement>(null);\n        const headerRef = useRef<HTMLDivElement>(null);\n        const mainLinePaddingTopRef = useRef<string>('0px');\n        const leftAddonsRef = useRef<HTMLDivElement>(null);\n        const rightAddonsRef = useRef<HTMLDivElement>(null);\n\n        const compactTitle = view === 'mobile' && titleSize === 'compact';\n        const hasLeftPart = Boolean(leftAddons || hasBackButton);\n        const hasRightPart = Boolean(rightAddons || hasCloser);\n        const hasContent = Boolean(title || children);\n        const withAnimation = Boolean(view === 'mobile' && hasLeftPart && sticky && !compactTitle);\n        const showContentOnTop = hasContent && (compactTitle || !hasLeftPart);\n        const showContentOnBot = hasContent && !compactTitle && hasLeftPart;\n        const showStaticContentOnTop = !withAnimation && showContentOnTop;\n        const showStaticContentOnBot = !withAnimation && showContentOnBot;\n        const showAnimatedContentOnTop =\n            withAnimation && showContentOnBot && scrollTop > ADDONS_HEIGHT;\n        const showAnimatedContentOnBot = withAnimation && showContentOnBot;\n        const headerPaddingTop = mainLinePaddingTopRef.current;\n\n        useLayoutEffect_SAFE_FOR_SSR(() => {\n            if (align === 'center' && (showStaticContentOnTop || showAnimatedContentOnTop)) {\n                const leftAddonsWidth = leftAddonsRef.current?.offsetWidth || 0;\n                const rightAddonsWidth = rightAddonsRef.current?.offsetWidth || 0;\n\n                const marginSize = Math.abs(rightAddonsWidth - leftAddonsWidth);\n                const shouldAddLeftMargin = rightAddonsWidth - leftAddonsWidth > 0;\n\n                setTitleMargin((prev) => {\n                    const newState = shouldAddLeftMargin\n                        ? { left: marginSize, right: 0 }\n                        : { left: 0, right: marginSize };\n\n                    const isStateChanged =\n                        prev.left !== newState.left || prev.right !== newState.right;\n\n                    return isStateChanged ? newState : prev;\n                });\n            }\n        }, [\n            align,\n            showStaticContentOnTop,\n            showAnimatedContentOnTop,\n            leftAddons,\n            rightAddons,\n            hasBackButton,\n            hasCloser,\n        ]);\n\n        useEffect(() => {\n            const parent = scrollableParentRef?.current;\n\n            const handleScroll = (ev: Event) => {\n                const divElement = ev.target as HTMLDivElement;\n\n                setScrollTop(divElement.scrollTop);\n            };\n\n            if (withAnimation && headerRef.current) {\n                mainLinePaddingTopRef.current = getComputedStyle(headerRef.current).paddingTop;\n            }\n\n            if (withAnimation && parent) {\n                parent.addEventListener('scroll', handleScroll);\n            }\n\n            return () => parent?.removeEventListener('scroll', handleScroll);\n        }, [scrollableParentRef, withAnimation]);\n\n        const renderBackButton = () => {\n            let textOpacity = 1;\n\n            if (withAnimation) {\n                const height = hasContent ? ADDONS_HEIGHT : ADDONS_HEIGHT / 2;\n\n                textOpacity = Math.max(0, 1 - scrollTop / height);\n            } else if (compactTitle) {\n                textOpacity = 0;\n            }\n\n            return (\n                <div className={cn(styles.addon, backButtonClassName)}>\n                    <BackArrowAddon\n                        textOpacity={textOpacity}\n                        view={view}\n                        onClick={onBack}\n                        data-test-id={getDataTestId(dataTestId, 'back-button')}\n                    />\n                </div>\n            );\n        };\n\n        const renderContent = (args: ContentParams = {}) => {\n            const { extraClassName, wrapperRef, style, hidden } = args;\n\n            return (\n                <div\n                    style={{ ...style, visibility: hidden ? 'hidden' : 'visible' }}\n                    ref={wrapperRef}\n                    className={cn(styles.content, extraClassName, contentClassName, styles[align], {\n                        [styles.trim]: trim,\n                        [styles.withCompactTitle]: view === 'mobile' && compactTitle && hasContent,\n                    })}\n                    aria-hidden={hidden}\n                >\n                    {children && <div className={styles.children}>{children}</div>}\n                    {title && (\n                        <div\n                            className={styles.title}\n                            data-test-id={hidden ? undefined : getDataTestId(dataTestId, 'title')}\n                        >\n                            {title}\n                        </div>\n                    )}\n                    {compactTitle && subtitle && <div className={styles.subtitle}>{subtitle}</div>}\n                </div>\n            );\n        };\n\n        const renderCloser = () => (\n            <div className={cn(styles.addon, styles.closer, closerClassName)}>\n                <Closer\n                    view={view}\n                    icon={closerIcon}\n                    dataTestId={getDataTestId(dataTestId, 'closer')}\n                    onClose={onClose}\n                />\n            </div>\n        );\n\n        return (\n            <div\n                ref={mergeRefs([ref, headerRef])}\n                className={cn(styles.header, className, { [styles.backgroundImage]: imageUrl })}\n                data-test-id={getDataTestId(dataTestId)}\n                style={{\n                    ...(imageUrl && { backgroundImage: `url(${imageUrl})` }),\n                    ...(withAnimation &&\n                        bottomContentRef.current && {\n                            top: -bottomContentRef.current.scrollHeight,\n                        }),\n                }}\n            >\n                <div\n                    className={cn(styles.mainLine, {\n                        [styles.mainLineSticky]: withAnimation,\n                        [styles.mainLineWithImageBg]: imageUrl,\n                    })}\n                    style={{\n                        ...(withAnimation\n                            ? {\n                                  marginTop: `-${headerPaddingTop}`,\n                                  paddingTop: headerPaddingTop,\n                              }\n                            : null),\n                    }}\n                >\n                    {hasLeftPart && (\n                        <div className={styles.addonsWrapper} ref={leftAddonsRef}>\n                            {hasBackButton && renderBackButton()}\n                            {leftAddons && (\n                                <div className={cn(styles.addon, addonClassName)}>{leftAddons}</div>\n                            )}\n                        </div>\n                    )}\n\n                    {showStaticContentOnTop &&\n                        renderContent({\n                            ...(align === 'center'\n                                ? {\n                                      style: {\n                                          marginLeft: titleMargin.left,\n                                          marginRight: titleMargin.right,\n                                      },\n                                  }\n                                : null),\n                        })}\n\n                    {showAnimatedContentOnTop &&\n                        renderContent({\n                            extraClassName: styles.withBothAddons,\n                            style: {\n                                opacity: Math.min(1, (scrollTop - ADDONS_HEIGHT) / ADDONS_HEIGHT),\n                                ...(align === 'center'\n                                    ? {\n                                          marginLeft: titleMargin.left,\n                                          marginRight: titleMargin.right,\n                                      }\n                                    : null),\n                            },\n                        })}\n\n                    {hasRightPart && (\n                        <div\n                            className={cn(styles.addonsWrapper, styles.rightAddons)}\n                            ref={rightAddonsRef}\n                        >\n                            {rightAddons && (\n                                <div className={cn(styles.addon, addonClassName)}>\n                                    {rightAddons}\n                                </div>\n                            )}\n\n                            {hasCloser && renderCloser()}\n                        </div>\n                    )}\n                </div>\n\n                {showAnimatedContentOnBot &&\n                    renderContent({\n                        wrapperRef: bottomContentRef,\n                        extraClassName: styles.underAddons,\n                        style: { opacity: Math.max(0, 1 - scrollTop / ADDONS_HEIGHT) },\n                        hidden: scrollTop / ADDONS_HEIGHT > 1,\n                    })}\n\n                {showStaticContentOnBot &&\n                    renderContent({\n                        extraClassName: cn({\n                            [styles.contentOnBotDesktop]: view === 'desktop',\n                            [styles.contentOnBotMobile]: view === 'mobile',\n                        }),\n                    })}\n\n                {bottomAddons && (\n                    <div className={cn(styles.bottomAddons, bottomAddonsClassName)}>\n                        {bottomAddons}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","import { cloneElement, FC, ReactElement, useCallback, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { NotificationProps as CoreNotificationProps } from '@alfalab/core-components-notification';\n\nexport type NotificationElement = ReactElement<CoreNotificationProps & { id: string }>;\n\ntype NotificationProps = {\n    element: NotificationElement;\n    className: string;\n    onRemoveNotification: (id: string) => void;\n};\n\nexport const Notification: FC<NotificationProps> = ({\n    element,\n    className,\n    onRemoveNotification,\n}) => {\n    const { onClose, onCloseTimeout } = element.props;\n\n    const handleClose = useCallback(() => {\n        if (onClose) {\n            onClose();\n        }\n\n        onRemoveNotification(element.props.id);\n    }, [onClose, onRemoveNotification, element.props.id]);\n\n    const handleCloseTimeout = useCallback(() => {\n        if (onCloseTimeout) {\n            onCloseTimeout();\n        }\n\n        onRemoveNotification(element.props.id);\n    }, [element.props.id, onCloseTimeout, onRemoveNotification]);\n\n    const notificationProps = useMemo<CoreNotificationProps>(\n        () => ({\n            ...element.props,\n            visible: true,\n            className: cn(className, element.props.className),\n            usePortal: false,\n            offset: 0,\n            onClose: handleClose,\n            onCloseTimeout: handleCloseTimeout,\n        }),\n        [element, handleClose, handleCloseTimeout, className],\n    );\n\n    return cloneElement(element, notificationProps);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_mrfIK\",\"notification\":\"notification_kwAwy\",\"enter\":\"enter_DA82k\",\"enterActive\":\"enterActive_mACZa\",\"exit\":\"exit_OvjkS\",\"exitActive\":\"exitActive_lKvKF\"};","import React, { forwardRef, HTMLAttributes } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { Portal, PortalProps } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\n\nimport { Notification, NotificationElement } from './components';\n\nimport styles from './index.module.css';\n\nexport type NotificationManagerProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Массив нотификаций.\n     * В нотификации обязательно передавайте id.\n     */\n    notifications: NotificationElement[];\n\n    /**\n     * Дополнительный класс (native prop)\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Удаление нотификации\n     */\n    onRemoveNotification: (id: string) => void;\n\n    /**\n     * Нода, компонент или функция возвращающая их\n     *\n     * Контейнер к которому будут добавляться порталы\n     */\n    container?: PortalProps['getPortalContainer'];\n};\n\nconst CSS_TRANSITION_CLASS_NAMES = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n};\n\nexport const NotificationManager = forwardRef<HTMLDivElement, NotificationManagerProps>(\n    (\n        {\n            notifications,\n            className,\n            dataTestId,\n            zIndex = stackingOrder.TOAST,\n            style = {},\n            onRemoveNotification,\n            container,\n            ...restProps\n        },\n        ref,\n    ) => (\n        <Stack value={zIndex}>\n            {(computedZIndex) => (\n                <Portal getPortalContainer={container}>\n                    <div\n                        className={cn(styles.component, className)}\n                        ref={ref}\n                        data-test-id={dataTestId}\n                        style={{\n                            zIndex: computedZIndex,\n                            ...style,\n                        }}\n                        {...restProps}\n                    >\n                        <TransitionGroup>\n                            {notifications.map((element) => (\n                                <CSSTransition\n                                    key={element.props.id}\n                                    timeout={400}\n                                    classNames={CSS_TRANSITION_CLASS_NAMES}\n                                    unmountOnExit={true}\n                                >\n                                    <Notification\n                                        element={element}\n                                        className={styles.notification}\n                                        onRemoveNotification={onRemoveNotification}\n                                    />\n                                </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n                    </div>\n                </Portal>\n            )}\n        </Stack>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"notificationComponent\":\"notificationComponent_aMT9v\",\"isVisible\":\"isVisible_MQzl0\",\"isClosing\":\"isClosing_InZXy\",\"toastContent\":\"toastContent_KqMoG\",\"actionSection\":\"actionSection_c73VH\"};","import React, {\n    forwardRef,\n    Fragment,\n    MouseEvent,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useSwipeable } from 'react-swipeable';\nimport cn from 'classnames';\nimport elementClosest from 'element-closest';\n\nimport { Portal } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\nimport { ToastPlate, ToastPlateProps } from '@alfalab/core-components-toast-plate';\n\nimport { useClickOutside } from './utils';\n\nimport styles from './index.module.css';\n\nexport type NotificationProps = ToastPlateProps & {\n    /**\n     * Управление видимостью компонента\n     */\n    visible?: boolean;\n\n    /**\n     * Отступ от верхнего края\n     */\n    offset?: number;\n\n    /**\n     * Время до закрытия компонента\n     */\n    autoCloseDelay?: number | null;\n\n    /**\n     * Использовать портал\n     */\n    usePortal?: boolean;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Обработчик события истечения времени до закрытия компонента\n     */\n    onCloseTimeout?: () => void;\n\n    /**\n     * Обработчик события наведения курсора на компонент\n     */\n    onMouseEnter?: (event?: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик события снятия курсора с компонента\n     */\n    onMouseLeave?: (event?: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик клика вне компонента\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClickOutside?: (event?: MouseEvent<any>) => void;\n};\n\nconst notificationClassNameSelector = `.${styles.notificationComponent}`;\n\nexport const Notification = forwardRef<HTMLDivElement, NotificationProps>(\n    (\n        {\n            className,\n            actionSectionClassName,\n            children,\n            visible,\n            offset = 108,\n            hasCloser = true,\n            autoCloseDelay = 5000,\n            usePortal = true,\n            zIndex = stackingOrder.TOAST,\n            style,\n            onClose,\n            onCloseTimeout,\n            onMouseEnter,\n            onMouseLeave,\n            onClickOutside,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const notificationRef = useRef<HTMLDivElement>(null);\n        const autoCloseTimeoutRef = useRef(0);\n        const closeTimeoutRef = useRef(0);\n\n        const [isClosing, setIsClosing] = useState(false);\n\n        const startAutoCloseTimer = useCallback(() => {\n            if (autoCloseDelay !== null) {\n                autoCloseTimeoutRef.current = window.setTimeout(() => {\n                    if (onCloseTimeout) {\n                        onCloseTimeout();\n                    }\n                }, autoCloseDelay);\n            }\n        }, [autoCloseDelay, onCloseTimeout]);\n\n        const stopAutoCloseTimer = useCallback(() => {\n            clearTimeout(autoCloseTimeoutRef.current);\n        }, []);\n\n        useEffect(\n            () => () => {\n                clearTimeout(closeTimeoutRef.current);\n            },\n            [],\n        );\n\n        useEffect(() => {\n            elementClosest(window);\n        }, []);\n\n        useEffect(() => {\n            if (visible) {\n                startAutoCloseTimer();\n            }\n\n            return () => {\n                stopAutoCloseTimer();\n            };\n        }, [startAutoCloseTimer, stopAutoCloseTimer, visible]);\n\n        const handleMouseEnter = useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n                stopAutoCloseTimer();\n\n                if (onMouseEnter) {\n                    onMouseEnter(event);\n                }\n            },\n            [onMouseEnter, stopAutoCloseTimer],\n        );\n\n        const handleMouseLeave = useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n                stopAutoCloseTimer();\n                startAutoCloseTimer();\n\n                if (onMouseLeave) {\n                    onMouseLeave(event);\n                }\n            },\n            [onMouseLeave, startAutoCloseTimer, stopAutoCloseTimer],\n        );\n\n        const handleOutsideClick = useCallback(\n            (event: React.MouseEvent | React.TouchEvent) => {\n                const isTargetNotification = !!(event.target as Element).closest(\n                    notificationClassNameSelector,\n                );\n\n                /*\n                 * проверка isTargetNotification нужна для предотвращения срабатывания handleOutsideClick\n                 * при клике на другие нотификации, если их несколько на странице\n                 */\n                if (onClickOutside && visible && !isTargetNotification) {\n                    onClickOutside(event as React.MouseEvent);\n                }\n            },\n            [onClickOutside, visible],\n        );\n\n        useClickOutside(notificationRef, handleOutsideClick);\n\n        const swipeableHandlers = useSwipeable({\n            onSwiped: ({ dir }) => {\n                if (onClose && ['Left', 'Right', 'Up'].includes(dir)) {\n                    setIsClosing(true);\n\n                    closeTimeoutRef.current = window.setTimeout(() => {\n                        setIsClosing(false);\n                        onClose();\n                    }, 100);\n                }\n            },\n            delta: 100,\n        });\n\n        const Wrapper = usePortal ? Portal : Fragment;\n\n        return (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <Wrapper>\n                        <div {...swipeableHandlers}>\n                            <ToastPlate\n                                className={cn(\n                                    styles.notificationComponent,\n                                    {\n                                        [styles.isVisible]: visible,\n                                        [styles.isClosing]: isClosing,\n                                    },\n                                    className,\n                                )}\n                                contentClassName={styles.toastContent}\n                                actionSectionClassName={cn(\n                                    actionSectionClassName,\n                                    styles.actionSection,\n                                )}\n                                style={{\n                                    top: offset,\n                                    zIndex: computedZIndex,\n                                    ...style,\n                                }}\n                                onMouseEnter={handleMouseEnter}\n                                onMouseLeave={handleMouseLeave}\n                                ref={mergeRefs([ref, notificationRef])}\n                                role={visible ? 'alert' : undefined}\n                                hasCloser={hasCloser}\n                                onClose={onClose}\n                                {...restProps}\n                            >\n                                {children}\n                            </ToastPlate>\n                        </div>\n                    </Wrapper>\n                )}\n            </Stack>\n        );\n    },\n);\n","import React from 'react';\n\n/*\n * Дублирую хук из @alfalab/hooks, так как не подходят названия событий\n * https://github.com/core-ds/utils/blob/develop/packages/hooks/src/useClickOutside/hook.ts\n * issue завел, когда изменения будут реализованы, отсюда можно будет удалить\n * https://github.com/core-ds/utils/issues/35\n */\nexport function useClickOutside(\n    ref: React.RefObject<HTMLElement>,\n    cb: (e: React.MouseEvent | React.TouchEvent) => void,\n): void {\n    React.useEffect(() => {\n        // eslint-disable-next-line\n        const handler = (event: any) => {\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            cb(event);\n        };\n\n        document.addEventListener('click', handler);\n        document.addEventListener('touchend', handler);\n\n        return () => {\n            document.removeEventListener('click', handler);\n            document.removeEventListener('touchend', handler);\n        };\n    }, [ref, cb]);\n}\n","export const SIGNS = ['-', '+'];\nexport const SEPARATORS = [',', '.'];\n\nexport function createSeparatorsRegExp() {\n    return new RegExp(`[${SEPARATORS.map((s) => `\\\\${s}`).join('')}]`, 'g');\n}\n\nconst getNumberRegExp = (fractionLength?: number): RegExp => {\n    let reStr = '[0-9]+';\n\n    if (fractionLength !== 0) {\n        reStr = `${reStr}[${SEPARATORS.map((s) => `\\\\${s}`).join('')}]?[0-9]{0,${\n            fractionLength || Number.MAX_SAFE_INTEGER\n        }}`;\n    }\n\n    return new RegExp(`^${reStr}$`);\n};\n\n/**\n * Проверка вводимых значений.\n */\nexport const getAllowedValue = ({\n    value = '',\n    fractionLength,\n    separator,\n    allowSigns,\n}: {\n    value: string;\n    fractionLength?: number;\n    separator: string;\n    allowSigns: boolean;\n}): string => {\n    const sign = allowSigns && SIGNS.some((s) => s === value[0]) ? value[0] : '';\n    const testedValue = sign ? value.slice(1) : value;\n\n    if (getNumberRegExp(fractionLength).test(testedValue)) {\n        return value;\n    }\n\n    const [majorPart, minorPart] = testedValue\n        .split(separator)\n        .map((v) => v.replace(/[^0-9]/g, ''));\n\n    return `${sign}${majorPart}${minorPart ? separator + minorPart.slice(0, fractionLength) : ''}`;\n};\n","import React, { ChangeEvent, FocusEvent, KeyboardEvent, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport { createSeparatorsRegExp, getAllowedValue, SEPARATORS, SIGNS } from './utils';\n\nexport type NumberInputProps = Omit<InputProps, 'value' | 'onChange' | 'type'> & {\n    /**\n     * Значение поля ввода\n     */\n    value?: string | number | null;\n\n    /**\n     * Учитывать знаки '+' и '-'\n     */\n    allowSigns?: boolean;\n\n    /**\n     * Разделитель ',' или '.'\n     */\n    separator?: '.' | ',';\n\n    /**\n     * Количество символов после разделителя\n     */\n    fractionLength?: number;\n\n    /**\n     * Обработчик события изменения значения\n     */\n    onChange?: (\n        e: React.ChangeEvent<HTMLInputElement>,\n        payload: {\n            /**\n             * Числовое значение инпута\n             */\n            value: number | null;\n            /**\n             * Строковое значение инпута\n             * Используйте для изменения значения инпута\n             */\n            valueString: string;\n        },\n    ) => void;\n};\n\nexport const NumberInput = React.forwardRef<HTMLInputElement, NumberInputProps>(\n    (\n        {\n            value: propValue,\n            onChange,\n            onBlur,\n            allowSigns = true,\n            separator = ',',\n            fractionLength,\n            defaultValue,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = propValue === undefined;\n        const inputRef = useRef<HTMLInputElement>(null);\n        const [value, setValue] = useState<string>(defaultValue || '');\n\n        const getNumberValueFromStr = (valueString: string) => {\n            if (valueString === '') return null;\n\n            if (valueString.includes(',')) {\n                return parseFloat(valueString.replace(',', '.'));\n            }\n\n            return parseFloat(valueString);\n        };\n\n        const restoreCaret = (target: HTMLInputElement) => {\n            setTimeout(() => {\n                const input = target;\n                const positionCursor = input.selectionStart || 0;\n                const isEndPosition = input.value.length === positionCursor;\n\n                const enteredSign = SIGNS.some((s) => s === input.value[positionCursor - 1]);\n                const enteredSeparator = SEPARATORS.filter((s) => s !== separator).some(\n                    (s) => s === input.value[positionCursor - 1],\n                );\n\n                const shouldRestore = enteredSeparator || enteredSign;\n\n                if (!isEndPosition && shouldRestore) {\n                    input.selectionStart = positionCursor;\n                    input.selectionEnd = positionCursor;\n                }\n            });\n        };\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const input = event.target;\n            const newValue = input.value.replace(createSeparatorsRegExp(), separator);\n\n            const allowedValue = getAllowedValue({\n                value: newValue,\n                fractionLength,\n                allowSigns,\n                separator,\n            });\n\n            if (onChange) {\n                onChange(event, {\n                    value: getNumberValueFromStr(allowedValue),\n                    valueString: allowedValue,\n                });\n            }\n\n            if (uncontrolled) {\n                setValue(allowedValue);\n            }\n\n            restoreCaret(input);\n        };\n\n        const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n            const disallowedSymbols = /[/|?!@#$%^&*()_=A-Za-zА-Яа-яЁё ]/;\n            const oneKeyPress = !event.altKey && !event.metaKey && !event.ctrlKey;\n\n            // Запрещаем вводить неразрешенные символы за исключением комбинаций клавиш\n            if (oneKeyPress && event.key.length === 1 && disallowedSymbols.test(event.key)) {\n                return event.preventDefault();\n            }\n\n            const val = event.target.value;\n            const hasSeparator = (val.match(createSeparatorsRegExp()) || []).length > 0;\n\n            // Запрещаем вводить второй сепаратор\n            if (hasSeparator && SEPARATORS.some((s) => s === event.key)) {\n                return event.preventDefault();\n            }\n\n            // Запрещаем вводить лишний знак\n            if (\n                (!allowSigns || SIGNS.some((s) => s === val[0])) &&\n                SIGNS.some((s) => s === event.key)\n            ) {\n                return event.preventDefault();\n            }\n\n            const selectionStart = event.target.selectionStart || 0;\n\n            // Запрещаем вводить цифры в дробную часть, если кол-во цифр больше fractionLength\n            if (\n                hasSeparator &&\n                fractionLength &&\n                event.key.length === 1 &&\n                selectionStart > val.indexOf(separator) &&\n                val.split(separator)[1].length >= fractionLength\n            ) {\n                return event.preventDefault();\n            }\n\n            return undefined;\n        };\n\n        const handleBlur = (event: FocusEvent<HTMLInputElement>) => {\n            const valueBlur = event.target.value.replace(new RegExp(`\\\\${separator}$`), '');\n\n            if (onChange) {\n                onChange(event, {\n                    value: getNumberValueFromStr(valueBlur),\n                    valueString: valueBlur,\n                });\n            }\n\n            if (uncontrolled) {\n                setValue(valueBlur);\n            }\n\n            if (onBlur) onBlur(event);\n        };\n\n        const visibleValue = uncontrolled ? value : propValue?.toString();\n\n        return (\n            <Input\n                ref={mergeRefs([ref, inputRef])}\n                value={visibleValue}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                inputMode='decimal'\n                {...restProps}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"tag_QmFNw\",\"checked\":\"checked_w5tl3\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Tag as CoreTag, TagProps } from '@alfalab/core-components-tag';\n\nimport styles from './index.module.css';\n\nexport const Tag: FC<TagProps> = ({ className, checked, ...restProps }) => (\n    <CoreTag\n        {...restProps}\n        checked={checked}\n        size='xxs'\n        className={cn(className, styles.tag, { [styles.checked]: checked })}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"dots\":\"dots_E1ovr\"};","/* eslint-disable react/no-array-index-key */\nimport React, { FC, useCallback } from 'react';\n\nimport { PaginationProps } from '../../Component';\nimport { Tag } from '../tag';\n\nimport styles from './index.module.css';\n\ntype DefaultViewProps = Pick<\n    PaginationProps,\n    'sidePadding' | 'activePadding' | 'pagesCount' | 'currentPageIndex' | 'onPageChange'\n>;\n\nexport const DefaultView: FC<DefaultViewProps> = ({\n    sidePadding = 2,\n    activePadding = 1,\n    pagesCount,\n    currentPageIndex,\n    onPageChange = () => null,\n}) => {\n    const maxHalfCount = sidePadding + activePadding + 1;\n    const maxElementsCount = maxHalfCount * 2 + 1;\n    const itemsFit = pagesCount <= maxElementsCount;\n    const elementsCount = itemsFit ? pagesCount : maxElementsCount;\n\n    const getPageIndex = useCallback(\n        (elementIndex: number) => {\n            const lastIndex = pagesCount - 1;\n            const reverseIndex = lastIndex - currentPageIndex;\n            const lastElementIndex = elementsCount - 1;\n            const reverseElementIndex = lastElementIndex - elementIndex;\n\n            const hasCollapsedItems = (index: number) => !itemsFit && index >= maxHalfCount;\n\n            if (elementIndex < sidePadding) {\n                return elementIndex;\n            }\n\n            if (elementIndex === sidePadding && hasCollapsedItems(currentPageIndex)) {\n                return null;\n            }\n\n            if (reverseElementIndex === sidePadding && hasCollapsedItems(reverseIndex)) {\n                return null;\n            }\n\n            if (reverseElementIndex < sidePadding) {\n                return lastIndex - reverseElementIndex;\n            }\n\n            const computedIndex = currentPageIndex - maxHalfCount + elementIndex;\n\n            return Math.min(lastIndex - reverseElementIndex, Math.max(elementIndex, computedIndex));\n        },\n        [currentPageIndex, elementsCount, itemsFit, maxHalfCount, pagesCount, sidePadding],\n    );\n\n    return (\n        <React.Fragment>\n            {Array(elementsCount)\n                .fill('')\n                .map((_, i) => {\n                    const pageIndex = getPageIndex(i);\n\n                    if (pageIndex === null) {\n                        return (\n                            <div key={i.toString()} className={styles.dots}>\n                                ...\n                            </div>\n                        );\n                    }\n\n                    const active = currentPageIndex === pageIndex;\n\n                    return (\n                        <Tag\n                            key={i.toString()}\n                            checked={active}\n                            disabled={active}\n                            onClick={() => onPageChange(pageIndex)}\n                        >\n                            {pageIndex + 1}\n                        </Tag>\n                    );\n                })}\n        </React.Fragment>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_cFkqV\"};","import React, { FC } from 'react';\n\nimport { PaginationProps } from '../../Component';\n\nimport styles from './index.module.css';\n\ntype PerPageViewProps = Pick<PaginationProps, 'pagesCount' | 'currentPageIndex'>;\n\nexport const PerPageView: FC<PerPageViewProps> = ({ pagesCount, currentPageIndex }) => (\n    <span className={styles.component}>\n        {currentPageIndex + 1} из {pagesCount} страниц\n    </span>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Im5zt\",\"defaultView\":\"defaultView_Cxc7V\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { ChevronBackMIcon } from '@alfalab/icons-glyph/ChevronBackMIcon';\nimport { ChevronForwardMIcon } from '@alfalab/icons-glyph/ChevronForwardMIcon';\n\nimport { DefaultView } from './components/default-view';\nimport { PerPageView } from './components/per-page-view';\nimport { Tag } from './components/tag';\n\nimport styles from './index.module.css';\n\nexport type PaginationProps = {\n    /**\n     * Текущая страница (с нуля)\n     */\n    currentPageIndex: number;\n\n    /**\n     * Количество страниц\n     */\n    pagesCount: number;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Скрывает стрелки, если выбрана первая или последняя страница\n     */\n    hideArrows?: boolean;\n\n    /**\n     * Количество видимых страниц по бокам\n     */\n    sidePadding?: number;\n\n    /**\n     * Количество видимых страниц вокруг выбранной\n     */\n    activePadding?: number;\n\n    /**\n     * Режим пагинации\n     */\n    view?: 'default' | 'per-page';\n\n    /**\n     * Обработчик переключения страницы\n     */\n    onPageChange?: (pageIndex: number) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Pagination: FC<PaginationProps> = ({\n    currentPageIndex = 0,\n    pagesCount,\n    className,\n    sidePadding = 1,\n    activePadding = 2,\n    hideArrows = true,\n    view = 'default',\n    onPageChange = () => null,\n    dataTestId,\n}) => {\n    const handlePageClick = (pageIndex: number) => {\n        onPageChange(pageIndex);\n    };\n\n    const handleNextPageClick = () => {\n        handlePageClick(Math.min(pagesCount - 1, currentPageIndex + 1));\n    };\n\n    const handlePrevPageClick = () => {\n        handlePageClick(Math.max(0, currentPageIndex - 1));\n    };\n\n    const shouldRenderPrevArrow = view === 'per-page' || !hideArrows || currentPageIndex > 0;\n    const shouldRenderNextArrow =\n        view === 'per-page' || !hideArrows || currentPageIndex < pagesCount - 1;\n\n    const viewClassName = view === 'default' ? 'defaultView' : view;\n\n    return (\n        <div\n            className={cn(styles.component, className, styles[viewClassName])}\n            data-test-id={dataTestId}\n        >\n            {shouldRenderPrevArrow && (\n                <Tag\n                    className={styles.arrow}\n                    disabled={currentPageIndex <= 0}\n                    onClick={handlePrevPageClick}\n                    rightAddons={<ChevronBackMIcon width={16} height={16} />}\n                />\n            )}\n\n            {view === 'default' && (\n                <DefaultView\n                    activePadding={activePadding}\n                    sidePadding={sidePadding}\n                    currentPageIndex={currentPageIndex}\n                    pagesCount={pagesCount}\n                    onPageChange={handlePageClick}\n                />\n            )}\n\n            {view === 'per-page' && (\n                <PerPageView currentPageIndex={currentPageIndex} pagesCount={pagesCount} />\n            )}\n\n            {shouldRenderNextArrow && (\n                <Tag\n                    className={styles.arrow}\n                    disabled={currentPageIndex >= pagesCount - 1}\n                    onClick={handleNextPageClick}\n                    rightAddons={<ChevronForwardMIcon width={16} height={16} />}\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Xynz_\",\"dot\":\"dot_q9_sK\",\"error\":\"error__Hxqe\",\"filled\":\"filled_PSH3n\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"enter_sncMw\",\"enterActive\":\"enterActive_opHHL\",\"exit\":\"exit_qKSS2\",\"exitActive\":\"exitActive_BVFXm\",\"shake\":\"shake_BlLy2\"};","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\n\nimport styles from './index.module.css';\nimport transitions from './transitions.module.css';\n\nexport type InputProgressProps = {\n    maxCodeLength: number;\n    codeLength?: number;\n    error: boolean;\n    value?: string;\n    dataTestId?: string;\n};\n\nconst TRANSITION_DURATION = 150;\n\nexport const InputProgress: React.FC<InputProgressProps> = ({\n    value = '',\n    maxCodeLength,\n    codeLength,\n    error,\n    dataTestId,\n}) => (\n    <div\n        className={cn(styles.component, { [transitions.shake]: error })}\n        data-test-id={getDataTestId(dataTestId, 'input-progress')}\n    >\n        {codeLength\n            ? new Array(codeLength).fill(null).map((_, i) => {\n                  const filled = Boolean(value[i]);\n\n                  return (\n                      <div\n                          key={i}\n                          className={cn(styles.dot, {\n                              [styles.error]: filled && error,\n                              [styles.filled]: filled,\n                          })}\n                      />\n                  );\n              })\n            : new Array(maxCodeLength).fill(null).map((_, i) => (\n                  <CSSTransition\n                      key={i}\n                      in={Boolean(value[i])}\n                      timeout={TRANSITION_DURATION}\n                      classNames={transitions}\n                      unmountOnExit={true}\n                  >\n                      <div className={cn(styles.dot, styles.filled, { [styles.error]: error })} />\n                  </CSSTransition>\n              ))}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ct2WI\",\"digit\":\"digit_b1jTn\"};","import React, { ReactNode } from 'react';\n\nimport { BackspaceXxlIcon } from '@alfalab/icons-glyph/BackspaceXxlIcon';\n\nimport { getDataTestId } from '../../../../utils';\nimport { KeyPadButton } from '../KeyPadButton';\n\nimport styles from './index.module.css';\n\nexport type KeyPadProps = {\n    /**\n     * Показать кнопку \"очистить\".\n     */\n    showClear: boolean;\n\n    /**\n     * Слот слева.\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа.\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для автоматизированного тестирования.\n     */\n    dataTestId?: string;\n\n    /**\n     * Коллбэк нажатия на кнопку.\n     */\n    onClick: (digit: number) => void;\n\n    /**\n     * Коллбэк очистки кода.\n     */\n    onClear: () => void;\n};\n\nconst CELL_COUNT = 12;\nconst CELLS = new Array(CELL_COUNT).fill(null).map((_, i) => {\n    if (i === 10) return 0;\n\n    return i + 1;\n});\n\nexport const KeyPad: React.FC<KeyPadProps> = ({\n    leftAddons,\n    rightAddons,\n    onClick,\n    onClear,\n    showClear,\n    dataTestId,\n}) => (\n    <div className={styles.component} data-test-id={getDataTestId(dataTestId, 'keypad')}>\n        {CELLS.map((digit, i) => {\n            if (i === 9) {\n                if (leftAddons) return leftAddons;\n\n                return <div key='left-addons-empty' />;\n            }\n\n            if (i === 11) {\n                if (showClear) {\n                    return (\n                        <KeyPadButton key='clear-btn' onClick={onClear} view='ghost'>\n                            <BackspaceXxlIcon />\n                        </KeyPadButton>\n                    );\n                }\n\n                if (rightAddons) return rightAddons;\n\n                return <div key='right-addon-empty' />;\n            }\n\n            return (\n                <KeyPadButton\n                    key={digit}\n                    onClick={onClick}\n                    view='secondary'\n                    buttonClassName={styles.digit}\n                >\n                    {digit}\n                </KeyPadButton>\n            );\n        })}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Je1G5\",\"error\":\"error_MEBxn\"};","import React, { forwardRef, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Gap } from '@alfalab/core-components-gap';\n\nimport { getDataTestId } from '../../utils';\n\nimport { InputProgress } from './components/InputProgress';\nimport { KeyPad } from './components/KeyPad';\n\nimport styles from './index.module.css';\n\nexport type BasePassCodeProps = {\n    /**\n     * Код.\n     */\n    value: string;\n\n    /**\n     * Обработчик изменения кода.\n     */\n    onChange: (code: string) => void;\n\n    /**\n     * Дополнительный класс.\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Слот слева.\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа.\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования.\n     */\n    dataTestId?: string;\n};\n\ntype PropsWithUnknownLen = {\n    codeLength?: never;\n\n    /**\n     * Максимально возможная длина кода.\n     * @default 10\n     */\n    maxCodeLength?: number;\n};\n\ntype PropsWithLen = {\n    maxCodeLength?: never;\n\n    /**\n     * Длина кода.\n     */\n    codeLength?: number;\n};\n\ntype PassCodeProps = BasePassCodeProps & (PropsWithLen | PropsWithUnknownLen);\n\nexport const PassCode = forwardRef<HTMLDivElement, PassCodeProps>(\n    (\n        {\n            value = '',\n            dataTestId,\n            className,\n            leftAddons,\n            rightAddons,\n            error,\n            onChange,\n            maxCodeLength = 10,\n            codeLength,\n        },\n        ref,\n    ) => {\n        const passwordLen = codeLength || maxCodeLength;\n\n        const handleChange = (digit: number) => {\n            const newValue = value.concat(digit.toString());\n\n            if (newValue.length <= passwordLen) {\n                onChange?.(newValue);\n            }\n        };\n\n        const handleClear = () => {\n            if (value.length > 0) {\n                onChange?.(value?.slice(0, -1));\n            }\n        };\n\n        return (\n            <div\n                className={cn(styles.component, className)}\n                ref={ref}\n                data-test-id={getDataTestId(dataTestId, 'wrapper')}\n            >\n                <div className={styles.error} data-test-id={getDataTestId(dataTestId, 'error')}>\n                    {error}\n                </div>\n\n                <Gap size='m' />\n\n                <InputProgress\n                    dataTestId={dataTestId}\n                    value={value}\n                    maxCodeLength={maxCodeLength}\n                    codeLength={codeLength}\n                    error={Boolean(error)}\n                />\n\n                <Gap size='4xl' />\n\n                <KeyPad\n                    dataTestId={dataTestId}\n                    leftAddons={leftAddons}\n                    rightAddons={rightAddons}\n                    onClick={handleChange}\n                    onClear={handleClear}\n                    showClear={Boolean(value)}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_vOeR7\",\"button\":\"button_n1HgJ\",\"secondary\":\"secondary_klg7r\",\"ghost\":\"ghost_vxRt8\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nexport type KeyPadButtonProps<T> = {\n    /**\n     * Вид кнопки.\n     */\n    view: ButtonProps['view'];\n\n    /**\n     * Значение.\n     */\n    children: T;\n\n    /**\n     * Дополнительный класс.\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс кнопки.\n     */\n    buttonClassName?: string;\n\n    /**\n     * Коллбэк нажатия на кнопку.\n     */\n    onClick?: (payload: T) => void;\n};\n\nexport function KeyPadButton<T extends ReactNode>({\n    children,\n    onClick,\n    className,\n    view = 'secondary',\n    buttonClassName,\n}: KeyPadButtonProps<T>) {\n    return (\n        <div className={cn(styles.component, className)}>\n            <Button\n                className={cn(styles.button, styles[view], buttonClassName)}\n                view={view}\n                onClick={() => onClick?.(children)}\n            >\n                {children}\n            </Button>\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"eye\":\"eye_AWsOT\",\"xl\":\"xl_gk9PF\",\"input\":\"input_kTVfp\"};","import React, { forwardRef, useCallback, useState } from 'react';\nimport cn from 'classnames';\n\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { Input, InputProps } from '@alfalab/core-components-input';\nimport { EyeMIcon } from '@alfalab/icons-glyph/EyeMIcon';\nimport { EyeOffMIcon } from '@alfalab/icons-glyph/EyeOffMIcon';\n\nimport styles from './index.module.css';\n\nexport type PasswordInputProps = InputProps & {\n    /**\n     * Управление видимостью пароля (controlled)\n     */\n    passwordVisible?: boolean;\n\n    /**\n     * Коллбэк при изменении видимости пароля\n     */\n    onPasswordVisibleChange?: (visible: boolean) => void;\n};\n\nexport const PasswordInput = forwardRef<HTMLInputElement, PasswordInputProps>(\n    (\n        {\n            onPasswordVisibleChange,\n            passwordVisible,\n            disabled,\n            colors,\n            rightAddons,\n            size = 's',\n            className,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = passwordVisible === undefined;\n\n        const [statePasswordVisible, setStatePasswordVisible] = useState(\n            uncontrolled ? false : passwordVisible,\n        );\n\n        const handleButtonClick = useCallback(() => {\n            if (onPasswordVisibleChange) {\n                onPasswordVisibleChange(!passwordVisible);\n            }\n\n            if (uncontrolled) {\n                setStatePasswordVisible((visible) => !visible);\n            }\n        }, [passwordVisible, uncontrolled, onPasswordVisibleChange]);\n\n        const isPasswordVisible = uncontrolled ? statePasswordVisible : passwordVisible;\n\n        return (\n            <Input\n                {...restProps}\n                disabled={disabled}\n                type={isPasswordVisible ? 'text' : 'password'}\n                size={size}\n                ref={ref}\n                colors={colors}\n                className={cn(className, styles[size])}\n                rightAddons={\n                    <React.Fragment>\n                        {rightAddons}\n                        <IconButton\n                            className={styles.eye}\n                            colors={colors}\n                            view='secondary'\n                            size='s'\n                            icon={isPasswordVisible ? EyeMIcon : EyeOffMIcon}\n                            onClick={handleButtonClick}\n                            disabled={disabled}\n                        />\n                    </React.Fragment>\n                }\n                addonsClassName={styles.addons}\n                inputClassName={styles.input}\n            />\n        );\n    },\n);\n","import { Theme, ThemeParams } from 'react-canvas-pattern-lock';\n\nimport { OBSERVABLE_TOKENS, THEME_STATE } from './consts';\n\nexport function getDefaultObserveTarget() {\n    return document.head;\n}\n\nexport function getColorByToken(token: string) {\n    return getComputedStyle(document.documentElement).getPropertyValue(token);\n}\n\nexport const getSizes = (() => {\n    const COMMON_SIZES = {\n        lineWidth: 6,\n        nodeRing: 0,\n        nodeCore: 12,\n    };\n\n    let cachedSize: { elementSizes: ThemeParams['dimens']; width: number; height: number };\n\n    return () => {\n        if (cachedSize) {\n            return cachedSize;\n        }\n\n        if (window.matchMedia('(min-width: 390px)').matches) {\n            cachedSize = {\n                elementSizes: { ...COMMON_SIZES, nodeRadius: 43 },\n                width: 322,\n                height: 322,\n            };\n        } else if (window.matchMedia('(min-width: 360px)').matches) {\n            cachedSize = {\n                elementSizes: { ...COMMON_SIZES, nodeRadius: 38 },\n                width: 292,\n                height: 292,\n            };\n        } else {\n            cachedSize = {\n                elementSizes: { ...COMMON_SIZES, nodeRadius: 32 },\n                width: 240,\n                height: 240,\n            };\n        }\n\n        return cachedSize;\n    };\n})();\n\nexport function getTheme(dimens: ThemeParams['dimens']): Theme {\n    const baseColors = {\n        primary: getColorByToken(OBSERVABLE_TOKENS.PRIMARY),\n        bg: getColorByToken(OBSERVABLE_TOKENS.BG),\n        ringBg: getColorByToken(OBSERVABLE_TOKENS.RING_BG_INITIAL),\n    };\n\n    return {\n        [THEME_STATE.INITIAL]: {\n            colors: {\n                ...baseColors,\n                accent: getColorByToken(OBSERVABLE_TOKENS.ACCENT_INITIAL),\n                selectedRingBg: getColorByToken(OBSERVABLE_TOKENS.SELECTED_RING_BG_INITIAL),\n            },\n            dimens,\n        },\n        [THEME_STATE.SUCCESS]: {\n            colors: {\n                ...baseColors,\n                accent: getColorByToken(OBSERVABLE_TOKENS.ACCENT_SUCCESS),\n                selectedRingBg: getColorByToken(OBSERVABLE_TOKENS.SELECTED_RING_BG_SUCCESS),\n            },\n            dimens,\n        },\n        [THEME_STATE.FAILURE]: {\n            colors: {\n                ...baseColors,\n                accent: getColorByToken(OBSERVABLE_TOKENS.ACCENT_FAILURE),\n                selectedRingBg: getColorByToken(OBSERVABLE_TOKENS.SELECTED_RING_BG_FAILURE),\n            },\n            dimens,\n        },\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ztYMj\",\"hidden\":\"hidden_HQPS_\",\"error\":\"error_y55uz\",\"forgotBtn\":\"forgotBtn_hfJnP\"};","import React, { forwardRef, useEffect, useState } from 'react';\nimport type { Theme, TPatternLockInstance } from 'react-canvas-pattern-lock';\nimport { ReactCanvasPatternLock } from 'react-canvas-pattern-lock';\nimport cn from 'classnames';\n\nimport { Button } from '@alfalab/core-components-button';\nimport { Gap } from '@alfalab/core-components-gap';\n\nimport { getDataTestId } from '../../utils';\n\nimport { DEFAULT_EXTRA_BOUNDS, OBSERVABLE_TOKENS, OBSERVE_OPTIONS, THEME_STATE } from './consts';\nimport type { PatternLockProps } from './typings';\nimport { getColorByToken, getDefaultObserveTarget, getSizes, getTheme } from './utils';\n\nimport styles from './index.module.css';\n\nexport const PatternLock = forwardRef<TPatternLockInstance, PatternLockProps>(\n    (\n        {\n            observeTokens = false,\n            observerParams = {},\n            justifyNodes = 'space-between',\n            className,\n            error,\n            dataTestId,\n            forgotCodeBtnText = 'Забыли код?',\n            showForgotCodeBtn = false,\n            onForgotBtnClick,\n            extraBounds = DEFAULT_EXTRA_BOUNDS,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const [params, setParams] = useState<\n            { theme: Theme; width: number; height: number } | undefined\n        >();\n\n        useEffect(() => {\n            const { elementSizes, width, height } = getSizes();\n\n            setParams({\n                theme: getTheme(elementSizes),\n                width,\n                height,\n            });\n        }, []);\n\n        useEffect(() => {\n            let styleObserver: MutationObserver | null = null;\n\n            if (observeTokens) {\n                const { options = OBSERVE_OPTIONS, getTarget = getDefaultObserveTarget } =\n                    observerParams;\n\n                styleObserver = new MutationObserver(() =>\n                    setParams((prevState) => {\n                        const { width, height, elementSizes } = getSizes();\n\n                        if (!prevState) {\n                            return { theme: getTheme(elementSizes), width, height };\n                        }\n\n                        const prevBgColor = prevState.theme[THEME_STATE.INITIAL].colors.bg;\n                        const themeChanged = prevBgColor !== getColorByToken(OBSERVABLE_TOKENS.BG);\n\n                        if (themeChanged) return { ...prevState, theme: getTheme(elementSizes) };\n\n                        return prevState;\n                    }),\n                );\n\n                styleObserver.observe(getTarget(), options);\n            }\n\n            return () => styleObserver?.disconnect();\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [observeTokens]);\n\n        return (\n            <div\n                className={cn(styles.component, className, { [styles.hidden]: !params })}\n                data-test-id={dataTestId}\n            >\n                <Gap size='xs' />\n\n                <div className={styles.error}>{error}</div>\n\n                <Gap size='3xl' />\n\n                <ReactCanvasPatternLock\n                    {...restProps}\n                    {...params}\n                    ref={ref}\n                    rows={3}\n                    cols={3}\n                    justifyNodes={justifyNodes}\n                    extraBounds={extraBounds}\n                />\n\n                {showForgotCodeBtn ? (\n                    <Button\n                        view='link'\n                        className={styles.forgotBtn}\n                        onClick={onForgotBtnClick}\n                        dataTestId={getDataTestId(dataTestId, 'forgot-code-btn')}\n                    >\n                        {forgotCodeBtnText}\n                    </Button>\n                ) : (\n                    <div className={styles.forgotBtn} />\n                )}\n            </div>\n        );\n    },\n);\n","import type { ReactPatternLockProps } from 'react-canvas-pattern-lock';\n\nimport type { ObservableTokens } from './typings';\n\nexport const OBSERVE_OPTIONS: MutationObserverInit = {\n    childList: true,\n    attributes: false,\n    characterData: false,\n    subtree: true,\n};\n\nexport const DEFAULT_EXTRA_BOUNDS: ReactPatternLockProps['extraBounds'] = [75, 50, 75, 50];\n\nexport const OBSERVABLE_TOKENS: ObservableTokens = {\n    ACCENT_INITIAL: '--color-light-graphic-primary',\n    ACCENT_SUCCESS: '--color-light-graphic-positive',\n    ACCENT_FAILURE: '--color-light-graphic-negative',\n    PRIMARY: '--color-light-graphic-tertiary',\n    BG: '--color-light-bg-primary',\n    RING_BG_INITIAL: '--color-light-specialbg-secondary-transparent',\n    SELECTED_RING_BG_INITIAL: '--color-light-specialbg-tertiary-transparent',\n    SELECTED_RING_BG_SUCCESS: '--color-light-graphic-positive-alpha-10',\n    SELECTED_RING_BG_FAILURE: '--color-light-graphic-negative-alpha-10',\n};\n\nexport const THEME_STATE = {\n    INITIAL: 'initial',\n    SUCCESS: 'success',\n    FAILURE: 'failure',\n};\n","/**\n * Удаляет форматирование номера телефона\n * @param phone Номер телефона\n */\n\nexport const deleteFormatting = (phone: string) =>\n    phone.replace('+', '').replace(/^7/, '').replace(/\\s/g, '').replace(/-/g, '');\n\nexport function setCaretPosition({\n    position,\n    inputRef,\n}: {\n    position: number;\n    inputRef: React.RefObject<HTMLInputElement>;\n}) {\n    window.requestAnimationFrame(() => {\n        if (inputRef === null || !inputRef.current) return;\n\n        inputRef.current.setSelectionRange(position, position);\n    });\n}\n\nexport function getInsertedNumber({\n    rawValue,\n    clearableCountryCode,\n    countryPrefix,\n    previousConformedValue,\n}: {\n    rawValue: string;\n    clearableCountryCode: boolean;\n    countryPrefix: string;\n    previousConformedValue: string;\n}) {\n    if (!clearableCountryCode && previousConformedValue === countryPrefix) {\n        if (rawValue.startsWith('7') || rawValue.startsWith('8')) {\n            return rawValue;\n        }\n\n        return rawValue.slice(countryPrefix.length);\n    }\n\n    return rawValue;\n}\n","import React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport { conformToMask, TextMaskConfig } from 'text-mask-core';\n\nimport { MaskedInput, MaskedInputProps } from '@alfalab/core-components-masked-input';\n\nimport { deleteFormatting, getInsertedNumber, setCaretPosition } from './utils';\n\nconst mask = [\n    '+',\n    '7',\n    ' ',\n    /([0-6]|[8-9])/,\n    /\\d/,\n    /\\d/,\n    ' ',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n];\n\nconst countryPrefix = '+7 ';\n\nexport type PhoneInputProps = Omit<MaskedInputProps, 'onBeforeDisplay' | 'type' | 'mask'> & {\n    clearableCountryCode?: boolean;\n};\n\nexport const PhoneInput = React.forwardRef<HTMLInputElement, PhoneInputProps>(\n    ({ clearableCountryCode = true, ...restProps }, ref) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        // Оставляет возможность прокинуть ref извне\n        useImperativeHandle(ref, () => inputRef.current as HTMLInputElement);\n\n        const handleBeforeDisplay = useCallback(\n            (conformedValue: string, config: TextMaskConfig) => {\n                const { rawValue, previousConformedValue, currentCaretPosition } = config;\n\n                /*\n                 * код ниже нужен для фикса следующих багов библиотеки text-mask:\n                 * 1) так как код страны указан в маске жестко как \"+7\",\n                 * то при удалении цифры перед ним каретка устанавливается перед кодом страны\n                 * 2) в номере телефона есть пробелы и дефисы,\n                 * при редактировании цифр рядом с этими символами каретка перескакивает через них,\n                 * а не остается на том же месте, на котором была до редактирования\n                 */\n                const previousValueWithoutFormatting = previousConformedValue\n                    ? deleteFormatting(previousConformedValue)\n                    : '';\n                const currentValueWithoutFormatting = deleteFormatting(conformedValue) || '';\n\n                if (\n                    previousConformedValue &&\n                    (([3, 6].includes(currentCaretPosition) &&\n                        Math.abs(\n                            previousValueWithoutFormatting.length -\n                                currentValueWithoutFormatting.length,\n                        ) === 1) ||\n                        ([7, 10, 13].includes(currentCaretPosition) &&\n                            previousConformedValue.length > currentCaretPosition))\n                ) {\n                    setCaretPosition({ position: currentCaretPosition, inputRef });\n                }\n\n                // Удаление цифры перед кодом страны удаляет только саму цифру, код остается (\"+7 1\" -> \"+7 \")\n                if (rawValue === countryPrefix) {\n                    return rawValue;\n                }\n\n                // Вставка номера с 10 цифрами без кода страны\n                if (rawValue.length === 10 && conformedValue.length === mask.length) {\n                    const masked = conformToMask(`+7${rawValue}`, mask, config);\n\n                    return masked.conformedValue;\n                }\n\n                const insertedNumber = getInsertedNumber({\n                    rawValue,\n                    clearableCountryCode,\n                    countryPrefix,\n                    previousConformedValue,\n                });\n\n                // Вставка номера, начинающегося с 8 или 7: 89990313131, 71112223344\n                if (\n                    conformedValue.length === mask.length &&\n                    (insertedNumber.startsWith('8') || insertedNumber.startsWith('7'))\n                ) {\n                    const masked = conformToMask(`+7${insertedNumber.slice(1)}`, mask, config);\n\n                    return masked.conformedValue;\n                }\n\n                // Если ввод начат с 7 или 8 - выводит \"+7 \" и дает продолжить ввод со след. цифры\n                if (rawValue.length === 1 && ['7', '8'].includes(rawValue[0])) {\n                    return countryPrefix;\n                }\n\n                const abortCountryCodeClearing = !clearableCountryCode && !conformedValue;\n\n                if (abortCountryCodeClearing) {\n                    setCaretPosition({ position: countryPrefix.length, inputRef });\n\n                    if (!rawValue.length) return countryPrefix;\n\n                    return false;\n                }\n\n                return conformedValue;\n            },\n            [clearableCountryCode],\n        );\n\n        return (\n            <MaskedInput\n                {...restProps}\n                defaultValue={clearableCountryCode ? restProps.defaultValue : countryPrefix}\n                mask={mask}\n                onBeforeDisplay={handleBeforeDisplay}\n                type='tel'\n                ref={inputRef}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_yeBjE\",\"optionsPopover\":\"optionsPopover_ZFIbu\",\"sideGap\":\"sideGap_khSlz\",\"option\":\"option_TJJ9_\"};","import React, { FC, forwardRef, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport {\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { Field as DefaultField } from './field';\nimport { Option as DefaultOption } from './option';\n\nimport styles from './index.module.css';\n\nconst SIDE_POSITIONS = ['right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'];\n\nexport type PickerButtonSize = 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\nexport type PickerButtonVariant = 'default' | 'compact';\n\nexport type PickerButtonDesktopProps = Omit<\n    BaseSelectProps,\n    | 'Field'\n    | 'placeholder'\n    | 'Arrow'\n    | 'autocomplete'\n    | 'size'\n    | 'onFocus'\n    | 'selected'\n    | 'closeOnSelect'\n    | 'multiple'\n    | 'fieldProps'\n    | 'hint'\n    | 'allowUnselect'\n    | 'options'\n> &\n    Pick<ButtonProps, 'view' | 'loading' | 'leftAddons' | 'rightAddons'> & {\n        options: Array<\n            BaseSelectProps['options'][0] & {\n                /**\n                 * Иконка, отображающаяся слева от текстового представления пункта\n                 */\n                icon?: FC<SVGProps<SVGSVGElement>>;\n            }\n        >;\n\n        /**\n         * Размер кнопки\n         */\n        size?: PickerButtonSize;\n\n        /**\n         * Тип кнопки\n         */\n        variant?: PickerButtonVariant;\n\n        /**\n         * Показывать стрелку\n         * @default true\n         */\n        showArrow?: boolean;\n    };\n\nexport const PickerButtonDesktop = forwardRef<HTMLInputElement, PickerButtonDesktopProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            view,\n            loading,\n            size = 'm',\n            variant = 'default',\n            className,\n            leftAddons,\n            rightAddons,\n            popperClassName,\n            optionClassName,\n            showArrow,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const isSideGap =\n            !!restProps.popoverPosition && SIDE_POSITIONS.includes(restProps.popoverPosition);\n\n        return (\n            <BaseSelect\n                {...restProps}\n                optionProps={{ Checkmark: null }}\n                ref={ref}\n                Option={Option}\n                Field={DefaultField}\n                size={size === 'm' ? 'm' : 's'}\n                fieldProps={{\n                    view,\n                    loading,\n                    /** size у select, button несовместимы */\n                    buttonSize: size,\n                    buttonVariant: variant,\n                    leftAddons,\n                    rightAddons,\n                    showArrow,\n                }}\n                Optgroup={Optgroup}\n                OptionsList={OptionsList}\n                className={cn(styles.container, className)}\n                popperClassName={cn('cc-picker-button', styles.optionsPopover, popperClassName, {\n                    [styles.sideGap]: isSideGap,\n                })}\n                optionClassName={cn(styles.option, optionClassName)}\n                selected={[]}\n                closeOnSelect={true}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"iconContainer\":\"iconContainer_s0KfQ\",\"addonsContainer\":\"addonsContainer_A1BDF\",\"showControlIcon\":\"showControlIcon_vw_Fr\",\"open\":\"open_vBG4R\"};","import React, { ButtonHTMLAttributes, FC, Fragment, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select/src/typings';\n\nimport { PickerButtonSize, PickerButtonVariant } from '../Component';\nimport { getIcon } from '../utils';\n\nimport styles from './index.module.css';\n\ntype FieldProps = Omit<BaseFieldProps, 'size' | 'hint' | 'success' | 'error' | 'placeholder'> &\n    ButtonProps & {\n        buttonSize?: PickerButtonSize;\n        buttonVariant?: PickerButtonVariant;\n        showArrow?: boolean;\n    };\n\nexport const Field = ({\n    buttonSize = 'm',\n    buttonVariant = 'default',\n    view,\n    label,\n    open,\n    multiple,\n    rightAddons,\n    Arrow,\n    innerProps,\n    className,\n    selected,\n    selectedMultiple,\n    setSelectedItems,\n    toggleMenu,\n    valueRenderer,\n    showArrow = true,\n    labelView,\n    ...restProps\n}: FieldProps) => {\n    const Icon: FC<SVGProps<SVGSVGElement>> = getIcon(buttonVariant, buttonSize);\n\n    const { ref, ...restInnerProps } = innerProps;\n\n    const buttonProps = {\n        ...restProps,\n        ...restInnerProps,\n    } as ButtonHTMLAttributes<HTMLButtonElement>;\n\n    return (\n        <div ref={ref}>\n            <Button\n                {...buttonProps}\n                rightAddons={\n                    <Fragment>\n                        {rightAddons && (\n                            <span\n                                className={cn(styles.addonsContainer, {\n                                    [styles.showControlIcon]:\n                                        showArrow || buttonVariant === 'compact',\n                                })}\n                            >\n                                {rightAddons}\n                            </span>\n                        )}\n\n                        {(showArrow || buttonVariant === 'compact') && (\n                            <span\n                                className={cn(\n                                    styles.iconContainer,\n                                    buttonVariant !== 'compact' && open && styles.open,\n                                )}\n                            >\n                                <Icon data-test-id='picker-button-icon' />\n                            </span>\n                        )}\n                    </Fragment>\n                }\n                block={true}\n                view={view}\n                size={buttonSize}\n                className={cn(styles.component, view === 'primary' && styles.primary, className)}\n            >\n                {buttonVariant !== 'compact' && label}\n            </Button>\n        </div>\n    );\n};\n","import { FC, SVGProps } from 'react';\n\nimport { ChevronDownCompactSIcon } from '@alfalab/icons-glyph/ChevronDownCompactSIcon';\nimport { ChevronDownMIcon } from '@alfalab/icons-glyph/ChevronDownMIcon';\nimport { MoreMIcon } from '@alfalab/icons-glyph/MoreMIcon';\nimport { MoreSIcon } from '@alfalab/icons-glyph/MoreSIcon';\n\nimport { PickerButtonSize, PickerButtonVariant } from '..';\n\nexport const getIcon = (\n    variant: PickerButtonVariant,\n    size: PickerButtonSize,\n): FC<SVGProps<SVGSVGElement>> => {\n    if (variant === 'compact') {\n        return size === 'xxs' ? MoreSIcon : MoreMIcon;\n    }\n\n    return size === 'xxs' ? ChevronDownCompactSIcon : ChevronDownMIcon;\n};\n","import React, { forwardRef } from 'react';\n\nimport {\n    AdditionalMobileProps,\n    Optgroup as DefaultOptgroup,\n    SelectMobile,\n} from '@alfalab/core-components-select';\n\nimport { PickerButtonDesktopProps } from './Component';\nimport { Field as DefaultField } from './field';\nimport { Option as DefaultOption } from './option';\n\nexport type PickerButtonMobileProps = Omit<\n    PickerButtonDesktopProps,\n    'OptionsList' | 'Checkmark' | 'onScroll'\n> &\n    AdditionalMobileProps;\n\nexport const PickerButtonMobile = forwardRef<HTMLInputElement, PickerButtonMobileProps>(\n    (\n        {\n            options,\n            label,\n            Option = DefaultOption,\n            Optgroup = DefaultOptgroup,\n            view,\n            loading,\n            variant = 'default',\n            leftAddons,\n            rightAddons,\n            size,\n            bottomSheetProps,\n            showArrow,\n            ...restProps\n        },\n        ref,\n    ) => (\n        <SelectMobile\n            {...restProps}\n            label={label}\n            Option={Option}\n            bottomSheetProps={{\n                title: label,\n                stickyHeader: true,\n                ...bottomSheetProps,\n            }}\n            Field={DefaultField}\n            Optgroup={Optgroup}\n            size={size === 'm' ? 'm' : 's'}\n            closeOnSelect={true}\n            fieldProps={{\n                view,\n                loading,\n                /** size у select, button несовместимы */\n                buttonSize: size,\n                buttonVariant: variant,\n                leftAddons,\n                rightAddons,\n                showArrow,\n            }}\n            ref={ref}\n            options={options}\n            selected={[]}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport { AdditionalMobileProps } from '@alfalab/core-components-select';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { PickerButtonDesktop, PickerButtonDesktopProps } from './Component';\nimport { PickerButtonMobile } from './Component.mobile';\n\nexport type PickerButtonMatchMedia = 'desktop' | 'mobile';\n\nexport type PickerButtonResponsiveProps = PickerButtonDesktopProps &\n    AdditionalMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport const PickerButtonResponsive = forwardRef<HTMLInputElement, PickerButtonResponsiveProps>(\n    (\n        {\n            OptionsList,\n            onScroll,\n            footer,\n            swipeable,\n            bottomSheetProps,\n            breakpoint = 1024,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const [view] = useMedia(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <PickerButtonDesktop\n                ref={ref}\n                OptionsList={OptionsList}\n                onScroll={onScroll}\n                {...restProps}\n            />\n        ) : (\n            <PickerButtonMobile\n                ref={ref}\n                footer={footer}\n                swipeable={swipeable}\n                bottomSheetProps={bottomSheetProps}\n                {...restProps}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_xMu0c\",\"icon\":\"icon_PSCe7\",\"content\":\"content_OGU8b\"};","import React, { FC, SVGProps } from 'react';\n\nimport { Option as BaseOption } from '@alfalab/core-components-select';\nimport {\n    OptionProps as BaseOptionProps,\n    OptionShape,\n} from '@alfalab/core-components-select/src/typings';\n\nimport styles from './index.module.css';\n\ntype OptionProps = Omit<BaseOptionProps, 'option'> & {\n    option: OptionShape & {\n        icon?: FC<SVGProps<SVGSVGElement>>;\n    };\n};\n\nexport const Option = ({ option, children, ...restProps }: OptionProps) => {\n    const content = children || option.content || option.key;\n\n    const Icon = option.icon;\n\n    return (\n        <BaseOption option={option} {...restProps}>\n            <div className={styles.container}>\n                {Icon && <Icon className={styles.icon} />}\n                <div className={styles.content}>{content}</div>\n            </div>\n        </BaseOption>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PidtG\",\"inner\":\"inner_qULUT\",\"scrollableContent\":\"scrollableContent_R9XWi\",\"arrow\":\"arrow_rproE\",\"arrowShift\":\"arrowShift_DVdqH\",\"enter\":\"enter_bNaxk\",\"enterActive\":\"enterActive_zKtYy\",\"exit\":\"exit_h6i45\",\"exitActive\":\"exitActive_RAbbe\"};","import React, {\n    CSSProperties,\n    forwardRef,\n    MutableRefObject,\n    ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { usePopper } from 'react-popper';\nimport { CSSTransition } from 'react-transition-group';\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport { BasePlacement, ModifierArguments, Obj, VariationPlacement } from '@popperjs/core';\nimport cn from 'classnames';\nimport maxSize from 'popper-max-size-modifier';\n\nimport { Portal } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\n\nimport styles from './index.module.css';\n\ntype RefElement = HTMLElement | null;\n\nexport type Position = BasePlacement | VariationPlacement;\n\ntype PopperModifier = {\n    name: string;\n    options: Obj;\n};\n\nexport type PopoverProps = {\n    /**\n     * Управление состоянием поповера (открыт/закрыт)\n     */\n    open: boolean;\n\n    /**\n     * Элемент, относительного которого появляется поповер\n     */\n    anchorElement: RefElement;\n\n    /**\n     * Использовать ширину родительского элемента\n     */\n    useAnchorWidth?: boolean;\n\n    /**\n     * Позиционирование поповера\n     */\n    position?: Position;\n\n    /**\n     * Запрещает поповеру менять свою позицию.\n     * Например, если места снизу недостаточно,то он все равно будет показан снизу\n     */\n    preventFlip?: boolean;\n\n    /**\n     * Запрещает поповеру менять свою позицию, если он не влезает в видимую область.\n     */\n    preventOverflow?: boolean;\n\n    /**\n     *  Позволяет поповеру подствраивать свою высоту под границы экрана, если из-за величины контента он выходит за рамки видимой области экрана\n     */\n    availableHeight?: boolean;\n\n    /**\n     * Если `true`, будет отрисована стрелочка\n     */\n    withArrow?: boolean;\n\n    /**\n     * Смещение поповера.\n     * Если позиционирование top, bottom, то [x, y].\n     * Если позиционирование left, right то [y, x].\n     */\n    offset?: [number, number];\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popperClassName?: string;\n\n    /**\n     * Дополнительный класс для стрелочки\n     */\n    arrowClassName?: string;\n\n    /**\n     * Функция, возвращающая контейнер, в который будет рендериться поповер\n     */\n    getPortalContainer?: () => HTMLElement;\n\n    /**\n     * CSSTransitionProps, прокидываются в компонент CSSTransitionProps.\n     */\n    transition?: CSSTransitionProps;\n\n    /**\n     * Выставляет кастомное свойство transition-duration\n     */\n    transitionDuration?: CSSProperties['transitionDuration'];\n\n    /**\n     * Рендерит компонент, обернутый в Transition\n     */\n    withTransition?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение компонента\n     */\n    update?: MutableRefObject<() => void>;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Если поповер не помещается в переданной позиции (position), он попробует открыться в другой позиции,\n     * по очереди для каждой позиции из этого списка.\n     * Если не передавать, то поповер открывается в противоположном направлении от переданного position.\n     */\n    fallbackPlacements?: Position[];\n\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n};\n\nconst DEFAULT_TRANSITION: PopoverProps['transition'] = {\n    timeout: 150,\n};\n\nconst CSS_TRANSITION_CLASS_NAMES = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n};\n\nconst availableHieghtModifier = {\n    name: 'availableHeight',\n    enabled: true,\n    phase: 'beforeWrite',\n    requires: ['maxSize'],\n    fn({\n        state: {\n            modifiersData,\n            elements: { popper },\n        },\n    }: ModifierArguments<Obj>) {\n        const { height } = modifiersData.maxSize;\n\n        const content = popper.querySelector(`.${styles.scrollableContent}`) as HTMLElement;\n\n        if (content && !content.style.maxHeight) {\n            content.style.maxHeight = `${height}px`;\n        }\n    },\n};\n\n/**\n * Минимальный размер anchorElement,\n * при котором возможно смещение стрелочки относительно центра\n */\nconst MIN_ARROW_SHIFT_SIZE = 75;\n\nexport const Popover = forwardRef<HTMLDivElement, PopoverProps>(\n    (\n        {\n            children,\n            getPortalContainer,\n            transition = DEFAULT_TRANSITION,\n            anchorElement,\n            useAnchorWidth,\n            offset = [0, 0],\n            withArrow = false,\n            withTransition = true,\n            position = 'left',\n            preventFlip,\n            popperClassName,\n            arrowClassName,\n            className,\n            open,\n            dataTestId,\n            update,\n            transitionDuration = `${transition.timeout}ms`,\n            zIndex = stackingOrder.POPOVER,\n            fallbackPlacements,\n            preventOverflow = true,\n            availableHeight = false,\n        },\n        ref,\n    ) => {\n        const [referenceElement, setReferenceElement] = useState<RefElement>(anchorElement);\n        const [popperElement, setPopperElement] = useState<RefElement>(null);\n        const [arrowElement, setArrowElement] = useState<RefElement>(null);\n        const [arrowShift, setArrowShift] = useState(false);\n\n        const updatePopperRef = useRef<() => void>();\n\n        const popperRef = useRef<HTMLDivElement>(null);\n        const innerRef = useRef<HTMLDivElement>(null);\n\n        const popperModifiers = useMemo(() => {\n            const modifiers: PopperModifier[] = [{ name: 'offset', options: { offset } }];\n\n            if (withArrow) {\n                modifiers.push({ name: 'arrow', options: { element: arrowElement } });\n            }\n\n            if (preventFlip) {\n                modifiers.push({ name: 'flip', options: { fallbackPlacements: [] } });\n            }\n\n            if (fallbackPlacements) {\n                modifiers.push({ name: 'flip', options: { fallbackPlacements } });\n            }\n\n            if (preventOverflow) {\n                modifiers.push({ name: 'preventOverflow', options: { mainAxis: false } });\n            }\n\n            if (availableHeight) {\n                modifiers.push({ ...maxSize, options: {} });\n                modifiers.push({ ...availableHieghtModifier, options: {} });\n            }\n\n            return modifiers;\n        }, [\n            offset,\n            withArrow,\n            preventFlip,\n            fallbackPlacements,\n            preventOverflow,\n            availableHeight,\n            arrowElement,\n        ]);\n\n        const {\n            styles: popperStyles,\n            attributes,\n            update: updatePopper,\n        } = usePopper(referenceElement, popperElement, {\n            placement: position,\n            modifiers: popperModifiers,\n        });\n\n        if (updatePopper) {\n            updatePopperRef.current = updatePopper;\n        }\n\n        useEffect(() => {\n            setReferenceElement(anchorElement);\n        }, [anchorElement]);\n\n        useEffect(() => {\n            if (updatePopper) {\n                updatePopper();\n            }\n        }, [updatePopper, arrowElement, children]);\n\n        useEffect(() => {\n            if (update && !update.current && updatePopper) {\n                // eslint-disable-next-line no-param-reassign\n                update.current = updatePopper;\n            }\n        });\n\n        useEffect(() => {\n            if (useAnchorWidth) {\n                const updatePopoverWidth = () => updatePopperRef.current?.();\n                const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n                const observer = new ResizeObserver(updatePopoverWidth);\n\n                if (anchorElement) {\n                    observer.observe(anchorElement);\n                }\n\n                return () => {\n                    observer.disconnect();\n                };\n            }\n\n            return () => ({});\n        }, [anchorElement, useAnchorWidth]);\n\n        /**\n         * По дизайну, если у тултипа позиционирование -start/-end, то стрелочка немного сдвигается вбок.\n         * Но если anchorElement слишком маленький, то стрелочка сдвигаться не должна.\n         */\n        useEffect(() => {\n            const shiftedPosition = position.includes('-start') || position.includes('-end');\n\n            if (shiftedPosition && referenceElement) {\n                const { width, height } = referenceElement.getBoundingClientRect();\n\n                const size =\n                    position.includes('left') || position.includes('right') ? height : width;\n\n                if (size >= MIN_ARROW_SHIFT_SIZE) {\n                    setArrowShift(true);\n                }\n            }\n        }, [referenceElement, position]);\n\n        const renderContent = (computedZIndex: number) => (\n            <div\n                ref={mergeRefs([ref, popperRef, setPopperElement])}\n                style={{\n                    zIndex: computedZIndex,\n                    width: useAnchorWidth ? referenceElement?.offsetWidth : undefined,\n                    ...popperStyles.popper,\n                    ...(popperStyles.popper?.transform ? null : { visibility: 'hidden' }),\n                }}\n                data-test-id={dataTestId}\n                className={cn(styles.component, className, {\n                    [styles.arrowShift]: arrowShift,\n                })}\n                {...attributes.popper}\n            >\n                <div className={cn(styles.inner, popperClassName)} ref={innerRef}>\n                    <div className={cn({ [styles.scrollableContent]: availableHeight })}>\n                        {children}\n                    </div>\n\n                    {withArrow && (\n                        <div\n                            ref={setArrowElement}\n                            style={popperStyles.arrow}\n                            className={cn(styles.arrow, arrowClassName)}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n\n        return (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <Portal getPortalContainer={getPortalContainer}>\n                        {withTransition ? (\n                            <CSSTransition\n                                unmountOnExit={true}\n                                classNames={CSS_TRANSITION_CLASS_NAMES}\n                                nodeRef={popperRef}\n                                {...transition}\n                                in={open}\n                                onEntering={(node: HTMLElement, isAppearing: boolean) => {\n                                    // Меняем transition-duration только в случае, если передано значение отличное от дефолтного.\n                                    if (\n                                        innerRef.current &&\n                                        transitionDuration !== `${DEFAULT_TRANSITION.timeout}ms`\n                                    ) {\n                                        innerRef.current.style.setProperty(\n                                            'transition-duration',\n                                            transitionDuration,\n                                        );\n                                    }\n                                    transition?.onEntering?.(node, isAppearing);\n                                }}\n                            >\n                                {renderContent(computedZIndex)}\n                            </CSSTransition>\n                        ) : (\n                            open && renderContent(computedZIndex)\n                        )}\n                    </Portal>\n                )}\n            </Stack>\n        );\n    },\n);\n","import { MutableRefObject, RefObject } from 'react';\n\nexport const PORTAL_CONTAINER_ATTRIBUTE = 'alfa-portal-container';\n\nfunction createPortalContainer() {\n    const portalContainer = document.createElement('div');\n\n    portalContainer.setAttribute(PORTAL_CONTAINER_ATTRIBUTE, '');\n\n    document.body.appendChild(portalContainer);\n\n    return portalContainer;\n}\n\nexport const getDefaultPortalContainer = (): Element =>\n    document.querySelector(`[${PORTAL_CONTAINER_ATTRIBUTE}]`) || createPortalContainer();\n\nexport function setRef<T>(\n    ref: RefObject<T> | ((instance: T | null) => void) | null | undefined,\n    value: T | null,\n): void {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        // eslint-disable-next-line no-param-reassign\n        (ref as MutableRefObject<T | null>).current = value;\n    }\n}\n","import { forwardRef, ReactNode, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { getDefaultPortalContainer, setRef } from './utils';\n\nexport type PortalProps = {\n    /** Контент */\n    children?: ReactNode;\n\n    /**\n     * Функция, возвращающая контейнер, в который будут рендериться дочерние элементы\n     */\n    getPortalContainer?: () => Element;\n\n    /**\n     * Немедленно отрендерить дочерние элементы (false - контент будет отрендерен на след. рендер).\n     */\n    immediateMount?: boolean;\n};\nexport const Portal = forwardRef<Element, PortalProps>(\n    ({ getPortalContainer = getDefaultPortalContainer, immediateMount = false, children }, ref) => {\n        const [mountNode, setMountNode] = useState<Element | null>(() =>\n            typeof window !== 'undefined' && immediateMount ? getPortalContainer() : null,\n        );\n\n        useEffect(() => {\n            setMountNode(getPortalContainer());\n        }, [getPortalContainer]);\n\n        useEffect(() => {\n            if (mountNode) {\n                setRef(ref, mountNode);\n\n                return () => {\n                    setRef(ref, null);\n                };\n            }\n\n            return () => null;\n        }, [ref, mountNode]);\n\n        return mountNode ? createPortal(children, mountNode) : mountNode;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_Vw_mp\",\"s\":\"s_cYLYP\",\"m\":\"m_Clpeu\",\"filled\":\"filled_seaxe\",\"positive\":\"positive_t3AFB\",\"negative\":\"negative_TGd44\",\"attention\":\"attention_RUoag\",\"link\":\"link_mMva0\",\"tertiary\":\"tertiary_KaD3G\",\"secondary\":\"secondary_m4fgZ\",\"primary\":\"primary_dBH6i\",\"accent\":\"accent_LLX5M\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type ProgressBarProps = {\n    /**\n     * Значение заполненной части 0-100\n     */\n    value: number;\n\n    /**\n     * Css-класс для стилизации\n     */\n    className?: string;\n\n    /**\n     * Цвет заполнения\n     */\n    view?:\n        | 'positive'\n        | 'negative'\n        | 'attention'\n        | 'link'\n        | 'tertiary'\n        | 'secondary'\n        | 'primary'\n        | 'accent';\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n};\n\nexport const ProgressBar = React.forwardRef<HTMLDivElement, ProgressBarProps>(\n    ({ className, value, view = 'positive', size = 'm', dataTestId }, ref) => {\n        const translateX = Math.max(-100, Math.min(0, value - 100));\n\n        return (\n            <div\n                role='progressbar'\n                aria-valuenow={Math.round(value)}\n                aria-valuemin={0}\n                aria-valuemax={100}\n                className={cn(styles.container, styles[size], className)}\n                data-test-id={dataTestId}\n                ref={ref}\n            >\n                <div\n                    className={cn(styles.filled, styles[view])}\n                    style={{ transform: `translateX(${translateX}%)` }}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_uTdYw\",\"none\":\"none_Q6Koo\",\"default\":\"default_Fjj8h\",\"addonPadding\":\"addonPadding_DmTfF\",\"auto\":\"auto_YanNE\",\"top\":\"top_suDPv\",\"center\":\"center_UgsOi\",\"bottom\":\"bottom_MhVN4\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { AddonElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Вертикальное выравнивание\n     */\n    verticalAlign?: 'auto' | 'top' | 'center' | 'bottom';\n\n    /**\n     * Горизонтальные отступы\n     */\n    addonPadding?: 'default' | 'none';\n\n    /**\n     * Компоненты\n     */\n    children: AddonElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Addon: React.FC<Props> = ({\n    children,\n    verticalAlign = 'top',\n    addonPadding = 'default',\n    dataTestId,\n}) => (\n    <section\n        className={cn(styles.component, styles[addonPadding], styles[verticalAlign])}\n        data-test-id={getDataTestId(dataTestId, 'addon')}\n    >\n        {children}\n    </section>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_WZU2n\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Amount as CoreAmount } from '@alfalab/core-components-amount';\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { AmountProps as AmountType } from '../typesProps';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Начертание шрифта денежного значения\n     */\n    weight?: 'bold' | 'normal';\n\n    /**\n     * Размер денежного значения\n     */\n    textView?: 'component' | 'primary-small';\n\n    /**\n     * Цвет денежного значения\n     */\n    color?: Color;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n} & AmountType;\n\nexport const Amount: React.FC<Props> = ({\n    weight = 'normal',\n    textView = 'component',\n    color = 'primary',\n    minority,\n    minorUnits = 100,\n    dataTestId,\n    ...restProps\n}) => (\n    <Typography.Text\n        view={textView}\n        dataTestId={getDataTestId(dataTestId, 'amount-text')}\n        className={cn(styles.component)}\n        color={color}\n    >\n        <CoreAmount\n            minority={minority || minorUnits}\n            bold={weight === 'bold' ? 'full' : 'none'}\n            dataTestId={getDataTestId(dataTestId, 'amount')}\n            {...restProps}\n        />\n    </Typography.Text>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_U0c5c\",\"weight\":\"weight_Qmog0\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Amount as CoreAmount } from '@alfalab/core-components-amount';\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { AmountProps as AmountType } from '../typesProps';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Цвет денежного значения\n     */\n    color?: Color;\n} & AmountType;\n\nexport const AmountTitle: React.FC<Props> = ({\n    minority,\n    minorUnits = 100,\n    className,\n    color = 'primary',\n    dataTestId,\n    ...restProps\n}) => (\n    <Typography.Title\n        tag='h4'\n        view='small'\n        dataTestId={getDataTestId(dataTestId, 'amount-title')}\n        className={styles.component}\n        color={color}\n    >\n        <CoreAmount\n            minority={minority || minorUnits}\n            className={cn(styles.weight, className)}\n            dataTestId={getDataTestId(dataTestId, 'core-amount-title')}\n            {...restProps}\n            bold='none'\n        />\n    </Typography.Title>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_RNQaX\",\"categoryName\":\"categoryName_LQVD4\",\"categoryPercent\":\"categoryPercent_mo1wK\",\"rightAddon\":\"rightAddon_UK4o8\"};","import React, { ReactNode } from 'react';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Наименование категории\n     */\n    categoryName: string;\n\n    /**\n     * Процент категории\n     */\n    categoryPercent?: number;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Category: React.FC<Props> = ({\n    categoryName,\n    categoryPercent,\n    rightAddons,\n    dataTestId,\n}) => (\n    <div className={styles.component} data-test-id='cell-pure-category'>\n        <Typography.Text\n            view='primary-small'\n            color='secondary'\n            dataTestId={getDataTestId(dataTestId, 'category-name')}\n            className={styles.categoryName}\n        >\n            {categoryName}\n        </Typography.Text>\n        {categoryPercent !== undefined && (\n            <Typography.Text\n                tag='div'\n                view='primary-small'\n                color='secondary'\n                className={styles.categoryPercent}\n                dataTestId={getDataTestId(dataTestId, 'category-percent')}\n            >\n                {categoryPercent}%\n            </Typography.Text>\n        )}\n        {rightAddons !== undefined && (\n            <div\n                className={styles.rightAddon}\n                data-test-id={getDataTestId(dataTestId, 'category-right-addon')}\n            >\n                {rightAddons}\n            </div>\n        )}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_CFva2\",\"horizontal\":\"horizontal_TCHb7\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { PureCellContext } from '../../component';\nimport { ContentElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Компоненты\n     */\n    children: ContentElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Content: React.FC<Props> = ({ children, dataTestId }) => {\n    const { direction } = useContext(PureCellContext);\n\n    return (\n        <section\n            className={cn(styles.component, { [styles.horizontal]: direction === 'horizontal' })}\n            data-test-id={getDataTestId(dataTestId, 'content')}\n        >\n            {children}\n        </section>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_JxPUw\",\"none\":\"none_cYmad\",\"default\":\"default_kRR0c\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { FooterElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Компоненты\n     */\n    children: FooterElement;\n\n    /**\n     * Вертикальные отступы\n     */\n    footerPadding?: 'default' | 'none';\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Footer: React.FC<Props> = ({ children, footerPadding = 'default', dataTestId }) => (\n    <footer\n        className={cn(styles.component, styles[footerPadding])}\n        data-test-id={getDataTestId(dataTestId, 'footer')}\n    >\n        {children}\n    </footer>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ohVPj\"};","import React from 'react';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\n\nimport styles from './index.module.css';\n\nexport const FooterButton: React.FC<ButtonProps> = ({ children, dataTestId, ...props }) => (\n    <Button\n        {...props}\n        size='xxs'\n        dataTestId={getDataTestId(dataTestId, 'button')}\n        className={styles.component}\n    >\n        {children}\n    </Button>\n);\n","import React, { ReactNode } from 'react';\n\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\n\nexport type Props = {\n    /**\n     * Цвет текста\n     */\n    color?: Color;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const FooterText: React.FC<Props> = ({ children, color = 'secondary', dataTestId }) => (\n    <Typography.Text\n        view='primary-small'\n        color={color}\n        data-test-id={getDataTestId(dataTestId, 'footer-title')}\n    >\n        {children}\n    </Typography.Text>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_KfXlP\",\"top\":\"top_vUba4\",\"center\":\"center_ppdLl\",\"bottom\":\"bottom_JMtrw\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { GraphicsElement } from '../types';\n\nimport styles from './index.module.css';\n\nexport type Props = {\n    /**\n     * Компоненты\n     */\n    children: GraphicsElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Вертикальное выравнивание\n     */\n    verticalAlign?: 'top' | 'center' | 'bottom';\n};\n\nexport const Graphics: React.FC<Props> = ({ children, dataTestId, verticalAlign = 'top' }) => (\n    <section\n        className={cn(styles.component, styles[verticalAlign])}\n        data-test-id={getDataTestId(dataTestId, 'graphics')}\n    >\n        {children}\n    </section>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_l1Bpk\",\"vertical\":\"vertical_dtFlu\",\"reverse\":\"reverse_vSuqm\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { PureCellContext } from '../../component';\nimport { MainElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Компоненты\n     */\n    children: MainElement;\n\n    /**\n     * Позволяет изменить расположение блоков внутри main\n     */\n    isReverse?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Main: React.FC<Props> = ({ children, isReverse, dataTestId }) => {\n    const { direction = 'horizontal' } = useContext(PureCellContext);\n\n    return (\n        <div\n            className={cn(styles.component, styles[direction], {\n                [styles.reverse]: isReverse,\n            })}\n            data-test-id={getDataTestId(dataTestId, 'main')}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"horizontal_KKl6c\",\"rowLimit1\":\"rowLimit1_YUUG2\",\"rowLimit2\":\"rowLimit2_TIlsh\",\"component\":\"component_qyE8O\",\"vertical\":\"vertical_mvmPD\",\"title\":\"title_EgeNN\",\"value\":\"value_KqfO9\"};","import React, { ReactNode, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { PureCellContext } from '../../component';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Количество строк\n     */\n    rowLimit?: 1 | 2;\n\n    /**\n     * Размер текста\n     */\n    view: 'primary-large' | 'primary-medium' | 'primary-small' | 'component';\n\n    /**\n     * Толщина title\n     */\n    titleWeight?: 'regular' | 'bold';\n\n    /**\n     * Цвет title\n     */\n    titleColor: Color;\n\n    /**\n     * Value ячейки\n     */\n    value?: ReactNode;\n\n    /**\n     * Цвет value\n     */\n    valueColor?: Color;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Text: React.FC<Props> = ({\n    children,\n    value,\n    rowLimit,\n    view = 'component',\n    titleWeight,\n    titleColor,\n    valueColor,\n    dataTestId,\n}) => {\n    const { direction = 'horizontal' } = useContext(PureCellContext);\n    const className = rowLimit && styles[`rowLimit${rowLimit}`];\n\n    return (\n        <div\n            className={cn(styles.component, {\n                [styles.vertical]: direction !== 'horizontal',\n            })}\n        >\n            <div className={styles.title}>\n                <Typography.Text\n                    view={view}\n                    weight={titleWeight}\n                    tag='div'\n                    color={titleColor}\n                    className={className}\n                    data-test-id={getDataTestId(dataTestId, 'text_content')}\n                >\n                    {children}\n                </Typography.Text>\n            </div>\n\n            {value && (\n                <div className={styles.value}>\n                    <Typography.Text\n                        view={view}\n                        tag='div'\n                        color={valueColor}\n                        className={className}\n                        data-test-id={getDataTestId(dataTestId, 'text_value')}\n                    >\n                        {value}\n                    </Typography.Text>\n                </div>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_kn8FA\",\"horizontal\":\"horizontal_Etkwv\",\"vertical\":\"vertical_EC3nL\",\"button\":\"button_RSfCP\",\"link\":\"link_PjZd7\",\"none\":\"none_REPhZ\",\"airy\":\"airy_AIVoH\",\"defaultPadding\":\"defaultPadding_CZkrN\",\"compact\":\"compact_g7rsI\",\"tiny\":\"tiny_Pr_Om\",\"left\":\"left_awn_3\",\"right\":\"right_Wftj9\",\"both\":\"both_OfuoJ\",\"focused\":\"focused_xiX72\"};","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, {\n    AnchorHTMLAttributes,\n    ButtonHTMLAttributes,\n    ElementType,\n    forwardRef,\n    HTMLAttributes,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport { Comment } from '@alfalab/core-components-comment';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { Addon } from './components/addon';\nimport { Amount } from './components/amount';\nimport { AmountTitle } from './components/amount-title';\nimport { Category } from './components/category';\nimport { Content } from './components/content';\nimport { Footer } from './components/footer';\nimport { FooterButton } from './components/footer-button';\nimport { FooterText } from './components/footer-text';\nimport { Graphics } from './components/graphics';\nimport { Main } from './components/main';\nimport { Text } from './components/text';\nimport { PureCellElement } from './components/types';\n\nimport styles from './index.module.css';\n\nexport type PureCellContext = {\n    /** Направление */\n    direction?: 'horizontal' | 'vertical';\n};\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const PureCellContext = React.createContext<PureCellContext>({});\n\nexport type PureCellProps = {\n    /**\n     * Направление\n     */\n    direction?: 'horizontal' | 'vertical';\n\n    /**\n     * Сss класс для стилизации общей обёртки\n     */\n    className?: string;\n\n    /**\n     * Выводит ссылку в виде ячейки\n     */\n    href?: string;\n\n    /**\n     * Вертикальные отступы\n     */\n    verticalPadding?: 'airy' | 'default' | 'compact' | 'tiny' | 'none';\n\n    /**\n     * Горизонтальные отступы\n     */\n    horizontalPadding?: 'left' | 'right' | 'both' | 'none';\n\n    /**\n     * Позволяет использовать кастомный компонент для кнопки (например Link из роутера)\n     */\n    tag?: ElementType;\n    /**\n     * Компоненты\n     */\n    children: PureCellElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\ntype AnchorPureCellProps = PureCellProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype ButtonPureCellProps = PureCellProps & ButtonHTMLAttributes<HTMLButtonElement>;\ntype ElementPureCellProps = PureCellProps & HTMLAttributes<HTMLElement>;\ntype PureProps = Partial<AnchorPureCellProps | ButtonPureCellProps | ElementPureCellProps>;\n\nconst PureCellComponent = forwardRef<HTMLElement, PureProps>(\n    (\n        {\n            className,\n            dataTestId,\n            onClick,\n            href,\n            tag: Component = (href && 'a') || (onClick && 'button') || 'section',\n            children,\n            horizontalPadding = 'none',\n            verticalPadding = 'none',\n            direction = 'horizontal',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const cellRef = useRef<HTMLDivElement>(null);\n        const [focused] = useFocus(cellRef, 'keyboard');\n        const addClasses = {\n            [styles.component]: true,\n            [styles.focused]: focused,\n            [styles[direction]]: true,\n            [styles.defaultPadding]: verticalPadding === 'default',\n            [styles[verticalPadding]]: verticalPadding !== 'default',\n            [styles[horizontalPadding]]: true,\n        };\n\n        if (href) {\n            const { target } = restProps as AnchorHTMLAttributes<HTMLAnchorElement>;\n\n            // Для совместимости с react-router-dom, меняем href на to\n            const hrefProps = { [typeof Component === 'string' ? 'href' : 'to']: href };\n\n            return (\n                <Component\n                    rel={target === '_blank' ? 'noreferrer noopener' : undefined}\n                    {...(restProps as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                    {...hrefProps}\n                    ref={mergeRefs([cellRef, ref])}\n                    className={cn(styles.link, addClasses, className)}\n                    data-test-id={dataTestId}\n                    onClick={onClick}\n                >\n                    <PureCellContext.Provider value={{ direction }}>\n                        {children}\n                    </PureCellContext.Provider>\n                </Component>\n            );\n        }\n\n        if (onClick) {\n            return (\n                <Component\n                    {...(restProps as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                    ref={mergeRefs([cellRef, ref])}\n                    className={cn(styles.button, addClasses, className)}\n                    data-test-id={dataTestId}\n                    onClick={onClick}\n                >\n                    <PureCellContext.Provider value={{ direction }}>\n                        {children}\n                    </PureCellContext.Provider>\n                </Component>\n            );\n        }\n\n        return (\n            <Component\n                ref={ref}\n                tabIndex={0}\n                className={cn(addClasses, className)}\n                data-test-id={dataTestId}\n            >\n                <PureCellContext.Provider value={{ direction }}>\n                    {children}\n                </PureCellContext.Provider>\n            </Component>\n        );\n    },\n);\n\n/**\n * Универсальный конструктор для сборки любой ячейки.\n *\n * [Макет](https://www.figma.com/file/KlFOLLkKO8rtvvQE3RXuhq/Click-Library?node-id=43525%3A240018)\n */\nexport const PureCell = Object.assign(PureCellComponent, {\n    Main,\n    Graphics,\n    Content,\n    Text,\n    Amount,\n    AmountTitle,\n    Addon,\n    Footer,\n    ExtraSubtitle: FooterText,\n    FooterButton,\n    Comment,\n    Category,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_McG3V\",\"hasInnerLabel\":\"hasInnerLabel_N7K76\",\"clearIcon\":\"clearIcon_tNoce\",\"error\":\"error__8KsY\",\"component\":\"component_R8Xdt\",\"block\":\"block_BRBEz\",\"s\":\"s_ImKQ_\",\"m\":\"m_rXPol\",\"l\":\"l_VWXAP\",\"xl\":\"xl_UVp0L\",\"focusVisible\":\"focusVisible_S4hPl\"};","import React, { InputHTMLAttributes, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nexport type PureInputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'size' | 'type' | 'enterKeyHint'\n> & {\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Атрибут type\n     */\n    type?: 'number' | 'card' | 'email' | 'hidden' | 'money' | 'password' | 'tel' | 'text';\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const PureInput = React.forwardRef<HTMLInputElement, PureInputProps>(\n    ({ size = 's', type = 'text', block = false, className, dataTestId, ...restProps }, ref) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        return (\n            <input\n                {...restProps}\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    {\n                        [styles.block]: block,\n                        [styles.focusVisible]: focusVisible,\n                    },\n                    className,\n                )}\n                ref={mergeRefs([ref, inputRef])}\n                type={type}\n                data-test-id={dataTestId}\n            />\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nPureInput.defaultProps = {\n    size: 's',\n    type: 'text',\n    block: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UBulD\",\"error\":\"error_TlWJu\",\"radioList\":\"radioList_HxtBK\",\"vertical\":\"vertical_PY33f\",\"radio\":\"radio_KQMHn\",\"horizontal\":\"horizontal_BzJZR\",\"tagLabel\":\"tagLabel_hglQq\",\"label\":\"label__rLaH\",\"sub\":\"sub_oWVbw\",\"errorMessage\":\"errorMessage_aD85p\",\"hint\":\"hint_w7l4u\",\"hiddenInput\":\"hiddenInput_crxbk\"};","import React, {\n    ChangeEvent,\n    Children,\n    cloneElement,\n    FocusEvent,\n    forwardRef,\n    isValidElement,\n    MouseEvent,\n    ReactElement,\n    ReactNode,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { useDidUpdateEffect } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nexport type Direction = 'horizontal' | 'vertical';\nexport type RadioGroupType = 'radio' | 'tag';\n\nexport type RadioGroupProps = {\n    /**\n     * Заголовок группы\n     */\n    label?: ReactNode;\n\n    /**\n     * Направление\n     */\n    direction?: Direction;\n\n    /**\n     * Тип компонента\n     */\n    type?: RadioGroupType;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Дочерние элементы. Ожидаются компоненты `Radio` или `Tag`\n     */\n    children: ReactNode;\n\n    /**\n     * Обработчик изменения значения 'checked' одного из дочерних компонентов\n     */\n    onChange?: (\n        event: ChangeEvent | MouseEvent,\n        payload: {\n            value: string;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * Обработчик блюра.\n     */\n    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Обработчик фокуса.\n     */\n    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Управление возможностью изменения состояния 'checked' дочерних компонентов Radio | Tag\n     */\n    disabled?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Атрибут name для всех дочерних компонентов\n     */\n    name?: string;\n\n    /**\n     * Value выбранного дочернего элемента\n     */\n    value?: string | null;\n};\n\nexport const RadioGroup = forwardRef<HTMLDivElement, RadioGroupProps>(\n    (\n        {\n            children,\n            className,\n            direction = 'vertical',\n            label,\n            error,\n            hint,\n            onChange,\n            onBlur,\n            onFocus,\n            type = 'radio',\n            dataTestId,\n            disabled = false,\n            name,\n            value,\n        },\n        ref,\n    ) => {\n        const [stateValue, setStateValue] = useState<RadioGroupProps['value']>('');\n\n        useDidUpdateEffect(() => {\n            setStateValue(value);\n        }, [value]);\n\n        const isChecked = (childValue: string) =>\n            value !== null && (value || stateValue) === childValue;\n\n        const handleChange = (event: ChangeEvent | MouseEvent, childValue: string) => {\n            setStateValue(childValue);\n            if (onChange) {\n                onChange(event, { name, value: childValue });\n            }\n        };\n\n        const renderRadio = (child: ReactElement) => {\n            const { className: childClassName, value: childValue } = child.props;\n\n            return cloneElement(child, {\n                onChange: (event: ChangeEvent) => handleChange(event, childValue),\n                disabled,\n                ...child.props,\n                checked: isChecked(childValue),\n                name,\n                className: cn(childClassName, styles.radio),\n            });\n        };\n\n        const renderTag = (child: ReactElement) => {\n            const childValue = child.props.value;\n            const checked = isChecked(childValue);\n            const clone = cloneElement(child, {\n                onClick: (event: MouseEvent) => handleChange(event, childValue),\n                disabled,\n                ...child.props,\n                checked,\n                name,\n                tabIndex: -1,\n            });\n\n            return (\n                <label className={cn(styles.radio, styles.tagLabel)}>\n                    <input\n                        type='radio'\n                        autoComplete='off'\n                        onChange={(event: ChangeEvent) => handleChange(event, childValue)}\n                        disabled={disabled || child.props.disabled}\n                        name={name}\n                        checked={checked}\n                        className={styles.hiddenInput}\n                        value={child.props.value}\n                    />\n                    {clone}\n                </label>\n            );\n        };\n\n        const errorMessage = typeof error === 'boolean' ? '' : error;\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    styles[type],\n                    styles[direction],\n                    { [styles.error]: error },\n                    className,\n                )}\n                data-test-id={dataTestId}\n                ref={ref}\n            >\n                {label ? <span className={styles.label}>{label}</span> : null}\n\n                {children ? (\n                    <div className={styles.radioList} onBlur={onBlur} onFocus={onFocus}>\n                        {Children.map(children, (child) => {\n                            if (isValidElement(child)) {\n                                return type === 'radio' ? renderRadio(child) : renderTag(child);\n                            }\n\n                            return null;\n                        })}\n                    </div>\n                ) : null}\n\n                {errorMessage && (\n                    <span className={cn(styles.sub, styles.errorMessage)} role='alert'>\n                        {errorMessage}\n                    </span>\n                )}\n\n                {hint && !errorMessage && (\n                    <span className={cn(styles.sub, styles.hint)}>{hint}</span>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_YVxLX\",\"checked\":\"checked_pqVQp\",\"disabled\":\"disabled_dkrkW\",\"inactive\":\"inactive_WDMWP\",\"circle\":\"circle_ShLCn\",\"label\":\"label_zLN3J\",\"hint\":\"hint_u2pkj\",\"focused\":\"focused_ZqiQy\",\"s\":\"s_G5yno\",\"content\":\"content_FTi_c\",\"start\":\"start_I3XxQ\",\"center\":\"center_Pkjfe\",\"addons\":\"addons_n79mM\",\"block\":\"block_gFlJ3\"};","import React, { ChangeEvent, forwardRef, InputHTMLAttributes, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\ntype NativeProps = InputHTMLAttributes<HTMLInputElement>;\ntype Align = 'start' | 'center';\n\nexport type RadioProps = Omit<\n    NativeProps,\n    'size' | 'type' | 'onChange' | 'checked' | 'disabled' | 'name' | 'className' | 'enterKeyHint'\n> & {\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Текст подписи\n     */\n    label?: ReactNode;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Управление состоянием отмечен/не отмечен\n     */\n    checked?: boolean;\n\n    /**\n     * Управление состоянием включен / выключен\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием активен / неактивен\n     */\n    inactive?: boolean;\n\n    /**\n     * Html аттрибут name инпута\n     */\n    name?: string;\n\n    /**\n     * Класс компонента\n     */\n    className?: string;\n\n    /**\n     * Доп. класс радио кнопки\n     */\n    circleClassName?: string;\n\n    /**\n     * Доп. класс контента\n     */\n    contentClassName?: string;\n\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Дополнительный слот\n     */\n    addons?: React.ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * Обработчик на выбор элемента\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n};\n\nexport const Radio = forwardRef<HTMLLabelElement, RadioProps>(\n    (\n        {\n            onChange,\n            className,\n            circleClassName,\n            contentClassName,\n            name,\n            disabled,\n            inactive,\n            dataTestId,\n            label,\n            checked,\n            hint,\n            size = 's',\n            align = 'start',\n            addons,\n            block,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const labelRef = useRef<HTMLLabelElement>(null);\n\n        const [focused] = useFocus(labelRef, 'keyboard');\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (onChange) {\n                onChange(event, { checked: event.target.checked, name });\n            }\n        };\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label\n                className={cn(styles.container, styles[size], styles[align], className, {\n                    [styles.disabled]: disabled,\n                    [styles.inactive]: inactive,\n                    [styles.checked]: checked,\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                })}\n                ref={mergeRefs([labelRef, ref])}\n            >\n                <input\n                    type='radio'\n                    onChange={handleChange}\n                    data-test-id={dataTestId}\n                    disabled={disabled || inactive}\n                    checked={checked}\n                    name={name}\n                    {...restProps}\n                />\n                <span className={cn(styles.circle, circleClassName)} />\n                {(label || hint) && (\n                    <span className={cn(styles.content, contentClassName)}>\n                        {label && <span className={styles.label}>{label}</span>}\n                        {hint && <span className={styles.hint}>{hint}</span>}\n                    </span>\n                )}\n                {addons && <span className={styles.addons}>{addons}</span>}\n            </label>\n        );\n    },\n);\n","const req = require.context('../../', true, /^\\.\\/(.*)\\/src\\/index.ts$/);\n\nconst packages = req.keys().reduce((acc, key) => {\n    const packageName = key.split('/')[1];\n\n    acc[packageName] = req(key);\n\n    return acc;\n    // eslint-disable-next-line\n}, {} as Record<string, any>);\n\nexport const getComponent = (\n    packageName: string,\n    componentName: string,\n    subComponentName?: string,\n) => {\n    try {\n        const component = packages[packageName][componentName];\n\n        return subComponentName ? component[subComponentName] : component;\n    } catch (e) {\n        return null;\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_x_PaQ\",\"wrapper\":\"wrapper_PzV2i\",\"heightAutoObserverWrapper\":\"heightAutoObserverWrapper_XIsF5\",\"heightAutoObserver\":\"heightAutoObserver_jWgaw\",\"mask\":\"mask_zPNqL\",\"offset\":\"offset_aucl5\",\"contentWrapper\":\"contentWrapper_s9gd2\",\"placeholder\":\"placeholder_qEx8W\",\"vertical\":\"vertical_hRaze\",\"hover\":\"hover_rhhvl\",\"horizontal\":\"horizontal_PIC5i\",\"content\":\"content_oHLNu\"};","import React, { HTMLAttributes, useEffect, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport throttle from 'lodash.throttle';\nimport SimpleBar from 'simplebar/src/simplebar';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStylesMap = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type ScrollbarProps = {\n    /**\n     * Оборачиваемый элемент.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс на корневой элемент.\n     */\n    className?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Растягивать контент по горизонтали по ширине содержимого.\n     */\n    horizontalAutoStretch?: boolean;\n\n    /**\n     * Название css свойства, которое устанавливается на контейнер при horizontalAutoStretch.\n     */\n    widthPropName?: 'minWidth' | 'width' | 'maxWidth';\n\n    /**\n     * Включает автоскрытие ползунка.\n     */\n    autoHide?: boolean;\n\n    /**\n     * Время в мс, определяющее задержку до исчезновения полосы прокрутки (при включенной опции autoHide).\n     */\n    autoHideTimeout?: number;\n\n    /**\n     * Принудительное отображение полосы прокрутки.\n     */\n    forceVisible?: boolean | 'x' | 'y';\n\n    /**\n     * Управление поведением клика по треку.\n     * Если true, то будет выполняться прокрутка к месту клика.\n     */\n    clickOnTrack?: boolean;\n\n    /**\n     * HTML-aтрибуты на прокручиваемый узел.\n     */\n    scrollableNodeProps?: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >;\n\n    /**\n     * HTML-aтрибуты на узел с контентом.\n     */\n    contentNodeProps?: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >;\n} & HTMLAttributes<HTMLDivElement>;\n\nconst classNames = {\n    wrapper: styles.wrapper,\n    heightAutoObserverEl: styles.heightAutoObserver,\n    heightAutoObserverWrapperEl: styles.heightAutoObserverWrapper,\n    mask: styles.mask,\n    offset: styles.offset,\n    contentWrapper: styles.contentWrapper,\n    contentEl: styles.content,\n    placeholder: styles.placeholder,\n    vertical: styles.vertical,\n    horizontal: styles.horizontal,\n    hover: styles.hover,\n    track: 'track',\n    scrollbar: 'scrollbar',\n    dragging: 'dragging',\n    visible: 'visible',\n};\n\nexport const Scrollbar = React.forwardRef<HTMLDivElement, ScrollbarProps>(\n    (\n        {\n            colors = 'default',\n            className,\n            children,\n            scrollableNodeProps = { ref: null },\n            contentNodeProps = { ref: null },\n            autoHide = true,\n            forceVisible = false,\n            autoHideTimeout = 1000,\n            clickOnTrack = true,\n            horizontalAutoStretch = false,\n            widthPropName = 'minWidth',\n            ...htmlAttributes\n        },\n        ref,\n    ) => {\n        const elRef = useRef<HTMLDivElement>(null);\n        const scrollableNodeRef = useRef<HTMLDivElement>(null);\n        const contentNodeRef = useRef<HTMLDivElement>(null);\n        const maskNodeRef = useRef<HTMLDivElement>(null);\n\n        const colorStyles = colorStylesMap[colors];\n\n        useEffect(() => {\n            let instance: SimpleBar | null;\n\n            if (elRef.current) {\n                instance = new SimpleBar(elRef.current, {\n                    autoHide,\n                    forceVisible,\n                    clickOnTrack,\n                    classNames,\n                    timeout: autoHideTimeout,\n                    direction: 'ltr',\n                    scrollbarMinSize: 40,\n                    scrollableNode: scrollableNodeRef.current,\n                    contentNode: contentNodeRef.current,\n                });\n            }\n\n            return () => {\n                if (instance) {\n                    instance.unMount();\n                    instance = null;\n                }\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        useEffect(() => {\n            let mutationObserver: MutationObserver | null = null;\n            const contentNode = contentNodeRef.current;\n            const rootNode = elRef.current;\n            const scrollableNode = scrollableNodeRef.current;\n            const maskNode = maskNodeRef.current;\n\n            const setMinWidth = throttle(() => {\n                if (contentNode && rootNode && scrollableNode && maskNode) {\n                    /*\n                     * Устанавливаем min-width, чтобы максимально растянуть абсолютно позиционированный элемент.\n                     * Затем контенту устанавливаем display: inline-block, чтобы его ширина была равна ширине содержимого.\n                     */\n                    maskNode.style.minWidth = '4000px';\n                    contentNode.style.display = 'inline-block';\n\n                    const contentRect = contentNode.getBoundingClientRect();\n                    const newWidth = `${Math.ceil(contentRect.width)}px`;\n                    const prevWidth = rootNode.style[widthPropName];\n\n                    if (newWidth !== prevWidth) {\n                        rootNode.style[widthPropName] = newWidth;\n                    }\n\n                    contentNode.style.display = '';\n                    maskNode.style.minWidth = '';\n                }\n            }, 200);\n\n            if (horizontalAutoStretch && contentNode) {\n                setMinWidth();\n\n                mutationObserver = new MutationObserver(setMinWidth);\n\n                mutationObserver.observe(contentNode, {\n                    childList: true,\n                    subtree: true,\n                    characterData: true,\n                });\n            }\n\n            return () => {\n                setMinWidth.cancel();\n\n                if (mutationObserver) {\n                    mutationObserver.disconnect();\n                }\n            };\n        }, [widthPropName, horizontalAutoStretch]);\n\n        return (\n            <div\n                {...htmlAttributes}\n                ref={mergeRefs([elRef, ref])}\n                data-simplebar={true}\n                className={cn(styles.component, colorStyles.component, className)}\n            >\n                <div className={classNames.wrapper}>\n                    <div className={classNames.heightAutoObserverWrapperEl}>\n                        <div className={classNames.heightAutoObserverEl} />\n                    </div>\n                    <div className={classNames.mask} ref={maskNodeRef}>\n                        <div className={classNames.offset}>\n                            <div\n                                {...scrollableNodeProps}\n                                ref={mergeRefs([\n                                    scrollableNodeRef,\n                                    ...(scrollableNodeProps.ref ? [scrollableNodeProps.ref] : []),\n                                ])}\n                                className={cn(\n                                    classNames.contentWrapper,\n                                    scrollableNodeProps?.className,\n                                )}\n                            >\n                                <div\n                                    {...contentNodeProps}\n                                    ref={mergeRefs([\n                                        contentNodeRef,\n                                        ...(contentNodeProps.ref ? [contentNodeProps.ref] : []),\n                                    ])}\n                                    className={cn(\n                                        classNames.contentEl,\n                                        contentNodeProps?.className,\n                                    )}\n                                >\n                                    {children}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames.placeholder} />\n                </div>\n                <div className={cn(classNames.track, classNames.horizontal)}>\n                    <div className={classNames.scrollbar} />\n                </div>\n                <div className={cn(classNames.track, classNames.vertical)}>\n                    <div className={classNames.scrollbar} />\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ZJA1w\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component__nMyH\"};","import { createContext } from 'react';\n\nimport { IDType } from './typing';\n\nexport type ContextType = {\n    onChange: (id: IDType) => void;\n};\n\nexport const SegmentedControlContext = createContext<ContextType>({\n    onChange: () => null,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper_N9EbJ\",\"container\":\"container_wgn0V\",\"inner\":\"inner_mLacL\",\"segment\":\"segment_oMKH7\",\"selected\":\"selected_FwXVX\",\"xs\":\"xs_Ht6PL\",\"rounded\":\"rounded_LPl0z\",\"rectangular\":\"rectangular__hTJl\",\"selectedBox\":\"selectedBox_nVEcu\",\"xxs\":\"xxs_orhZH\"};","import React, { FC, ReactElement, useCallback, useEffect, useRef } from 'react';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport cn from 'classnames';\n\nimport { SegmentProps } from './components';\nimport { ContextType, SegmentedControlContext } from './context';\nimport { IDType } from './typing';\n\nimport styles from './index.module.css';\n\nexport type SegmentedControlProps = {\n    /**\n     * Дополнительный className\n     */\n    className?: string;\n\n    /**\n     * Обработчик смены выбранного сегмента\n     */\n    onChange: ContextType['onChange'];\n\n    /**\n     * ID выбранного сегмента\n     */\n    selectedId: IDType;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 'xxs';\n\n    /**\n     * Форма компонента\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Дочерние элементы\n     */\n    children: Array<ReactElement<SegmentProps>>;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nconst MAX_SEGMENTS = 5;\n\nexport const SegmentedControl: FC<SegmentedControlProps> = ({\n    className,\n    selectedId,\n    onChange,\n    shape = 'rectangular',\n    size = 'xxs',\n    children: defaultChildren,\n    dataTestId,\n}) => {\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const innerRef = useRef<HTMLDivElement>(null);\n    const selectedBoxRef = useRef<HTMLDivElement>(null);\n    const children = defaultChildren.slice(0, MAX_SEGMENTS);\n\n    const selectedSegmentPosition = children.findIndex((item) => item.props.id === selectedId);\n    const isPositionFounded = selectedSegmentPosition !== -1;\n    const content = isPositionFounded && children[selectedSegmentPosition].props.children;\n    const contentClassName =\n        isPositionFounded && children[selectedSegmentPosition].props.contentClassName;\n\n    const setSelectedBoxStyles = useCallback(() => {\n        if (innerRef.current && selectedBoxRef.current) {\n            const segments = Array.from(innerRef.current.children);\n            const { width: parentWidth } = innerRef.current.getBoundingClientRect();\n            const width = parentWidth / segments.length;\n            const offsetLeft = width * selectedSegmentPosition;\n\n            selectedBoxRef.current.style.width = `${width}px`;\n            selectedBoxRef.current.style.transform = `translateX(${offsetLeft}px)`;\n        }\n    }, [selectedSegmentPosition]);\n\n    const setSelectedBoxStylesRef = useRef(setSelectedBoxStyles);\n\n    useEffect(() => {\n        setSelectedBoxStylesRef.current = setSelectedBoxStyles;\n        setSelectedBoxStyles();\n    }, [setSelectedBoxStyles]);\n\n    useEffect(() => {\n        if (!wrapperRef.current) return undefined;\n\n        const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n\n        const observer = new ResizeObserver(() => setSelectedBoxStylesRef.current());\n\n        observer.observe(wrapperRef.current);\n\n        return () => observer.disconnect();\n    }, []);\n\n    return (\n        // eslint-disable-next-line react/jsx-no-constructed-context-values\n        <SegmentedControlContext.Provider value={{ onChange }}>\n            <div\n                ref={wrapperRef}\n                className={cn(styles.wrapper, styles[shape], styles[size], className)}\n                data-test-id={dataTestId}\n            >\n                <div className={cn(styles.container)}>\n                    <div className={cn(styles.selectedBox, styles[shape])} ref={selectedBoxRef} />\n                    <div className={cn(styles.inner)} ref={innerRef}>\n                        {React.Children.map(children, (item) =>\n                            React.cloneElement(item, {\n                                className: cn(\n                                    styles.segment,\n                                    {\n                                        [styles.selected]: item.props.id === selectedId,\n                                    },\n                                    item.props.className,\n                                ),\n                            }),\n                        )}\n                    </div>\n                </div>\n            </div>\n            {content && <div className={cn(contentClassName)}>{content}</div>}\n        </SegmentedControlContext.Provider>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"segment\":\"segment_zeSuv\",\"focused\":\"focused_igu1d\"};","import React, { forwardRef, ReactNode, useContext, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport { SegmentedControlContext } from '../../context';\nimport { IDType } from '../../typing';\n\nimport styles from './index.module.css';\n\nexport type SegmentProps = {\n    /**\n     * Дополнительный className\n     */\n    className?: string;\n\n    /**\n     * Дополнительный className для контента сегмента\n     */\n    contentClassName?: string;\n\n    /**\n     * ID сегмента\n     */\n    id: IDType;\n\n    /**\n     * Заголовок сегмента\n     */\n    title: string;\n\n    /**\n     * Контент выбранного сегмента\n     */\n    children?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Segment = forwardRef<HTMLButtonElement, SegmentProps>(\n    ({ id, className, title, dataTestId }, ref) => {\n        const { onChange } = useContext(SegmentedControlContext);\n\n        const segmentRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(segmentRef, 'keyboard');\n\n        const handleClick = () => {\n            onChange(id);\n        };\n\n        return (\n            <button\n                type='button'\n                onClick={handleClick}\n                ref={mergeRefs([segmentRef, ref])}\n                className={cn(styles.segment, className, styles.focused && focused)}\n                data-test-id={dataTestId}\n            >\n                {title}\n            </button>\n        );\n    },\n);\n","const getElementSize = (element: HTMLElement, property: string): number => {\n    const size = +window.getComputedStyle(element).getPropertyValue(property).replace('px', '');\n\n    return Number.isNaN(size) ? 0 : size;\n};\n\nconst getTagWidth = (tag: HTMLElement) => {\n    const tagMarginLeft = getElementSize(tag, 'margin-left');\n    const tagMarginRight = getElementSize(tag, 'margin-right');\n\n    return tag.getBoundingClientRect().width + tagMarginRight + tagMarginLeft;\n};\n\nexport const calculateTotalElementsPerRow = (\n    container: HTMLDivElement,\n    input?: HTMLInputElement | null,\n): number => {\n    let containerWidth = container.getBoundingClientRect().width;\n    const containerPaddingLeft = getElementSize(container, 'padding-left');\n    const containerPaddingRight = getElementSize(container, 'padding-right');\n\n    containerWidth -= containerPaddingLeft + containerPaddingRight;\n\n    if (input) {\n        const inputMinWidth = getElementSize(input, 'min-width');\n        const inputMarginLeft = getElementSize(input, 'margin-left');\n        const inputMarginRight = getElementSize(input, 'margin-right');\n        const minInputWidth = inputMarginLeft + inputMarginRight + inputMinWidth;\n\n        containerWidth -= minInputWidth;\n    }\n\n    const tags = container.getElementsByTagName('button');\n    const latestTag = tags[tags.length - 1];\n\n    if (latestTag && latestTag.getAttribute('data-collapse') === 'collapse-last-tag-element') {\n        containerWidth -= getTagWidth(latestTag);\n    }\n    let totalTagsWidth = 0;\n    let totalVisibleElements = 0;\n\n    for (let i = 0; i < tags.length; i++) {\n        const tag = tags[i];\n\n        if (tag.getAttribute('data-collapse') === 'collapse-last-tag-element') {\n            break;\n        }\n        totalTagsWidth += getTagWidth(tag);\n        if (totalTagsWidth < containerWidth) {\n            totalVisibleElements += 1;\n        }\n    }\n\n    return totalVisibleElements;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"tag_FY9oJ\",\"tagNoClose\":\"tagNoClose_bkg0f\",\"tagContentWrap\":\"tagContentWrap_jFIHW\",\"tagCross\":\"tagCross_u6yby\"};","import React, { useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { Tag as CoreTag } from '@alfalab/core-components-tag';\nimport { CrossCompactMIcon } from '@alfalab/icons-glyph/CrossCompactMIcon';\n\nimport { TagComponent } from '../../types';\n\nimport styles from './index.module.css';\n\nexport const Tag: TagComponent = ({\n    option: { content, key },\n    onClick,\n    handleDeleteTag,\n    ...props\n}) => {\n    const handleClick = useCallback(() => {\n        if (handleDeleteTag) {\n            handleDeleteTag(key);\n        }\n    }, [handleDeleteTag, key]);\n\n    return (\n        <CoreTag\n            key={key}\n            size='xxs'\n            onClick={onClick}\n            checked={!!handleDeleteTag}\n            className={cn(styles.tag, { [styles.tagNoClose]: !handleDeleteTag })}\n            {...props}\n        >\n            <span className={styles.tagContentWrap}>\n                {content}\n                {handleDeleteTag && (\n                    // eslint-disable-next-line\n                    <span className={styles.tagCross} onClick={handleClick}>\n                        <CrossCompactMIcon />\n                    </span>\n                )}\n            </span>\n        </CoreTag>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_H8dWc\",\"xl\":\"xl_HnEsq\",\"contentWrapper\":\"contentWrapper_up1O8\",\"l\":\"l_CDm6X\",\"m\":\"m_EyO5x\",\"s\":\"s_Wpirm\",\"contentWrapperVertical\":\"contentWrapperVertical_k4dOj\",\"hasInnerLabel\":\"hasInnerLabel_nUSST\",\"hasTags\":\"hasTags_Wud_3\",\"addons\":\"addons_dGzqn\",\"field\":\"field__FnTv\",\"input\":\"input_LboKB\",\"block\":\"block_qarp_\",\"focusVisible\":\"focusVisible_zDAeu\",\"placeholder\":\"placeholder_sQ_7l\",\"addons-size-m\":\"addons-size-m_XLFhq\",\"addons-size-l\":\"addons-size-l_Cat43\",\"addons-size-xl\":\"addons-size-xl_gDffy\",\"label\":\"label_TVxR9\"};","import React, {\n    ChangeEvent,\n    FC,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    MutableRefObject,\n    ReactNode,\n    useCallback,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { FormControl, FormControlProps } from '@alfalab/core-components-form-control';\nimport { FieldProps } from '@alfalab/core-components-select';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { TagComponent } from '../../types';\nimport { calculateTotalElementsPerRow } from '../../utils/calculate-collapse-size';\nimport { Tag as DefaultTag } from '../tag';\n\nimport styles from './index.module.css';\n\ntype TagListOwnProps = {\n    value?: string;\n    handleDeleteTag?: (key: string) => void;\n    onInput?: (event: ChangeEvent<HTMLInputElement>) => void;\n    inputRef?: MutableRefObject<HTMLInputElement>;\n    autocomplete?: boolean;\n    isPopoverOpen?: boolean;\n    collapseTagList?: boolean;\n    moveInputToNewLine?: boolean;\n    transformCollapsedTagText?: (collapsedCount: number) => string;\n    transformTagText?: (tagText?: ReactNode) => ReactNode;\n    Tag?: TagComponent;\n    handleUpdatePopover?: () => void;\n};\n\nexport const TagList: FC<FieldProps & FormControlProps & TagListOwnProps> = ({\n    size = 'xl',\n    open,\n    disabled,\n    placeholder,\n    selectedMultiple = [],\n    Arrow,\n    innerProps,\n    className,\n    fieldClassName,\n    value = '',\n    autocomplete,\n    label,\n    valueRenderer,\n    onInput,\n    handleDeleteTag,\n    collapseTagList,\n    moveInputToNewLine,\n    transformCollapsedTagText,\n    transformTagText,\n    isPopoverOpen,\n    handleUpdatePopover,\n    Tag = DefaultTag,\n    setSelectedItems,\n    toggleMenu,\n    labelView,\n    ...restProps\n}) => {\n    const [focused, setFocused] = useState(false);\n    const [isShowMoreEnabled, setShowMoreEnabled] = useState<boolean | undefined>(false);\n    const [visibleElements, setVisibleElements] = useState(1);\n    const [inputOnNewLine, setInputOnNewLine] = useState(false);\n\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const contentWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [focusVisible] = useFocus(wrapperRef, 'keyboard');\n    const [inputFocusVisible] = useFocus(inputRef, 'keyboard');\n\n    useLayoutEffect(() => {\n        setShowMoreEnabled(isPopoverOpen);\n    }, [isPopoverOpen]);\n\n    useLayoutEffect(() => {\n        setVisibleElements(selectedMultiple.length);\n        setShowMoreEnabled(false);\n    }, [selectedMultiple]);\n\n    useLayoutEffect(() => {\n        if (collapseTagList && contentWrapperRef.current) {\n            const totalVisibleElements = calculateTotalElementsPerRow(\n                contentWrapperRef.current,\n                autocomplete && inputRef.current ? inputRef.current : null,\n            );\n\n            setVisibleElements(totalVisibleElements);\n        }\n    }, [collapseTagList, visibleElements, autocomplete]);\n\n    const handleFocus = useCallback(() => setFocused(true), []);\n    const handleBlur = useCallback(() => setFocused(false), []);\n\n    const inputTextIsOverflow = useCallback(\n        () => inputRef.current && inputRef.current.scrollWidth > inputRef.current.clientWidth,\n        [],\n    );\n\n    const handleMouseDown = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    }, []);\n\n    const { onClick, ...restInnerProps } = innerProps;\n\n    const handleClick = useCallback<MouseEventHandler<HTMLDivElement>>(\n        (event) => {\n            if (onClick && contentWrapperRef.current) {\n                const eventTarget = event.target as HTMLDivElement;\n\n                const clickedInsideContent =\n                    eventTarget !== contentWrapperRef.current &&\n                    contentWrapperRef.current.contains(eventTarget);\n\n                if (!clickedInsideContent) {\n                    onClick(event);\n                }\n            }\n\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [onClick],\n    );\n\n    const handleKeyDown = useCallback<KeyboardEventHandler<HTMLDivElement>>(\n        (event) => {\n            const lastSelectedTag = selectedMultiple[selectedMultiple.length - 1];\n\n            if (event.key === 'Backspace' && !value && handleDeleteTag && lastSelectedTag) {\n                handleDeleteTag(lastSelectedTag.key);\n            }\n        },\n        [handleDeleteTag, selectedMultiple, value],\n    );\n\n    const toggleShowMoreLessButton = useCallback(\n        (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (event) {\n                event.stopPropagation();\n                setShowMoreEnabled((v) => !v);\n                if (handleUpdatePopover) {\n                    handleUpdatePopover();\n                }\n            }\n        },\n        [handleUpdatePopover],\n    );\n\n    useEffect(() => {\n        /**\n         * Если текст не помещается в инпут, то нужно перенести инпут на новую строку.\n         */\n        if (moveInputToNewLine) {\n            if (inputTextIsOverflow() && !inputOnNewLine) {\n                setInputOnNewLine(true);\n            } else if (value.length === 0) {\n                setInputOnNewLine(false);\n            }\n        }\n    }, [value, inputOnNewLine, inputTextIsOverflow, moveInputToNewLine]);\n\n    const collapseTagTitle = useMemo(() => {\n        if (isShowMoreEnabled) {\n            return 'Свернуть';\n        }\n        if (transformCollapsedTagText) {\n            return transformCollapsedTagText(selectedMultiple.length - visibleElements);\n        }\n\n        return `+${selectedMultiple.length - visibleElements}`;\n    }, [transformCollapsedTagText, isShowMoreEnabled, selectedMultiple.length, visibleElements]);\n\n    const filled = Boolean(selectedMultiple.length > 0) || Boolean(value);\n    const hasInnerLabel = Boolean(label) && labelView !== 'outer';\n\n    /**\n     * Флаг который позволит добавлять класс с вертикальными\n     * отступами если элементы не помещаются в один ряд,\n     * для того чтобы не менялась высота инпута\n     */\n    const shouldAddVerticalMargin = Boolean(\n        (!collapseTagList || isShowMoreEnabled) && !hasInnerLabel,\n    );\n\n    return (\n        <div\n            ref={wrapperRef}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            className={cn(className, styles.component, styles[size])}\n        >\n            <FormControl\n                {...restProps}\n                ref={innerProps.ref}\n                fieldClassName={cn(fieldClassName, styles.field, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                block={true}\n                size={size}\n                focused={open || focused}\n                disabled={disabled}\n                filled={filled || !!placeholder}\n                onMouseDown={handleMouseDown}\n                rightAddons={Arrow}\n                onClick={handleClick}\n                addonsClassName={cn(styles.addons, styles[`addons-size-${size}`])}\n                label={label}\n                labelClassName={styles.label}\n                labelView={labelView}\n            >\n                <div\n                    className={cn(styles.contentWrapper, {\n                        [styles.hasInnerLabel]: hasInnerLabel,\n                        [styles.hasTags]: selectedMultiple.length > 0,\n                        [styles.contentWrapperVertical]: shouldAddVerticalMargin,\n                    })}\n                    ref={contentWrapperRef}\n                >\n                    {selectedMultiple.map((option, index) =>\n                        isShowMoreEnabled || index + 1 <= visibleElements ? (\n                            <Tag\n                                option={{\n                                    ...option,\n                                    content: transformTagText\n                                        ? transformTagText(option.content)\n                                        : option.content,\n                                }}\n                                key={option.key}\n                                handleDeleteTag={handleDeleteTag}\n                            />\n                        ) : null,\n                    )}\n                    {visibleElements < selectedMultiple.length && (\n                        <Tag\n                            data-collapse='collapse-last-tag-element'\n                            onClick={toggleShowMoreLessButton}\n                            option={{\n                                key: 'collapse',\n                                content: collapseTagTitle,\n                            }}\n                        />\n                    )}\n\n                    {autocomplete && (\n                        <input\n                            {...restInnerProps}\n                            autoComplete='off'\n                            ref={inputRef}\n                            value={value}\n                            onChange={onInput}\n                            className={cn(styles.input, {\n                                [styles.focusVisible]: inputFocusVisible,\n                                [styles.block]: inputOnNewLine,\n                            })}\n                            disabled={disabled}\n                            onKeyDown={handleKeyDown}\n                            placeholder={filled ? '' : placeholder}\n                        />\n                    )}\n\n                    {placeholder && !filled && !autocomplete && (\n                        <span className={styles.placeholder}>{placeholder}</span>\n                    )}\n                </div>\n            </FormControl>\n        </div>\n    );\n};\n","import { GroupShape, isGroup, OptionShape } from '@alfalab/core-components-select';\n\nimport { OptionMatcher, SelectWithTagsProps } from '../types';\n\nconst defaultMatch: OptionMatcher = (option, inputValue) =>\n    option.value.toLowerCase().indexOf((inputValue || '').toLowerCase(), 0) !== -1;\n\nconst optionsIsGroupShapes = (options: SelectWithTagsProps['options']): options is GroupShape[] => {\n    const item = options[0];\n\n    if (!item) {\n        return false;\n    }\n\n    return isGroup(item);\n};\n\nexport const filterOptions = (\n    options: SelectWithTagsProps['options'],\n    inputValue: string,\n    math = defaultMatch,\n) => {\n    if (optionsIsGroupShapes(options)) {\n        return options.reduce<GroupShape[]>((acc, group) => {\n            const matchedOptions = group.options.filter((option) => math(option, inputValue));\n\n            if (matchedOptions.length > 0) {\n                acc.push({ ...group, options: matchedOptions });\n\n                return acc;\n            }\n\n            return acc;\n        }, []);\n    }\n\n    return (options as OptionShape[]).filter((option) => math(option, inputValue));\n};\n","import React, { ChangeEvent, forwardRef, useCallback, useRef, useState } from 'react';\n\nimport {\n    Arrow as DefaultArrow,\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    Option as DefaultOption,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { TagList } from './components';\nimport { SelectWithTagsProps } from './types';\nimport { filterOptions } from './utils';\n\nexport const SelectWithTags = forwardRef<HTMLInputElement, SelectWithTagsProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            Arrow = DefaultArrow,\n            value,\n            selected,\n            size = 'xl',\n            onOpen,\n            onInput,\n            onChange,\n            options,\n            autocomplete = true,\n            match,\n            allowUnselect = true,\n            collapseTagList = false,\n            moveInputToNewLine = true,\n            transformCollapsedTagText,\n            transformTagText,\n            Tag,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const controlled = Boolean(selected);\n\n        const [selectedTags, setSelectedTags] = useState(selected || []);\n        const [isPopoverOpen, setPopoverOpen] = useState<boolean | undefined>(false);\n        const updatePopover = useRef(() => null);\n\n        const resetValue = useCallback(() => {\n            const event = { target: { value: '' } };\n\n            onInput(event as ChangeEvent<HTMLInputElement>);\n        }, [onInput]);\n\n        const handleUpdatePopover = useCallback(() => {\n            if (updatePopover && updatePopover.current) {\n                updatePopover.current();\n            }\n        }, []);\n\n        const handleDeleteTag = useCallback(\n            (deletedKey: string) => {\n                let tags = selected || selectedTags;\n\n                tags = tags.filter((tag) => {\n                    const key = typeof tag === 'string' ? tag : tag.key;\n\n                    return deletedKey !== key;\n                });\n\n                if (onChange) {\n                    onChange({ selectedMultiple: tags });\n                }\n\n                if (!controlled) {\n                    setSelectedTags(tags);\n                }\n            },\n            [controlled, onChange, selected, selectedTags],\n        );\n\n        const handleChange = useCallback<Required<BaseSelectProps>['onChange']>(\n            ({ selectedMultiple, name, initiator }) => {\n                if (onChange) {\n                    onChange({ selectedMultiple, name, initiator });\n                }\n\n                if (!controlled) {\n                    setSelectedTags(selectedMultiple);\n                }\n\n                if (value) {\n                    resetValue();\n                }\n            },\n            [onChange, controlled, value, resetValue],\n        );\n\n        const handleOpen = useCallback<Required<BaseSelectProps>['onOpen']>(\n            (payload) => {\n                const { open } = payload;\n\n                if (!open && value) {\n                    resetValue();\n                }\n                setPopoverOpen(open);\n\n                if (onOpen) onOpen(payload);\n            },\n            [onOpen, resetValue, value],\n        );\n\n        const filteredOptions = filterOptions(options, value, match);\n\n        const isAutocomplete = autocomplete || Boolean(match);\n\n        return (\n            <BaseSelect\n                {...restProps}\n                ref={ref}\n                Option={Option}\n                Field={TagList}\n                Optgroup={Optgroup}\n                OptionsList={OptionsList}\n                Arrow={Arrow}\n                multiple={true}\n                updatePopover={updatePopover}\n                allowUnselect={allowUnselect}\n                showEmptyOptionsList={true}\n                fieldProps={{\n                    value,\n                    autocomplete: isAutocomplete,\n                    onInput,\n                    handleDeleteTag,\n                    Tag,\n                    collapseTagList,\n                    moveInputToNewLine,\n                    transformCollapsedTagText,\n                    transformTagText,\n                    handleUpdatePopover,\n                    isPopoverOpen,\n                }}\n                selected={selected || selectedTags}\n                autocomplete={isAutocomplete}\n                size={size}\n                options={filteredOptions}\n                onChange={handleChange}\n                onOpen={handleOpen}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer__dans\"};","import React from 'react';\n\nimport { Button } from '@alfalab/core-components-button';\n\nimport { OptionShape } from '../../../../typings';\n\nimport styles from './index.module.css';\n\nexport type FooterProps = {\n    handleClear?: () => void;\n    handleApply?: () => void;\n    showClear?: boolean;\n    selectedDraft?: OptionShape[];\n};\n\nexport const Footer = ({\n    handleApply,\n    handleClear,\n    showClear,\n    selectedDraft = [],\n}: FooterProps) => (\n    <div\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n        className={styles.footer}\n    >\n        <Button size='xxs' view='primary' onClick={handleApply}>\n            Применить\n        </Button>\n\n        {showClear && selectedDraft.length > 0 && (\n            <Button size='xxs' view='secondary' onClick={handleClear}>\n                Сбросить\n            </Button>\n        )}\n    </div>\n);\n","import React, { FC, forwardRef, RefAttributes, useCallback, useEffect } from 'react';\n\nimport { OptionsList as DefaultOptionsList } from '../../../components/options-list';\nimport { DEFAULT_VISIBLE_OPTIONS } from '../../../consts';\nimport { OptionShape, OptionsListProps } from '../../../typings';\nimport { SELECT_ALL_KEY } from '../hook';\n\nimport { Footer as DefaultFooter, FooterProps } from './footer/Component';\n\ntype OptionsListWithApplyProps = OptionsListProps & {\n    showClear?: boolean;\n    onClose?: () => void;\n    selectedDraft?: OptionShape[];\n    OptionsList?: React.FC<OptionsListProps & RefAttributes<HTMLDivElement>>;\n    Footer?: FC<FooterProps>;\n};\n\nexport const OptionsListWithApply = forwardRef<HTMLDivElement, OptionsListWithApplyProps>(\n    (\n        {\n            toggleMenu,\n            getOptionProps: defaultGetOptionProps,\n            showClear = true,\n            selectedDraft = [],\n            flatOptions = [],\n            OptionsList = DefaultOptionsList,\n            onApply = () => null,\n            onClear = () => null,\n            onClose = () => null,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            Footer = DefaultFooter,\n            ...restProps\n        }: OptionsListWithApplyProps,\n        ref,\n    ) => {\n        const getOptionProps = useCallback(\n            (option: OptionShape, index: number) => {\n                const optionProps = defaultGetOptionProps(option, index);\n\n                const selected =\n                    option.key === SELECT_ALL_KEY\n                        ? selectedDraft.length === flatOptions.length - 1\n                        : selectedDraft.includes(option);\n\n                return {\n                    ...optionProps,\n                    selected,\n                };\n            },\n            [defaultGetOptionProps, flatOptions.length, selectedDraft],\n        );\n\n        const handleApply = useCallback(() => {\n            onApply();\n\n            toggleMenu();\n        }, [onApply, toggleMenu]);\n\n        const handleClear = useCallback(() => {\n            onClear();\n\n            toggleMenu();\n        }, [onClear, toggleMenu]);\n\n        useEffect(() => {\n            const activeElement = document.activeElement as HTMLElement;\n\n            return () => {\n                onClose();\n                if (activeElement) {\n                    activeElement.focus();\n                }\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        return (\n            <OptionsList\n                {...restProps}\n                ref={ref}\n                visibleOptions={visibleOptions}\n                toggleMenu={toggleMenu}\n                flatOptions={flatOptions}\n                getOptionProps={getOptionProps}\n                onApply={handleApply}\n                onClear={handleClear}\n                footer={\n                    <Footer\n                        handleApply={handleApply}\n                        handleClear={handleClear}\n                        showClear={showClear}\n                        selectedDraft={selectedDraft}\n                    />\n                }\n            />\n        );\n    },\n);\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { AnyObject, BaseSelectProps, OptionShape, processOptions } from '../..';\n\nimport { OptionsListWithApply } from './options-list-with-apply';\n\nexport type UseSelectWithApplyProps = {\n    /**\n     * Список выбранных пунктов\n     */\n    selected: BaseSelectProps['selected'];\n\n    /**\n     * Список вариантов выбора\n     */\n    options: BaseSelectProps['options'];\n\n    /**\n     * Обработчик выбора\n     */\n    onChange: BaseSelectProps['onChange'];\n\n    /**\n     * Компонент выпадающего меню\n     */\n    OptionsList?: BaseSelectProps['OptionsList'];\n\n    /**\n     * Пропсы, которые будут прокинуты в компонент списка\n     */\n    optionsListProps?: BaseSelectProps['optionsListProps'];\n\n    /**\n     * Показывать кнопку очистки\n     */\n    showClear?: boolean;\n\n    /**\n     * Показывать пункт \"Выбрать все\"\n     */\n    showSelectAll?: boolean;\n};\n\nexport const SELECT_ALL_KEY = 'select_all';\n\nconst selectAllOption = { key: SELECT_ALL_KEY, content: 'Выбрать все' };\n\nexport function useSelectWithApply({\n    options,\n    selected,\n    onChange = () => null,\n    OptionsList,\n    optionsListProps = {},\n    showClear = true,\n    showSelectAll = false,\n}: UseSelectWithApplyProps) {\n    const { flatOptions, selectedOptions } = useMemo(\n        () => processOptions(options, selected),\n        [options, selected],\n    );\n\n    const [selectedDraft, setSelectedDraft] = useState<OptionShape[]>(selectedOptions);\n\n    const selectedOptionsRef = useRef<OptionShape[]>(selectedOptions);\n\n    const handleApply = useCallback(() => {\n        onChange({\n            selected: selectedDraft[0],\n            selectedMultiple: selectedDraft,\n            initiator: null,\n        });\n    }, [onChange, selectedDraft]);\n\n    const handleClear = useCallback(() => {\n        setSelectedDraft([]);\n        onChange({\n            selected: null,\n            selectedMultiple: [],\n            initiator: null,\n        });\n    }, [onChange]);\n\n    const handleChange: Required<BaseSelectProps>['onChange'] = useCallback(\n        ({ initiator, ...restArgs }) => {\n            if (!initiator) {\n                onChange({\n                    initiator: null,\n                    ...restArgs,\n                });\n\n                return;\n            }\n\n            const initiatorSelected =\n                selectedDraft.includes(initiator) ||\n                (initiator.key === SELECT_ALL_KEY && selectedDraft.length === flatOptions.length);\n\n            if (initiator.key === SELECT_ALL_KEY) {\n                setSelectedDraft(initiatorSelected ? [] : (flatOptions as OptionShape[]));\n            } else {\n                setSelectedDraft(\n                    initiatorSelected\n                        ? selectedDraft.filter((o) => o !== initiator)\n                        : selectedDraft.concat(initiator),\n                );\n            }\n        },\n        [flatOptions, onChange, selectedDraft],\n    );\n\n    const handleClose = useCallback(() => {\n        setSelectedDraft(selectedOptionsRef.current);\n    }, []);\n\n    useEffect(() => {\n        setSelectedDraft(selectedOptions);\n        selectedOptionsRef.current = selectedOptions;\n    }, [selectedOptions]);\n\n    const memoizedOptions = useMemo(\n        () => (showSelectAll ? [selectAllOption, ...options] : options),\n        [options, showSelectAll],\n    );\n\n    return {\n        OptionsList: OptionsListWithApply,\n        optionsListProps: {\n            ...(optionsListProps as AnyObject),\n            OptionsList,\n            showClear,\n            onClear: handleClear,\n            onApply: handleApply,\n            onClose: handleClose,\n            selectedDraft,\n        },\n        allowUnselect: true,\n        multiple: true,\n        options: memoizedOptions,\n        onChange: handleChange,\n        selected,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Ueoys\",\"sheet\":\"sheet_M7FLk\",\"sheetContent\":\"sheetContent_FzFRt\",\"sheetContainer\":\"sheetContainer_xoxRd\",\"block\":\"block_UhmUp\",\"option\":\"option_SOtzg\",\"optionGroup\":\"optionGroup_afe40\"};","import React, {\n    FocusEvent,\n    forwardRef,\n    KeyboardEvent,\n    MouseEvent,\n    ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport {\n    useCombobox,\n    useMultipleSelection,\n    UseMultipleSelectionProps,\n    UseMultipleSelectionState,\n} from 'downshift';\n\nimport { BottomSheet, BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { ModalMobile } from '@alfalab/core-components-modal/mobile';\n\nimport { getDataTestId } from '../../../../utils';\nimport {\n    AnyObject,\n    BaseSelectProps,\n    OptionProps,\n    OptionShape,\n    OptionsListProps,\n} from '../../typings';\nimport { processOptions } from '../../utils';\nimport { Arrow as DefaultArrow } from '../arrow';\nimport { Field as DefaultField } from '../field';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\nimport { Option as DefaultOption } from '../option';\nimport { OptionsList as DefaultOptionsList } from '../options-list';\n\nimport styles from './index.module.css';\n\nexport type SelectMobileProps = Omit<BaseSelectProps, 'Checkmark' | 'onScroll'> & {\n    /**\n     * Футер\n     * @deprecated Используйте bottomSheetProps.actionButton\n     */\n    footer?: ReactNode;\n\n    /**\n     * Будет ли свайпаться шторка\n     * @deprecated Используйте bottomSheetProps.swipeable\n     */\n    swipeable?: boolean;\n\n    /**\n     * Отображать в BottomSheet\n     */\n    isBottomSheet?: boolean;\n\n    /**\n     * Дополнительные пропсы шторки\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n};\n\nexport const BaseSelectMobile = forwardRef(\n    (\n        {\n            dataTestId,\n            className,\n            fieldClassName,\n            optionsListClassName,\n            optionClassName,\n            optionGroupClassName,\n            optionsListProps,\n            options = [],\n            autocomplete = false,\n            multiple = false,\n            allowUnselect = false,\n            disabled = false,\n            closeOnSelect = !multiple,\n            circularNavigation = false,\n            defaultOpen = false,\n            open: openProp,\n            optionsListWidth = 'content',\n            name,\n            id,\n            selected = [],\n            size = 'm',\n            optionsSize = 'm',\n            error,\n            hint,\n            block,\n            label,\n            labelView,\n            placeholder,\n            fieldProps = {},\n            optionProps = {},\n            valueRenderer,\n            onChange,\n            onOpen,\n            onFocus,\n            Arrow = DefaultArrow,\n            Field = DefaultField,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            OptionsList = DefaultOptionsList,\n            swipeable,\n            footer,\n            isBottomSheet,\n            bottomSheetProps,\n            showEmptyOptionsList = false,\n        }: SelectMobileProps,\n        ref,\n    ) => {\n        const rootRef = useRef<HTMLLabelElement>(null);\n        const fieldRef = useRef<HTMLInputElement>(null);\n        const listRef = useRef<HTMLDivElement>(null);\n        const initiatorRef = useRef<OptionShape | null>(null);\n\n        const itemToString = (option: OptionShape) => (option ? option.key : '');\n\n        const { flatOptions, selectedOptions } = useMemo(\n            () => processOptions(options, selected),\n            [options, selected],\n        );\n\n        const scrollableContainerRef = useRef<HTMLDivElement>(null);\n\n        const useMultipleSelectionProps: UseMultipleSelectionProps<OptionShape> = {\n            itemToString,\n            onSelectedItemsChange: (changes) => {\n                if (onChange) {\n                    const { selectedItems = [] } = changes;\n\n                    onChange({\n                        selectedMultiple: selectedItems,\n                        selected: selectedItems.length ? selectedItems[0] : null,\n                        initiator: initiatorRef.current,\n                        name,\n                    });\n\n                    initiatorRef.current = null;\n                }\n            },\n            stateReducer: (state, actionAndChanges) => {\n                const { type, changes } = actionAndChanges;\n\n                if (\n                    !allowUnselect &&\n                    type === useMultipleSelection.stateChangeTypes.DropdownKeyDownBackspace\n                ) {\n                    return state;\n                }\n\n                return changes as UseMultipleSelectionState<OptionShape>;\n            },\n        };\n\n        if (selected !== undefined) {\n            useMultipleSelectionProps.selectedItems = selectedOptions;\n        }\n\n        const {\n            selectedItems,\n            addSelectedItem,\n            setSelectedItems,\n            removeSelectedItem,\n            getDropdownProps,\n        } = useMultipleSelection(useMultipleSelectionProps);\n\n        const {\n            isOpen: open,\n            getMenuProps,\n            getInputProps,\n            getItemProps,\n            getComboboxProps,\n            getLabelProps,\n            highlightedIndex,\n            toggleMenu,\n            openMenu,\n        } = useCombobox<OptionShape>({\n            id,\n            isOpen: openProp,\n            circularNavigation,\n            items: flatOptions,\n            itemToString,\n            defaultHighlightedIndex: -1,\n            onIsOpenChange: ({ isOpen }) => {\n                if (onOpen) {\n                    /**\n                     *  Вызываем обработчик асинхронно.\n                     *\n                     * Иначе при клике вне открытого селекта сначала сработает onOpen, который закроет селект,\n                     * А затем сработает onClick кнопки открытия\\закрытия с open=false и в итоге селект откроется снова.\n                     */\n                    setTimeout(() => {\n                        onOpen({\n                            open: isOpen,\n                            name,\n                        });\n                    }, 0);\n                }\n            },\n            stateReducer: (state, actionAndChanges) => {\n                const { type, changes } = actionAndChanges;\n                const { selectedItem } = changes;\n\n                switch (type) {\n                    case useCombobox.stateChangeTypes.InputBlur:\n                        return state;\n                    case useCombobox.stateChangeTypes.InputKeyDownEnter:\n                    case useCombobox.stateChangeTypes.ItemClick:\n                        initiatorRef.current = selectedItem;\n\n                        if (selectedItem && !selectedItem.disabled) {\n                            const alreadySelected = selectedItems.includes(selectedItem);\n                            const allowRemove =\n                                allowUnselect || (multiple && selectedItems.length > 1);\n\n                            if (alreadySelected && allowRemove) {\n                                if (multiple) {\n                                    removeSelectedItem(selectedItem);\n                                } else {\n                                    setSelectedItems([]);\n                                }\n                            }\n\n                            if (!alreadySelected) {\n                                if (multiple) {\n                                    addSelectedItem(selectedItem);\n                                } else {\n                                    setSelectedItems([selectedItem]);\n                                }\n                            }\n                        }\n\n                        return {\n                            ...changes,\n                            isOpen: !closeOnSelect || multiple,\n                            // при closeOnSelect === false - сохраняем подсвеченный индекс\n                            highlightedIndex:\n                                state.isOpen && !closeOnSelect\n                                    ? state.highlightedIndex\n                                    : changes.highlightedIndex,\n                        };\n                    default:\n                        return changes;\n                }\n            },\n        });\n\n        const menuProps = (getMenuProps as (options: object, additional: object) => AnyObject)(\n            { ref: listRef },\n            { suppressRefError: true },\n        );\n        const inputProps = getInputProps(getDropdownProps({ ref: mergeRefs([ref, fieldRef]) }));\n\n        const handleFieldFocus = (event: FocusEvent<HTMLDivElement | HTMLInputElement>) => {\n            if (onFocus) onFocus(event);\n\n            if (autocomplete && !open) {\n                openMenu();\n            }\n        };\n\n        const handleFieldKeyDown = (event: KeyboardEvent<HTMLDivElement | HTMLInputElement>) => {\n            inputProps.onKeyDown(event);\n            if (autocomplete && !open && (event.key.length === 1 || event.key === 'Backspace')) {\n                // Для автокомплита - открываем меню при начале ввода\n                openMenu();\n            }\n\n            if (\n                [' ', 'Enter'].includes(event.key) &&\n                !autocomplete &&\n                (event.target as HTMLElement).tagName !== 'INPUT' &&\n                (event.target as HTMLElement).tagName !== 'BUTTON'\n            ) {\n                // Открываем\\закрываем меню по нажатию enter или пробела\n                event.preventDefault();\n                if (!open || highlightedIndex === -1) toggleMenu();\n            }\n        };\n\n        const handleFieldClick = (event: MouseEvent) => {\n            if (!autocomplete || (event.target as HTMLElement).tagName !== 'INPUT') {\n                toggleMenu();\n            } else {\n                openMenu();\n            }\n        };\n\n        const getOptionProps = (option: OptionShape, index: number): OptionProps => {\n            const selectedItem = selectedItems.includes(option);\n\n            return {\n                ...(optionProps as object),\n                mobile: true,\n                className: cn(styles.option, optionClassName),\n                innerProps: getItemProps({\n                    index,\n                    item: option,\n                    disabled: option.disabled,\n                    onMouseDown: (event: MouseEvent) => event.preventDefault(),\n                }),\n                multiple,\n                index,\n                option,\n                size: optionsSize,\n                disabled: option.disabled,\n                highlighted: index === highlightedIndex,\n                selected: selectedItem,\n                dataTestId: getDataTestId(dataTestId, 'option'),\n            };\n        };\n\n        useEffect(() => {\n            if (defaultOpen) openMenu();\n        }, [defaultOpen, openMenu]);\n\n        useEffect(() => {\n            if (openProp) {\n                openMenu();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const handleClose = () => {\n            toggleMenu();\n        };\n\n        const renderValue = () =>\n            selectedItems.map((option) => (\n                <input type='hidden' name={name} value={option.key} key={option.key} />\n            ));\n\n        const renderOptionsList = () => {\n            if (flatOptions.length === 0 && !showEmptyOptionsList) return null;\n\n            return (\n                <div {...menuProps} className={optionsListClassName}>\n                    <OptionsList\n                        {...(optionsListProps as OptionsListProps)}\n                        ref={scrollableContainerRef}\n                        optionsListWidth={optionsListWidth}\n                        flatOptions={flatOptions}\n                        highlightedIndex={highlightedIndex}\n                        open={open}\n                        size={size}\n                        options={options}\n                        Optgroup={Optgroup}\n                        Option={Option}\n                        selectedItems={selectedItems}\n                        setSelectedItems={setSelectedItems}\n                        toggleMenu={toggleMenu}\n                        getOptionProps={getOptionProps}\n                        visibleOptions={0}\n                        dataTestId={getDataTestId(dataTestId, 'options-list')}\n                        optionGroupClassName={cn(styles.optionGroup, optionGroupClassName)}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <div\n                {...getComboboxProps({\n                    ref: rootRef,\n                    ...(disabled && { 'aria-disabled': true }),\n                    className: cn(styles.component, { [styles.block]: block }, className),\n                })}\n                onKeyDown={disabled ? undefined : handleFieldKeyDown}\n                tabIndex={-1}\n                data-test-id={getDataTestId(dataTestId)}\n            >\n                <Field\n                    selectedMultiple={selectedItems}\n                    selected={selectedItems[0]}\n                    setSelectedItems={setSelectedItems}\n                    toggleMenu={toggleMenu}\n                    multiple={multiple}\n                    open={open}\n                    disabled={disabled}\n                    size={size}\n                    placeholder={placeholder}\n                    label={label && <span {...getLabelProps()}>{label}</span>}\n                    labelView={labelView}\n                    Arrow={Arrow && <Arrow open={open} />}\n                    error={error}\n                    hint={hint}\n                    valueRenderer={valueRenderer}\n                    className={fieldClassName}\n                    innerProps={{\n                        onFocus: disabled ? undefined : handleFieldFocus,\n                        onClick: disabled ? undefined : handleFieldClick,\n                        tabIndex: disabled ? -1 : 0,\n                        ref: mergeRefs([inputProps.ref]),\n                        id: inputProps.id,\n                        'aria-labelledby': inputProps['aria-labelledby'],\n                        'aria-controls': inputProps['aria-controls'],\n                        'aria-autocomplete': autocomplete\n                            ? inputProps['aria-autocomplete']\n                            : undefined,\n                    }}\n                    dataTestId={getDataTestId(dataTestId, 'field')}\n                    {...(fieldProps as AnyObject)}\n                />\n\n                {name && renderValue()}\n\n                {isBottomSheet ? (\n                    <BottomSheet\n                        open={open}\n                        onClose={handleClose}\n                        className={styles.sheet}\n                        contentClassName={styles.sheetContent}\n                        containerClassName={styles.sheetContainer}\n                        title={label || placeholder}\n                        actionButton={footer}\n                        stickyHeader={true}\n                        hasCloser={true}\n                        swipeable={swipeable}\n                        scrollableContainerRef={scrollableContainerRef}\n                        {...bottomSheetProps}\n                    >\n                        {renderOptionsList()}\n                    </BottomSheet>\n                ) : (\n                    <ModalMobile\n                        open={open}\n                        onClose={handleClose}\n                        contentClassName={styles.sheetContent}\n                        hasCloser={true}\n                        ref={scrollableContainerRef}\n                    >\n                        <ModalMobile.Header hasCloser={true} sticky={true}>\n                            {label || placeholder}\n                        </ModalMobile.Header>\n\n                        {renderOptionsList()}\n                    </ModalMobile>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_axvIA\",\"button\":\"button_pDzdW\",\"highlighted\":\"highlighted_Elc3O\"};","import React, { useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { BaseModalContext } from '@alfalab/core-components-base-modal';\nimport { Button } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nexport type FooterProps = {\n    handleClear?: () => void;\n    handleApply?: () => void;\n    showClear?: boolean;\n};\n\nexport const Footer = ({ handleApply, handleClear, showClear }: FooterProps) => {\n    const { footerHighlighted, setHasFooter } = useContext(BaseModalContext);\n\n    useEffect(() => {\n        setHasFooter(true);\n    }, [setHasFooter]);\n\n    return (\n        <div\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n            tabIndex={0}\n            className={cn(styles.footer, {\n                [styles.highlighted]: footerHighlighted,\n            })}\n        >\n            <Button size='s' view='primary' className={styles.button} onClick={handleApply}>\n                Применить\n            </Button>\n\n            {showClear && (\n                <Button size='s' view='secondary' className={styles.button} onClick={handleClear}>\n                    Сбросить\n                </Button>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"virtualOptionsList\":\"virtualOptionsList_f8l8Q\",\"virtualOptionsListHeader\":\"virtualOptionsListHeader_Il1v5\",\"virtualOptionsListFooter\":\"virtualOptionsListFooter_dRAb1\",\"withBorder\":\"withBorder_Ufdow\",\"scrollable\":\"scrollable_D_W_P\",\"inner\":\"inner_HnsHb\",\"virtualRow\":\"virtualRow_LhVkm\",\"highlighted\":\"highlighted_pMwde\",\"emptyPlaceholder\":\"emptyPlaceholder_VR5vJ\",\"l\":\"l_eZbum\",\"xl\":\"xl_jd5nz\"};","import React, { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useVirtual } from 'react-virtual';\nimport cn from 'classnames';\n\nimport { Scrollbar } from '@alfalab/core-components-scrollbar';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { DEFAULT_VISIBLE_OPTIONS } from '../../consts';\nimport { GroupShape, OptionShape, OptionsListProps } from '../../typings';\nimport { isGroup, lastIndexOf, usePrevious, useVisibleOptions } from '../../utils';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\n\nimport styles from './index.module.css';\n\nexport const VirtualOptionsList = forwardRef<HTMLDivElement, OptionsListProps>(\n    (\n        {\n            size = 's',\n            flatOptions = [],\n            highlightedIndex = -1,\n            className,\n            getOptionProps,\n            Option,\n            open,\n            options = [],\n            Optgroup = DefaultOptgroup,\n            dataTestId,\n            emptyPlaceholder,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            header,\n            footer,\n            showFooter,\n            optionsListWidth,\n            onScroll,\n            nativeScrollbar: nativeScrollbarProp,\n        },\n        ref,\n    ) => {\n        const listRef = useRef<HTMLDivElement>(null);\n        const parentRef = useRef<HTMLDivElement>(null);\n        const scrollbarRef = useRef<HTMLDivElement>(null);\n        const [visibleOptionsInvalidateKey, setVisibleOptionsInvalidateKey] = useState(0);\n        const prevHighlightedIndex = usePrevious(highlightedIndex) || -1;\n\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        const rowVirtualizer = useVirtual({\n            size: flatOptions.length,\n            parentRef: (ref || parentRef) as React.RefObject<HTMLDivElement>,\n            overscan: 15,\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        // Сколл к выбранному пункту при открытии меню\n        useEffect(() => {\n            if (open) {\n                rowVirtualizer.scrollToIndex(highlightedIndex, { align: 'end' });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [open]);\n\n        // Скролл к пункту, которого нет на экране\n        useEffect(() => {\n            if (highlightedIndex === -1) return;\n\n            if (!rowVirtualizer.virtualItems.some((option) => option.index === highlightedIndex)) {\n                rowVirtualizer.scrollToIndex(highlightedIndex, { align: 'end' });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [highlightedIndex]);\n\n        // Циклическая навигация\n        useEffect(() => {\n            const notDisabled = (option: OptionShape) => !option.disabled;\n            const firstNonDisabled = flatOptions.findIndex(notDisabled);\n            const lastNonDisabled = lastIndexOf(flatOptions, notDisabled);\n\n            if (\n                prevHighlightedIndex <= firstNonDisabled &&\n                highlightedIndex === flatOptions.length - 1\n            ) {\n                rowVirtualizer.scrollToIndex(lastNonDisabled);\n            }\n\n            if (prevHighlightedIndex >= lastNonDisabled && highlightedIndex === 0) {\n                rowVirtualizer.scrollToIndex(0);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [prevHighlightedIndex, highlightedIndex]);\n\n        useEffect(() => {\n            setVisibleOptionsInvalidateKey(\n                /**\n                 * react-virtual может несколько раз отрендерить список с одним элементом,\n                 * поэтому нужно еще раз пересчитать высоту, когда список ВИДИМЫХ пунктов будет отрендерен полностью\n                 * Также, высоту нужно пересчитывать при изменении ОБЩЕГО кол-ва пунктов меню\n                 */\n                rowVirtualizer.virtualItems.length > 1 ? flatOptions.length : 1,\n            );\n        }, [rowVirtualizer.virtualItems.length, flatOptions.length]);\n\n        useVisibleOptions({\n            visibleOptions,\n            invalidate: visibleOptionsInvalidateKey,\n            listRef,\n            styleTargetRef: nativeScrollbar ? parentRef : scrollbarRef,\n            open,\n        });\n\n        // Т.к. рендерится плоский список, необходимо знать индекс, когда начинается новая группа\n        const groupStartIndexes = useMemo(() => {\n            let currentIndex = 0;\n\n            return options.reduce((acc: { [key: number]: number }, option, index) => {\n                if (isGroup(option)) {\n                    acc[currentIndex] = index;\n                    currentIndex += option.options.length;\n                } else {\n                    currentIndex += 1;\n                }\n\n                return acc;\n            }, {});\n        }, [options]);\n\n        const renderList = () =>\n            rowVirtualizer.virtualItems.map((virtualRow) => {\n                const option = flatOptions[virtualRow.index];\n                const group = options[groupStartIndexes[virtualRow.index]] as GroupShape;\n\n                return (\n                    <div\n                        key={virtualRow.index}\n                        ref={virtualRow.measureRef}\n                        className={cn(styles.virtualRow, {\n                            [styles.highlighted]: highlightedIndex === virtualRow.index,\n                        })}\n                        style={{\n                            transform: `translateY(${virtualRow.start}px)`,\n                        }}\n                    >\n                        {group && <Optgroup label={group.label} />}\n                        {!isGroup(option) && (\n                            <Option {...getOptionProps(option, virtualRow.index)} />\n                        )}\n                    </div>\n                );\n            });\n\n        const contentNodeProps = {\n            className: styles.inner,\n            style: { height: `${rowVirtualizer.totalSize}px` },\n            ref: listRef,\n        };\n\n        const renderWithCustomScrollbar = () => (\n            <Scrollbar\n                className={styles.scrollable}\n                ref={scrollbarRef}\n                horizontalAutoStretch={optionsListWidth === 'content'}\n                scrollableNodeProps={{ onScroll, ref: parentRef }}\n                contentNodeProps={contentNodeProps}\n            >\n                {renderList()}\n            </Scrollbar>\n        );\n\n        const renderWithNativeScrollbar = () => {\n            if (visibleOptions) {\n                return (\n                    <div\n                        className={styles.scrollable}\n                        ref={mergeRefs([parentRef, ref])}\n                        onScroll={onScroll}\n                    >\n                        <div {...contentNodeProps}>{renderList()}</div>\n                    </div>\n                );\n            }\n\n            return <div {...contentNodeProps}>{renderList()}</div>;\n        };\n\n        if (options.length === 0 && !emptyPlaceholder) {\n            return null;\n        }\n\n        return (\n            <div\n                className={cn(styles.virtualOptionsList, styles[size], className)}\n                data-test-id={dataTestId}\n            >\n                {header && <div className={styles.virtualOptionsListHeader}>{header}</div>}\n\n                {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n\n                {emptyPlaceholder && options.length === 0 && (\n                    <div className={styles.emptyPlaceholder}>{emptyPlaceholder}</div>\n                )}\n\n                {showFooter && footer && (\n                    <div\n                        className={cn(styles.virtualOptionsListFooter, {\n                            [styles.withBorder]:\n                                visibleOptions && flatOptions.length > visibleOptions,\n                        })}\n                    >\n                        {footer}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef, ReactNode } from 'react';\n\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\n\nimport { useSelectWithApply, UseSelectWithApplyProps } from '../../presets/useSelectWithApply/hook';\nimport { AnyObject, BaseSelectProps } from '../../typings';\nimport { Arrow as DefaultArrow } from '../arrow';\nimport { BaseSelectMobile } from '../base-select-mobile';\nimport { Footer } from '../base-select-mobile/footer';\nimport { Field as DefaultField } from '../field';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\nimport { Option as DefaultOption } from '../option';\nimport { OptionsList as DefaultOptionsList } from '../options-list';\nimport { VirtualOptionsList as DefaultVirtualOptionsList } from '../virtual-options-list';\n\nexport type AdditionalMobileProps = {\n    /**\n     * Футер\n     * @deprecated Используйте bottomSheetProps.actionButton\n     */\n    footer?: ReactNode;\n\n    /**\n     * Будет ли свайпаться шторка\n     * @deprecated Используйте bottomSheetProps.swipeable\n     */\n    swipeable?: boolean;\n\n    /**\n     * Дополнительные пропсы шторки\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Показывать кнопку очистки\n     */\n    showClear?: UseSelectWithApplyProps['showClear'];\n\n    /**\n     * Показывать пункт \"Выбрать все\"\n     */\n    showSelectAll?: UseSelectWithApplyProps['showSelectAll'];\n};\n\nexport type SelectMobileProps = Omit<BaseSelectProps, 'Checkmark' | 'onScroll'> &\n    AdditionalMobileProps;\n\nconst VIRTUAL_OPTIONS_LIST_THRESHOLD = 30;\n\nexport const SelectMobile = forwardRef(\n    (\n        {\n            autocomplete = false,\n            multiple = false,\n            allowUnselect = false,\n            disabled = false,\n            closeOnSelect = !multiple,\n            circularNavigation = false,\n            defaultOpen = false,\n            open: openProp,\n            size = 'm',\n            optionsSize = 'm',\n            fieldProps = {},\n            optionProps = {},\n            optionsListProps = {},\n            Arrow = DefaultArrow,\n            Field = DefaultField,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            selected,\n            options,\n            OptionsList = options.length > VIRTUAL_OPTIONS_LIST_THRESHOLD\n                ? DefaultVirtualOptionsList\n                : DefaultOptionsList,\n            onChange,\n            bottomSheetProps,\n            showClear = true,\n            showSelectAll,\n            ...restProps\n        }: SelectMobileProps,\n        ref,\n    ) => {\n        const applyProps = useSelectWithApply({\n            optionsListProps: {\n                ...(optionsListProps as AnyObject),\n                Footer,\n            },\n            OptionsList,\n            selected,\n            options,\n            onChange,\n            showClear,\n            showSelectAll,\n        });\n\n        return (\n            <BaseSelectMobile\n                ref={ref}\n                autocomplete={autocomplete}\n                multiple={multiple}\n                allowUnselect={allowUnselect}\n                disabled={disabled}\n                closeOnSelect={closeOnSelect}\n                circularNavigation={circularNavigation}\n                defaultOpen={defaultOpen}\n                open={openProp}\n                size={size}\n                optionsSize={optionsSize}\n                fieldProps={fieldProps}\n                optionProps={optionProps}\n                Arrow={Arrow}\n                Field={Field}\n                Optgroup={Optgroup}\n                Option={Option}\n                isBottomSheet={true}\n                options={options}\n                selected={selected}\n                onChange={onChange}\n                OptionsList={OptionsList}\n                bottomSheetProps={bottomSheetProps}\n                optionsListProps={optionsListProps}\n                {...restProps}\n                {...(multiple && !bottomSheetProps?.actionButton && applyProps)}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\nimport { useSelectWithApply, UseSelectWithApplyProps } from '../../presets/useSelectWithApply/hook';\nimport { AnyObject, BaseSelectProps } from '../../typings';\nimport { Arrow as DefaultArrow } from '../arrow';\nimport { BaseSelectMobile } from '../base-select-mobile';\nimport { Footer } from '../base-select-mobile/footer';\nimport { Field as DefaultField } from '../field';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\nimport { Option as DefaultOption } from '../option';\nimport { OptionsList as DefaultOptionsList } from '../options-list';\nimport { VirtualOptionsList as DefaultVirtualOptionsList } from '../virtual-options-list';\n\nexport type SelectModalMobileProps = Omit<BaseSelectProps, 'Checkmark' | 'onScroll'> & {\n    /**\n     * Показывать кнопку очистки\n     */\n    showClear?: UseSelectWithApplyProps['showClear'];\n\n    /**\n     * Показывать пункт \"Выбрать все\"\n     */\n    showSelectAll?: UseSelectWithApplyProps['showSelectAll'];\n};\n\nconst VIRTUAL_OPTIONS_LIST_THRESHOLD = 30;\n\nexport const SelectModalMobile = forwardRef(\n    (\n        {\n            autocomplete = false,\n            multiple = false,\n            allowUnselect = false,\n            disabled = false,\n            closeOnSelect = !multiple,\n            circularNavigation = false,\n            defaultOpen = false,\n            open: openProp,\n            size = 'm',\n            optionsSize = 'm',\n            fieldProps = {},\n            optionProps = {},\n            optionsListProps = {},\n            Arrow = DefaultArrow,\n            Field = DefaultField,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            selected,\n            options,\n            OptionsList = options.length > VIRTUAL_OPTIONS_LIST_THRESHOLD\n                ? DefaultVirtualOptionsList\n                : DefaultOptionsList,\n            onChange,\n            showClear = true,\n            showSelectAll,\n            ...restProps\n        }: SelectModalMobileProps,\n        ref,\n    ) => {\n        const applyProps = useSelectWithApply({\n            optionsListProps: {\n                ...(optionsListProps as AnyObject),\n                Footer,\n            },\n            OptionsList,\n            selected,\n            options,\n            onChange,\n            showClear,\n            showSelectAll,\n        });\n\n        return (\n            <BaseSelectMobile\n                ref={ref}\n                autocomplete={autocomplete}\n                multiple={multiple}\n                allowUnselect={allowUnselect}\n                disabled={disabled}\n                closeOnSelect={closeOnSelect}\n                circularNavigation={circularNavigation}\n                defaultOpen={defaultOpen}\n                open={openProp}\n                size={size}\n                optionsSize={optionsSize}\n                fieldProps={fieldProps}\n                optionProps={optionProps}\n                Arrow={Arrow}\n                Field={Field}\n                Optgroup={Optgroup}\n                Option={Option}\n                isBottomSheet={false}\n                options={options}\n                selected={selected}\n                onChange={onChange}\n                OptionsList={OptionsList}\n                optionsListProps={optionsListProps}\n                {...restProps}\n                {...(multiple && applyProps)}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkmark\":\"checkmark_k7JPV\",\"single\":\"single_RGgG2\",\"selected\":\"selected_oDSqq\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Checkbox } from '@alfalab/core-components-checkbox';\nimport { CheckmarkMIcon } from '@alfalab/icons-glyph/CheckmarkMIcon';\n\nimport { CheckmarkProps } from '../../typings';\n\nimport styles from './index.module.css';\n\nexport const BaseCheckmark = ({\n    selected,\n    disabled = false,\n    className,\n    multiple,\n}: CheckmarkProps) => {\n    const checkmarkClassNames = cn(styles.checkmark, className, {\n        [styles.single]: !multiple,\n        [styles.selected]: selected,\n    });\n\n    return multiple ? (\n        <Checkbox\n            checked={selected}\n            disabled={disabled}\n            className={checkmarkClassNames}\n            size='m'\n            hiddenInput={true}\n        />\n    ) : (\n        <CheckmarkMIcon className={checkmarkClassNames} />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"option\":\"option_lBHIe\",\"disabled\":\"disabled_ZtCGg\",\"checkmarkBefore\":\"checkmarkBefore_foivD\",\"mobile\":\"mobile_USY9r\",\"checkmarkAfter\":\"checkmarkAfter_I95_j\",\"textContent\":\"textContent_pnRzJ\",\"selected\":\"selected_mQZoC\",\"highlighted\":\"highlighted_lDy30\",\"content\":\"content_STONQ\"};","import React, { FC, isValidElement } from 'react';\nimport cn from 'classnames';\n\nimport { OptionProps } from '../../typings';\nimport { BaseCheckmark } from '../base-checkmark';\n\nimport styles from './index.module.css';\n\nexport const BaseOption: FC<OptionProps> = ({\n    className,\n    option,\n    children,\n    selected,\n    highlighted,\n    disabled,\n    multiple,\n    Checkmark = BaseCheckmark,\n    checkmarkPosition = multiple ? 'before' : 'after',\n    innerProps,\n    dataTestId,\n    mobile = false,\n}) => {\n    const content = children || option.content || option.key;\n    const { showCheckMark = true } = option;\n\n    const isTextContent = !isValidElement(content);\n\n    const renderCheckmark = () => {\n        if (Checkmark && showCheckMark) {\n            return <Checkmark disabled={disabled} selected={selected} multiple={multiple} />;\n        }\n\n        return null;\n    };\n\n    return (\n        <div\n            {...innerProps}\n            className={cn(styles.option, className, {\n                [styles.highlighted]: highlighted,\n                [styles.selected]: selected,\n                [styles.disabled]: disabled,\n                [styles.textContent]: isTextContent,\n                [styles.mobile]: mobile,\n                [styles.checkmarkAfter]: !isTextContent && checkmarkPosition === 'after',\n                [styles.checkmarkBefore]: !isTextContent && checkmarkPosition === 'before',\n            })}\n            data-test-id={dataTestId}\n        >\n            {checkmarkPosition === 'before' && renderCheckmark()}\n\n            <div className={cn(styles.content)}>{content}</div>\n\n            {checkmarkPosition === 'after' && renderCheckmark()}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"skeleton_ck4Ej\"};","import React from 'react';\n\nimport { Skeleton } from '@alfalab/core-components-skeleton';\n\nimport { Option as DefaultOption } from '../../components/option';\nimport { BaseSelectProps, OptionProps, OptionShape } from '../../typings';\n\nimport styles from './index.module.css';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype useSelectWithLoadingProps = {\n    loading?: boolean;\n    visibleOptions?: BaseSelectProps['visibleOptions'];\n    Option?: React.FC<OptionProps>;\n};\n\nexport function useSelectWithLoading({\n    loading = false,\n    visibleOptions = 6,\n    Option = DefaultOption,\n}: useSelectWithLoadingProps) {\n    const renderOption = (props: OptionProps) => (\n        <Option {...props} Checkmark={null} highlighted={loading ? false : props.highlighted} />\n    );\n\n    const options: OptionShape[] = Array(visibleOptions)\n        .fill(0)\n        .map((_, key) => ({\n            key: `loading-${key}`,\n            disabled: true,\n            content: <Skeleton className={styles.skeleton} visible={true} />,\n        }));\n\n    if (!loading) return null;\n\n    return {\n        Option: renderOption,\n        options,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"skeleton_q7v7e\"};","import React, { Reducer, useCallback, useEffect, useMemo, useReducer, useRef } from 'react';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport { Skeleton } from '@alfalab/core-components-skeleton';\n\nimport { Option as DefaultOption } from '../../components/option';\nimport { OptionProps, OptionShape } from '../../typings';\n\nimport styles from './index.module.css';\n\nimport 'intersection-observer';\n\nconst DEBOUNCE_TIMEOUT = 300;\n\ntype OptionsFetcherResponse = {\n    options: OptionShape[];\n    hasMore: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype useLazyLoadingProps = {\n    /** Количество элементов на \"странице\" */\n    limit?: number;\n\n    /** Начальный номер \"страницы\" */\n    initialOffset?: number;\n\n    /** Скелетон загружаемых элементов */\n    skeleton?: React.ReactNode;\n\n    /** Компонент пункта меню */\n    Option?: React.FC<OptionProps>;\n\n    /**\n     * Функция-загрузчик опций.\n     * @param offset - текущая страница\n     * @param limit - количество элементов на странице\n     * @param queryString - строчные данные, пробрасываемые для поиска из кастомного инпута, расположенного в заголовке OptionsList\n     * @returns Promise<{\n     *  options - список опций следующей \"страницы\". Они аппендятся к предыдущим\n     *  hasMore - указывает, есть ли еще незагруженные элементы (в случае false перестает загружать \"следующую страницу\")\n     * }>\n     */\n    optionsFetcher(\n        offset: number,\n        limit: number,\n        queryString?: string,\n    ): Promise<OptionsFetcherResponse>;\n};\n\nconst actions = {\n    fetchOptionsStart() {\n        return { type: 'FETCH_OPTIONS_START' } as const;\n    },\n    fetchOptionsBreak() {\n        return { type: 'FETCH_OPTIONS_BREAK' } as const;\n    },\n    fetchOptionsSuccess(payload: { options: OptionShape[]; hasMore: boolean }) {\n        return { type: 'FETCH_OPTIONS_SUCCESS', payload } as const;\n    },\n    setIsOpened(opened: boolean) {\n        return { type: 'SET_IS_OPENED', payload: opened } as const;\n    },\n    setQueryString(qs: string) {\n        return { type: 'SET_QUERY_STRING', payload: qs } as const;\n    },\n    reset() {\n        return { type: 'RESET' } as const;\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Actions = typeof actions extends { [key: string]: (...args: any) => infer U } ? U : never;\n\nexport function useLazyLoading({\n    limit = 10,\n    initialOffset = 0,\n    optionsFetcher,\n    skeleton = <Skeleton className={styles.skeleton} visible={true} />,\n    Option = DefaultOption,\n}: useLazyLoadingProps) {\n    const initialOptions: OptionShape[] = [];\n    const initialLoading = false;\n\n    const lazyLoadingInitialState = {\n        opened: false,\n        offset: initialOffset,\n        options: initialOptions,\n        loading: initialLoading,\n        allOptionsLoaded: false,\n        queryString: '',\n    };\n\n    const lazyLoadingReducer: Reducer<typeof lazyLoadingInitialState, Actions> = (\n        state,\n        action,\n    ) => {\n        switch (action.type) {\n            case 'FETCH_OPTIONS_START': {\n                return {\n                    ...state,\n                    loading: true,\n                };\n            }\n            case 'FETCH_OPTIONS_BREAK': {\n                return {\n                    ...state,\n                    loading: false,\n                };\n            }\n            case 'FETCH_OPTIONS_SUCCESS': {\n                return {\n                    ...state,\n                    options: [...state.options, ...action.payload.options],\n                    offset: state.offset + (action.payload.options.length ? 1 : 0),\n                    allOptionsLoaded: !action.payload.hasMore,\n                    loading: false,\n                };\n            }\n            case 'SET_IS_OPENED': {\n                return {\n                    ...state,\n                    opened: action.payload,\n                };\n            }\n            case 'SET_QUERY_STRING': {\n                return {\n                    // Изменение queryString подразумевает сброс текущих опций.\n                    ...lazyLoadingInitialState,\n                    opened: state.opened,\n                    loading: true,\n                    queryString: action.payload,\n                };\n            }\n            case 'RESET': {\n                return {\n                    ...lazyLoadingInitialState,\n                };\n            }\n            default: {\n                return state;\n            }\n        }\n    };\n\n    const [{ opened, offset, options, loading, allOptionsLoaded, queryString }, dispatch] =\n        useReducer(lazyLoadingReducer, lazyLoadingInitialState);\n\n    const abortFetchingOptionsRef = useRef<() => void>();\n\n    const fetchNextOffsetOptions = useCallback(() => {\n        dispatch(actions.fetchOptionsStart());\n\n        new Promise<OptionsFetcherResponse>((resolve, reject) => {\n            // eslint-disable-next-line no-unused-expressions\n            abortFetchingOptionsRef.current?.();\n            abortFetchingOptionsRef.current = reject;\n            optionsFetcher(offset, limit, queryString).then((res) => {\n                resolve(res);\n            });\n        })\n            .then((res) => {\n                dispatch(actions.fetchOptionsSuccess(res));\n                abortFetchingOptionsRef.current = undefined;\n            })\n            .catch(\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                () => {},\n            );\n    }, [optionsFetcher, offset, limit, queryString]);\n\n    const listRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        let observer: IntersectionObserver;\n\n        if (opened && !loading && !allOptionsLoaded) {\n            observer = new IntersectionObserver(\n                ([entry]) => {\n                    if (entry.isIntersecting) {\n                        if (observer) {\n                            observer.disconnect();\n                        }\n                        fetchNextOffsetOptions();\n                    }\n                },\n                {\n                    root: listRef.current,\n                },\n            );\n\n            /*\n             * Обсервим пересечение последней опции с контейнером.\n             * Таким образом, загрузка следующей \"страницы\" начнется когда юзер доскроллит список\n             * до верхнего края последней опции, что обеспечивает плавность\n             */\n            const optionList = listRef.current?.querySelectorAll('[role=\"option\"]');\n            const lastOption = optionList?.[optionList.length - 1];\n\n            if (lastOption) {\n                observer.observe(lastOption);\n            }\n        }\n\n        return () => {\n            if (observer) {\n                observer.disconnect();\n            }\n        };\n    }, [offset, fetchNextOffsetOptions, opened, allOptionsLoaded, initialOffset, loading]);\n\n    const onOpen = useCallback(\n        (payload: { open?: boolean }) => {\n            if (payload.open) {\n                if (options.length === initialOptions.length) {\n                    fetchNextOffsetOptions();\n                }\n            } else {\n                // eslint-disable-next-line no-unused-expressions\n                abortFetchingOptionsRef.current?.();\n                dispatch(actions.fetchOptionsBreak());\n            }\n\n            dispatch(actions.setIsOpened(payload.open ?? false));\n        },\n        [initialOptions.length, fetchNextOffsetOptions, options.length],\n    );\n\n    const fetchNextOptionsRef = useRef<() => void>();\n    const fetchNextOptionsTimerRef = useRef<ReturnType<typeof setTimeout>>();\n\n    useEffect(() => {\n        fetchNextOptionsRef.current = fetchNextOffsetOptions;\n    }, [fetchNextOffsetOptions]);\n\n    const onQueryStringChange = useCallback<Exclude<InputProps['onChange'], undefined>>(\n        (_, payload) => {\n            dispatch(actions.setQueryString(payload.value));\n            /* eslint-disable no-unused-expressions */\n\n            /*\n             * Если во время загрузки опций юзер ввел новый текст в инпут,\n             * нужно прервать текущую загрузку, чтобы неактуальные опции не попали в выдачу\n             */\n            abortFetchingOptionsRef.current?.();\n\n            listRef.current?.scrollTo({ top: 0 });\n\n            /* Дебаунсим ввод текста, чтобы не отправлять запрос к новым опциям на каждый чих */\n            if (fetchNextOptionsTimerRef.current) {\n                clearTimeout(fetchNextOptionsTimerRef.current);\n            }\n            fetchNextOptionsTimerRef.current = setTimeout(() => {\n                /*\n                 * После дебаунса необходимо вызвать функцию-загрузчик,\n                 * содержащую актуальные на данный момент данные оффсета и queryString.\n                 * Поэтому мы не можем обратиться напрямую к функции fetchNextOptions,\n                 * так как она будет замкнута на старые значения, актуальные на момент вызова хэндлера,\n                 * так что берем ее из обновляемого рефа\n                 */\n                fetchNextOptionsRef.current?.();\n            }, DEBOUNCE_TIMEOUT);\n            /* eslint-enable */\n        },\n        [],\n    );\n\n    const renderOption = (props: OptionProps) => (\n        <Option {...props} highlighted={loading ? false : props.highlighted} />\n    );\n\n    const skeletonOptions: OptionShape[] = useMemo(\n        () =>\n            Array(loading ? limit : 0)\n                .fill(0)\n                .map((_, key) => ({\n                    key: `loading-${key}`,\n                    disabled: true,\n                    content: skeleton,\n                })),\n        [loading, limit, skeleton],\n    );\n\n    const reset = useCallback(() => {\n        dispatch(actions.reset());\n    }, []);\n\n    return {\n        optionsProps: {\n            Option: renderOption,\n            options: [...options, ...skeletonOptions],\n            optionsListProps: {\n                ref: listRef,\n                inputProps: {\n                    onChange: onQueryStringChange,\n                    value: queryString,\n                },\n            },\n            onOpen,\n        },\n        reset,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"s\":\"s_LRCZa\",\"hidden\":\"hidden_Lso1y\"};","// extracted by mini-css-extract-plugin\nexport default {\"enterRight\":\"enterRight_tv4o_\",\"enterLeft\":\"enterLeft_AJ0oo\",\"enterActive\":\"enterActive_F8KXX\",\"exit\":\"exit_BapSR\",\"exitActiveRight\":\"exitActiveRight_ZQPIm\",\"exitActiveLeft\":\"exitActiveLeft_W31oh\"};","import React, { cloneElement, forwardRef, isValidElement, useContext, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { Drawer, DrawerProps } from '@alfalab/core-components-drawer';\n\nimport { ContentDesktop } from './components/content/Component.desktop';\nimport { FooterDesktop } from './components/footer/Component.desktop';\nimport { Header } from './components/header/Component';\nimport { ResponsiveContext } from './ResponsiveContext';\nimport { TResponsiveModalContext } from './typings';\n\nimport styles from './desktop.module.css';\nimport transitions from './transitions.desktop.module.css';\n\nexport type SidePanelDesktopProps = BaseModalProps &\n    Pick<\n        DrawerProps,\n        'placement' | 'nativeScrollbar' | 'contentTransitionProps' | 'scrollbarProps'\n    > & {\n        /**\n         * Ширина модального окна\n         * @default \"s\"\n         */\n        size?: 's';\n\n        /**\n         * Управление наличием закрывающего крестика\n         * @default false\n         */\n        hasCloser?: boolean;\n    };\n\nconst SidePanelDesktopComponent = forwardRef<HTMLDivElement, SidePanelDesktopProps>(\n    (\n        {\n            size = 's',\n            children,\n            className,\n            wrapperClassName,\n            contentTransitionProps = {},\n            backdropProps,\n            placement = 'right',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const responsiveContext = useContext(ResponsiveContext);\n        const modalRef = useRef<HTMLElement>(null);\n\n        const enterCn = cn({\n            [transitions.appearRight]: placement === 'right',\n            [transitions.appearLeft]: placement === 'left',\n        });\n\n        const exitCn = cn({\n            [transitions.exitActiveRight]: placement === 'right',\n            [transitions.exitActiveLeft]: placement === 'left',\n        });\n\n        const contextValue = React.useMemo<TResponsiveModalContext>(\n            () => ({ size, view: 'desktop' }),\n            [size],\n        );\n\n        const renderContent = () => (\n            <Drawer\n                {...restProps}\n                ref={mergeRefs([ref, modalRef])}\n                placement={placement}\n                wrapperClassName={wrapperClassName}\n                className={cn(className, styles[size], styles.hidden)}\n                backdropProps={backdropProps}\n                contentTransitionProps={{\n                    classNames: {\n                        appear: enterCn,\n                        enter: enterCn,\n                        appearActive: transitions.enterActive,\n                        enterActive: transitions.enterActive,\n                        exit: transitions.exit,\n                        exitActive: exitCn,\n                        exitDone: exitCn,\n                    },\n                    ...contentTransitionProps,\n                }}\n            >\n                {React.Children.map(children, (child) =>\n                    isValidElement(child) ? cloneElement(child, { size }) : child,\n                )}\n            </Drawer>\n        );\n\n        const renderWithContext = () => (\n            <ResponsiveContext.Provider value={contextValue}>\n                {renderContent()}\n            </ResponsiveContext.Provider>\n        );\n\n        return responsiveContext ? renderContent() : renderWithContext();\n    },\n);\n\nexport const SidePanelDesktop = Object.assign(SidePanelDesktopComponent, {\n    Content: ContentDesktop,\n    Header,\n    Footer: FooterDesktop,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_YGtfd\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Content, ContentProps } from './Component';\n\nimport styles from './mobile.module.css';\n\nexport type ContentMobileProps = ContentProps;\n\nexport const ContentMobile: FC<ContentMobileProps> = ({ className, ...restProps }) => (\n    <Content className={cn(className, styles.content)} {...restProps} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_cqAhC\",\"sticky\":\"sticky_Ep_1n\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Footer, FooterProps } from './Component';\n\nimport styles from './mobile.module.css';\n\nexport type FooterMobileProps = FooterProps;\n\nexport const FooterMobile: FC<FooterMobileProps> = ({ className, sticky, ...restProps }) => (\n    <Footer\n        className={cn(className, styles.footer, {\n            [styles.sticky]: sticky,\n        })}\n        sticky={sticky}\n        {...restProps}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component__gWdU\",\"mobileContent\":\"mobileContent_y91QW\"};","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"appear_vApK4\",\"enter\":\"enter_l_qbP\",\"appearActive\":\"appearActive_z_d_h\",\"enterActive\":\"enterActive_JnTe5\",\"exit\":\"exit_dQ6ul\",\"exitActive\":\"exitActive_H_p9l\",\"exitDone\":\"exitDone__WSI3\"};","import React, { forwardRef, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { BaseModal, BaseModalProps } from '@alfalab/core-components-base-modal';\n\nimport { ContentMobile } from './components/content/Component.mobile';\nimport { FooterMobile } from './components/footer/Component.mobile';\nimport { Header } from './components/header/Component';\nimport { ResponsiveContext } from './ResponsiveContext';\n\nimport styles from './mobile.module.css';\nimport transitions from './transitions.mobile.module.css';\n\nexport type SidePanelMobileProps = BaseModalProps & {\n    /**\n     * Управление наличием закрывающего крестика\n     * @default false\n     */\n    hasCloser?: boolean;\n};\n\nconst contextValue = { size: 's', view: 'mobile' } as const;\n\nconst SidePanelMobileComponent = forwardRef<HTMLDivElement, SidePanelMobileProps>(\n    ({ children, className, transitionProps, ...restProps }, ref) => {\n        const responsiveContext = useContext(ResponsiveContext);\n\n        const renderContent = () => (\n            <BaseModal\n                {...restProps}\n                ref={ref}\n                transitionProps={{\n                    classNames: transitions,\n                    ...transitionProps,\n                }}\n                className={cn(className, styles.component)}\n                scrollHandler='content'\n            >\n                <div className={styles.mobileContent}>{children}</div>\n            </BaseModal>\n        );\n\n        const renderWithContext = () => (\n            <ResponsiveContext.Provider value={contextValue}>\n                {renderContent()}\n            </ResponsiveContext.Provider>\n        );\n\n        return responsiveContext ? renderContent() : renderWithContext();\n    },\n);\n\nexport const SidePanelMobile = Object.assign(SidePanelMobileComponent, {\n    Content: ContentMobile,\n    Header,\n    Footer: FooterMobile,\n});\n","import React, { FC, forwardRef, useContext, useMemo } from 'react';\n\nimport { BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { DrawerProps } from '@alfalab/core-components-drawer';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { isClient } from '../../utils';\n\nimport { Header } from './components/header/Component';\nimport { SidePanelDesktop } from './Component.desktop';\nimport { SidePanelMobile } from './Component.mobile';\nimport { ResponsiveContext } from './ResponsiveContext';\nimport { TResponsiveModalContext } from './typings';\n\nexport type SidePanelResponsiveProps = BaseModalProps &\n    Pick<\n        DrawerProps,\n        'contentTransitionProps' | 'placement' | 'nativeScrollbar' | 'scrollbarProps'\n    > & {\n        /**\n         * Ширина модального окна\n         * @default \"s\"\n         */\n        size?: 's';\n\n        /**\n         * Управление наличием закрывающего крестика\n         * @default false\n         */\n        hasCloser?: boolean;\n\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n\n        /**\n         * Значение по-умолчанию для хука useMatchMedia\n         */\n        defaultMatchMediaValue?: boolean | (() => boolean);\n    };\n\nfunction createResponsive<DesktopType extends FC, MobileType extends FC>(\n    desktop: DesktopType,\n    mobile: MobileType,\n) {\n    // eslint-disable-next-line\n    function ResponsiveChild(props: any) {\n        const { view = 'desktop' } = useContext(ResponsiveContext) || {};\n\n        const Child = view === 'desktop' ? desktop : mobile;\n\n        return <Child {...props} />;\n    }\n\n    return ResponsiveChild as DesktopType | MobileType;\n}\n\nconst SidePanelResponsiveComponent = forwardRef<HTMLDivElement, SidePanelResponsiveProps>(\n    ({ children, breakpoint = 1024, size = 's', defaultMatchMediaValue, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n        const getDefaultValue = () => (isClient() ? window.matchMedia(query).matches : false);\n\n        const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue ?? getDefaultValue);\n\n        const view = isDesktop ? 'desktop' : 'mobile';\n\n        const contextValue = useMemo<TResponsiveModalContext>(() => ({ view, size }), [view, size]);\n\n        const Component = isDesktop ? SidePanelDesktop : SidePanelMobile;\n\n        return (\n            <ResponsiveContext.Provider value={contextValue}>\n                <Component ref={ref} size={size} {...restProps}>\n                    {children}\n                </Component>\n            </ResponsiveContext.Provider>\n        );\n    },\n);\n\nexport const SidePanelResponsive = Object.assign(SidePanelResponsiveComponent, {\n    Header,\n    Content: createResponsive(SidePanelDesktop.Content, SidePanelMobile.Content),\n    Footer: createResponsive(SidePanelDesktop.Footer, SidePanelMobile.Footer),\n});\n","import { BaseModalContext } from '@alfalab/core-components-base-modal';\n\nexport const ModalContext = BaseModalContext;\n","import React from 'react';\n\nimport type { TResponsiveModalContext } from './typings';\n\nexport const ResponsiveContext = React.createContext<TResponsiveModalContext>(null);\n","// extracted by mini-css-extract-plugin\nexport default {\"s\":\"s_ZzFqW\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Content, ContentProps } from './Component';\n\nimport styles from './desktop.module.css';\n\nexport type ContentDesktopProps = ContentProps & {\n    /**\n     * Размер (только для desktop версии компонента)\n     */\n    size?: 's';\n};\n\nexport const ContentDesktop: FC<ContentDesktopProps> = ({\n    size = 's',\n    className,\n    ...restProps\n}) => <Content className={cn(className, size && styles[size])} {...restProps} />;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_G0dGy\",\"withHeader\":\"withHeader_tYAz0\",\"flex\":\"flex_roQ3w\"};","import React, { FC, ReactNode, Ref, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\n\nimport styles from './index.module.css';\n\nexport type ContentProps = {\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Content: FC<ContentProps> = ({ children, className, dataTestId }) => {\n    const { contentRef, hasHeader } = useContext(ModalContext);\n\n    return (\n        <div\n            className={cn(styles.content, className, styles.flex, {\n                [styles.withHeader]: hasHeader,\n            })}\n            ref={contentRef as Ref<HTMLDivElement>}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sticky\":\"sticky_AQL9P\",\"s\":\"s_nyXQv\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Footer, FooterProps } from './Component';\n\nimport styles from './desktop.module.css';\n\nexport type FooterDesktopProps = FooterProps & {\n    /**\n     * Размер (только для desktop версии компонента)\n     */\n    size?: 's';\n};\n\nexport const FooterDesktop: FC<FooterDesktopProps> = ({\n    size = 's',\n    className,\n    sticky,\n    ...restProps\n}) => (\n    <Footer\n        className={cn(className, size && styles[size], {\n            [styles.sticky]: sticky,\n        })}\n        sticky={sticky}\n        {...restProps}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_EBatm\",\"sticky\":\"sticky_pk8Ab\",\"highlighted\":\"highlighted_Nuyic\"};","// extracted by mini-css-extract-plugin\nexport default {\"column\":\"column_vDc7Z\",\"gap-16\":\"gap-16_Loo6j\",\"gap-24\":\"gap-24_LXx4R\",\"gap-32\":\"gap-32_YfhRx\",\"start\":\"start_Dpw3H\",\"center\":\"center_mMlT_\",\"space-between\":\"space-between_hQ_4l\"};","import React, { FC, ReactNode, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\n\nimport styles from './index.module.css';\nimport layoutStyles from './layout.module.css';\n\nexport type FooterProps = {\n    /**\n     * Контент футера\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Фиксирует футер\n     */\n    sticky?: boolean;\n\n    /**\n     * Выравнивание элементов футера\n     */\n    layout?: 'start' | 'center' | 'space-between' | 'column';\n\n    /**\n     * Отступы между элементами футера\n     */\n    gap?: 16 | 24 | 32;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Footer: FC<FooterProps> = ({\n    children,\n    className,\n    sticky,\n    layout = 'start',\n    gap,\n    dataTestId,\n}) => {\n    const { footerHighlighted, setHasFooter } = useContext(ModalContext);\n\n    useEffect(() => {\n        setHasFooter(true);\n    }, [setHasFooter]);\n\n    return (\n        <div\n            className={cn(\n                styles.footer,\n                className,\n                layoutStyles[layout],\n                gap && layoutStyles[`gap-${gap}`],\n                {\n                    [styles.highlighted]: sticky && footerHighlighted,\n                    [styles.sticky]: sticky,\n                },\n            )}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_Yj8ia\",\"s\":\"s_YrUnf\",\"sticky\":\"sticky_GJe2z\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_UsRtW\",\"hasContent\":\"hasContent_J0xwX\",\"highlighted\":\"highlighted_gH14n\",\"sticky\":\"sticky_OogXi\",\"backgroundImage\":\"backgroundImage_UAHu6\",\"content\":\"content_fxQv8\",\"title\":\"title_oGff0\",\"addon\":\"addon_garBk\",\"closer\":\"closer_rtEQA\",\"right\":\"right_L3rNl\",\"trim\":\"trim_HpDmO\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_JDNRW\",\"sticky\":\"sticky_yqHcL\",\"content\":\"content_o2vay\"};","import React, { FC, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { NavigationBar, NavigationBarProps } from '@alfalab/core-components-navigation-bar';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport type HeaderProps = Omit<NavigationBarProps, 'size' | 'view' | 'parentRef'>;\n\nexport const Header: FC<HeaderProps> = ({\n    className,\n    children,\n    contentClassName,\n    title,\n    sticky,\n    hasCloser = true,\n    ...restProps\n}) => {\n    const { setHasHeader, headerHighlighted, onClose, componentRef } = useContext(ModalContext);\n    const { size = 's', view = 'desktop' } = useContext(ResponsiveContext) || {};\n\n    useEffect(() => {\n        setHasHeader(true);\n    }, [setHasHeader]);\n\n    const hasContent = Boolean(title || children);\n\n    return (\n        <NavigationBar\n            {...restProps}\n            scrollableParentRef={componentRef}\n            view={view}\n            sticky={sticky}\n            title={title}\n            hasCloser={hasCloser}\n            onClose={onClose}\n            className={cn(styles.header, className, {\n                [styles.highlighted]: hasContent && sticky && headerHighlighted,\n                [styles.sticky]: sticky,\n                [styles.hasContent]: hasContent,\n                [desktopStyles.sticky]: view === 'desktop' && sticky,\n                [desktopStyles[size]]: view === 'desktop',\n                [mobileStyles.sticky]: view === 'mobile' && sticky,\n                [mobileStyles.header]: view === 'mobile',\n            })}\n            contentClassName={cn(contentClassName, {\n                [desktopStyles.content]: view === 'desktop',\n                [mobileStyles.content]: view === 'mobile',\n            })}\n        >\n            {children}\n        </NavigationBar>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_XvB5T\",\"animate\":\"animate_YKq6N\",\"background\":\"background_u0rNE\",\"gradient\":\"gradient_eeQMy\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type SkeletonProps = {\n    /**\n     * Флаг, явно задающий состояние, при котором контент закрывается прелоадером\n     */\n    visible?: boolean;\n    /**\n     * Флаг явного включения анимации скелета\n     */\n    animate?: boolean;\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n    visible,\n    animate = true,\n    className,\n    dataTestId,\n    children,\n}) => {\n    if (visible) {\n        return (\n            <div\n                className={cn(styles.component, { [styles.animate]: animate }, className)}\n                data-test-id={dataTestId}\n            >\n                {children}\n            </div>\n        );\n    }\n\n    return (\n        <div data-test-id={dataTestId} className={className}>\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Gwmbo\",\"block\":\"block_zSpqT\",\"slider\":\"slider_JSa9k\",\"xl\":\"xl_eVHeN\",\"hidePips\":\"hidePips_y1zQW\",\"field\":\"field_p3YAG\",\"s\":\"s_GOqNA\",\"m\":\"m_x0DcS\",\"l\":\"l_G1356\",\"input\":\"input_JIhnu\",\"steps\":\"steps_ofqNx\",\"info\":\"info_UU2mL\",\"hasLabel\":\"hasLabel_f2yBo\",\"focused\":\"focused_fhHNc\",\"filled\":\"filled_E6rgJ\"};","import React, {\n    ChangeEvent,\n    cloneElement,\n    FC,\n    forwardRef,\n    Fragment,\n    isValidElement,\n    ReactNode,\n    useCallback,\n} from 'react';\nimport cn from 'classnames';\n\nimport { Input as DefaultInput, InputProps } from '@alfalab/core-components-input';\nimport { Slider, SliderProps } from '@alfalab/core-components-slider';\n\nimport styles from './index.module.css';\n\nexport type SliderInputProps = Omit<\n    InputProps,\n    'min' | 'max' | 'step' | 'value' | 'type' | 'onChange' | 'bottomAddons'\n> & {\n    /**\n     * Мин. допустимое число\n     */\n    min?: number;\n\n    /**\n     * Макс. допустимое число\n     */\n    max?: number;\n\n    /**\n     * Массив подписей к слайдеру\n     */\n    steps?: ReactNode[];\n\n    /**\n     * Шаг (должен нацело делить отрезок между мин и макс)\n     */\n    step?: number;\n\n    /**\n     * Отображение подписей\n     * https://refreshless.com/nouislider/pips/\n     */\n    pips?: SliderProps['pips'];\n\n    /**\n     * Настройка шагов\n     * https://refreshless.com/nouislider/pips/#section-range\n     */\n    range?: SliderProps['range'];\n\n    /**\n     * Значение инпута\n     */\n    value?: number | string;\n\n    /**\n     * Значение слайдера\n     */\n    sliderValue?: number;\n\n    /**\n     * Дополнительная информация в правой части поля\n     */\n    info?: ReactNode;\n\n    /**\n     * Компонент поля ввода\n     */\n    Input?: FC<Omit<InputProps, 'onChange' | 'value'>>;\n\n    /**\n     * Кастомные пропсы для поля ввода\n     */\n    customInputProps?: Record<string, unknown>;\n\n    /**\n     * Класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Класс для слайдера\n     */\n    sliderClassName?: string;\n\n    /**\n     * Класс для шагов\n     */\n    stepsClassName?: string;\n\n    /**\n     * Обработчик изменения значения через слайдер или поле ввода\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { value: number | '' },\n    ) => void;\n\n    /**\n     * Обработчик ввода\n     */\n    onInputChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: number | '' }) => void;\n\n    /**\n     * Обработчик изменения слайдера\n     */\n    onSliderChange?: (payload: { value: number }) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const SliderInput = forwardRef<HTMLInputElement, SliderInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            sliderClassName,\n            stepsClassName,\n            focusedClassName,\n            fieldClassName,\n            value = '',\n            min = 0,\n            max = 100,\n            step = 1,\n            block,\n            steps = [],\n            sliderValue = +value,\n            size = 's',\n            label,\n            info,\n            disabled,\n            readOnly,\n            onChange,\n            onInputChange,\n            onSliderChange,\n            rightAddons,\n            Input = DefaultInput,\n            customInputProps = {},\n            error,\n            hint,\n            pips,\n            range,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const getValidInputValue = useCallback((inputValue: string | number) => {\n            const number = parseInt(inputValue?.toString().replace(/\\s/g, ''), 10);\n\n            return inputValue === '' || Number.isNaN(number) ? '' : Math.abs(number);\n        }, []);\n\n        const handleSliderChange = useCallback(\n            (payload: { value: number }) => {\n                if (onChange) onChange(null, payload);\n                if (onSliderChange) onSliderChange(payload);\n            },\n            [onChange, onSliderChange],\n        );\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>, payload: { value: string | number }) => {\n                if (onChange) onChange(event, { value: getValidInputValue(payload.value) });\n                if (onInputChange)\n                    onInputChange(event, { value: getValidInputValue(payload.value) });\n            },\n            [getValidInputValue, onChange, onInputChange],\n        );\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    {\n                        [styles.block]: block,\n                        [styles.filled]: Boolean(value),\n                        [styles.hasLabel]: label,\n                        [styles.hasError]: Boolean(error),\n                    },\n                    styles[size],\n                    className,\n                )}\n                data-test-id={dataTestId}\n            >\n                <Input\n                    {...restProps}\n                    {...customInputProps}\n                    ref={ref}\n                    value={value.toString()}\n                    onChange={handleInputChange}\n                    block={true}\n                    size={size}\n                    label={label}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={cn(inputClassName, styles.input)}\n                    focusedClassName={cn(focusedClassName, styles.focused)}\n                    fieldClassName={cn(\n                        fieldClassName,\n                        styles.field,\n                        { [styles.disabled]: disabled },\n                        styles[size],\n                    )}\n                    inputMode='numeric'\n                    pattern='[0-9]*'\n                    error={error}\n                    hint={hint}\n                    bottomAddons={\n                        !disabled && (\n                            <Slider\n                                min={min}\n                                max={max}\n                                step={step}\n                                onChange={handleSliderChange}\n                                value={\n                                    Number.isNaN(sliderValue) || !sliderValue ? min : sliderValue\n                                }\n                                disabled={disabled || readOnly}\n                                className={cn(\n                                    styles.slider,\n                                    styles[size],\n                                    { [styles.hidePips]: error || hint },\n                                    sliderClassName,\n                                )}\n                                pips={pips}\n                                range={range}\n                            />\n                        )\n                    }\n                    rightAddons={\n                        (info || rightAddons) && (\n                            <Fragment>\n                                {info && <span className={styles.info}>{info}</span>}\n                                {rightAddons}\n                            </Fragment>\n                        )\n                    }\n                />\n                {/* eslint-disable react/no-array-index-key */}\n                {steps.length > 0 && !error && (\n                    <div className={cn(styles.steps, stepsClassName)}>\n                        {steps.map((stepLabel, i) =>\n                            isValidElement(stepLabel) ? (\n                                cloneElement(stepLabel, { key: i })\n                            ) : (\n                                <span key={i.toString()}>{stepLabel}</span>\n                            ),\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UamdO\",\"s\":\"s_z21bi\",\"m\":\"m_uLwID\"};","import React, { FC, useEffect, useRef } from 'react';\nimport cn from 'classnames';\nimport noUiSlider, { API, Options } from 'nouislider';\n\nimport styles from './index.module.css';\n\ntype SubRange = number | [number] | [number, number];\ntype RangeOptions = {\n    min: SubRange;\n    max: SubRange;\n    [key: string]: SubRange;\n};\n\ntype PipsType = -1 | 0 | 1 | 2;\n\ntype Pips = {\n    mode: 'range' | 'steps' | 'positions' | 'count' | 'values';\n    values: number | number[];\n    filter?: (value: number, type: PipsType) => PipsType;\n    format?: {\n        to: (value: number) => string | number;\n        from?: (value: string) => number | false;\n    };\n    stepped?: boolean;\n};\n\nexport type SliderProps = {\n    /**\n     * Мин. допустимое число\n     */\n    min?: number;\n\n    /**\n     * Макс. допустимое число\n     */\n    max?: number;\n\n    /**\n     * Шаг (должен нацело делить отрезок между мин и макс)\n     */\n    step?: number;\n\n    /**\n     * Отображение подписей\n     * https://refreshless.com/nouislider/pips/\n     */\n    pips?: Pips;\n\n    /**\n     * Настройка шагов\n     * https://refreshless.com/nouislider/pips/#section-range\n     */\n    range?: RangeOptions;\n\n    /**\n     * Значение слайдера\n     */\n    value?: number;\n\n    /**\n     * Второе значение слайдера (значение второго ползунка)\n     * если передать ValueTo, то слайдер будет работать как range\n     */\n    valueTo?: number;\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Поведение ползунка\n     */\n    behaviour?: 'unconstrained-tap' | 'tap';\n\n    /**\n     * Размер\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (payload: { value: number; valueTo?: number }) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Slider: FC<SliderProps> = ({\n    min = 0,\n    max = 100,\n    step = 1,\n    value = 0,\n    valueTo,\n    disabled,\n    pips,\n    behaviour = 'tap',\n    range = { min, max },\n    size = 's',\n    className,\n    onChange,\n    dataTestId,\n}) => {\n    const sliderRef = useRef<HTMLDivElement & { noUiSlider: API }>(null);\n    const busyRef = useRef<boolean>(false);\n    const hasValueTo = valueTo !== undefined;\n\n    const getSlider = () => sliderRef.current?.noUiSlider;\n\n    useEffect(() => {\n        if (!sliderRef.current) return;\n\n        const slider = noUiSlider.create(sliderRef.current, {\n            start: valueTo ? [value, valueTo] : value,\n            connect: valueTo ? true : [true, false],\n            behaviour,\n            step,\n            pips: pips as Options['pips'],\n            range,\n        });\n\n        slider.on('start', () => {\n            busyRef.current = true;\n        });\n\n        slider.on('change', () => {\n            busyRef.current = false;\n        });\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const slider = getSlider();\n\n        if (!slider) return;\n\n        slider.updateOptions(\n            {\n                step,\n                range,\n                pips: pips as Options['pips'],\n            },\n            true,\n        );\n    }, [pips, range, step]);\n\n    useEffect(() => {\n        const slider = getSlider();\n\n        // Пропускаем обновление, если происходит взаимодействие со слайдером\n        if (slider && busyRef.current === false) {\n            if (valueTo) {\n                slider.set([value, valueTo], false);\n            } else {\n                slider.set(value, false);\n            }\n        }\n    }, [value, valueTo]);\n\n    useEffect(() => {\n        const slider = getSlider();\n\n        if (!slider) return;\n\n        const handler = () => {\n            if (onChange) {\n                if (hasValueTo) {\n                    const sliderValues = slider.get() as string[];\n                    const from = Number(sliderValues[0]);\n                    const to = Number(sliderValues[1]);\n\n                    if (from <= to) {\n                        onChange({ value: from, valueTo: to });\n                    } else {\n                        onChange({ value: to, valueTo: from });\n                    }\n                } else {\n                    onChange({ value: Number(slider.get()) });\n                }\n            }\n        };\n\n        slider.off('slide');\n        slider.on('slide', handler);\n    }, [onChange, hasValueTo]);\n\n    return (\n        <div\n            className={cn(styles.component, className, styles[size])}\n            ref={sliderRef}\n            data-test-id={dataTestId}\n            {...{ disabled }}\n        />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_WzFs9\",\"icon\":\"icon_Dhem9\",\"activator-cell\":\"activator-cell_yFP9P\",\"disabled\":\"disabled_czJmL\",\"dragOverlay\":\"dragOverlay_ZXqXN\",\"activator-control\":\"activator-control_uwORN\",\"content\":\"content_groqe\",\"dragging\":\"dragging_DxBxd\",\"pop\":\"pop_xzhfe\",\"control-left-padding-3xs\":\"control-left-padding-3xs_mAB2S\",\"control-right-padding-3xs\":\"control-right-padding-3xs_FvpCN\",\"control-left-padding-2xs\":\"control-left-padding-2xs_PzeiL\",\"control-right-padding-2xs\":\"control-right-padding-2xs_zz25t\",\"control-left-padding-xs\":\"control-left-padding-xs_R821e\",\"control-right-padding-xs\":\"control-right-padding-xs_xhkjg\",\"control-left-padding-s\":\"control-left-padding-s_PzAgC\",\"control-right-padding-s\":\"control-right-padding-s_DXXQG\",\"control-left-padding-m\":\"control-left-padding-m_qw_yo\",\"control-right-padding-m\":\"control-right-padding-m_TLYI4\",\"control-left-padding-l\":\"control-left-padding-l_u4Svf\",\"control-right-padding-l\":\"control-right-padding-l_lkuzF\"};","import React from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport cn from 'classnames';\n\nimport { DragMIcon } from '@alfalab/icons-glyph/DragMIcon';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SortableItemProps } from '../../types';\n\nimport styles from './index.module.css';\n\nexport const SortableItem: React.FC<SortableItemProps> = ({\n    activatorNode,\n    controlPosition,\n    controlPadding,\n    children,\n    className,\n    id,\n    isDragOverlay,\n    disabled,\n    dataTestId,\n}): JSX.Element => {\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        setActivatorNodeRef,\n        transform,\n        transition,\n        isDragging,\n    } = useSortable({\n        id,\n        disabled,\n    });\n\n    const isCellActivator = !isDragOverlay && activatorNode === 'cell';\n    const isControlActivator = !isDragOverlay && activatorNode === 'control';\n\n    const renderControl = () => {\n        const hasRightPadding = controlPadding && controlPosition === 'right';\n        const hasLeftPadding = controlPadding && controlPosition === 'left';\n\n        return (\n            <div\n                className={cn(styles.icon, {\n                    [styles[`control-right-padding-${controlPadding}`]]: hasRightPadding,\n                    [styles[`control-left-padding-${controlPadding}`]]: hasLeftPadding,\n                })}\n                ref={isControlActivator ? setActivatorNodeRef : undefined}\n                {...(isControlActivator ? listeners : null)}\n                {...(isControlActivator ? attributes : null)}\n            >\n                <DragMIcon aria-label='drag control' />\n            </div>\n        );\n    };\n\n    return (\n        <div\n            {...(isCellActivator ? listeners : null)}\n            {...(isCellActivator ? attributes : null)}\n            style={{\n                transform: CSS.Transform.toString(transform),\n                transition,\n            }}\n            className={cn(styles.component, styles[`activator-${activatorNode}`], className, {\n                [styles.disabled]: disabled,\n                [styles.dragging]: isDragging,\n                [styles.dragOverlay]: isDragOverlay,\n            })}\n            ref={setNodeRef}\n            data-test-id={getDataTestId(dataTestId, `item_${id}`)}\n        >\n            {controlPosition === 'left' && renderControl()}\n\n            <div className={cn(styles.content)}>{children}</div>\n\n            {controlPosition === 'right' && renderControl()}\n        </div>\n    );\n};\n","import type { ClientRect, Modifier } from '@dnd-kit/core';\nimport type { Transform } from '@dnd-kit/utilities';\n\nexport const restrictToParentElement: Modifier = ({\n    containerNodeRect,\n    draggingNodeRect,\n    transform,\n}) => {\n    if (!draggingNodeRect || !containerNodeRect) {\n        return transform;\n    }\n\n    return restrictToBoundingRect(transform, draggingNodeRect, containerNodeRect);\n};\n\nexport function restrictToBoundingRect(\n    transform: Transform,\n    rect: ClientRect,\n    boundingRect: ClientRect,\n): Transform {\n    const value = {\n        ...transform,\n    };\n\n    if (rect.top + transform.y <= boundingRect.top) {\n        value.y = boundingRect.top - rect.top;\n    } else if (rect.bottom + transform.y >= boundingRect.top + boundingRect.height) {\n        value.y = boundingRect.top + boundingRect.height - rect.bottom;\n    }\n\n    if (rect.left + transform.x <= boundingRect.left) {\n        value.x = boundingRect.left - rect.left;\n    } else if (rect.right + transform.x >= boundingRect.left + boundingRect.width) {\n        value.x = boundingRect.left + boundingRect.width - rect.right;\n    }\n\n    return value;\n}\n\nexport const restrictToVerticalAxis: Modifier = ({ transform }) => ({\n    ...transform,\n    x: 0,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_hngQp\",\"primary\":\"primary_i9tdY\",\"secondary\":\"secondary_A0hDx\",\"padding-top-3xs\":\"padding-top-3xs_iY2PY\",\"padding-bottom-3xs\":\"padding-bottom-3xs_gI4aV\",\"padding-left-3xs\":\"padding-left-3xs_iEwZk\",\"padding-right-3xs\":\"padding-right-3xs_N_wTD\",\"padding-top-2xs\":\"padding-top-2xs_T9w0g\",\"padding-bottom-2xs\":\"padding-bottom-2xs_Y2AVb\",\"padding-left-2xs\":\"padding-left-2xs_dVKSu\",\"padding-right-2xs\":\"padding-right-2xs_kUyB7\",\"padding-top-xs\":\"padding-top-xs_JZ9PK\",\"padding-bottom-xs\":\"padding-bottom-xs_M05UT\",\"padding-left-xs\":\"padding-left-xs_TRU64\",\"padding-right-xs\":\"padding-right-xs_xZZ_8\",\"padding-top-s\":\"padding-top-s_qLba6\",\"padding-bottom-s\":\"padding-bottom-s_J8L8c\",\"padding-left-s\":\"padding-left-s_JMGJr\",\"padding-right-s\":\"padding-right-s_kTdX5\",\"padding-top-m\":\"padding-top-m_T1LkE\",\"padding-bottom-m\":\"padding-bottom-m_jscyI\",\"padding-left-m\":\"padding-left-m_OJIqd\",\"padding-right-m\":\"padding-right-m_d2SA_\",\"padding-top-l\":\"padding-top-l_E5XYL\",\"padding-bottom-l\":\"padding-bottom-l_C7rJB\",\"padding-left-l\":\"padding-left-l_L_vJS\",\"padding-right-l\":\"padding-right-l_tUBjL\",\"border-radius-m\":\"border-radius-m_V7CP4\",\"border-radius-l\":\"border-radius-l_GMCqP\",\"border-radius-xl\":\"border-radius-xl_OOuax\"};","import React, { forwardRef } from 'react';\nimport {\n    closestCenter,\n    DndContext,\n    DragEndEvent,\n    DragOverEvent,\n    DragOverlay,\n    DragStartEvent,\n    KeyboardSensor,\n    MouseSensor,\n    TouchSensor,\n    UniqueIdentifier,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../utils';\n\nimport { SortableItem } from './components/item/Components';\nimport type { Items, SortableItemProps, SortableListProps } from './types';\nimport { restrictToParentElement, restrictToVerticalAxis } from './utils';\n\nimport styles from './index.module.css';\n\nconst DEFAULT_INSTRUCTION =\n    'Чтобы выбрать перетаскиваемый элемент, нажмите пробел.\\n' +\n    'При перетаскивании используйте клавиши со стрелками для перемещения элемента.\\n' +\n    'Снова нажмите пробел, чтобы переместить элемент в его новое положение или нажмите escape для отмены.';\n\nconst DEFAULT_ANNOUNCEMENTS = {\n    onDragStart({ active }: DragStartEvent) {\n        return `Выбран элемент ${active.id}.`;\n    },\n    onDragOver({ active, over }: DragOverEvent) {\n        if (over) {\n            return `Выбранный элемент ${active.id} находится над элементом ${over.id}.`;\n        }\n\n        return `Выбранный элемент ${active.id} находится за пределами droppable зоны.`;\n    },\n    onDragEnd({ active, over }: DragEndEvent) {\n        if (over) {\n            return `Выбранный элемент ${active.id} был перемещен на место ${over.id}`;\n        }\n\n        return `Выбранный элемент ${active.id} не был перемещен.`;\n    },\n    onDragCancel() {\n        return 'Перемещение было отменено';\n    },\n};\n\nexport const SortableList = forwardRef<HTMLDivElement, SortableListProps>(\n    (\n        {\n            className,\n            itemClassName,\n            controlPosition = 'right',\n            controlPadding,\n            items,\n            renderItem,\n            borderRadius,\n            activatorNode = 'cell',\n            view = 'primary',\n            padding,\n            dataTestId,\n            announcements = DEFAULT_ANNOUNCEMENTS,\n            screenReaderInstructions = DEFAULT_INSTRUCTION,\n            onDragStart,\n            onDragEnd,\n        },\n        ref,\n    ) => {\n        const [activeId, setActiveId] = React.useState<UniqueIdentifier | null>(null);\n        const sensors = useSensors(\n            useSensor(KeyboardSensor),\n            useSensor(TouchSensor),\n            useSensor(MouseSensor),\n        );\n\n        const getPaddingClassName = () => {\n            if (typeof padding === 'object') {\n                return cn({\n                    [styles[`padding-top-${padding.top}`]]: padding.top,\n                    [styles[`padding-right-${padding.right}`]]: padding.right,\n                    [styles[`padding-bottom-${padding.bottom}`]]: padding.bottom,\n                    [styles[`padding-left-${padding.left}`]]: padding.left,\n                });\n            }\n\n            if (typeof padding === 'string') {\n                return cn(\n                    styles[`padding-top-${padding}`],\n                    styles[`padding-right-${padding}`],\n                    styles[`padding-bottom-${padding}`],\n                    styles[`padding-left-${padding}`],\n                );\n            }\n\n            return undefined;\n        };\n\n        const commonClassName = cn(styles[view], {\n            [styles[`border-radius-${borderRadius}`]]: borderRadius,\n        });\n\n        const sortableItemClassName = cn(commonClassName, itemClassName);\n\n        const handleDragStart = (event: DragStartEvent) => {\n            const { active } = event;\n\n            setActiveId(active.id);\n\n            onDragStart?.(event);\n        };\n\n        const handleDragEnd = (event: DragEndEvent) => {\n            const { active, over } = event;\n\n            if (over?.id && active.id !== over.id) {\n                const oldIndex = items.findIndex((item) => item.id === active.id);\n                const newIndex = items.findIndex((item) => item.id === over.id);\n\n                onDragEnd?.(event, arrayMove(items, oldIndex, newIndex));\n\n                return;\n            }\n\n            onDragEnd?.(event, items);\n            setActiveId(null);\n        };\n\n        const renderSortableItem = (\n            item: Items[number],\n            { children, ...restProps }: Partial<SortableItemProps>,\n        ) => (\n            <SortableItem\n                controlPadding={controlPadding}\n                controlPosition={controlPosition}\n                key={item.id}\n                id={item.id}\n                className={sortableItemClassName}\n                activatorNode={activatorNode}\n                disabled={item.disabled}\n                {...restProps}\n            >\n                {renderItem(item)}\n            </SortableItem>\n        );\n\n        const renderDragOverlay = () => {\n            const activeItem = items.find((item) => item.id === activeId);\n\n            if (activeItem) {\n                return renderSortableItem(activeItem, { isDragOverlay: true });\n            }\n\n            return null;\n        };\n\n        return (\n            <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragStart={handleDragStart}\n                onDragEnd={handleDragEnd}\n                modifiers={[restrictToParentElement, restrictToVerticalAxis]}\n                accessibility={{\n                    announcements,\n                    screenReaderInstructions: { draggable: screenReaderInstructions },\n                }}\n            >\n                <SortableContext items={items} strategy={verticalListSortingStrategy}>\n                    <div\n                        ref={ref}\n                        className={cn(\n                            styles.component,\n                            getPaddingClassName(),\n                            commonClassName,\n                            className,\n                        )}\n                        data-test-id={getDataTestId(dataTestId, 'container')}\n                    >\n                        {items.map((item) => renderSortableItem(item, { dataTestId }))}\n                    </div>\n                </SortableContext>\n\n                <DragOverlay>{activeId ? renderDragOverlay() : null}</DragOverlay>\n            </DndContext>\n        );\n    },\n);\n","import * as React from 'react';\n\nimport { Direction } from './utils';\n\nexport interface ItemProps {\n    className: string;\n    horizontalSize: number;\n    verticalSize: number;\n    length: number;\n    children: React.ReactNode;\n    index: number;\n    direction?: Direction;\n    divider?: string | React.ReactNode;\n    wrap?: boolean;\n}\n\nconst Item = (props: ItemProps) => {\n    const {\n        className,\n        horizontalSize,\n        verticalSize,\n        length,\n        direction,\n        index,\n        children,\n        divider,\n        wrap,\n    } = props;\n\n    let style: React.CSSProperties = {};\n\n    if (direction === 'vertical') {\n        if (index < length - 1) {\n            style = { marginBottom: horizontalSize / (divider ? 2 : 1) };\n        }\n    } else {\n        style = {\n            ...(index < length - 1 && { marginRight: horizontalSize / (divider ? 2 : 1) }),\n            ...(wrap && { paddingBottom: verticalSize }),\n        };\n    }\n\n    if (children === null || children === undefined) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            <div className={className} style={style}>\n                {children}\n            </div>\n            {index < length - 1 && divider && (\n                <span\n                    style={{\n                        width: '100%',\n                        ...style,\n                    }}\n                >\n                    {divider}\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Item;\n","// extracted by mini-css-extract-plugin\nexport default {\"spaceContainer\":\"spaceContainer_XHYzE\",\"spaceContainerFullWidth\":\"spaceContainerFullWidth_hFSJV\",\"vertical\":\"vertical_xbR1i\",\"center\":\"center_CNtcx\",\"start\":\"start_c9BrI\",\"end\":\"end_VmJ4K\",\"spaceItemFullWidth\":\"spaceItemFullWidth_CXCeA\",\"spaceItem\":\"spaceItem_Lpovr\"};","import React, { Children, forwardRef, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport Item from './Item';\nimport { Align, Direction, Size } from './utils';\n\nimport styles from './index.module.css';\n\nexport type SpaceProps = {\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Направление\n     */\n    direction?: Direction;\n\n    /**\n     * Размер отступов\n     */\n    size?: Size | [Size, Size];\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние компоненты\n     */\n    children: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Автоматический перенос строк, полезно при direction = 'horizontal'\n     */\n    wrap?: boolean;\n\n    /**\n     * Компонент разделителя\n     */\n    divider?: string | ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    fullWidth?: boolean;\n};\n\nconst SpaceSizes: { [key in Size]: number } = {\n    s: 12,\n    m: 16,\n    l: 20,\n};\n\nconst getNumberSize = (size: Size) => (typeof size === 'string' ? SpaceSizes[size] : size || 0);\n\n/**\n * Позаимствовано с благодарностью из Ant Design\n */\n\nexport const Space = forwardRef<HTMLDivElement, SpaceProps>((props, ref) => {\n    const {\n        children,\n        className,\n        align = 'start',\n        direction = 'vertical',\n        size = 'm',\n        wrap = false,\n        divider = false,\n        fullWidth = false,\n        dataTestId,\n    } = props;\n\n    const [horizontalSize, verticalSize] = React.useMemo(\n        () =>\n            ((Array.isArray(size) ? size : [size, size]) as [Size, Size]).map((item) =>\n                getNumberSize(item),\n            ),\n        [size],\n    );\n\n    const childNodes = Children.toArray(children);\n\n    if (childNodes.length === 0) {\n        return null;\n    }\n\n    const directionClassName = styles[direction];\n    const alignClassName = styles[align];\n\n    const containerClassName = classNames(\n        styles.spaceContainer,\n        directionClassName,\n        {\n            [alignClassName]: align,\n            [styles.spaceContainerFullWidth]: fullWidth,\n        },\n        className,\n    );\n\n    const itemClassName = classNames(styles.spaceItem, {\n        [styles.spaceItemFullWidth]: fullWidth,\n    });\n\n    const nodes = childNodes.map((child, i) => (\n        /* eslint-disable react/no-array-index-key */\n        <Item\n            className={itemClassName}\n            key={`${itemClassName}-${i}`}\n            direction={direction}\n            horizontalSize={horizontalSize}\n            verticalSize={verticalSize}\n            length={childNodes.length}\n            index={i}\n            wrap={wrap}\n            divider={divider}\n        >\n            {child}\n        </Item>\n        /* eslint-enable */\n    ));\n\n    return (\n        <div\n            data-test-id={dataTestId}\n            className={containerClassName}\n            style={{\n                ...(wrap && { flexWrap: 'wrap', marginBottom: -verticalSize }),\n            }}\n            ref={ref}\n        >\n            {nodes}\n        </div>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"spinner_eJwLa\",\"spin_animation\":\"spin_animation_XgBrZ\",\"visible\":\"visible_w8m5L\",\"xs\":\"xs_IJaS2\",\"s\":\"s_SWmly\",\"m\":\"m_zcaY6\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { useId } from '@alfalab/hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type SpinnerProps = {\n    /**\n     * Управление видимостью компонента\n     */\n    visible?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 's' | 'm';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Палитра, в контексте которой используется спиннер\n     */\n    colors?: 'default' | 'inverted';\n};\n\nconst CONFIG = {\n    xs: {\n        padding: 1,\n        lineWidth: 2,\n        size: 18,\n    },\n    s: {\n        padding: 2,\n        lineWidth: 2,\n        size: 24,\n    },\n    m: {\n        padding: 4,\n        lineWidth: 4,\n        size: 48,\n    },\n} as const;\n\nexport const Spinner: FC<SpinnerProps> = ({\n    size: sizeProp = 's',\n    colors = 'default',\n    visible,\n    id,\n    className,\n    dataTestId,\n}) => {\n    const uniqId = useId();\n    const { size, padding, lineWidth } = CONFIG[sizeProp];\n\n    const xStart = padding + lineWidth / 2;\n    const xEnd = size - xStart;\n    const y = size / 2;\n    const r = y - xStart;\n\n    const topGradientId = `${uniqId}_top`;\n    const bottomGradientId = `${uniqId}_bottom`;\n\n    return (\n        <svg\n            viewBox={`0 0 ${size} ${size}`}\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            className={cn(\n                styles.spinner,\n                colorStyles[colors].component,\n                styles[sizeProp],\n                className,\n                {\n                    [styles.visible]: visible,\n                },\n            )}\n            data-test-id={dataTestId}\n            id={id}\n        >\n            <defs>\n                <linearGradient id={topGradientId} x1='0.05'>\n                    <stop offset='0.1' stopOpacity='0' stopColor='currentColor' />\n                    <stop offset='1' stopOpacity='0.3' stopColor='currentColor' />\n                </linearGradient>\n                <linearGradient id={bottomGradientId} x1='0.05'>\n                    <stop offset='0' stopOpacity='1' stopColor='currentColor' />\n                    <stop offset='1' stopOpacity='0.3' stopColor='currentColor' />\n                </linearGradient>\n            </defs>\n\n            <g strokeWidth={lineWidth}>\n                <path\n                    stroke={`url(#${topGradientId})`}\n                    d={`M${xStart},${y} A${r},${r} 0 0 1 ${xEnd},${y}`}\n                />\n                <path\n                    stroke={`url(#${bottomGradientId})`}\n                    d={`M${xEnd},${y} A${r},${r} 0 0 1 ${xStart},${y}`}\n                />\n                <path\n                    stroke='currentColor'\n                    strokeLinecap='round'\n                    d={`M${xStart},${y} A${r},${r} 0 0 1 ${xStart} ${y}`}\n                />\n            </g>\n        </svg>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_eRftq\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_uu1gU\"};","import React, { FC, ReactNode, useContext } from 'react';\n\nimport { StackingContext, stackingOrder } from './context';\n\nexport type StackProps = {\n    /**\n     * Render prop, в который передается функция.\n     * Функция принимает аргумент со значением z-index из текущего контекста.\n     */\n    children: (value: number) => ReactNode;\n\n    /**\n     * Исходное значение для z-index.\n     * @default 5\n     */\n    value?: number;\n};\n\nexport const Stack: FC<StackProps> = ({ children, value = stackingOrder.DEFAULT }) => {\n    const previousValue = useContext(StackingContext);\n    const currentValue = Math.max(value, previousValue);\n    const nextValue = currentValue + 1;\n\n    return (\n        <StackingContext.Provider value={nextValue}>\n            {children(currentValue)}\n        </StackingContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\n/**\n * Набор констант для z-index соответствующих классов компонентов.\n * Значения выбраны по приоритету.\n */\nexport const stackingOrder = {\n    /**\n     * Для компонентов с возможностью фокуса: кнопки, поля ввода\n     */\n    FOCUSED: 2,\n\n    /**\n     * Значение по-умолчанию\n     */\n    DEFAULT: 10,\n\n    /**\n     * Компоненты, которые управляют своей позицией, например, поповер, тултип\n     */\n    POPOVER: 50,\n\n    /**\n     * Для модальных окон с оверлеем\n     */\n    MODAL: 100,\n\n    /**\n     * Для тостов и нотификаций\n     */\n    TOAST: 1000,\n};\n\nexport const StackingContext = createContext(stackingOrder.DEFAULT);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_RyTHC\",\"soft\":\"soft_STz9w\",\"green\":\"green_L09lA\",\"orange\":\"orange_RtKwL\",\"red\":\"red_XlhtJ\",\"blue\":\"blue_Qb3GK\",\"grey\":\"grey_se5hC\",\"teal\":\"teal_boKsi\",\"purple\":\"purple_vSlBN\",\"contrast\":\"contrast__wmqE\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport const colors = ['green', 'orange', 'red', 'blue', 'grey', 'teal', 'purple'] as const;\n\nexport type StatusProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     *  Вид компонента\n     */\n    view?: 'contrast' | 'soft';\n\n    /**\n     * Цветовое оформление иконки\n     */\n    color?: typeof colors[number];\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Status: FC<StatusProps> = ({\n    className,\n    view = 'soft',\n    color = 'green',\n    children,\n    dataTestId,\n}) => (\n    <span\n        className={cn(styles.component, styles[color], styles[view], className)}\n        data-test-id={dataTestId}\n    >\n        {children}\n    </span>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"bar_wJodV\",\"positive\":\"positive_UyTUX\",\"attention\":\"attention_JSayg\",\"negative\":\"negative_B2Edz\",\"link\":\"link_hMYg8\",\"tertiary\":\"tertiary_WECSl\",\"secondary\":\"secondary_Q3A3q\",\"primary\":\"primary_mMkwJ\",\"accent\":\"accent_F2O2V\"};","import React, { FC, memo } from 'react';\nimport cn from 'classnames';\n\nimport { SteppedProgressBarView } from '../../Component';\n\nimport styles from './index.module.css';\n\ntype StepBarProps = {\n    isDone: boolean;\n    view?: SteppedProgressBarView;\n    classNameStep?: string;\n};\n\nexport const StepBar: FC<StepBarProps> = memo(({ isDone, view = 'positive', classNameStep }) => (\n    <span\n        data-test-id={isDone ? 'on' : 'off'}\n        className={cn(styles.bar, isDone && styles[view], classNameStep)}\n    />\n));\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"bar_j7bXS\",\"description\":\"description_V66fU\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QqPy5\",\"stepsContainer\":\"stepsContainer_2Yj9R\",\"description\":\"description_UVIRd\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { StepBar } from './components/step-bar';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type SteppedProgressBarView =\n    | 'positive'\n    | 'negative'\n    | 'attention'\n    | 'link'\n    | 'tertiary'\n    | 'secondary'\n    | 'primary'\n    | 'accent';\n\nexport type SteppedProgressBarProps = {\n    /**\n     * Общее количество шагов\n     */\n    maxStep: number;\n\n    /**\n     * Постфикс описание под прогрессбаром\n     */\n    description?: string;\n\n    /**\n     * Количество пройденных шагов\n     */\n    step?: number;\n\n    /**\n     * Цвет заполнения\n     */\n    view?: SteppedProgressBarView | SteppedProgressBarView[];\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n};\n\nexport const SteppedProgressBar: FC<SteppedProgressBarProps> = ({\n    maxStep,\n    description,\n    step = 0,\n    view,\n    dataTestId,\n    colors = 'default',\n    className,\n}) => {\n    const validMaxSteps = maxStep <= 0 ? 1 : maxStep;\n    const isViewString = typeof view === 'string';\n\n    return (\n        <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n            <div className={styles.stepsContainer}>\n                {Array.from(Array(validMaxSteps), (_, index) => (\n                    <StepBar\n                        key={index}\n                        isDone={index < step}\n                        view={(isViewString ? view : view?.[index]) as SteppedProgressBarView}\n                        classNameStep={colorStyles[colors].bar}\n                    />\n                ))}\n            </div>\n            {description && (\n                <Typography.Text\n                    tag='div'\n                    className={cn(styles.description, colorStyles[colors].description)}\n                    view='primary-small'\n                >\n                    Шаг {step} из {maxStep}: {description}\n                </Typography.Text>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"bar_mtaa8\",\"description\":\"description_uAEDU\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_hLeEI\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Badge, BadgeProps } from '@alfalab/core-components-badge';\n\nimport styles from './index.module.css';\n\nexport type StepIndicatorProps = Pick<BadgeProps, 'content' | 'iconColor' | 'className'>;\n\nexport const StepIndicator: React.FC<StepIndicatorProps> = ({ content, iconColor, className }) => (\n    <Badge\n        size='l'\n        view='icon'\n        iconColor={iconColor}\n        className={cn(styles.component, className)}\n        content={content}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"step\":\"step_Gd6NY\",\"vertical\":\"vertical_Dd6YY\",\"interactive\":\"interactive_AUN7P\",\"disabled\":\"disabled_yWhrF\",\"text\":\"text_VwkMA\",\"indicator\":\"indicator_trPBi\",\"option\":\"option_hOKlU\",\"dash\":\"dash_yjw9B\",\"completed\":\"completed_IhpK0\",\"focused\":\"focused_w5QI8\",\"selected\":\"selected_l2Z8l\",\"checkbox\":\"checkbox_x2BVF\",\"dot\":\"dot_rmKV_\",\"error\":\"error_CvMx4\",\"unordered\":\"unordered_hOZIe\",\"completedIndicator\":\"completedIndicator_N59gn\"};","import React, { ReactNode, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { ClockMIcon } from '@alfalab/icons-glyph/ClockMIcon';\nimport { ExclamationCircleMIcon } from '@alfalab/icons-glyph/ExclamationCircleMIcon';\n\nimport { StepIndicator, StepIndicatorProps } from '../step-indicator';\n\nimport styles from './index.module.css';\n\nexport type StepProps = {\n    /**\n     * Название шага\n     */\n    children: ReactNode;\n\n    /**\n     * Номер шага\n     */\n    stepNumber: number;\n\n    /**\n     * Маркер того, что текущий шаг выбран\n     */\n    isSelected: boolean;\n\n    /**\n     * Маркер того, что текущий шаг доступен для клика\n     */\n    disabled: boolean;\n\n    /**\n     * Управление отображением номера шага\n     */\n    ordered?: boolean;\n\n    /**\n     * Включение / отключение интерактивности шагов\n     */\n    interactive?: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Positive\"\n     */\n    isPositive: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Error\"\n     */\n    isError: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Warning\"\n     */\n    isWarning: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Waiting\"\n     */\n    isWaiting: boolean;\n\n    /**\n     * Маркер того, что текущий шаг нужно пометить как завершенный\n     */\n    isStepCompleted: boolean;\n\n    /**\n     * Свойства кастомного индикатора текущего шага\n     */\n    customStepIndicator?: StepIndicatorProps;\n\n    /**\n     * Управление ориентацией компонента\n     * @default false\n     */\n    isVerticalAlign?: boolean;\n\n    /**\n     * Указывает, является ли текущий шаг последним в списке\n     */\n    isNotLastStep?: boolean;\n\n    /**\n     * Обработчик нажатия на текущей шаг\n     * @param stepNumber - номер шага\n     */\n    onClick: (stepNumber: number) => void;\n};\n\nexport const Step: React.FC<StepProps> = ({\n    children,\n    stepNumber,\n    isSelected,\n    disabled,\n    ordered,\n    isPositive,\n    isError,\n    isWarning,\n    isWaiting,\n    customStepIndicator,\n    isStepCompleted,\n    onClick,\n    interactive,\n    isVerticalAlign,\n    isNotLastStep,\n}) => {\n    const stepRef = useRef<HTMLDivElement>(null);\n\n    const [focused] = useFocus(stepRef, 'keyboard');\n\n    const handleButtonClick = () => {\n        if (!disabled && interactive && onClick) {\n            onClick(stepNumber);\n        }\n    };\n\n    const handleTextClick = (e: React.MouseEvent<HTMLElement>) => {\n        if (!interactive) {\n            e.stopPropagation();\n        }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n        if (event.key === 'Enter') {\n            handleButtonClick();\n        }\n    };\n\n    const getStepIndicator = () => {\n        if (customStepIndicator) {\n            return <StepIndicator {...customStepIndicator} />;\n        }\n        if (isError) {\n            return <StepIndicator iconColor='negative' content={<ExclamationCircleMIcon />} />;\n        }\n        if (isWarning) {\n            return <StepIndicator iconColor='attention' content={<ExclamationCircleMIcon />} />;\n        }\n        if (isWaiting) {\n            return <StepIndicator iconColor='secondary' content={<ClockMIcon />} />;\n        }\n        if (isPositive) {\n            return <StepIndicator iconColor='positive' content={<CheckmarkCircleMIcon />} />;\n        }\n        if (isStepCompleted) {\n            return (\n                <StepIndicator\n                    iconColor='positive'\n                    content={<CheckmarkCircleMIcon />}\n                    className={styles.completedIndicator}\n                />\n            );\n        }\n        if (!ordered) {\n            return (\n                <div className={styles.checkbox}>\n                    <span className={styles.dot} />\n                </div>\n            );\n        }\n\n        return stepNumber;\n    };\n\n    const renderDash = () => (\n        <div\n            className={cn(styles.dash, {\n                [styles.vertical]: isVerticalAlign,\n                [styles.completed]: isStepCompleted,\n            })}\n        />\n    );\n\n    return (\n        <div\n            role='button'\n            tabIndex={0}\n            ref={stepRef}\n            className={cn(styles.step, {\n                [styles.completed]: isStepCompleted,\n                [styles.error]: isError,\n                [styles.selected]: isSelected,\n                [styles.disabled]: disabled,\n                [styles.focused]: focused,\n                [styles.vertical]: isVerticalAlign,\n                [styles.interactive]: interactive,\n            })}\n            onClick={handleButtonClick}\n            onKeyDown={handleKeyDown}\n        >\n            <div\n                className={cn(styles.indicator, {\n                    [styles.vertical]: isVerticalAlign,\n                    [styles.interactive]: interactive,\n                })}\n            >\n                <div\n                    className={cn(styles.option, {\n                        [styles.unordered]: !ordered,\n                        [styles.vertical]: isVerticalAlign,\n                        [styles.error]: isError,\n                    })}\n                >\n                    {getStepIndicator()}\n                </div>\n                {isNotLastStep && isVerticalAlign && renderDash()}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n            <div\n                className={cn(styles.text, {\n                    [styles.interactive]: interactive,\n                })}\n                onClick={handleTextClick}\n            >\n                {children}\n            </div>\n            {isNotLastStep && !isVerticalAlign && renderDash()}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_P_Kyl\",\"vertical\":\"vertical_P9t_o\"};","import React, { ReactNode, useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Step } from './components/step';\nimport { StepIndicatorProps } from './components/step-indicator';\n\nimport styles from './index.module.css';\n\nexport type StepsProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children: ReactNode;\n\n    /**\n     * Активный шаг, указанный по умолчанию\n     * @default 1\n     */\n    defaultActiveStep?: number;\n\n    /**\n     * Активный шаг\n     */\n    activeStep?: number;\n\n    /**\n     * Управление возможностью отключения пометки пройденного шага\n     * @default true\n     */\n    isMarkCompletedSteps?: boolean;\n\n    /**\n     * Управление ориентацией компонента\n     * @default false\n     */\n    isVerticalAlign?: boolean;\n\n    /**\n     * Управление отображением номера шага\n     */\n    ordered?: boolean;\n\n    /**\n     * Включение / отключение интерактивности шагов\n     */\n    interactive?: boolean;\n\n    /**\n     * Кастомный метод для управления состоянием disabled шага и\n     * возможностью перехода на этот шаг\n     * @param stepNumber - номер шага\n     * @return Флаг состояния disabled\n     */\n    checkIsStepDisabled?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага error\n     * @param stepNumber - номер шага\n     * @return Флаг состояния error\n     */\n    checkIsStepError?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага warning\n     * @param stepNumber - номер шага\n     * @return Флаг состояния warning\n     */\n    checkIsStepWarning?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага waiting\n     * @param stepNumber - номер шага\n     * @return Флаг состояния waiting\n     */\n    checkIsStepWaiting?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага positive\n     * @param stepNumber - номер шага\n     * @return Флаг состояния positive\n     */\n    checkIsStepPositive?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для установки кастомного индикатора шага\n     * @param stepNumber - номер шага\n     * @return Объект StepIndicatorProps { className, content, iconColor }\n     */\n    checkIsStepCustom?: (stepNumber: number) => StepIndicatorProps;\n\n    /**\n     * Обработчик клика на шаг\n     * @param stepNumber - номер активного шага\n     */\n    onChange?: (stepNumber: number) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Steps: React.FC<StepsProps> = ({\n    className,\n    children,\n    defaultActiveStep = 1,\n    activeStep: activeStepProp,\n    isMarkCompletedSteps = true,\n    isVerticalAlign = false,\n    ordered = true,\n    interactive = true,\n    checkIsStepDisabled,\n    checkIsStepError,\n    checkIsStepWarning,\n    checkIsStepWaiting,\n    checkIsStepPositive,\n    checkIsStepCustom,\n    onChange,\n    dataTestId,\n}) => {\n    const [activeStep, setActiveStep] = useState(activeStepProp || defaultActiveStep);\n\n    const stepsLength = React.Children.count(children);\n\n    useEffect(() => {\n        if (activeStepProp) {\n            setActiveStep(activeStepProp);\n        }\n    }, [activeStepProp]);\n\n    const handleStepClick = (stepNumber: number) => {\n        setActiveStep(stepNumber);\n\n        if (onChange) {\n            onChange(stepNumber);\n        }\n    };\n\n    if (!stepsLength) return null;\n\n    return (\n        <div\n            className={cn(className, styles.component, {\n                [styles.vertical]: isVerticalAlign,\n            })}\n            data-test-id={dataTestId}\n        >\n            {React.Children.map(children, (step, index) => {\n                const stepNumber = index + 1;\n                const isSelected = stepNumber === activeStep;\n                const isStepCompleted = isMarkCompletedSteps && stepNumber < activeStep;\n                const disabled = checkIsStepDisabled ? checkIsStepDisabled(stepNumber) : false;\n                const isPositive = checkIsStepPositive ? checkIsStepPositive(stepNumber) : false;\n                const isError = checkIsStepError ? checkIsStepError(stepNumber) : false;\n                const isWarning = checkIsStepWarning ? checkIsStepWarning(stepNumber) : false;\n                const isWaiting = checkIsStepWaiting ? checkIsStepWaiting(stepNumber) : false;\n                const customStepIndicator = checkIsStepCustom && checkIsStepCustom(stepNumber);\n                const isNotLastStep = stepsLength !== stepNumber;\n                const isInteractive = !disabled && interactive;\n\n                return (\n                    <Step\n                        stepNumber={stepNumber}\n                        isSelected={isSelected}\n                        isStepCompleted={isStepCompleted}\n                        disabled={disabled}\n                        isPositive={isPositive}\n                        isError={isError}\n                        isWarning={isWarning}\n                        isWaiting={isWaiting}\n                        customStepIndicator={customStepIndicator}\n                        onClick={handleStepClick}\n                        ordered={ordered}\n                        interactive={isInteractive}\n                        isVerticalAlign={isVerticalAlign}\n                        isNotLastStep={isNotLastStep}\n                        key={stepNumber}\n                    >\n                        {step}\n                    </Step>\n                );\n            })}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_pfD4m\",\"start\":\"start_PRUrm\",\"center\":\"center_eGtVf\",\"addons\":\"addons_vsnX9\",\"block\":\"block_uHzwy\",\"switch\":\"switch_x7ZJ_\",\"content\":\"content_Zh5S1\",\"label\":\"label_QNf6x\",\"hint\":\"hint_MTh34\",\"reversed\":\"reversed_W0QdI\",\"checked\":\"checked_WSmiQ\",\"disabled\":\"disabled_Hu2Ox\",\"inactive\":\"inactive_j9Caf\",\"focused\":\"focused_G6PxT\"};","import React, { ChangeEvent, forwardRef, InputHTMLAttributes, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\ntype Align = 'start' | 'center';\n\nexport type SwitchProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'type' | 'hint' | 'onChange' | 'disabled' | 'enterKeyHint'\n> & {\n    /**\n     * Управление состоянием вкл/выкл компонента\n     */\n    checked?: boolean;\n\n    /**\n     * Текст подписи к переключателю\n     */\n    label?: ReactNode;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Переключатель будет отрисован справа от контента\n     */\n    reversed?: boolean;\n\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Дополнительный слот\n     */\n    addons?: React.ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * Управление состоянием включен / выключен\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием активен / неактивен\n     */\n    inactive?: boolean;\n\n    /**\n     * Обработчик переключения компонента\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: {\n            checked: boolean;\n            name: InputHTMLAttributes<HTMLInputElement>['name'];\n        },\n    ) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Switch = forwardRef<HTMLLabelElement, SwitchProps>(\n    (\n        {\n            reversed = false,\n            checked = false,\n            align = 'start',\n            addons,\n            block,\n            disabled,\n            inactive,\n            label,\n            hint,\n            name,\n            value,\n            className,\n            onChange,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const labelRef = useRef<HTMLLabelElement>(null);\n\n        const [focused] = useFocus(labelRef, 'keyboard');\n\n        const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n            if (onChange) {\n                onChange(e, { checked: e.target.checked, name });\n            }\n        };\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label\n                className={cn(styles.component, styles[align], className, {\n                    [styles.disabled]: disabled,\n                    [styles.inactive]: inactive,\n                    [styles.checked]: checked,\n                    [styles.reversed]: reversed,\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                })}\n                ref={mergeRefs([labelRef, ref])}\n            >\n                <input\n                    type='checkbox'\n                    onChange={handleChange}\n                    disabled={disabled || inactive}\n                    checked={checked}\n                    name={name}\n                    value={value}\n                    data-test-id={dataTestId}\n                    {...restProps}\n                />\n\n                <span className={styles.switch} />\n\n                {(label || hint) && (\n                    <span className={styles.content}>\n                        {label && <span className={styles.label}>{label}</span>}\n                        {hint && <span className={styles.hint}>{hint}</span>}\n                    </span>\n                )}\n\n                {addons && <span className={styles.addons}>{addons}</span>}\n            </label>\n        );\n    },\n);\n","import React from 'react';\n\nimport type { TSystemMessageContext } from './types';\n\nexport const SystemMessageContext = React.createContext<TSystemMessageContext>({\n    view: 'desktop',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_BPYsV\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_OohQz\",\"fullHeight\":\"fullHeight_YT8n_\",\"first\":\"first__tjHb\",\"last\":\"last_VQaCW\",\"controls\":\"controls_A2IjM\",\"both\":\"both_WBihv\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QdqpL\"};","import React, { isValidElement, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { SystemMessageContext } from './Context';\nimport type { SystemMessageBaseProps } from './types';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nconst isControlsElement = (obj: JSX.Element) =>\n    typeof obj === 'object' && obj.type.displayName === 'Controls';\n\nexport const SystemMessage: React.FC<SystemMessageBaseProps> = ({\n    view,\n    dataTestId,\n    children,\n    fullHeight,\n    className,\n}) => {\n    const contextValue = useMemo(\n        () => ({ dataTestId, view, fullHeight }),\n        [view, dataTestId, fullHeight],\n    );\n\n    const renderChildrenWithFullHeight = () => {\n        const renderCloned = (child: JSX.Element, extraClassName: string) =>\n            React.cloneElement(child, {\n                ...child.props,\n                className: cn(child.props.className, extraClassName),\n            });\n\n        const childrenArray = React.Children.toArray(children);\n        const childrenCount = childrenArray.length;\n\n        return childrenArray.map((child, idx) => {\n            const isFirstElement = idx === 0;\n            const isLastElement = idx + 1 === childrenCount;\n\n            if (isFirstElement && isValidElement(child)) {\n                if (isLastElement) {\n                    return renderCloned(child, styles.both);\n                }\n\n                return renderCloned(child, styles.first);\n            }\n\n            if (isLastElement && isValidElement(child)) {\n                return renderCloned(\n                    child,\n                    isControlsElement(child) ? styles.controls : styles.last,\n                );\n            }\n\n            return child;\n        });\n    };\n\n    return (\n        <SystemMessageContext.Provider value={contextValue}>\n            <div\n                data-test-id={dataTestId}\n                className={cn(styles.component, className, {\n                    [mobileStyles.component]: view === 'mobile',\n                    [desktopStyles.component]: view === 'desktop',\n                    [styles.fullHeight]: fullHeight,\n                })}\n            >\n                {fullHeight ? renderChildrenWithFullHeight() : children}\n            </div>\n        </SystemMessageContext.Provider>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_fsBck\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport styles from './index.module.css';\n\ntype CaptionProps = {\n    /**\n     * Дополнительно имя класса\n     */\n    className?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children: React.ReactNode;\n};\n\nexport const Caption: React.FC<CaptionProps> = ({ className, children }) => {\n    const { dataTestId } = useContext(SystemMessageContext);\n\n    return (\n        <span\n            className={cn(styles.component, className)}\n            data-test-id={getDataTestId(dataTestId, 'caption')}\n        >\n            {children}\n        </span>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_TUMJX\",\"multiple\":\"multiple_ippcY\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_i2SCZ\",\"column\":\"column_HOcWi\",\"row\":\"row_E3cen\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ROL6Y\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\ntype ControlsProps = {\n    /**\n     * Расположение элементов футера\n     */\n    direction?: 'column' | 'row';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children: React.ReactNode;\n};\n\nexport const Controls: React.FC<ControlsProps> = ({\n    direction: directionProp,\n    children,\n    className,\n}) => {\n    const { dataTestId, view } = useContext(SystemMessageContext);\n    const defaultDirection = view === 'mobile' ? 'column' : 'row';\n    const direction = directionProp || defaultDirection;\n    const isMultipleElements = React.Children.toArray(children).length > 1;\n    const isColumn = isMultipleElements && direction === 'column' && view === 'mobile';\n\n    return (\n        <div\n            className={cn(styles.component, className, {\n                [styles.row]: !isColumn,\n                [styles.column]: isColumn,\n                [desktopStyles.component]: view === 'desktop',\n                [desktopStyles.multiple]: isMultipleElements,\n                [mobileStyles.component]: view === 'mobile',\n            })}\n            data-test-id={getDataTestId(dataTestId, 'controls')}\n        >\n            {children}\n        </div>\n    );\n};\n\nControls.displayName = 'Controls';\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ksI8k\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport styles from './index.module.css';\n\ntype GraphicProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Элемент с иконкой\n     */\n    children: React.ReactNode;\n};\n\nexport const Graphic: React.FC<GraphicProps> = ({ children, className }) => {\n    const { dataTestId } = useContext(SystemMessageContext);\n\n    return (\n        <div\n            className={cn(styles.component, className)}\n            data-test-id={getDataTestId(dataTestId, 'graphic')}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_y8iGg\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport styles from './index.module.css';\n\ntype SubtitleProps = {\n    /**\n     * Дополнительно имя класса\n     */\n    className?: string;\n\n    /**\n     * Заголовок\n     */\n    children: React.ReactNode;\n};\n\nexport const Subtitle: React.FC<SubtitleProps> = ({ className, children }) => {\n    const { dataTestId } = useContext(SystemMessageContext);\n\n    return (\n        <span\n            className={cn(styles.component, className)}\n            data-test-id={getDataTestId(dataTestId, 'subtitle')}\n        >\n            {children}\n        </span>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ogDpw\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_arnYM\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_B7xT6\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\ntype TitleProps = {\n    /**\n     * Дополнительно имя класса\n     */\n    className?: string;\n\n    /**\n     * HTML тег\n     * @default h3\n     */\n    tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div';\n\n    /**\n     * Заголовок\n     */\n    children: React.ReactNode;\n};\n\nexport const Title: React.FC<TitleProps> = ({ tag = 'h3', className, children }) => {\n    const { dataTestId, view } = useContext(SystemMessageContext);\n\n    const Component = tag;\n\n    return (\n        <Component\n            className={cn(styles.component, className, {\n                [desktopStyles.component]: view === 'desktop',\n                [mobileStyles.component]: view === 'mobile',\n            })}\n            data-test-id={getDataTestId(dataTestId, 'title')}\n        >\n            {children}\n        </Component>\n    );\n};\n","import React from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { isClient } from '../../utils';\n\nimport { SystemMessage } from './Component';\nimport type { SystemMessageResponsiveProps } from './types';\nimport { createCompound } from './utils';\n\nconst SystemMessageResponsiveComponent: React.FC<SystemMessageResponsiveProps> = ({\n    breakpoint = 1024,\n    defaultMatchMediaValue,\n    children,\n    ...restProps\n}) => {\n    const query = `(min-width: ${breakpoint}px)`;\n    const getDefaultValue = () => (isClient() ? window.matchMedia(query).matches : false);\n\n    const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue ?? getDefaultValue);\n\n    return (\n        <SystemMessage {...restProps} view={isDesktop ? 'desktop' : 'mobile'}>\n            {children}\n        </SystemMessage>\n    );\n};\n\nexport const SystemMessageResponsive = createCompound(SystemMessageResponsiveComponent);\n","import { Caption } from './components/caption';\nimport { Controls } from './components/controls';\nimport { Graphic } from './components/graphic';\nimport { Subtitle } from './components/subtitle';\nimport { Title } from './components/title';\n\nexport function createCompound<T>(functionComponent: T) {\n    return Object.assign(functionComponent, {\n        Graphic,\n        Title,\n        Subtitle,\n        Caption,\n        Controls,\n    });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_LFaXK\",\"focused\":\"focused_VGmA9\",\"addons\":\"addons_QtcEs\",\"s\":\"s_qC9qp\",\"m\":\"m_e7QT9\",\"l\":\"l_cWWvC\",\"xl\":\"xl_POA18\",\"xxs\":\"xxs_VgLZB\",\"xs\":\"xs_AGi1U\",\"withRightAddons\":\"withRightAddons_bDS3n\",\"withLeftAddons\":\"withLeftAddons_xrENU\",\"rounded\":\"rounded_KGQVv\",\"rectangular\":\"rectangular_y46LB\"};","import React, { ButtonHTMLAttributes, forwardRef, ReactNode, RefObject, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStylesMap = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\ntype NativeProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type TagProps = Omit<NativeProps, 'onClick'> & {\n    /**\n     * Отображение кнопки в отмеченном (зажатом) состоянии\n     */\n    checked?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс для обёртки children\n     */\n    childrenClassName?: string;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Обработчик нажатия\n     */\n    onClick?: (\n        event?: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        payload?: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * ref на children\n     */\n\n    childrenRef?: RefObject<HTMLSpanElement>;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * @deprecated данный проп больше не используется, временно оставлен для обратной совместимости\n     * Используйте props shape и view\n     * Вариант тега\n     */\n    variant?: 'default' | 'alt';\n\n    /**\n     * Форма тега\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Стиль тега\n     */\n    view?: 'outlined' | 'filled';\n};\n\nexport const Tag = forwardRef<HTMLButtonElement, TagProps>(\n    (\n        {\n            rightAddons,\n            leftAddons,\n            children,\n            size = 's',\n            checked,\n            className,\n            dataTestId,\n            name,\n            colors = 'default',\n            onClick,\n            variant = 'default',\n            shape,\n            view = 'outlined',\n            childrenClassName,\n            childrenRef,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const colorStyles = colorStylesMap[colors];\n\n        const tagRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(tagRef, 'keyboard');\n\n        const variantClassName = variant === 'default' ? 'rounded' : 'rectangular';\n\n        const shapeClassName = shape || variantClassName;\n\n        const tagProps = {\n            className: cn(\n                styles.component,\n                colorStyles.component,\n                styles[size],\n                colorStyles[view],\n                styles[shapeClassName],\n                {\n                    [styles.checked]: checked,\n                    [colorStyles.checked]: checked,\n                    [styles.focused]: focused,\n                    [styles.withRightAddons]: Boolean(rightAddons),\n                    [styles.withLeftAddons]: Boolean(leftAddons),\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n        };\n\n        const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (onClick) {\n                onClick(event, { name, checked: !checked });\n            }\n        };\n\n        return (\n            <button\n                ref={mergeRefs([tagRef, ref])}\n                type='button'\n                onClick={handleClick}\n                {...tagProps}\n                {...restProps}\n            >\n                {leftAddons ? <span className={styles.addons}>{leftAddons}</span> : null}\n\n                {children && (\n                    <span ref={childrenRef} className={childrenClassName}>\n                        {children}\n                    </span>\n                )}\n\n                {rightAddons ? <span className={styles.addons}>{rightAddons}</span> : null}\n            </button>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PFQYT\",\"outlined\":\"outlined_qYlWJ\",\"filled\":\"filled_xA7sP\",\"checked\":\"checked_PqIgl\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_jvqSN\",\"outlined\":\"outlined_G6Osv\",\"filled\":\"filled_kWwsr\",\"checked\":\"checked_UzsX7\"};","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"textarea_eFnZe\",\"customScrollbar\":\"customScrollbar_tmwi2\",\"hasInnerLabel\":\"hasInnerLabel_cVFCc\",\"pseudoTextarea\":\"pseudoTextarea_QqcK5\",\"overflow\":\"overflow_PftLL\",\"nativeScrollbar\":\"nativeScrollbar_JnrBu\",\"sub\":\"sub_rdjjJ\",\"focusVisible\":\"focusVisible_hjd3a\",\"filled\":\"filled_a1dRJ\",\"s\":\"s_LtGs9\",\"m\":\"m_gz3uo\",\"l\":\"l_YuLpX\",\"xl\":\"xl_IfJfI\",\"wrapper\":\"wrapper_xCVU1\",\"resizeVertical\":\"resizeVertical_Wl6Qu\"};","import React, { forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { TextareaIncomeProps } from '../typings';\n\nimport styles from '../index.module.css';\n\ntype PseudoTextAreaProps = {\n    /**\n     * Дополнительный класс компонента\n     */\n    pseudoTextareaClassName?: string;\n    /**\n     * Значение PseudoTextArea, разделяется на 2 части по maxLength\n     */\n    value: string;\n    /**\n     * Максимальное количество символов, символы свыше maxLength будут выделены\n     */\n    maxLength: number;\n} & Pick<TextareaIncomeProps, 'size'>;\n\nexport const PseudoTextArea = forwardRef<HTMLDivElement, PseudoTextAreaProps>(\n    ({ size = 's', pseudoTextareaClassName, maxLength, value }, ref) => (\n        <div\n            className={cn(styles.pseudoTextarea, styles[size], pseudoTextareaClassName)}\n            ref={ref}\n            hidden={true}\n        >\n            <span>{value.slice(0, maxLength)}</span>\n            <span className={cn(styles.overflow)}>{value.slice(maxLength)}</span>\n            {/* Перенос строки нужен для правильной позиции */}\n            <br />\n        </div>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_EIE3e\",\"hasInnerLabel\":\"hasInnerLabel_fe_J3\",\"clearIcon\":\"clearIcon_Kt2sC\",\"error\":\"error_VvdRX\",\"textarea\":\"textarea_gaLkG\",\"hint\":\"hint_buzk6\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport cn from 'classnames';\n\nimport { FormControl } from '@alfalab/core-components-form-control';\nimport { useFocus, useMedia } from '@alfalab/hooks';\n\nimport { PseudoTextArea } from './components';\nimport { TextareaProps } from './typings';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport const getDefaultCounterText = (textLength: number, maxLength = 0): string =>\n    `${textLength}/${maxLength} символов`;\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n    (\n        {\n            autoComplete = 'on',\n            autosize = true,\n            size = 's',\n            colors = 'default',\n            block = false,\n            bottomAddons,\n            fieldClassName,\n            className,\n            dataTestId,\n            disabled,\n            error,\n            hint,\n            textareaClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onHeightChange,\n            rightAddons,\n            maxRows,\n            minRows,\n            maxHeight,\n            resize = 'none',\n            value,\n            defaultValue,\n            rows = autosize ? 1 : 3,\n            showCounter = false,\n            getCounterText = getDefaultCounterText,\n            maxLength,\n            allowOverflow = true,\n            nativeScrollbar: nativeScrollbarProp,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const textareaRef = useRef<HTMLTextAreaElement>(null);\n        const pseudoTextareaRef = useRef<HTMLDivElement>(null);\n\n        const [focused, setFocused] = useState(false);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n        const [scrollPosition, setScrollPosition] = useState(0);\n\n        const [focusVisible] = useFocus(textareaRef, 'keyboard');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const hasOverflow = Boolean(\n            maxLength && allowOverflow && (value?.slice(maxLength) || stateValue.slice(maxLength)),\n        );\n\n        useEffect(() => {\n            const pseudoNode = pseudoTextareaRef.current;\n\n            if (pseudoNode) {\n                pseudoNode.scrollTop = scrollPosition;\n            }\n        }, [scrollPosition, stateValue]);\n\n        // Хак, так как react-textarea-autosize перестал поддерживать maxHeight\n        useEffect(() => {\n            if (autosize && maxHeight && textareaRef.current && textareaRef.current.style) {\n                textareaRef.current.style.maxHeight = `${maxHeight}px`;\n            }\n        }, [autosize, maxHeight]);\n\n        const handleTextareaFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n            setFocused(true);\n\n            if (onFocus) {\n                onFocus(event);\n            }\n        };\n\n        const handleTextareaBlur = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n            setFocused(false);\n\n            if (onBlur) {\n                onBlur(event);\n            }\n        };\n\n        const handleTextareaChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n            const {\n                target: { value: newValue },\n            } = event;\n\n            if (onChange) {\n                onChange(event, { value: newValue });\n            }\n\n            if (uncontrolled) {\n                setStateValue(newValue);\n            }\n        };\n\n        const handleTeaxtareaScroll = (event: React.UIEvent) => {\n            if (maxLength) {\n                const val = (event.target as HTMLElement).scrollTop;\n\n                setScrollPosition(val);\n            }\n        };\n\n        const getValueLength = (): number => {\n            if (uncontrolled) {\n                return stateValue.length;\n            }\n\n            return (value as string).length;\n        };\n\n        const textareaClassNameCalc = cn(\n            styles.textarea,\n            colorStyles[colors].textarea,\n            styles[size],\n            {\n                [styles.customScrollbar]: !nativeScrollbar,\n                [styles.hasInnerLabel]: hasInnerLabel,\n                [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                [styles.filled]: filled,\n            },\n            textareaClassName,\n        );\n\n        const textareaProps = {\n            ...restProps,\n            className: textareaClassNameCalc,\n            autoComplete,\n            disabled,\n            maxLength: allowOverflow ? undefined : maxLength,\n            onBlur: handleTextareaBlur,\n            onFocus: handleTextareaFocus,\n            onChange: handleTextareaChange,\n            value: uncontrolled ? stateValue : value,\n            rows,\n            ref: mergeRefs([ref, textareaRef]),\n            'data-test-id': dataTestId,\n            onScroll: handleTeaxtareaScroll,\n        };\n\n        const getBottomAddons = () => {\n            const counterIsVisible = Boolean(maxLength && showCounter);\n\n            return (\n                <React.Fragment>\n                    {counterIsVisible && (\n                        <span\n                            className={cn(styles.sub, {\n                                [colorStyles[colors].error]: hasOverflow,\n                                [colorStyles[colors].hint]: !hasOverflow,\n                            })}\n                        >\n                            {getCounterText(getValueLength(), maxLength)}\n                        </span>\n                    )}\n                    {bottomAddons}\n                </React.Fragment>\n            );\n        };\n\n        return (\n            <FormControl\n                className={cn(className)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                inputWrapperClassName={cn(styles.wrapper, styles[size], {\n                    [styles.hasInnerLabel]: hasInnerLabel,\n                    [styles.resizeVertical]: resize === 'vertical',\n                })}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                filled={filled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={rightAddons}\n                bottomAddons={getBottomAddons()}\n            >\n                <React.Fragment>\n                    {hasOverflow && (\n                        <PseudoTextArea\n                            value={value ?? stateValue}\n                            size={size}\n                            maxLength={maxLength as number}\n                            pseudoTextareaClassName={cn(textareaClassNameCalc, {\n                                [styles.nativeScrollbar]: nativeScrollbar,\n                            })}\n                            ref={pseudoTextareaRef}\n                        />\n                    )}\n                    {autosize ? (\n                        <TextareaAutosize\n                            {...textareaProps}\n                            maxRows={maxRows}\n                            minRows={minRows}\n                            onHeightChange={onHeightChange}\n                        />\n                    ) : (\n                        <textarea {...textareaProps} style={{ maxHeight }} />\n                    )}\n                </React.Fragment>\n            </FormControl>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_gbNCi\",\"hasInnerLabel\":\"hasInnerLabel_mi2vV\",\"clearIcon\":\"clearIcon_B6A9F\",\"error\":\"error_Opext\",\"textarea\":\"textarea_k6pha\",\"hint\":\"hint_eswZv\"};","/* eslint-disable no-useless-escape */\n\nimport React, { ChangeEvent, useState } from 'react';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport { format, isCompleteTimeInput, isValidInputValue } from './utils';\n\nexport type TimeInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { hours: number; mins: number; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { hours: number; mins: number; value: string },\n    ) => void;\n};\n\nexport const TimeInput = React.forwardRef<HTMLInputElement, TimeInputProps>(\n    (\n        { defaultValue = '', value: propValue, onChange, onComplete, className, ...restProps },\n        ref,\n    ) => {\n        const [value, setValue] = useState(propValue || defaultValue);\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const { value: newValue } = event.target;\n\n            if (newValue.length > 5) return;\n\n            // Позволяем вводить только цифры и двоеточия\n            if (/[^\\d:]/.test(newValue)) {\n                return;\n            }\n\n            const colon = newValue.match(/\\:/g);\n\n            // Не даем вводить больше, чем одно двоеточие\n            if (colon && colon.length > 1) {\n                return;\n            }\n\n            const formattedValue = format(newValue);\n\n            const formattedValueArr = formattedValue.split(':');\n            const hours = Number(formattedValueArr[0]);\n            const mins = Number(formattedValueArr[1]);\n\n            setValue(formattedValue);\n\n            if (onChange) onChange(event, { hours, mins, value: formattedValue });\n\n            if (isCompleteTimeInput(formattedValue)) {\n                const valid = formattedValue.length > 0 && isValidInputValue(formattedValue);\n\n                if (!valid) return;\n\n                if (onComplete) {\n                    onComplete(event, { hours, mins, value: formattedValue });\n                }\n            }\n        };\n\n        const handleClearClick = () => {\n            setValue('');\n        };\n\n        return (\n            <Input\n                {...restProps}\n                ref={ref}\n                value={value}\n                className={className}\n                onChange={handleChange}\n                onClear={handleClearClick}\n            />\n        );\n    },\n);\n","/* eslint-disable no-useless-escape */\n\nexport const DATE_MASK = [/\\d/, /\\d/, ':', /\\d/, /\\d/];\n\nexport const isCompleteTimeInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const isValidTimeFormat = (value: string): boolean => {\n    const timeArr = value.split(':');\n    const hours = timeArr[0];\n    const mins = timeArr[1];\n\n    if (hours.length !== 2 || Number(hours) > 23) {\n        return false;\n    }\n\n    if (mins.length !== 2 || Number(mins) > 59) {\n        return false;\n    }\n\n    return true;\n};\n\nexport const isValidInputValue = (inputValue?: string) =>\n    !inputValue || (isCompleteTimeInput(inputValue) && isValidTimeFormat(inputValue));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1:$2') // 123 => 12:3\n        .replace(/^(\\d\\d)(\\d\\d)/, '$1:$2') // 12345 => 12:45 (если вместо двоеточия введена цифра, она обратно заменяется на двоеточие)\n        .replace(/^(\\d):(\\d\\d)(\\d)/, '$1:$2') // 1:234 => 1:23\n        .replace(/\\:$/, ''); // 12: => 12 || : => void\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QHY01\",\"hasCloser\":\"hasCloser_czfqj\",\"contentWrap\":\"contentWrap_p2Odp\",\"block\":\"block_jD8PO\",\"content\":\"content_MyrvB\",\"hasActionButton\":\"hasActionButton_wEMm1\",\"actionSection\":\"actionSection_GNPXb\",\"leftAddons\":\"leftAddons_RuFAX\",\"title\":\"title_fFwsd\",\"children\":\"children_g29U4\",\"closeButtonWrapper\":\"closeButtonWrapper_ai1cX\",\"closeButton\":\"closeButton_BJskE\"};","import React, { forwardRef, HTMLAttributes, MouseEvent, ReactNode, useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { AlertCircleMIcon } from '@alfalab/icons-glyph/AlertCircleMIcon';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type BadgeIcons = {\n    negative: JSX.Element;\n    positive: JSX.Element;\n    attention: JSX.Element;\n};\n\nexport type ToastPlateProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для заголовка\n     */\n    titleClassName?: string;\n\n    /**\n     * Дополнительный класс для контентной области\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для области с кнопкой действия\n     */\n    actionSectionClassName?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: ReactNode;\n\n    /**\n     * Заголовок компонента\n     */\n    title?: ReactNode;\n\n    /**\n     * Вид бэйджа\n     */\n    badge?: 'negative' | 'positive' | 'attention';\n\n    /**\n     * Слот слева, заменяет стандартную иконку\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Кнопка действия\n     */\n    actionButton?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Управляет отображением кнопки закрытия уведомления\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Доп. класс враппера кнопки \"закрыть\".\n     */\n    closerWrapperClassName?: string;\n\n    /**\n     * Доп. класс кнопки \"закрыть\".\n     */\n    closerClassName?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Обработчик клика по крестику\n     */\n    onClose?: (event?: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Функция, с помощью которой можно переопределить иконки в Badge\n     */\n    getBadgeIcons?: (icons: BadgeIcons) => BadgeIcons;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n};\n\nconst iconDefaultComponents = {\n    negative: <CrossCircleMIcon className={styles.badgeIcon} />,\n    positive: <CheckmarkCircleMIcon className={styles.badgeIcon} />,\n    attention: <AlertCircleMIcon className={styles.badgeIcon} />,\n};\n\nexport const ToastPlate = forwardRef<HTMLDivElement, ToastPlateProps>(\n    (\n        {\n            dataTestId,\n            className,\n            titleClassName,\n            contentClassName,\n            actionSectionClassName,\n            hasCloser,\n            leftAddons,\n            badge,\n            title,\n            children,\n            actionButton,\n            block,\n            onClose,\n            getBadgeIcons,\n            colors = 'default',\n            closerWrapperClassName,\n            closerClassName,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const needRenderLeftAddons = Boolean(leftAddons || badge);\n\n        const iconComponents = getBadgeIcons\n            ? getBadgeIcons(iconDefaultComponents)\n            : iconDefaultComponents;\n\n        const handleClose = useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (onClose) {\n                    onClose(event);\n                }\n            },\n            [onClose],\n        );\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    colorStyles[colors].component,\n                    { [styles.block]: block, [styles.hasCloser]: hasCloser },\n                    className,\n                )}\n                ref={ref}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                <div className={styles.contentWrap}>\n                    <div\n                        className={cn(contentClassName, styles.content, {\n                            [styles.hasCloser]: hasCloser,\n                            [styles.hasActionButton]: !!actionButton,\n                        })}\n                    >\n                        {needRenderLeftAddons && (\n                            <div className={styles.leftAddons}>\n                                {leftAddons || (\n                                    <Badge\n                                        view='icon'\n                                        content={badge && iconComponents[badge]}\n                                        iconColor={badge}\n                                        className={styles.badge}\n                                        dataTestId='badge'\n                                    />\n                                )}\n                            </div>\n                        )}\n\n                        <div>\n                            {title && (\n                                <div className={cn(titleClassName, styles.title)}>{title}</div>\n                            )}\n                            {children && <div className={styles.children}>{children}</div>}\n                        </div>\n                    </div>\n\n                    {actionButton && (\n                        <div\n                            className={cn(actionSectionClassName, styles.actionSection, {\n                                [styles.hasCloser]: hasCloser,\n                            })}\n                        >\n                            {actionButton}\n                        </div>\n                    )}\n\n                    {hasCloser && (\n                        <div\n                            className={cn(\n                                styles.closeButtonWrapper,\n                                colorStyles[colors].closeButtonWrapper,\n                                closerWrapperClassName,\n                            )}\n                        >\n                            <IconButton\n                                icon={CrossMIcon}\n                                colors={colors === 'default' ? 'inverted' : 'default'}\n                                className={cn(styles.closeButton, closerClassName)}\n                                onClick={handleClose}\n                                aria-label='закрыть'\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UI16V\",\"closeButtonWrapper\":\"closeButtonWrapper_fNvJ9\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Q3xMN\",\"closeButtonWrapper\":\"closeButtonWrapper_CoXoX\"};","// extracted by mini-css-extract-plugin\nexport default {\"toastPlate\":\"toastPlate_vAOdL\",\"title\":\"title_qU6UL\",\"popoverInner\":\"popoverInner_dRPTX\",\"block\":\"block_pvLzX\",\"fixed\":\"fixed_owbmt\",\"enter\":\"enter_TIT7f\",\"enterActive\":\"enterActive_zDG2M\",\"exit\":\"exit_qGA0d\",\"exitActive\":\"exitActive_jhWoI\"};","import React, {\n    forwardRef,\n    MouseEventHandler,\n    TouchEventHandler,\n    useCallback,\n    useEffect,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { Portal } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\nimport {\n    ToastPlate as ToastPlateComponent,\n    ToastPlateProps,\n} from '@alfalab/core-components-toast-plate';\nimport { useClickOutside, usePrevious } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nconst CSS_TRANSITION_CLASS_NAMES = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n};\n\nexport type ToastProps = ToastPlateProps &\n    Pick<\n        PopoverProps,\n        | 'position'\n        | 'offset'\n        | 'open'\n        | 'getPortalContainer'\n        | 'preventFlip'\n        | 'transition'\n        | 'useAnchorWidth'\n    > & {\n        /**\n         * Элемент, относительного которого появляется тост.\n         * Если не передавать, тост будет позиционирован снизу экрана (position: fixed).\n         */\n        anchorElement?: HTMLElement | null;\n\n        /**\n         * Через сколько исчезнет компонент (ms).\n         */\n        autoCloseDelay?: number;\n\n        /**\n         * Отступ снизу (при fixed-позиционировании).\n         */\n        bottomOffset?: number;\n\n        /**\n         * z-index компонента\n         */\n        zIndex?: number;\n\n        /**\n         * Обработчик закрытия компонента.\n         */\n        onClose: () => void;\n\n        /**\n         * Плашка тоста.\n         * По-дефолту рендерит компонент ToastPlate\n         */\n        ToastPlate?: typeof ToastPlateComponent;\n    };\n\nconst DefaultToastPlate: ToastProps['ToastPlate'] = forwardRef((props, ref) => (\n    <ToastPlateComponent ref={ref} {...props} />\n));\n\nexport const Toast = forwardRef<HTMLDivElement, ToastProps>(\n    (\n        {\n            anchorElement,\n            position,\n            offset,\n            open,\n            autoCloseDelay = 3000,\n            className,\n            titleClassName,\n            bottomOffset,\n            style = {},\n            block,\n            zIndex = stackingOrder.TOAST,\n            ToastPlate = DefaultToastPlate,\n            onMouseEnter,\n            onMouseLeave,\n            onTouchStart,\n            onClose,\n            getPortalContainer,\n            useAnchorWidth,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const plateRef = useRef<HTMLDivElement>(null);\n        const timerId = useRef(0);\n        const prevOpen = usePrevious(open);\n\n        const startTimer = useCallback(() => {\n            clearTimeout(timerId.current);\n\n            timerId.current = window.setTimeout(onClose, autoCloseDelay);\n        }, [autoCloseDelay, onClose]);\n\n        const stopTimer = useCallback(() => {\n            clearTimeout(timerId.current);\n        }, []);\n\n        const handleMouseEnter = useCallback<MouseEventHandler<HTMLDivElement>>(\n            (event) => {\n                stopTimer();\n\n                if (onMouseEnter) {\n                    onMouseEnter(event);\n                }\n            },\n            [onMouseEnter, stopTimer],\n        );\n\n        const handleMouseLeave = useCallback<MouseEventHandler<HTMLDivElement>>(\n            (event) => {\n                startTimer();\n\n                if (onMouseLeave) {\n                    onMouseLeave(event);\n                }\n            },\n            [onMouseLeave, startTimer],\n        );\n\n        const handleTouchStart = useCallback<TouchEventHandler<HTMLDivElement>>(\n            (event) => {\n                stopTimer();\n\n                if (onTouchStart) {\n                    onTouchStart(event);\n                }\n            },\n            [onTouchStart, stopTimer],\n        );\n\n        const handleClickOutside = useCallback(() => {\n            onClose();\n            stopTimer();\n        }, [onClose, stopTimer]);\n\n        useClickOutside(plateRef, handleClickOutside);\n\n        useEffect(() => () => clearTimeout(timerId.current), []);\n\n        useEffect(() => {\n            if (open !== prevOpen && open) {\n                startTimer();\n            }\n        }, [open, prevOpen, startTimer, stopTimer]);\n\n        const props = {\n            block,\n            titleClassName: cn(titleClassName, styles.title),\n            onClose,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onTouchStart: handleTouchStart,\n            ref: mergeRefs([ref, plateRef]),\n        };\n\n        if (anchorElement) {\n            return (\n                <Popover\n                    open={open}\n                    anchorElement={anchorElement}\n                    position={position}\n                    offset={offset}\n                    popperClassName={styles.popoverInner}\n                    className={cn({ [styles.block]: block })}\n                    getPortalContainer={getPortalContainer}\n                    zIndex={zIndex}\n                    useAnchorWidth={useAnchorWidth}\n                >\n                    <ToastPlate {...restProps} style={style} className={className} {...props} />\n                </Popover>\n            );\n        }\n\n        return (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <Portal getPortalContainer={getPortalContainer}>\n                        <CSSTransition\n                            unmountOnExit={true}\n                            in={open}\n                            timeout={150}\n                            nodeRef={plateRef}\n                            classNames={CSS_TRANSITION_CLASS_NAMES}\n                        >\n                            <ToastPlate\n                                {...restProps}\n                                className={cn(styles.fixed, styles.toastPlate, className)}\n                                style={{\n                                    ...style,\n                                    bottom: bottomOffset && `${bottomOffset}px`,\n                                    zIndex: computedZIndex,\n                                }}\n                                {...props}\n                            />\n                        </CSSTransition>\n                    </Portal>\n                )}\n            </Stack>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_pyaU5\",\"popper\":\"popper_jEZGO\",\"hint\":\"hint_YUh2n\",\"target\":\"target_ehIu9\",\"overlap\":\"overlap_n0tIf\"};","import React, {\n    FC,\n    Fragment,\n    HTMLAttributes,\n    MutableRefObject,\n    ReactElement,\n    ReactNode,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Popover, PopoverProps, Position } from '@alfalab/core-components-popover';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\ntype Trigger = 'click' | 'hover';\n\ntype RefElement = HTMLDivElement | null;\n\nexport type TooltipDesktopProps = {\n    /**\n     * Контент тултипа\n     */\n    content: ReactNode;\n\n    /**\n     * Позиционирование тултипа\n     */\n    position?: Position;\n\n    /**\n     * Задержка перед открытием тултипа\n     */\n    onOpenDelay?: number;\n\n    /**\n     * Задержка перед закрытием тултипа\n     */\n    onCloseDelay?: number;\n\n    /**\n     * Обработчик открытия тултипа\n     */\n    onOpen?: () => void;\n\n    /**\n     * Обработчик закрытия тултипа\n     */\n    onClose?: () => void;\n\n    /**\n     * Событие, по которому происходит открытие тултипа\n     */\n    trigger?: Trigger;\n\n    /**\n     * Если `true`, то тултип будет открыт\n     */\n    open?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы тултипа.\n     * При срабатывании событий на них, тултип будет открываться\n     */\n    children: ReactElement;\n\n    /**\n     * Смещение тултипа\n     */\n    offset?: [number, number];\n\n    /**\n     * Функция, возвращающая контейнер, в который будет рендериться тултип\n     */\n    getPortalContainer?: () => HTMLElement;\n\n    /**\n     * Дополнительный класс для стрелочки\n     */\n    arrowClassName?: string;\n\n    /**\n     * Дополнительный класс для контента\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popoverClassName?: string;\n\n    /**\n     * Дополнительный класс для обертки над дочерними элементами\n     */\n    targetClassName?: string;\n\n    /**\n     * Вид тултипа\n     */\n    view?: 'tooltip' | 'hint';\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение компонента\n     */\n    updatePopover?: PopoverProps['update'];\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Реф для обертки над дочерними элементами\n     */\n    targetRef?: MutableRefObject<HTMLElement | null>;\n\n    /**\n     * Если тултип не помещается в переданной позиции (position), он попробует открыться в другой позиции,\n     * по очереди для каждой позиции из этого списка.\n     * Если не передавать, то тултип открывается в противоположном направлении от переданного position.\n     */\n    fallbackPlacements?: PopoverProps['fallbackPlacements'];\n\n    /**\n     * Запрещает тултипу менять свою позицию, если он не влезает в видимую область.\n     */\n    preventOverflow?: PopoverProps['preventOverflow'];\n\n    /**\n     *  Позволяет тултипу подствраивать свою высоту под границы экрана, если из-за величины контента он выходит за рамки видимой области экрана\n     */\n    availableHeight?: PopoverProps['availableHeight'];\n\n    /**\n     *  Элемент, относительно которого будет позиционировать тултип.\n     */\n    anchor?: PopoverProps['anchorElement'];\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Использовать ширину родительского элемента\n     */\n    useAnchorWidth?: boolean;\n};\n\nexport const TooltipDesktop: FC<TooltipDesktopProps> = ({\n    children,\n    content,\n    trigger = 'hover',\n    onCloseDelay = 300,\n    onOpenDelay = 300,\n    dataTestId,\n    open: forcedOpen,\n    offset = [0, 16],\n    position,\n    contentClassName,\n    arrowClassName,\n    popoverClassName,\n    updatePopover,\n    targetClassName,\n    zIndex,\n    onClose,\n    onOpen,\n    getPortalContainer,\n    view = 'tooltip',\n    targetRef = null,\n    fallbackPlacements,\n    preventOverflow = true,\n    availableHeight = false,\n    anchor = null,\n    colors = 'default',\n    useAnchorWidth,\n}) => {\n    const [visible, setVisible] = useState(!!forcedOpen);\n    const [target, setTarget] = useState<HTMLElement | null>(null);\n\n    const contentRef = useRef<RefElement>(null);\n    const timer = useRef(0);\n\n    const show = forcedOpen === undefined ? visible : forcedOpen;\n\n    const open = () => {\n        if (!show) {\n            setVisible(true);\n\n            if (onOpen) {\n                onOpen();\n            }\n        }\n    };\n\n    const close = useCallback(() => {\n        if (show) {\n            setVisible(false);\n\n            if (onClose) {\n                onClose();\n            }\n        }\n    }, [onClose, show]);\n\n    const toggle = () => {\n        if (show) {\n            close();\n        } else {\n            open();\n        }\n    };\n\n    const clickedOutside = useCallback(\n        (node: Element): boolean => {\n            if (target && target.contains(node)) {\n                return false;\n            }\n\n            if (contentRef.current && contentRef.current.contains(node)) {\n                return false;\n            }\n\n            return true;\n        },\n        [target],\n    );\n\n    useEffect(() => {\n        const handleBodyClick = (event: MouseEvent | TouchEvent) => {\n            const eventTarget = event.target as Element;\n\n            if (clickedOutside(eventTarget)) {\n                close();\n            }\n        };\n\n        document.body.addEventListener('click', handleBodyClick);\n        document.body.addEventListener('touchstart', handleBodyClick);\n\n        return () => {\n            document.body.removeEventListener('click', handleBodyClick);\n            document.body.removeEventListener('touchstart', handleBodyClick);\n\n            clearTimeout(timer.current);\n        };\n    }, [clickedOutside, close]);\n\n    const handleTargetClick = () => {\n        toggle();\n    };\n\n    const handleMouseOver = () => {\n        clearTimeout(timer.current);\n\n        timer.current = window.setTimeout(() => {\n            open();\n        }, onOpenDelay);\n    };\n\n    const handleMouseOut = () => {\n        clearTimeout(timer.current);\n\n        timer.current = window.setTimeout(() => {\n            close();\n        }, onCloseDelay);\n    };\n\n    const handleTouchStart = (event: React.TouchEvent<HTMLElement>) => {\n        const eventTarget = event.target as Element;\n\n        clearTimeout(timer.current);\n\n        if (clickedOutside(eventTarget)) {\n            timer.current = window.setTimeout(() => {\n                close();\n            }, onCloseDelay);\n        } else {\n            open();\n        }\n    };\n\n    const onClickProps = { onClick: handleTargetClick };\n\n    const onHoverProps = {\n        onMouseOver: handleMouseOver,\n        onMouseOut: handleMouseOut,\n        onTouchStart: handleTouchStart,\n    };\n\n    const getTargetProps = (): HTMLAttributes<HTMLElement> => {\n        const props = {\n            className: cn(styles.target, targetClassName),\n        };\n\n        switch (trigger) {\n            case 'click':\n                return {\n                    ...props,\n                    ...onClickProps,\n                };\n            case 'hover':\n                return {\n                    ...props,\n                    ...onHoverProps,\n                };\n            default:\n                return {};\n        }\n    };\n\n    const getContentProps = (): HTMLAttributes<HTMLElement> => {\n        const props = {\n            ref: contentRef,\n            'data-test-id': dataTestId,\n            className: cn(styles.component, contentClassName),\n        };\n\n        switch (trigger) {\n            case 'hover':\n                return {\n                    ...props,\n                    ...onHoverProps,\n                };\n            default:\n                return props;\n        }\n    };\n\n    return (\n        <Fragment>\n            <div ref={mergeRefs([targetRef, setTarget])} {...getTargetProps()}>\n                {children.props.disabled && <div className={styles.overlap} />}\n                {children}\n            </div>\n\n            <Popover\n                anchorElement={anchor || target}\n                open={show}\n                getPortalContainer={getPortalContainer}\n                arrowClassName={cn(arrowClassName, styles.arrow, colorStyles[colors].arrow)}\n                popperClassName={cn(styles.popper, styles[view], colorStyles[colors][view])}\n                className={popoverClassName}\n                offset={offset}\n                withArrow={true}\n                position={position}\n                update={updatePopover}\n                zIndex={zIndex}\n                fallbackPlacements={fallbackPlacements}\n                preventOverflow={preventOverflow}\n                availableHeight={availableHeight}\n                useAnchorWidth={useAnchorWidth}\n            >\n                <div {...getContentProps()}>{content}</div>\n            </Popover>\n        </Fragment>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"hint\":\"hint_iKDKk\",\"arrow\":\"arrow_Pb824\",\"tooltip\":\"tooltip_m6mGN\"};","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip_evOJA\",\"arrow\":\"arrow_HeyvV\",\"hint\":\"hint_zF9wM\"};","// extracted by mini-css-extract-plugin\nexport default {\"target\":\"target_ZxkQj\",\"overlap\":\"overlap_Olsvw\"};","import React, { FC, Fragment } from 'react';\nimport cn from 'classnames';\n\nimport { BottomSheet, BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { Button } from '@alfalab/core-components-button';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { TooltipDesktop, TooltipDesktopProps } from './desktop';\nimport { useControlled } from './utils';\n\nimport styles from './responsive.module.css';\n\ntype View = 'desktop' | 'mobile';\n\nexport type TooltipResponsiveProps = Omit<TooltipDesktopProps, 'onClose' | 'onOpen'> & {\n    /**\n     * Режим отображения по умолчанию\n     */\n    defaultMatch?: View;\n\n    /**\n     * Обработчик открытия\n     */\n    onOpen?: (event?: React.MouseEvent<HTMLElement>) => void;\n\n    /**\n     * Обработчик закрытия\n     */\n    onClose?: (event?: React.MouseEvent<HTMLElement>) => void;\n\n    /**\n     * Заголовок кнопки в футере\n     */\n    actionButtonTitle?: string;\n\n    /**\n     * Наличие компонента крестика\n     * @deprecated(используйте bottomSheetProps.hasCloser)\n     */\n    hasCloser?: boolean;\n\n    /**\n     *  Дополнительные пропсы компонента BottomSheet\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const TooltipResponsive: FC<TooltipResponsiveProps> = ({\n    defaultMatch = 'mobile',\n    content,\n    children,\n    open,\n    onOpen,\n    onClose,\n    actionButtonTitle = 'Понятно',\n    hasCloser,\n    targetRef,\n    targetClassName,\n    bottomSheetProps,\n    breakpoint = 1024,\n    ...restProps\n}) => {\n    const [view] = useMedia<View>(\n        [\n            ['mobile', `(max-width: ${breakpoint - 1}px)`],\n            ['desktop', `(min-width: ${breakpoint}px)`],\n        ],\n        defaultMatch,\n    );\n\n    const [openValue, setOpenValueIfUncontrolled] = useControlled(open, false);\n\n    const handleOpen = (event?: React.MouseEvent<HTMLElement>) => {\n        if (onOpen) {\n            onOpen(event);\n        } else {\n            setOpenValueIfUncontrolled(true);\n        }\n    };\n\n    const handleClose = (event?: React.MouseEvent<HTMLElement>) => {\n        if (onClose) {\n            onClose(event);\n        } else {\n            setOpenValueIfUncontrolled(false);\n        }\n    };\n\n    const isMobile = view === 'mobile';\n\n    return isMobile ? (\n        <Fragment>\n            <BottomSheet\n                {...restProps}\n                open={Boolean(openValue)}\n                onClose={handleClose}\n                hasCloser={hasCloser}\n                actionButton={\n                    <Button view='secondary' block={true} size='s' onClick={handleClose}>\n                        {actionButtonTitle}\n                    </Button>\n                }\n                {...bottomSheetProps}\n            >\n                {content}\n            </BottomSheet>\n            {/** TODO: проверить тултип на доступность */}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n            <div\n                ref={targetRef as React.Ref<HTMLDivElement>}\n                onClick={handleOpen}\n                className={cn(styles.target, targetClassName)}\n            >\n                {children?.props.disabled && <div className={styles.overlap} />}\n                {children}\n            </div>\n        </Fragment>\n    ) : (\n        <TooltipDesktop\n            {...restProps}\n            open={open}\n            content={content}\n            onOpen={handleOpen}\n            onClose={handleClose}\n            targetClassName={targetClassName}\n            targetRef={targetRef}\n        >\n            {children}\n        </TooltipDesktop>\n    );\n};\n","import { useCallback, useRef, useState } from 'react';\n\nexport function useControlled<T>(controlledValue: T, defaultValue: T): [T, (value: T) => void] {\n    const { current: isControlled } = useRef<boolean>(controlledValue !== undefined);\n    const [uncontrolledValue, setUncontrolledValue] = useState<T>(defaultValue);\n    const value = isControlled ? controlledValue : uncontrolledValue;\n\n    const setValueIfUncontrolled = useCallback(\n        (newValue: T) => {\n            if (!isControlled) {\n                setUncontrolledValue(newValue);\n            }\n        },\n        [isControlled],\n    );\n\n    return [value, setValueIfUncontrolled];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_RBT7F\",\"background-accent\":\"background-accent_g1czq\",\"background-info\":\"background-info_k8Q9a\",\"background-attention-muted\":\"background-attention-muted_MIf7S\",\"background-positive-muted\":\"background-positive-muted_uOHaL\",\"background-negative-muted\":\"background-negative-muted_maSpP\",\"background-primary\":\"background-primary_BUnae\",\"background-primary-inverted\":\"background-primary-inverted_RwiqU\",\"background-secondary\":\"background-secondary_NieJw\",\"background-secondary-inverted\":\"background-secondary-inverted_zCKmp\",\"background-tertiary\":\"background-tertiary_YBbn1\",\"background-tertiary-inverted\":\"background-tertiary-inverted_JuS6h\",\"background-quaternary\":\"background-quaternary_Jm9bX\",\"background-quaternary-inverted\":\"background-quaternary-inverted_Tw0rM\",\"background-specialbg-component\":\"background-specialbg-component_hVMfU\",\"background-specialbg-component-inverted\":\"background-specialbg-component-inverted_EFYsp\",\"background-specialbg-primary-grouped\":\"background-specialbg-primary-grouped_fzYRC\",\"background-specialbg-secondary-grouped\":\"background-specialbg-secondary-grouped_V3iH1\",\"background-specialbg-tertiary-grouped\":\"background-specialbg-tertiary-grouped_C70y5\",\"background-specialbg-secondary-transparent\":\"background-specialbg-secondary-transparent_Pw4hc\",\"background-specialbg-secondary-transparent-inverted\":\"background-specialbg-secondary-transparent-inverted_NlG6S\",\"background-specialbg-tertiary-transparent\":\"background-specialbg-tertiary-transparent_KQumi\",\"background-specialbg-tertiary-transparent-inverted\":\"background-specialbg-tertiary-transparent-inverted_lVgFz\",\"padding-top-3xs\":\"padding-top-3xs_k6A2P\",\"padding-top-2xs\":\"padding-top-2xs_DZDx2\",\"padding-top-xs\":\"padding-top-xs_wyaV8\",\"padding-top-s\":\"padding-top-s_ZBhIb\",\"padding-top-m\":\"padding-top-m_lnGqC\",\"padding-top-l\":\"padding-top-l_L6qq2\",\"padding-top-xl\":\"padding-top-xl_scMZH\",\"padding-top-2xl\":\"padding-top-2xl_Z2937\",\"padding-top-3xl\":\"padding-top-3xl__Qbvz\",\"padding-top-4xl\":\"padding-top-4xl_kpCLT\",\"padding-right-3xs\":\"padding-right-3xs_O7HXI\",\"padding-right-2xs\":\"padding-right-2xs_F__EN\",\"padding-right-xs\":\"padding-right-xs_oTHI7\",\"padding-right-s\":\"padding-right-s_nJOs0\",\"padding-right-m\":\"padding-right-m_G9m8S\",\"padding-right-l\":\"padding-right-l_EhBnA\",\"padding-right-xl\":\"padding-right-xl_cwIXd\",\"padding-right-2xl\":\"padding-right-2xl_rxi1W\",\"padding-right-3xl\":\"padding-right-3xl_HquJZ\",\"padding-right-4xl\":\"padding-right-4xl__e97s\",\"padding-bottom-3xs\":\"padding-bottom-3xs_p_yK0\",\"padding-bottom-2xs\":\"padding-bottom-2xs_AUfHy\",\"padding-bottom-xs\":\"padding-bottom-xs_XSvVL\",\"padding-bottom-s\":\"padding-bottom-s_Br1Xs\",\"padding-bottom-m\":\"padding-bottom-m_YIKE6\",\"padding-bottom-l\":\"padding-bottom-l_qVCEK\",\"padding-bottom-xl\":\"padding-bottom-xl_iwEOD\",\"padding-bottom-2xl\":\"padding-bottom-2xl_hccvQ\",\"padding-bottom-3xl\":\"padding-bottom-3xl_LUGPf\",\"padding-bottom-4xl\":\"padding-bottom-4xl_RQJQa\",\"padding-left-3xs\":\"padding-left-3xs_VHqMB\",\"padding-left-2xs\":\"padding-left-2xs_KAeLF\",\"padding-left-xs\":\"padding-left-xs_UUPTA\",\"padding-left-s\":\"padding-left-s_cpN6J\",\"padding-left-m\":\"padding-left-m_TvRT2\",\"padding-left-l\":\"padding-left-l_qJkY0\",\"padding-left-xl\":\"padding-left-xl_WAXRO\",\"padding-left-2xl\":\"padding-left-2xl_lKIGM\",\"padding-left-3xl\":\"padding-left-3xl_hbIYh\",\"padding-left-4xl\":\"padding-left-4xl_Swp_Y\",\"shadow-xs\":\"shadow-xs_SS_3f\",\"shadow-s\":\"shadow-s_ocI1_\",\"shadow-m\":\"shadow-m_QvqfG\",\"shadow-l\":\"shadow-l_eVPIj\",\"shadow-xl\":\"shadow-xl_UuFst\",\"shadow-xs-hard\":\"shadow-xs-hard_cO4pH\",\"shadow-s-hard\":\"shadow-s-hard_TuR3f\",\"shadow-m-hard\":\"shadow-m-hard_DeDrx\",\"shadow-l-hard\":\"shadow-l-hard_a34td\",\"shadow-xl-hard\":\"shadow-xl-hard_Z8bbO\",\"shadow-xs-up\":\"shadow-xs-up_nRnKN\",\"shadow-s-up\":\"shadow-s-up_Zvj1x\",\"shadow-m-up\":\"shadow-m-up_D8vAK\",\"shadow-l-up\":\"shadow-l-up_zqNnP\",\"shadow-xl-up\":\"shadow-xl-up_Bp8RI\",\"shadow-xs-hard-up\":\"shadow-xs-hard-up_sXXO1\",\"shadow-s-hard-up\":\"shadow-s-hard-up_jtbZf\",\"shadow-m-hard-up\":\"shadow-m-hard-up_DokxW\",\"shadow-l-hard-up\":\"shadow-l-hard-up_A8DjG\",\"shadow-xl-hard-up\":\"shadow-xl-hard-up_mTuQe\",\"border-color-accent\":\"border-color-accent_qD9rL\",\"border-color-key\":\"border-color-key_tfTAl\",\"border-color-key-inverted\":\"border-color-key-inverted_J2xI6\",\"border-color-link\":\"border-color-link_YMzBs\",\"border-color-primary\":\"border-color-primary_lvdnM\",\"border-color-primary-inverted\":\"border-color-primary-inverted_sntKN\",\"border-color-secondary\":\"border-color-secondary_fgtu5\",\"border-color-secondary-inverted\":\"border-color-secondary-inverted_EzI91\",\"border-color-tertiary\":\"border-color-tertiary_IRFsI\",\"border-color-tertiary-inverted\":\"border-color-tertiary-inverted_kcRYk\",\"border-color-underline\":\"border-color-underline_aaMkd\",\"border-color-underline-inverted\":\"border-color-underline-inverted_gxfLv\",\"border-color-graphic-attention\":\"border-color-graphic-attention_BLhFn\",\"border-color-graphic-link\":\"border-color-graphic-link_VFn3H\",\"border-color-graphic-negative\":\"border-color-graphic-negative_HepIX\",\"border-color-graphic-positive\":\"border-color-graphic-positive_tCceQ\",\"border-color-specialbg-secondary-transparent\":\"border-color-specialbg-secondary-transparent_Aee46\",\"border-color-specialbg-secondary-transparent-inverted\":\"border-color-specialbg-secondary-transparent-inverted_T6f3W\",\"border-color-specialbg-tertiary-transparent\":\"border-color-specialbg-tertiary-transparent__NWEo\",\"border-color-specialbg-tertiary-transparent-inverted\":\"border-color-specialbg-tertiary-transparent-inverted_mSn70\",\"border-radius-m\":\"border-radius-m_ASRoh\",\"border-radius-xl\":\"border-radius-xl_xds1D\",\"border-radius-xxl\":\"border-radius-xxl_juGGL\",\"border-width-1\":\"border-width-1_JaiGD\",\"border-width-2\":\"border-width-2_VZgN6\",\"border-width-4\":\"border-width-4_APzkA\"};","import React, { forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { UnderlayProps } from './types';\n\nimport styles from './index.module.css';\n\nexport const Underlay = forwardRef<HTMLDivElement, UnderlayProps>(\n    (\n        {\n            children,\n            borderRadius,\n            shadow,\n            borderSize,\n            backgroundColor,\n            borderColor,\n            className,\n            padding,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const paddingSize =\n            typeof padding === 'string'\n                ? { top: padding, left: padding, right: padding, bottom: padding }\n                : padding;\n\n        const paddingStyles = paddingSize && {\n            [styles[`padding-top-${paddingSize.top}`]]: paddingSize.top,\n            [styles[`padding-right-${paddingSize.right}`]]: paddingSize.right,\n            [styles[`padding-bottom-${paddingSize.bottom}`]]: paddingSize.bottom,\n            [styles[`padding-left-${paddingSize.left}`]]: paddingSize.left,\n        };\n\n        return (\n            <div\n                ref={ref}\n                className={cn(\n                    styles.component,\n                    paddingStyles,\n                    backgroundColor && styles[`background-${backgroundColor}`],\n                    borderRadius && styles[`border-radius-${borderRadius}`],\n                    borderColor && styles[`border-color-${borderColor}`],\n                    borderSize && styles[`border-width-${borderSize}`],\n                    shadow && styles[shadow],\n                    className,\n                )}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                {children}\n            </div>\n        );\n    },\n);\n","export const isClient = () => typeof window !== 'undefined';\n","// extracted by mini-css-extract-plugin\nexport default {\"suffixContainer\":\"suffixContainer_F1MD8\",\"suffixVisible\":\"suffixVisible_x6y9D\",\"hasSuffix\":\"hasSuffix_HM5Xh\",\"spacer\":\"spacer_ICg9g\",\"suffix\":\"suffix_H6_he\",\"disabled\":\"disabled_Y8uV4\",\"readOnly\":\"readOnly_jXr1g\"};","import React, {\n    FC,\n    forwardRef,\n    Fragment,\n    ReactNode,\n    RefAttributes,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport { Portal } from '@alfalab/core-components-portal';\n\nimport styles from './index.module.css';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type withSuffixProps = InputProps & {\n    /**\n     * Дополнительный закрепленный текст справа от основного значения.\n     * Например: value='85' suffix=' мес' -> 85 мес\n     */\n    suffix?: ReactNode;\n\n    /**\n     * Дополнительный класс для контейнера с суффиксом\n     */\n    suffixContainerClassName?: string;\n};\n\nexport const withSuffix = (Input: FC<InputProps & RefAttributes<HTMLInputElement>>) =>\n    forwardRef<HTMLInputElement, withSuffixProps>(\n        (\n            {\n                value,\n                defaultValue,\n                onChange,\n                onClear,\n                suffix = '',\n                placeholder,\n                className,\n                disabled,\n                readOnly,\n                suffixContainerClassName,\n                ...restProps\n            },\n            ref,\n        ) => {\n            const uncontrolled = value === undefined;\n\n            const inputRef = useRef<HTMLInputElement>(null);\n\n            const [stateValue, setStateValue] = useState(defaultValue || '');\n\n            const handleInputChange = useCallback<Required<InputProps>['onChange']>(\n                (event, payload) => {\n                    if (onChange) {\n                        onChange(event, payload);\n                    }\n\n                    if (uncontrolled) {\n                        setStateValue(payload.value);\n                    }\n                },\n                [onChange, uncontrolled],\n            );\n\n            const handleClear = useCallback<Required<InputProps>['onClear']>(\n                (event) => {\n                    if (uncontrolled) {\n                        setStateValue('');\n                    }\n\n                    if (onClear) {\n                        onClear(event);\n                    }\n                },\n                [onClear, uncontrolled],\n            );\n\n            const getPortalContainer = useCallback(\n                // TODO: Изменить сигнатуру getPortalContainer в Portal\n                () => (inputRef.current as HTMLElement).parentElement as HTMLElement,\n                [],\n            );\n\n            const visibleValue = uncontrolled ? stateValue : value;\n\n            return (\n                <Fragment>\n                    <Input\n                        ref={mergeRefs([ref, inputRef])}\n                        value={visibleValue}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        onChange={handleInputChange}\n                        onClear={handleClear}\n                        placeholder={placeholder}\n                        className={cn(className, {\n                            [styles.suffixVisible]: Boolean(visibleValue),\n                            [styles.hasSuffix]: suffix,\n                        })}\n                        {...restProps}\n                    />\n                    <Portal getPortalContainer={getPortalContainer}>\n                        <div className={cn(styles.suffixContainer, suffixContainerClassName)}>\n                            <span className={styles.spacer}>{visibleValue}</span>\n                            {suffix && (\n                                <div\n                                    className={cn(styles.suffix, {\n                                        [styles.disabled]: disabled,\n                                        [styles.readOnly]: readOnly,\n                                    })}\n                                >\n                                    {suffix}\n                                </div>\n                            )}\n                        </div>\n                    </Portal>\n                </Fragment>\n            );\n        },\n    );\n","var map = {\n\t\"./action-button/src/index.ts\": \"./packages/action-button/src/index.ts\",\n\t\"./alert/src/index.ts\": \"./packages/alert/src/index.ts\",\n\t\"./amount-input/src/index.ts\": \"./packages/amount-input/src/index.ts\",\n\t\"./amount/src/index.ts\": \"./packages/amount/src/index.ts\",\n\t\"./attach/src/index.ts\": \"./packages/attach/src/index.ts\",\n\t\"./backdrop/src/index.ts\": \"./packages/backdrop/src/index.ts\",\n\t\"./badge/src/index.ts\": \"./packages/badge/src/index.ts\",\n\t\"./bank-card/src/index.ts\": \"./packages/bank-card/src/index.ts\",\n\t\"./base-modal/src/index.ts\": \"./packages/base-modal/src/index.ts\",\n\t\"./bottom-sheet/src/index.ts\": \"./packages/bottom-sheet/src/index.ts\",\n\t\"./button/src/index.ts\": \"./packages/button/src/index.ts\",\n\t\"./calendar-input/src/index.ts\": \"./packages/calendar-input/src/index.ts\",\n\t\"./calendar-range/src/index.ts\": \"./packages/calendar-range/src/index.ts\",\n\t\"./calendar-with-skeleton/src/index.ts\": \"./packages/calendar-with-skeleton/src/index.ts\",\n\t\"./calendar/src/index.ts\": \"./packages/calendar/src/index.ts\",\n\t\"./card-image/src/index.ts\": \"./packages/card-image/src/index.ts\",\n\t\"./cdn-icon/src/index.ts\": \"./packages/cdn-icon/src/index.ts\",\n\t\"./chart/src/index.ts\": \"./packages/chart/src/index.ts\",\n\t\"./checkbox-group/src/index.ts\": \"./packages/checkbox-group/src/index.ts\",\n\t\"./checkbox/src/index.ts\": \"./packages/checkbox/src/index.ts\",\n\t\"./circular-progress-bar/src/index.ts\": \"./packages/circular-progress-bar/src/index.ts\",\n\t\"./code-input/src/index.ts\": \"./packages/code-input/src/index.ts\",\n\t\"./collapse/src/index.ts\": \"./packages/collapse/src/index.ts\",\n\t\"./comment/src/index.ts\": \"./packages/comment/src/index.ts\",\n\t\"./confirmation-v1/src/index.ts\": \"./packages/confirmation-v1/src/index.ts\",\n\t\"./confirmation/src/index.ts\": \"./packages/confirmation/src/index.ts\",\n\t\"./custom-button/src/index.ts\": \"./packages/custom-button/src/index.ts\",\n\t\"./date-input/src/index.ts\": \"./packages/date-input/src/index.ts\",\n\t\"./date-range-input/src/index.ts\": \"./packages/date-range-input/src/index.ts\",\n\t\"./date-time-input/src/index.ts\": \"./packages/date-time-input/src/index.ts\",\n\t\"./divider/src/index.ts\": \"./packages/divider/src/index.ts\",\n\t\"./drawer/src/index.ts\": \"./packages/drawer/src/index.ts\",\n\t\"./dropzone/src/index.ts\": \"./packages/dropzone/src/index.ts\",\n\t\"./file-upload-item/src/index.ts\": \"./packages/file-upload-item/src/index.ts\",\n\t\"./filter-tag/src/index.ts\": \"./packages/filter-tag/src/index.ts\",\n\t\"./form-control/src/index.ts\": \"./packages/form-control/src/index.ts\",\n\t\"./gallery/src/index.ts\": \"./packages/gallery/src/index.ts\",\n\t\"./gap/src/index.ts\": \"./packages/gap/src/index.ts\",\n\t\"./generic-wrapper/src/index.ts\": \"./packages/generic-wrapper/src/index.ts\",\n\t\"./global-store/src/index.ts\": \"./packages/global-store/src/index.ts\",\n\t\"./grid/src/index.ts\": \"./packages/grid/src/index.ts\",\n\t\"./hatching-progress-bar/src/index.ts\": \"./packages/hatching-progress-bar/src/index.ts\",\n\t\"./icon-button/src/index.ts\": \"./packages/icon-button/src/index.ts\",\n\t\"./indicator/src/index.ts\": \"./packages/indicator/src/index.ts\",\n\t\"./input-autocomplete/src/index.ts\": \"./packages/input-autocomplete/src/index.ts\",\n\t\"./input/src/index.ts\": \"./packages/input/src/index.ts\",\n\t\"./intl-phone-input/src/index.ts\": \"./packages/intl-phone-input/src/index.ts\",\n\t\"./keyboard-focusable/src/index.ts\": \"./packages/keyboard-focusable/src/index.ts\",\n\t\"./link/src/index.ts\": \"./packages/link/src/index.ts\",\n\t\"./list-header/src/index.ts\": \"./packages/list-header/src/index.ts\",\n\t\"./list/src/index.ts\": \"./packages/list/src/index.ts\",\n\t\"./loader/src/index.ts\": \"./packages/loader/src/index.ts\",\n\t\"./masked-input/src/index.ts\": \"./packages/masked-input/src/index.ts\",\n\t\"./modal/src/index.ts\": \"./packages/modal/src/index.ts\",\n\t\"./mq/src/index.ts\": \"./packages/mq/src/index.ts\",\n\t\"./navigation-bar/src/index.ts\": \"./packages/navigation-bar/src/index.ts\",\n\t\"./notification-manager/src/index.ts\": \"./packages/notification-manager/src/index.ts\",\n\t\"./notification/src/index.ts\": \"./packages/notification/src/index.ts\",\n\t\"./number-input/src/index.ts\": \"./packages/number-input/src/index.ts\",\n\t\"./pagination/src/index.ts\": \"./packages/pagination/src/index.ts\",\n\t\"./pass-code/src/index.ts\": \"./packages/pass-code/src/index.ts\",\n\t\"./password-input/src/index.ts\": \"./packages/password-input/src/index.ts\",\n\t\"./pattern-lock/src/index.ts\": \"./packages/pattern-lock/src/index.ts\",\n\t\"./phone-input/src/index.ts\": \"./packages/phone-input/src/index.ts\",\n\t\"./picker-button/src/index.ts\": \"./packages/picker-button/src/index.ts\",\n\t\"./plate/src/index.ts\": \"./packages/plate/src/index.ts\",\n\t\"./popover/src/index.ts\": \"./packages/popover/src/index.ts\",\n\t\"./portal/src/index.ts\": \"./packages/portal/src/index.ts\",\n\t\"./progress-bar/src/index.ts\": \"./packages/progress-bar/src/index.ts\",\n\t\"./pure-cell/src/index.ts\": \"./packages/pure-cell/src/index.ts\",\n\t\"./pure-input/src/index.ts\": \"./packages/pure-input/src/index.ts\",\n\t\"./radio-group/src/index.ts\": \"./packages/radio-group/src/index.ts\",\n\t\"./radio/src/index.ts\": \"./packages/radio/src/index.ts\",\n\t\"./scrollbar/src/index.ts\": \"./packages/scrollbar/src/index.ts\",\n\t\"./segmented-control/src/index.ts\": \"./packages/segmented-control/src/index.ts\",\n\t\"./select-with-tags/src/index.ts\": \"./packages/select-with-tags/src/index.ts\",\n\t\"./select/src/index.ts\": \"./packages/select/src/index.ts\",\n\t\"./side-panel/src/index.ts\": \"./packages/side-panel/src/index.ts\",\n\t\"./skeleton/src/index.ts\": \"./packages/skeleton/src/index.ts\",\n\t\"./slider-input/src/index.ts\": \"./packages/slider-input/src/index.ts\",\n\t\"./slider/src/index.ts\": \"./packages/slider/src/index.ts\",\n\t\"./sortable-list/src/index.ts\": \"./packages/sortable-list/src/index.ts\",\n\t\"./space/src/index.ts\": \"./packages/space/src/index.ts\",\n\t\"./spinner/src/index.ts\": \"./packages/spinner/src/index.ts\",\n\t\"./stack/src/index.ts\": \"./packages/stack/src/index.ts\",\n\t\"./status/src/index.ts\": \"./packages/status/src/index.ts\",\n\t\"./stepped-progress-bar/src/index.ts\": \"./packages/stepped-progress-bar/src/index.ts\",\n\t\"./steps/src/index.ts\": \"./packages/steps/src/index.ts\",\n\t\"./switch/src/index.ts\": \"./packages/switch/src/index.ts\",\n\t\"./system-message/src/index.ts\": \"./packages/system-message/src/index.ts\",\n\t\"./table/src/index.ts\": \"./packages/table/src/index.ts\",\n\t\"./tabs/src/index.ts\": \"./packages/tabs/src/index.ts\",\n\t\"./tag/src/index.ts\": \"./packages/tag/src/index.ts\",\n\t\"./textarea/src/index.ts\": \"./packages/textarea/src/index.ts\",\n\t\"./time-input/src/index.ts\": \"./packages/time-input/src/index.ts\",\n\t\"./toast-plate/src/index.ts\": \"./packages/toast-plate/src/index.ts\",\n\t\"./toast/src/index.ts\": \"./packages/toast/src/index.ts\",\n\t\"./tooltip/src/index.ts\": \"./packages/tooltip/src/index.ts\",\n\t\"./typography/src/index.ts\": \"./packages/typography/src/index.ts\",\n\t\"./underlay/src/index.ts\": \"./packages/underlay/src/index.ts\",\n\t\"./with-suffix/src/index.ts\": \"./packages/with-suffix/src/index.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./packages sync recursive ^\\\\.\\\\/(.*)\\\\/src\\\\/index.ts$\";"],"names":["colorStyles","default","inverted","static","ActionButton","forwardRef","_ref","ref","_cn","className","icon","children","href","_ref$size","size","_ref$view","view","_ref$type","type","iconWrapperClassName","disabled","loading","dataTestId","_ref$colors","colors","rest","_objectWithoutProperties","_excluded","componentRef","useRef","_useFocus","useFocus","focused","_slicedToArray","_useLoader","useLoader","timeout","timerId","_useState","useState","_useState2","loaderTimePassed","setLoaderTimePassed","showLoader","useEffect","current","window","clearTimeout","setTimeout","componentProps","cn","styles","_defineProperty","buttonChildren","_jsxs","Fragment","_jsx","role","iconWrapper","Loader","_objectSpread","mergeRefs","Alert","title","restProps","Plate","rounded","limitContentWidth","getAmountValueFromStr","str","minority","Math","round","Number","replace","SuffixInput","withSuffix","Input","AmountInput","_ref$value","value","_ref$integerLength","integerLength","_ref$minority","_ref$currency","currency","_ref$suffix","suffix","_ref$placeholder","placeholder","concat","getCurrencySymbol","_ref$integersOnly","integersOnly","_ref$positiveOnly","positiveOnly","_ref$bold","bold","focusedClassName","_ref$clear","clear","onChange","onClear","getFormattedAmount","useCallback","formatAmount","negativeSymbol","formatted","inputValue","setInputValue","currencySymbol","handleClear","event","_inputValue$split","split","_inputValue$split2","majorPart","minorPart","Boolean","minorPartAndCurrency","undefined","THINSP","suffixContainerClassName","inputClassName","handleChange","e","input","target","enteredValue","_enteredValue$split","RegExp","test","newFormattedValue","getFormattedValue","_enteredValue$split2","head","tail","includes","slice","toString","length","caret","selectionStart","requestAnimationFrame","selectionEnd","_input$value$split","_input$value$split2","notFormattedEnteredValueLength","diff","valueString","inputMode","pattern","Amount","_cn2","_ref$codeFormat","codeFormat","transparentMinor","rightAddons","_ref$showPlus","showPlus","_formatAmount","currencySeparator","defaultStyles","AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR","PureAmount","DefaultAmount","Pure","MULTIPLE_TEXTS","Attach","React","accept","_ref$buttonContent","buttonContent","_ref$buttonProps","buttonProps","fileClassName","noFileClassName","id","maxFilenameLength","multiple","_ref$noFileText","noFileText","progressBarPercent","defaultValue","uncontrolled","files","setFiles","inputRef","labelRef","buttonRef","handleClearClick","ev","statusTextContent","truncateFilename","filename","lengthOfPart","substr","name","map","file","join","pluralize","Button","leftAddons","getDefaultLeftAddon","IconComponent","PaperclipSIcon","PaperclipMIcon","onClick","handleButtonClick","click","focus","htmlFor","tabIndex","handleInputChange","filesArray","Array","from","KeyboardFocusable","targetRef","ProgressBar","defaultProps","Backdrop","_ref$open","open","_ref$invisible","invisible","_ref$timeout","onClose","_ref$transitionClassN","transitionClassNames","CSSTransition","unmountOnExit","classNames","in","appear","cardMask","accountNumberMask","getBrandIcon","arguments","validateCardNumber","cardNumber","digits","sum","i","cardNum","parseInt","startsWith","MirXxlIcon","VisaXxlIcon","MastercardLIcon","BankCard","_ref$bankLogo","bankLogo","AlfaBankLIcon","_ref$backgroundColor","backgroundColor","_ref$inputLabel","inputLabel","onUsePhoto","brandIcon","setBrandIcon","getMask","newValue","payload","renderRightAddons","CameraMIcon","style","MaskedInput","mask","block","label","labelClassName","filledClassName","BaseModalContext","parentRef","hasFooter","hasHeader","hasScroll","headerHighlighted","footerHighlighted","headerOffset","setHeaderOffset","contentRef","setHasHeader","setHasFooter","BaseModal","container","_ref$scrollHandler","scrollHandler","_ref$Backdrop","DefaultBackdrop","_ref$backdropProps","backdropProps","_ref$transitionProps","transitionProps","disableBackdropClick","_ref$disableAutoFocus","disableAutoFocus","_ref$disableFocusLock","disableFocusLock","_ref$disableEscapeKey","disableEscapeKeyDown","_ref$disableRestoreFo","disableRestoreFocus","_ref$disableBlockingS","disableBlockingScroll","_ref$keepMounted","keepMounted","contentClassName","wrapperClassName","onBackdropClick","onEscapeKeyDown","onMount","onUnmount","_ref$zIndex","zIndex","stackingOrder","_ref$componentRef","_ref$usePortal","usePortal","exited","setExited","_useState3","_useState4","setHasScroll","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setHeaderHighlighted","_useState11","_useState12","setFooterHighlighted","_useState13","_useState14","componentNodeRef","wrapperRef","scrollableNodeRef","contentNodeRef","restoreContainerStylesRef","mouseDownTarget","resizeObserverRef","checkToHasScrollBar","scrollExists","hasScrollbar","isExited","shouldRender","getContainer","document","body","addResizeHandle","observe","removeResizeHandle","_resizeObserverRef$cu","disconnect","node","handleScroll","isScrolledToTop","getBoundingClientRect","top","isScrolledToBottom","bottom","innerHeight","handleClose","reason","handleBackdropMouseDown","_event$target","clickedOnScrollbar","clientWidth","clientX","offset","getScrollbarSize","handleBackdropMouseUp","handleKeyDown","key","stopPropagation","getScrollHandler","handleEntered","isAppearing","addEventListener","onEntered","handleExited","removeEventListener","onExited","el","handleContainer","restoreContainerStyles","ResizeObserver","ResizeObserverPolyfill","contextValue","useMemo","renderContent","Stack","computedZIndex","Provider","FocusLock","autoFocus","returnFocus","onKeyDown","onMouseDown","onMouseUp","Portal","getPortalContainer","immediateMount","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","this","ownerDocument","querySelectorAll","item","scrollTop","scrollHeight","offsetHeight","clientHeight","cachedSize","scrollDiv","createElement","width","height","position","overflow","appendChild","scrollbarSize","offsetWidth","removeChild","modalRestoreStyles","getModalStore","getRestoreStyles","index","findIndex","existingStyles","modals","splice","forEach","setProperty","removeProperty","find","containerStyles","isOverflowing","innerWidth","documentElement","push","paddingRight","getPaddingRight","getComputedStyle","parent","parentElement","scrollContainer","nodeName","overflowY","LOADER_MIN_DISPLAY_INTERVAL","_ref$block","spinnerClassName","_ref$loading","_ref$nowrap","nowrap","_ref$Component","Component","iconOnly","component","_ref2","_ref2$type","restButtonProps","_excluded2","Spinner","getDataTestId","visible","loader","handleClick","preventDefault","hrefProps","rel","CalendarInput","_calendarProps$respon","popoverClassName","_ref$defaultOpen","defaultOpen","defaultMonth","_ref$defaultValue","_ref$calendarPosition","calendarPosition","_ref$calendarProps","calendarProps","_ref$minDate","minDate","_ref$maxDate","maxDate","_ref$offDays","offDays","_ref$events","events","preventFlip","_ref$mobileMode","mobileMode","_ref$wrapperRef","_ref$onChange","onInputChange","onCalendarChange","readOnly","_ref$Calendar","Calendar","DefaultCalendar","_ref$popoverPosition","popoverPosition","zIndexPopover","useAnchorWidth","error","calendarResponsive","responsive","shouldRenderNative","SUPPORTS_INPUT_TYPE_DATE","shouldRenderOnlyInput","shouldRenderStatic","shouldRenderPopover","setOpen","calendarValue","parseDateString","getTime","checkInputValueIsValid","newInputValue","dateValue","isCompleteDateInput","dateInLimits","inputDisabled","inputWrapperRef","calendarRef","tagName","handleFocus","handleBlur","relatedTarget","activeElement","contains","handleInputKeyDown","changeHandler","newDate","initiator","shouldChange","date","handleCalendarChange","formatDate","Date","handleCalendarWrapperMouseDown","handleCalendarClose","renderCalendar","onFocus","onBlur","DateInput","CalendarMIcon","Popover","anchorElement","popperClassName","withTransition","CalendarInputDesktop","props","CalendarInputMobile","CalendarMobile","CalendarInputResponsive","_ref$breakpoint","breakpoint","_useMedia","useMedia","DATE_FORMAT","NATIVE_DATE_FORMAT","DATE_MASK","IS_BROWSER","isInputDateSupported","dateFormat","format","parse","setAttribute","isValidInputValue","some","offDay","isSameDay","CalendarWithSkeleton","_ref$calendarVisible","calendarVisible","_ref$animate","animate","skeletonProps","Skeleton","ASPECT_RATIO","DEFAULT_WIDTH","DEFAULT_BASE_URL","CardImage","cardId","_ref$layers","layers","_ref$width","_ref$baseUrl","baseUrl","_ref$rounded","alt","onLoad","loaded","setLoaded","image","prevLoaded","_image$current","complete","cardImageUrl","cardImageUrl2x","src","srcSet","handleLoadedImage","CDNIcon","color","setIcon","xhr","XMLHttpRequest","send","onload","svg","response","abort","dangerouslySetInnerHTML","__html","CheckboxGroup","_ref$direction","direction","hint","_ref$disabled","errorMessage","Children","child","isValidElement","renderCheckbox","_child$props","checked","childClassName","cloneElement","renderTag","_child$props2","clone","autoComplete","Checkbox","boxClassName","_ref$align","align","addons","inactive","_ref$indeterminate","indeterminate","_ref$hiddenInput","hiddenInput","CheckmarkCompactMIcon","SIZES","xs","m","l","xl","xxl","STROKE","VIEW_TITLE","VIEW_TEXT","CircularProgressBar","_ref$title","titleComplete","subtitle","_ref$contentColor","contentColor","subtitleComplete","_ref$stroke","stroke","fillComplete","Icon","IconComplete","iconComplete","completeTextColor","_ref$completeIconColo","completeIconColor","memorized","widthSVG","heightSVG","center","radius","circumference","PI","progress","min","max","strokeDasharray","toFixed","strokeDashoffset","isComplete","isCompleteTextColor","titleContent","subtitleContent","renderTitle","renderTitleString","Typography","tag","font","weight","renderSubTitle","viewBox","xmlns","cx","cy","r","strokeWidth","transform","renderIcon","_ref$compact","compact","select","CodeInput","_ref$fields","fields","_ref$initialValues","initialValues","_ref$clearCodeOnError","clearCodeOnError","onErrorAnimationEnd","onComplete","inputRefs","fill","createRef","values","setValues","clearErrorTimerId","focusOnInput","blur","unselect","setSelectionRange","reset","useImperativeHandle","triggerChange","argumentValues","valid","nextRef","newValues","_toConsumableArray","nextIndex","cursor","handleChangeFromEvent","validity","_ref3","prevIndex","prevRef","curtRef","_navigator","_navigator$credential","ac","navigator","credentials","get","options","otp","transport","signal","AbortController","then","res","code","catch","err","console","onAnimationEnd","handleErrorAnimationEnd","prevState","_","Collapse","expanded","collapsedLabel","expandedLabel","expandedContentClassName","onTransitionEnd","onExpandedChange","_ref$defaultExpanded","defaultExpanded","contentCaseRef","expandedState","setExpandedState","isExpanded","recalculate","contentHeight","handleTransitionEnd","handleExpandedChange","handleResize","debounce","observer","ToggledIcon","ArrowUpMBlackIcon","ArrowDownMBlackIcon","Link","pseudo","Comment","rowLimit","textClassName","CustomButton","_ref$stateType","stateType","background","buttonClassName","propValue","setShouldRenderNative","setValue","dots","match","formattedValue","isValid","handleNativeInputChange","dateFnsFormat","dateFnsIsValid","parseTimestampToDate","timestamp","year","getFullYear","month","getMonth","day","getDate","DateRangeInput","picker","iconRef","_usePeriod","usePeriod","onPeriodChange","handlePeriodChange","to","dateFrom","dateTo","filter","selectedFrom","selectedTo","updatePeriod","resetPeriod","setStart","setEnd","getDates","val","dateArr","v","trim","setCalendarPeriod","prevValue","useDidUpdateEffect","newPropValue","dates","handleInputWrapperFocus","_calendarRef$current","_inputRef$current","_iconRef$current","_dateArr$","_dateArr$2","hyphen","_getDates","IconButton","handleIconButtonClick","activeMonth","startOfMonth","DateRangeInputDesktop","DateRangeInputMobile","DateRangeInputResponsive","inputValueArr","time","isValidTimeFormat","timeArr","hours","mins","getDateWithoutTime","valueArr","_date2","setFullYear","setHours","getFullDateTime","_date3","fullDate","setMinutes","setSeconds","setMilliseconds","DateTimeInput","setTimeToDate","dateWithTime","addTimeToDate","handleMobileCalendarClose","colon","comma","DateTimeInputDesktop","DateTimeInputMobile","DateTimeInputResponsive","Divider","ANIMATION_DURATION","DrawerContext","enter","enterActive","appearActive","enterDone","appearDone","exit","exitActive","exitDone","contentProps","Drawer","_cn3","contentTransitionProps","_ref$nativeScrollbar","nativeScrollbar","_ref$placement","placement","scrollbarProps","isRightPlacement","isLeftPlacement","enterClassName","exitClassName","renderWithNativeScrollbar","renderWithCustomScrollbar","Scrollbar","Overlay","_ref$text","text","_ref$visible","ContainerMIcon","preventAndStopEvent","Dropzone","_ref$error","overlayVisible","_ref$Overlay","DefaultOverlay","onDragEnter","onDragLeave","onDragOver","onDrop","dragOver","setDragOver","dragCounter","handleDragOver","handleDragEnter","handleDragLeave","handleDrop","dataTransfer","clearData","humanFileSize","units","humanSize","factor","FileUploadItem","_ref$id","_ref$name","_ref$icon","fileIcon","extension","getExtension","toLowerCase","pop","DocumentImageMIcon","DocumentDocMIcon","DocumentPdfMIcon","DocumentTxtMIcon","DocumentUnknownMIcon","uploadDate","downloadLink","download","uploadStatus","_ref$uploadPercent","uploadPercent","showDelete","showRestore","onDelete","onDownload","onRestore","disableButtons","showMeta","showDownload","toLocaleLowerCase","ClockMIcon","AlertCircleMIcon","CheckmarkCircleMIcon","renderInfoSection","shouldShownError","errorContent","handleRestore","PointerDownSIcon","handleDownload","CrossSIcon","handleDelete","FilterTag","_ref$variant","variant","shape","_ref$onClear","_ref$showClear","showClear","valueRef","isKeyBoardEvent","shapeClassName","ChevronDownCompactSIcon","ChevronDownMIcon","CrossCircleSIcon","CrossCircleMIcon","FormControl","fieldClassName","inputWrapperClassName","addonsClassName","filled","_ref$labelView","labelView","bottomAddons","inner","hasError","Gap","_ref$tag","GenericWrapper","padding","alignItems","justifyContent","_ref$column","column","_ref$grow","grow","paddingStyles","right","left","alignmentStyles","justifyContentStyles","growStyles","columnsStyles","ModalStore","_createClass","_this","_classCallCheck","restoreStyles","GlobalStore","modalStore","getCoreComponentsStore","coreComponentsStore","HatchingProgressBar","hatchValue","_ref$alignIcon","alignIcon","borderStyles","border","outlineColor","outlineWidth","outlineStyle","Indicator","rawValue","getSize","showContent","minWidth","AutocompleteField","Arrow","_ref$Input","DefaultInput","success","onInput","_ref$inputProps","inputProps","innerProps","InputAutocompleteDesktop","_ref$OptionsList","OptionsList","DefaultOptionsList","_ref$Optgroup","Optgroup","DefaultOptgroup","_ref$Option","Option","DefaultOption","_ref$closeOnSelect","closeOnSelect","BaseSelect","autocomplete","Field","fieldProps","AutocompleteMobileField","valueRenderer","toggleMenu","setSelectedItems","selectedMultiple","setFocused","focusVisible","showLabel","SELECTED","InputAutocompleteMobile","_ref$bottomSheetProps","bottomSheetProps","_ref$bottomSheetHeade","bottomSheetHeaderAddonsProps","_ref$filter","_ref$Arrow","openProp","onFilter","onOpen","onCancel","onClearFilter","continueButtonProps","cancelButtonProps","selected","bottomSheetInputRef","setBottomSheetVisibility","isOpen","handleOptionsListTouchMove","throttle","handleApply","handleCancel","handleInputFocus","SelectMobile","handleOpen","_bottomSheetInputRef$","getBottomSheetProps","CoreInput","actionButton","initialHeight","containerProps","onTouchMove","optionsListProps","showFooter","InputAutocompleteResponsive","onAnimationStart","stateValue","setStateValue","autofilled","setAutofilled","clearButtonVisible","hasInnerLabel","handleInputBlur","handleAnimationStart","animationName","clearIcon","Badge","iconColor","content","ExclamationCircleMIcon","_ref$pseudo","_ref$underline","underline","linkRef","viewClassName","ListHeader","description","_ref$filled","Item","caption","_useContext","useContext","ListContext","orderedList","markerType","colorMarker","reversed","_useContext$index","_useContext$start","start","markerLowerAlpha","itemClassNames","isDisc","marker","monospaceNumbers","displayName","isItem","isItemElement","obj","List","Object","assign","ListComponent","alphaMarker","decimalMarker","listClassNames","listPresets","mobile","PLACEHOLDER_CHAR","_ref$keepCharPosition","keepCharPositions","onBeforeDisplay","textMask","textHidden","setTextHidden","update","createTextMaskInputElement","inputElement","pipe","guide","showMask","placeholderChar","currentCaretPosition","previousConformedValue","ModalResponsiveComponent","Modal","ModalResponsive","Header","Content","Footer","Closer","fixedPosition","fullscreen","componentSize","modalRef","baseModalProps","desktopStyles","transitions","querySelector","marginTop","mobileStyles","ResponsiveContext","ModalContext","flex","_useContext2","sticky","_ref$layout","layout","gap","layoutStyles","_ref$hasCloser","hasCloser","hasContent","NavigationBar","scrollableParentRef","SUPPORTS_TOUCH","isPointerEventsSupported","isTouchSupported","Mq","_ref$query","query","touch","onMatchChange","_useMatchMedia","useMatchMedia","queryMatches","setMatches","useLayoutEffect_SAFE_FOR_SSR","mql","getMatchMedia","handleMatchChange","addListener","removeListener","releaseMatchMedia","pool","refCounters","queryProp","MqList","matchMedia","maxTouchPoints","msMaxTouchPoints","BackArrowAddon","_ref$textOpacity","textOpacity","htmlAttributes","ArrowLeftMediumMIcon","ArrowLeftMIcon","opacity","CrossHeavyMIcon","CrossMIcon","_cn4","addonClassName","closerClassName","bottomAddonsClassName","_ref$trim","_ref$titleSize","titleSize","hasBackButton","backButtonClassName","imageUrl","closerIcon","onBack","setScrollTop","titleMargin","setTitleMargin","bottomContentRef","headerRef","mainLinePaddingTopRef","leftAddonsRef","rightAddonsRef","compactTitle","hasLeftPart","hasRightPart","withAnimation","showContentOnBot","showStaticContentOnTop","showStaticContentOnBot","showAnimatedContentOnTop","showAnimatedContentOnBot","headerPaddingTop","_leftAddonsRef$curren","_rightAddonsRef$curre","leftAddonsWidth","rightAddonsWidth","marginSize","abs","shouldAddLeftMargin","prev","newState","divElement","paddingTop","args","extraClassName","hidden","visibility","backgroundImage","renderBackButton","ADDONS_HEIGHT","marginLeft","marginRight","renderCloser","Notification","element","onRemoveNotification","_element$props","onCloseTimeout","handleCloseTimeout","notificationProps","CSS_TRANSITION_CLASS_NAMES","NotificationManager","notifications","_ref$style","TransitionGroup","notificationClassNameSelector","actionSectionClassName","_ref$offset","_ref$autoCloseDelay","autoCloseDelay","onMouseEnter","onMouseLeave","onClickOutside","notificationRef","autoCloseTimeoutRef","closeTimeoutRef","isClosing","setIsClosing","startAutoCloseTimer","stopAutoCloseTimer","elementClosest","handleMouseEnter","handleMouseLeave","handleOutsideClick","isTargetNotification","closest","useClickOutside","cb","handler","swipeableHandlers","useSwipeable","onSwiped","dir","delta","Wrapper","ToastPlate","SIGNS","SEPARATORS","createSeparatorsRegExp","getAllowedValue","fractionLength","separator","sign","allowSigns","testedValue","getNumberRegExp","reStr","MAX_SAFE_INTEGER","_testedValue$split$ma","_testedValue$split$ma2","NumberInput","_ref$allowSigns","_ref$separator","getNumberValueFromStr","parseFloat","visibleValue","valueBlur","allowedValue","restoreCaret","positionCursor","isEndPosition","enteredSign","enteredSeparator","altKey","metaKey","ctrlKey","hasSeparator","indexOf","Tag","CoreTag","DefaultView","_ref$sidePadding","sidePadding","_ref$activePadding","activePadding","pagesCount","currentPageIndex","_ref$onPageChange","onPageChange","maxHalfCount","maxElementsCount","itemsFit","elementsCount","getPageIndex","elementIndex","lastIndex","reverseIndex","reverseElementIndex","hasCollapsedItems","computedIndex","pageIndex","active","PerPageView","Pagination","_ref$currentPageIndex","_ref$hideArrows","hideArrows","handlePageClick","shouldRenderPrevArrow","shouldRenderNextArrow","handlePrevPageClick","ChevronBackMIcon","handleNextPageClick","ChevronForwardMIcon","InputProgress","maxCodeLength","codeLength","CELLS","KeyPad","digit","KeyPadButton","BackspaceXxlIcon","PassCode","_ref$maxCodeLength","passwordLen","PasswordInput","onPasswordVisibleChange","passwordVisible","statePasswordVisible","setStatePasswordVisible","isPasswordVisible","EyeMIcon","EyeOffMIcon","getDefaultObserveTarget","getColorByToken","token","getPropertyValue","COMMON_SIZES","getSizes","lineWidth","nodeRing","nodeCore","elementSizes","nodeRadius","getTheme","dimens","baseColors","primary","OBSERVABLE_TOKENS","bg","ringBg","THEME_STATE","accent","selectedRingBg","PatternLock","_ref$observeTokens","observeTokens","_ref$observerParams","observerParams","_ref$justifyNodes","justifyNodes","_ref$forgotCodeBtnTex","forgotCodeBtnText","_ref$showForgotCodeBt","showForgotCodeBtn","onForgotBtnClick","_ref$extraBounds","extraBounds","DEFAULT_EXTRA_BOUNDS","params","setParams","_getSizes","theme","styleObserver","_observerParams$optio","OBSERVE_OPTIONS","_observerParams$getTa","getTarget","MutationObserver","_getSizes2","_styleObserver","ReactCanvasPatternLock","rows","cols","childList","attributes","characterData","subtree","ACCENT_INITIAL","ACCENT_SUCCESS","ACCENT_FAILURE","PRIMARY","BG","RING_BG_INITIAL","SELECTED_RING_BG_INITIAL","SELECTED_RING_BG_SUCCESS","SELECTED_RING_BG_FAILURE","INITIAL","SUCCESS","FAILURE","deleteFormatting","phone","setCaretPosition","PhoneInput","_ref$clearableCountry","clearableCountryCode","handleBeforeDisplay","conformedValue","config","previousValueWithoutFormatting","currentValueWithoutFormatting","conformToMask","insertedNumber","getInsertedNumber","countryPrefix","SIDE_POSITIONS","PickerButtonDesktop","optionClassName","showArrow","isSideGap","optionProps","Checkmark","DefaultField","buttonSize","buttonVariant","_ref$buttonSize","_ref$buttonVariant","_ref$showArrow","getIcon","MoreSIcon","MoreMIcon","restInnerProps","PickerButtonMobile","stickyHeader","PickerButtonResponsive","onScroll","footer","swipeable","option","BaseOption","DEFAULT_TRANSITION","availableHieghtModifier","enabled","phase","requires","fn","_ref$state","state","modifiersData","popper","elements","maxSize","maxHeight","_ref2$transition","transition","_ref2$offset","_ref2$withArrow","withArrow","_ref2$withTransition","_ref2$position","arrowClassName","_ref2$transitionDurat","transitionDuration","_ref2$zIndex","fallbackPlacements","_ref2$preventOverflow","preventOverflow","_ref2$availableHeight","availableHeight","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","arrowShift","setArrowShift","updatePopperRef","popperRef","innerRef","popperModifiers","modifiers","mainAxis","_usePopper","usePopper","popperStyles","updatePopper","updatePopoverWidth","_updatePopperRef$curr","call","_referenceElement$get","_popperStyles$popper","arrow","nodeRef","onEntering","_transition$onEnterin","getDefaultPortalContainer","createPortalContainer","portalContainer","setRef","_ref$getPortalContain","_ref$immediateMount","mountNode","setMountNode","createPortal","translateX","Addon","_ref$verticalAlign","verticalAlign","_ref$addonPadding","addonPadding","_ref$weight","_ref$textView","textView","_ref$color","_ref$minorUnits","minorUnits","CoreAmount","AmountTitle","Category","categoryName","categoryPercent","PureCellContext","_ref$footerPadding","footerPadding","FooterButton","FooterText","Graphics","Main","isReverse","_useContext$direction","Text","titleWeight","titleColor","valueColor","PureCellComponent","_addClasses","_ref$horizontalPaddin","horizontalPadding","_ref$verticalPadding","verticalPadding","cellRef","addClasses","PureCell","ExtraSubtitle","PureInput","RadioGroup","isChecked","childValue","renderRadio","Radio","circleClassName","req","require","packages","keys","reduce","acc","getComponent","packageName","componentName","subComponentName","colorStylesMap","wrapper","heightAutoObserverEl","heightAutoObserverWrapperEl","contentWrapper","contentEl","vertical","horizontal","hover","track","scrollbar","dragging","_ref$scrollableNodePr","scrollableNodeProps","_ref$contentNodeProps","contentNodeProps","_ref$autoHide","autoHide","_ref$forceVisible","forceVisible","_ref$autoHideTimeout","autoHideTimeout","_ref$clickOnTrack","clickOnTrack","_ref$horizontalAutoSt","horizontalAutoStretch","_ref$widthPropName","widthPropName","elRef","maskNodeRef","instance","SimpleBar","scrollbarMinSize","scrollableNode","contentNode","unMount","mutationObserver","rootNode","maskNode","setMinWidth","display","contentRect","newWidth","ceil","cancel","SegmentedControlContext","createContext","SegmentedControl","selectedId","_ref$shape","defaultChildren","selectedBoxRef","selectedSegmentPosition","isPositionFounded","setSelectedBoxStyles","segments","offsetLeft","setSelectedBoxStylesRef","Segment","segmentRef","getElementSize","property","isNaN","getTagWidth","tagMarginLeft","tagMarginRight","_ref$option","handleDeleteTag","CrossCompactMIcon","TagList","_ref$selectedMultiple","collapseTagList","moveInputToNewLine","transformCollapsedTagText","transformTagText","isPopoverOpen","handleUpdatePopover","_ref$Tag","DefaultTag","isShowMoreEnabled","setShowMoreEnabled","visibleElements","setVisibleElements","inputOnNewLine","setInputOnNewLine","contentWrapperRef","_useFocus3","inputFocusVisible","useLayoutEffect","totalVisibleElements","calculateTotalElementsPerRow","containerWidth","inputMinWidth","tags","getElementsByTagName","latestTag","getAttribute","totalTagsWidth","inputTextIsOverflow","scrollWidth","handleMouseDown","eventTarget","lastSelectedTag","toggleShowMoreLessButton","collapseTagTitle","shouldAddVerticalMargin","defaultMatch","filterOptions","math","optionsIsGroupShapes","isGroup","group","matchedOptions","SelectWithTags","DefaultArrow","_ref$autocomplete","_ref$allowUnselect","allowUnselect","_ref$collapseTagList","_ref$moveInputToNewLi","controlled","selectedTags","setSelectedTags","setPopoverOpen","updatePopover","resetValue","deletedKey","filteredOptions","isAutocomplete","showEmptyOptionsList","_ref$selectedDraft","selectedDraft","OptionsListWithApply","defaultGetOptionProps","getOptionProps","_ref$flatOptions","flatOptions","_ref$onApply","onApply","_ref$onClose","_ref$visibleOptions","visibleOptions","DEFAULT_VISIBLE_OPTIONS","_ref$Footer","DefaultFooter","SELECT_ALL_KEY","selectAllOption","useSelectWithApply","_ref$optionsListProps","_ref$showSelectAll","showSelectAll","_useMemo","processOptions","selectedOptions","setSelectedDraft","selectedOptionsRef","restArgs","initiatorSelected","o","memoizedOptions","BaseSelectMobile","optionsListClassName","optionGroupClassName","_ref$options","_ref$multiple","_ref$circularNavigati","circularNavigation","_ref$optionsListWidth","optionsListWidth","_ref$selected","_ref$optionsSize","optionsSize","_ref$fieldProps","_ref$optionProps","_ref$Field","isBottomSheet","_ref$showEmptyOptions","rootRef","fieldRef","listRef","initiatorRef","itemToString","scrollableContainerRef","useMultipleSelectionProps","onSelectedItemsChange","changes","_changes$selectedItem","selectedItems","stateReducer","actionAndChanges","useMultipleSelection","_useMultipleSelection","addSelectedItem","removeSelectedItem","getDropdownProps","_useCombobox","useCombobox","items","defaultHighlightedIndex","onIsOpenChange","selectedItem","alreadySelected","allowRemove","highlightedIndex","getMenuProps","getInputProps","getItemProps","getComboboxProps","getLabelProps","openMenu","menuProps","suppressRefError","highlighted","renderOptionsList","handleFieldKeyDown","handleFieldFocus","handleFieldClick","renderValue","BottomSheet","containerClassName","ModalMobile","VirtualOptionsList","_ref$highlightedIndex","emptyPlaceholder","header","nativeScrollbarProp","scrollbarRef","visibleOptionsInvalidateKey","setVisibleOptionsInvalidateKey","prevHighlightedIndex","usePrevious","rowVirtualizer","useVirtual","overscan","scrollToIndex","virtualItems","notDisabled","firstNonDisabled","lastNonDisabled","lastIndexOf","useVisibleOptions","invalidate","styleTargetRef","groupStartIndexes","currentIndex","renderList","virtualRow","measureRef","totalSize","DefaultVirtualOptionsList","applyProps","SelectModalMobile","BaseCheckmark","checkmarkClassNames","CheckmarkMIcon","_ref$Checkmark","_ref$checkmarkPositio","checkmarkPosition","_ref$mobile","_option$showCheckMark","showCheckMark","isTextContent","renderCheckmark","useSelectWithLoading","renderOption","DEBOUNCE_TIMEOUT","actions","fetchOptionsStart","fetchOptionsBreak","fetchOptionsSuccess","setIsOpened","opened","setQueryString","qs","useLazyLoading","_ref$limit","limit","_ref$initialOffset","initialOffset","optionsFetcher","_ref$skeleton","skeleton","initialOptions","lazyLoadingInitialState","allOptionsLoaded","queryString","_useReducer","useReducer","lazyLoadingReducer","action","hasMore","_useReducer2","_useReducer2$","dispatch","abortFetchingOptionsRef","fetchNextOffsetOptions","Promise","resolve","reject","_abortFetchingOptions","_listRef$current","IntersectionObserver","isIntersecting","root","optionList","lastOption","_payload$open","_abortFetchingOptions2","fetchNextOptionsRef","fetchNextOptionsTimerRef","onQueryStringChange","_abortFetchingOptions3","_listRef$current2","scrollTo","_fetchNextOptionsRef$","skeletonOptions","optionsProps","SidePanelDesktopComponent","_ref$contentTransitio","responsiveContext","enterCn","exitCn","renderWithContext","SidePanelDesktop","ContentDesktop","FooterDesktop","ContentMobile","FooterMobile","SidePanelMobileComponent","SidePanelMobile","createResponsive","desktop","ResponsiveChild","Child","SidePanelResponsiveComponent","_ref2$breakpoint","_ref2$size","defaultMatchMediaValue","getDefaultValue","isClient","isDesktop","SidePanelResponsive","_ref2$view","SliderInput","sliderClassName","stepsClassName","_ref$min","_ref$max","_ref$step","step","_ref$steps","steps","_ref$sliderValue","sliderValue","info","onSliderChange","_ref$customInputProps","customInputProps","pips","range","getValidInputValue","number","handleSliderChange","Slider","stepLabel","valueTo","_ref$behaviour","behaviour","_ref$range","sliderRef","busyRef","hasValueTo","getSlider","_sliderRef$current","noUiSlider","slider","connect","on","updateOptions","set","off","sliderValues","SortableItem","activatorNode","controlPosition","controlPadding","isDragOverlay","_useSortable","useSortable","listeners","setNodeRef","setActivatorNodeRef","isDragging","isCellActivator","isControlActivator","renderControl","hasRightPadding","hasLeftPadding","DragMIcon","CSS","restrictToParentElement","containerNodeRect","draggingNodeRect","restrictToBoundingRect","rect","boundingRect","y","x","restrictToVerticalAxis","DEFAULT_ANNOUNCEMENTS","onDragStart","over","onDragEnd","onDragCancel","SortableList","_ref4","itemClassName","_ref4$controlPosition","renderItem","borderRadius","_ref4$activatorNode","_ref4$view","_ref4$announcements","announcements","_ref4$screenReaderIns","screenReaderInstructions","_React$useState","_React$useState2","activeId","setActiveId","sensors","useSensors","useSensor","KeyboardSensor","TouchSensor","MouseSensor","commonClassName","sortableItemClassName","renderSortableItem","_ref5","DndContext","collisionDetection","closestCenter","handleDragStart","handleDragEnd","oldIndex","newIndex","arrayMove","accessibility","draggable","SortableContext","strategy","verticalListSortingStrategy","getPaddingClassName","DragOverlay","renderDragOverlay","activeItem","horizontalSize","verticalSize","divider","wrap","marginBottom","paddingBottom","SpaceSizes","Space","_classNames","_props$align","_props$direction","_props$size","_props$wrap","_props$divider","_props$fullWidth","fullWidth","_React$useMemo","isArray","getNumberSize","_React$useMemo2","childNodes","directionClassName","alignClassName","nodes","flexWrap","CONFIG","sizeProp","uniqId","useId","_CONFIG$sizeProp","xStart","xEnd","topGradientId","bottomGradientId","x1","stopOpacity","stopColor","d","strokeLinecap","previousValue","StackingContext","currentValue","nextValue","FOCUSED","DEFAULT","POPOVER","MODAL","TOAST","Status","StepBar","memo","isDone","classNameStep","SteppedProgressBar","maxStep","validMaxSteps","isViewString","bar","StepIndicator","Step","stepNumber","isSelected","ordered","isPositive","isError","isWarning","isWaiting","customStepIndicator","isStepCompleted","interactive","isVerticalAlign","isNotLastStep","stepRef","renderDash","getStepIndicator","handleTextClick","Steps","_ref$defaultActiveSte","defaultActiveStep","activeStepProp","activeStep","_ref$isMarkCompletedS","isMarkCompletedSteps","_ref$isVerticalAlign","_ref$ordered","_ref$interactive","checkIsStepDisabled","checkIsStepError","checkIsStepWarning","checkIsStepWaiting","checkIsStepPositive","checkIsStepCustom","setActiveStep","stepsLength","handleStepClick","isInteractive","Switch","_ref$reversed","_ref$checked","SystemMessageContext","SystemMessage","fullHeight","renderChildrenWithFullHeight","renderCloned","childrenArray","childrenCount","idx","isLastElement","isControlsElement","Caption","Controls","directionProp","isMultipleElements","isColumn","Graphic","Subtitle","Title","SystemMessageResponsive","createCompound","functionComponent","SystemMessageResponsiveComponent","childrenClassName","childrenRef","tagRef","tagProps","PseudoTextArea","pseudoTextareaClassName","maxLength","getDefaultCounterText","textLength","Textarea","_ref$autoComplete","_ref$autosize","autosize","textareaClassName","onHeightChange","maxRows","minRows","_ref$resize","resize","_ref$rows","_ref$showCounter","showCounter","_ref$getCounterText","getCounterText","_ref$allowOverflow","allowOverflow","textareaRef","pseudoTextareaRef","scrollPosition","setScrollPosition","hasOverflow","pseudoNode","getValueLength","textareaClassNameCalc","textarea","textareaProps","handleTextareaBlur","handleTextareaFocus","handleTextareaChange","handleTeaxtareaScroll","getBottomAddons","counterIsVisible","TextareaAutosize","TimeInput","formattedValueArr","isCompleteTimeInput","iconDefaultComponents","negative","positive","attention","titleClassName","badge","getBadgeIcons","closerWrapperClassName","needRenderLeftAddons","iconComponents","closeButtonWrapper","DefaultToastPlate","ToastPlateComponent","Toast","bottomOffset","_ref$ToastPlate","onTouchStart","plateRef","prevOpen","startTimer","stopTimer","handleTouchStart","handleClickOutside","TooltipDesktop","_ref$trigger","trigger","_ref$onCloseDelay","onCloseDelay","_ref$onOpenDelay","onOpenDelay","forcedOpen","targetClassName","_ref$targetRef","_ref$preventOverflow","_ref$availableHeight","_ref$anchor","anchor","setVisible","setTarget","timer","show","close","clickedOutside","handleBodyClick","onClickProps","handleTargetClick","toggle","onHoverProps","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","getTargetProps","getContentProps","TooltipResponsive","_ref$defaultMatch","_ref$actionButtonTitl","actionButtonTitle","_useControlled","useControlled","controlledValue","isControlled","uncontrolledValue","setUncontrolledValue","_useControlled2","openValue","setOpenValueIfUncontrolled","Underlay","shadow","borderSize","borderColor","paddingSize","webpackContext","webpackContextResolve","__webpack_require__","Error","webpackContextKeys","module","exports"],"sourceRoot":""}