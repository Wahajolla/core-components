"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[5566],{"./packages/input-autocomplete/src/Component.desktop.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$:function(){return InputAutocompleteDesktop}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),shared=__webpack_require__("./dist/select/modern/shared/index.js"),defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),desktop=__webpack_require__("./dist/input/modern/desktop/index.js"),index_module_arrow="arrow_RWc1Z",index_module_error="error_HXxNm",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),AutocompleteField=function AutocompleteField(_ref){var label=_ref.label,_ref$labelView=_ref.labelView,labelView=void 0===_ref$labelView?"inner":_ref$labelView,placeholder=_ref.placeholder,size=_ref.size,Arrow=_ref.Arrow,_ref$Input=_ref.Input,Input=void 0===_ref$Input?desktop.InputDesktop:_ref$Input,value=_ref.value,error=_ref.error,success=_ref.success,hint=_ref.hint,disabled=_ref.disabled,readOnly=_ref.readOnly,onInput=_ref.onInput,_ref$inputProps=_ref.inputProps,inputProps=void 0===_ref$inputProps?{}:_ref$inputProps,innerProps=_ref.innerProps,inputRef=(0,react.useRef)(null),onClick=innerProps.onClick,onFocus=innerProps.onFocus,inputDisabled=disabled||readOnly,handleClick=(0,react.useCallback)((function(event){onClick&&onClick(event),inputRef.current&&inputRef.current.focus()}),[onClick]);return(0,jsx_runtime.jsx)(Input,(0,objectSpread2.Z)((0,objectSpread2.Z)((0,objectSpread2.Z)({},inputProps),innerProps),{},{wrapperRef:(0,react_merge_refs_esm.Z)([innerProps.ref,inputProps.wrapperRef]),ref:(0,react_merge_refs_esm.Z)([inputRef,inputProps.ref]),disabled:disabled,readOnly:readOnly,block:!0,label:label,labelView:labelView,placeholder:placeholder,size:size,error:error,success:success,hint:hint,onChange:onInput,onClick:inputDisabled?void 0:handleClick,onFocus:inputDisabled?void 0:onFocus,autoComplete:"off",value:value,rightAddons:(Arrow||inputProps.rightAddons)&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[inputProps.rightAddons,Arrow&&(0,jsx_runtime.jsx)("span",{className:classnames_default()(index_module_arrow,(0,defineProperty.Z)({},index_module_error,error)),children:Arrow})]})}))};try{AutocompleteField.displayName="AutocompleteField",AutocompleteField.__docgenInfo={description:"",displayName:"AutocompleteField",props:{className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},selected:{defaultValue:null,description:"Выбранный пункт",name:"selected",required:!1,type:{name:"OptionShape"}},selectedMultiple:{defaultValue:null,description:"Список выбранных пунктов",name:"selectedMultiple",required:!1,type:{name:"OptionShape[]"}},setSelectedItems:{defaultValue:null,description:"Метод для ручной установки выбранных пунктов",name:"setSelectedItems",required:!0,type:{name:"(selected: OptionShape[]) => void"}},toggleMenu:{defaultValue:null,description:"Метод переключающий видимость выпадающего списка",name:"toggleMenu",required:!0,type:{name:"() => void"}},multiple:{defaultValue:null,description:"Флаг, можно ли выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"Флаг, открыто ли меню",name:"open",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Флаг, поле заблокировано",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:{value:"inner"},description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | ReactElement<any, string | JSXElementConstructor<any>> | null"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},innerProps:{defaultValue:null,description:"Внутренние свойства, которые должны быть установлены компоненту.",name:"innerProps",required:!0,type:{name:"{ onBlur?: ((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined; onFocus?: ((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void) | undefined; onClick?: ((event: MouseEvent<...>) => void) | undefined; tabIndex?: number | undefined; id: string; } & RefAttributes<......"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"Поле доступно только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},Input:{defaultValue:{value:"forwardRef<HTMLInputElement, InputDesktopProps>((restProps, ref) => (\n    <BaseInput\n        {...restProps}\n        FormControlComponent={FormControlDesktop}\n        ref={ref}\n        colorStyles={colorStyles}\n    />\n))"},description:"Компонент ввода значения",name:"Input",required:!1,type:{name:'FC<Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & RefAttributes<...>> | undefined'}},inputProps:{defaultValue:{value:"{}"},description:"Пропсы, которые будут прокинуты в инпут",name:"inputProps",required:!1,type:{name:'(Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & Record<...>) | undefined'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/autocomplete-field/Component.tsx#AutocompleteField"]={docgenInfo:AutocompleteField.__docgenInfo,name:"AutocompleteField",path:"packages/input-autocomplete/src/autocomplete-field/Component.tsx#AutocompleteField"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["OptionsList","Optgroup","Option","Input","inputProps","onInput","value","success","readOnly","closeOnSelect","options"],InputAutocompleteDesktop=(0,react.forwardRef)((function(_ref,ref){var _ref$OptionsList=_ref.OptionsList,OptionsList=void 0===_ref$OptionsList?shared.OptionsList:_ref$OptionsList,_ref$Optgroup=_ref.Optgroup,Optgroup=void 0===_ref$Optgroup?shared.Optgroup:_ref$Optgroup,_ref$Option=_ref.Option,Option=void 0===_ref$Option?shared.Option:_ref$Option,Input=_ref.Input,_ref$inputProps=_ref.inputProps,inputProps=void 0===_ref$inputProps?{}:_ref$inputProps,onInput=_ref.onInput,value=_ref.value,success=_ref.success,readOnly=_ref.readOnly,_ref$closeOnSelect=_ref.closeOnSelect,closeOnSelect=void 0!==_ref$closeOnSelect&&_ref$closeOnSelect,options=_ref.options,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded);return(0,jsx_runtime.jsx)(shared.BaseSelect,(0,objectSpread2.Z)((0,objectSpread2.Z)({ref:ref,autocomplete:!0,options:options,closeOnSelect:closeOnSelect,Option:Option,Field:AutocompleteField,Optgroup:Optgroup,OptionsList:OptionsList},restProps),{},{fieldProps:(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps.fieldProps),{},{Input:Input,onInput:onInput,value:value,inputProps:inputProps,readOnly:readOnly,success:success})}))}));try{InputAutocompleteDesktop.displayName="InputAutocompleteDesktop",InputAutocompleteDesktop.__docgenInfo={description:"",displayName:"InputAutocompleteDesktop",props:{open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void)"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},autocomplete:{defaultValue:null,description:"Возможность использовать селект как input-autocomplete",name:"autocomplete",required:!1,type:{name:"boolean"}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:{value:"false"},description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},OptionsList:{defaultValue:{value:"forwardRef<HTMLDivElement, OptionsListProps>(\n    (\n        {\n            size = 's',\n            className,\n            optionGroupClassName,\n            scrollbarClassName,\n            Option,\n            getOptionProps,\n            options = [],\n            Optgroup = DefaultOptgroup,\n            dataTestId,\n            emptyPlaceholder,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            onScroll,\n            open,\n            header,\n            footer,\n            showFooter = true,\n            optionsListWidth,\n            nativeScrollbar: nativeScrollbarProp,\n            flatOptions = [],\n            setHighlightedIndex,\n        },\n        ref,\n    ) => {\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const renderOption = (option: OptionShape, index: number) => (\n            <Option key={option.key} {...getOptionProps(option, index)} />\n        );\n\n        const listRef = useRef<HTMLDivElement>(null);\n        const scrollbarRef = useRef<HTMLDivElement>(null);\n        const counter = createCounter();\n        const renderGroup = (group: GroupShape) => (\n            <Optgroup\n                className={optionGroupClassName}\n                label={group.label}\n                key={group.label}\n                size={size}\n            >\n                {group.options.map((option) => renderOption(option, counter()))}\n            </Optgroup>\n        );\n\n        useVisibleOptions({\n            ...(!nativeScrollbar && { styleTargetRef: scrollbarRef }),\n            visibleOptions,\n            listRef,\n            open,\n            invalidate: options,\n        });\n\n        if (options.length === 0 && !emptyPlaceholder && !header && !footer) {\n            return null;\n        }\n\n        const renderListItems = () => (\n            <React.Fragment>\n                {options.map((option) =>\n                    isGroup(option) ? renderGroup(option) : renderOption(option, counter()),\n                )}\n\n                {emptyPlaceholder && options.length === 0 && (\n                    <div className={styles.emptyPlaceholder}>{emptyPlaceholder}</div>\n                )}\n            </React.Fragment>\n        );\n\n        const renderWithCustomScrollbar = () => {\n            const scrollableNodeProps = {\n                onScroll,\n                'data-test-id': dataTestId,\n                ref: ref as React.RefObject<HTMLDivElement>,\n            };\n\n            return (\n                <Scrollbar\n                    className={cn(styles.scrollable, scrollbarClassName)}\n                    ref={scrollbarRef}\n                    horizontalAutoStretch={optionsListWidth === 'content'}\n                    scrollableNodeProps={scrollableNodeProps}\n                    contentNodeProps={{ ref: listRef }}\n                >\n                    {renderListItems()}\n                </Scrollbar>\n            );\n        };\n\n        const renderWithNativeScrollbar = () => (\n            <div\n                className={cn(styles.scrollable, scrollbarClassName)}\n                ref={mergeRefs([listRef, ref])}\n                onScroll={onScroll}\n            >\n                {renderListItems()}\n            </div>\n        );\n\n        const resetHighlightedIndex = () => setHighlightedIndex?.(-1);\n\n        return (\n            <div\n                {...(nativeScrollbar && { 'data-test-id': dataTestId })}\n                className={cn(styles.optionsList, styles[size], className)}\n            >\n                {header && (\n                    <div className={styles.optionsListHeader} onMouseEnter={resetHighlightedIndex}>\n                        {header}\n                    </div>\n                )}\n\n                {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n\n                {showFooter && footer && (\n                    <div\n                        onMouseEnter={resetHighlightedIndex}\n                        className={cn(styles.optionsListFooter, {\n                            [styles.withBorder]:\n                                visibleOptions && flatOptions.length > visibleOptions,\n                        })}\n                    >\n                        {footer}\n                    </div>\n                )}\n            </div>\n        );\n    },\n)"},description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"FC<OptionsListProps & RefAttributes<HTMLDivElement>>"}},Optgroup:{defaultValue:{value:"({ children, className, label, size = 's' }: OptgroupProps) => (\n    <React.Fragment>\n        <div className={cn(styles.optgroup, className, styles[size])}>\n            <span className={styles.label}>{label}</span>\n        </div>\n        {children}\n    </React.Fragment>\n)"},description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:{value:"({\n    size = 's',\n    className,\n    option,\n    children,\n    selected,\n    highlighted,\n    disabled,\n    multiple,\n    mobile,\n    Checkmark = mobile ? DefaultMobileCheckmark : DefaultCheckMark,\n    innerProps,\n    dataTestId,\n}) => {\n    const content = children || option.content || option.key;\n    const { showCheckMark = true } = option;\n\n    return (\n        <div\n            {...innerProps}\n            className={cn(styles.option, styles[size], className, {\n                [styles.highlighted]: !mobile && highlighted,\n                [styles.selected]: selected,\n                [styles.disabled]: disabled,\n            })}\n            data-test-id={dataTestId}\n        >\n            {Checkmark && showCheckMark && (\n                <Checkmark\n                    disabled={disabled}\n                    selected={selected}\n                    multiple={multiple}\n                    position='before'\n                />\n            )}\n\n            <div\n                className={cn(styles.content, {\n                    [styles.textContent]: !isValidElement(content),\n                })}\n            >\n                {content}\n            </div>\n\n            {/** Workaround чтобы для клика показывать отметку справа и всегда в виде иконки */}\n            {Checkmark && showCheckMark && (\n                <Checkmark\n                    disabled={disabled}\n                    selected={selected}\n                    multiple={multiple}\n                    position='after'\n                />\n            )}\n        </div>\n    );\n}"},description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},Input:{defaultValue:null,description:"Компонент ввода значения",name:"Input",required:!1,type:{name:'FC<Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & RefAttributes<...>> | undefined'}},inputProps:{defaultValue:{value:"{}"},description:"Пропсы, которые будут прокинуты в инпут",name:"inputProps",required:!1,type:{name:'(Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & Record<...>) | undefined'}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"Поле доступно только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.desktop.tsx#InputAutocompleteDesktop"]={docgenInfo:InputAutocompleteDesktop.__docgenInfo,name:"InputAutocompleteDesktop",path:"packages/input-autocomplete/src/Component.desktop.tsx#InputAutocompleteDesktop"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/Component.mobile.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{I:function(){return InputAutocompleteMobile}});var _home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_merge_refs__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),lodash_throttle__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/lodash.throttle/index.js"),lodash_throttle__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_2__),_alfalab_core_components_button_mobile__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./dist/button/modern/mobile/index.js"),_alfalab_core_components_input__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./dist/input/modern/index.js"),_alfalab_core_components_select_mobile__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./dist/select/modern/mobile/index.js"),_autocomplete_mobile_field__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/input-autocomplete/src/autocomplete-mobile-field/index.ts"),_mobile_module_css__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/input-autocomplete/src/mobile.module.css"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["Input","bottomSheetProps","bottomSheetHeaderAddonsProps","value","filter","name","Arrow","label","placeholder","size","open","onFilter","onChange","onOpen","onCancel","onClearFilter","continueButtonProps","cancelButtonProps","selected","multiple"],SELECTED=[],InputAutocompleteMobile=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function(_ref,ref){var Input=_ref.Input,_ref$bottomSheetProps=_ref.bottomSheetProps,bottomSheetProps=void 0===_ref$bottomSheetProps?{}:_ref$bottomSheetProps,_ref$bottomSheetHeade=_ref.bottomSheetHeaderAddonsProps,bottomSheetHeaderAddonsProps=void 0===_ref$bottomSheetHeade?{}:_ref$bottomSheetHeade,_ref$value=_ref.value,value=void 0===_ref$value?"":_ref$value,_ref$filter=_ref.filter,filter=void 0===_ref$filter?"":_ref$filter,name=_ref.name,_ref$Arrow=_ref.Arrow,Arrow=void 0===_ref$Arrow?null:_ref$Arrow,label=_ref.label,placeholder=_ref.placeholder,_ref$size=_ref.size,size=void 0===_ref$size?"s":_ref$size,openProp=_ref.open,onFilter=_ref.onFilter,onChange=_ref.onChange,onOpen=_ref.onOpen,onCancel=_ref.onCancel,onClearFilter=_ref.onClearFilter,continueButtonProps=_ref.continueButtonProps,cancelButtonProps=_ref.cancelButtonProps,selected=_ref.selected,multiple=_ref.multiple,restProps=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_9__.Z)(_ref,_excluded),_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_10__.Z)(_useState,2),open=_useState2[0],setOpen=_useState2[1],bottomSheetInputRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),targetRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),setBottomSheetVisibility=function setBottomSheetVisibility(isOpen){void 0===openProp&&setOpen(isOpen),onOpen&&onOpen({open:isOpen,name:name})},handleOptionsListTouchMove=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){return lodash_throttle__WEBPACK_IMPORTED_MODULE_2___default()((function(){var input=bottomSheetInputRef.current;input&&document.activeElement===input&&input.blur()}),300)}),[]),handleApply=function handleApply(){setBottomSheetVisibility(!1),onChange(filter)},handleCancel=function handleCancel(){setBottomSheetVisibility(!1),onCancel&&onCancel()},handleInputFocus=function handleInputFocus(event){var input=bottomSheetInputRef.current;event.relatedTarget===targetRef.current&&input&&input===document.activeElement&&input.blur()};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_alfalab_core_components_select_mobile__WEBPACK_IMPORTED_MODULE_5__.SelectMobile,(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({useWithApplyHook:!1,Field:_autocomplete_mobile_field__WEBPACK_IMPORTED_MODULE_6__.v},restProps),{},{ref:(0,react_merge_refs__WEBPACK_IMPORTED_MODULE_12__.Z)([targetRef,ref]),selected:selected||SELECTED,open:Boolean(open||openProp),onOpen:function handleOpen(payload){setBottomSheetVisibility(Boolean(payload.open))},Arrow:Arrow,onChange:function handleChange(payload){var _bottomSheetInputRef$;(onChange(payload),multiple)&&(null===(_bottomSheetInputRef$=bottomSheetInputRef.current)||void 0===_bottomSheetInputRef$||_bottomSheetInputRef$.focus())},placeholder:placeholder,label:label,size:size,name:name,multiple:multiple,bottomSheetProps:function getBottomSheetProps(){var Component=Input||_alfalab_core_components_input__WEBPACK_IMPORTED_MODULE_4__.Input;return(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({actionButton:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div",{className:_mobile_module_css__WEBPACK_IMPORTED_MODULE_7__.Z.footer,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_alfalab_core_components_button_mobile__WEBPACK_IMPORTED_MODULE_3__.ButtonMobile,(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({block:!0,view:"secondary",size:"m",onClick:handleCancel},cancelButtonProps),{},{children:"Отмена"})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_alfalab_core_components_button_mobile__WEBPACK_IMPORTED_MODULE_3__.ButtonMobile,(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({block:!0,view:"primary",size:"m",onClick:handleApply},continueButtonProps),{},{children:"Продолжить"}))]}),title:label||placeholder,bottomAddons:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Component,(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)((0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({block:!0,clear:!!onClearFilter,onClear:onClearFilter,value:filter,onInput:onFilter,placeholder:placeholder,onFocus:handleInputFocus},bottomSheetHeaderAddonsProps),{},{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(_mobile_module_css__WEBPACK_IMPORTED_MODULE_7__.Z.bottomAddonInput,bottomSheetHeaderAddonsProps.className),ref:(0,react_merge_refs__WEBPACK_IMPORTED_MODULE_12__.Z)([bottomSheetInputRef,bottomSheetHeaderAddonsProps.ref])})),initialHeight:"full"},bottomSheetProps),{},{containerProps:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({onTouchMove:handleOptionsListTouchMove},bottomSheetProps.containerProps)})}(),optionsListProps:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({showFooter:!1},restProps.optionsListProps),fieldProps:(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_11__.Z)({value:value},restProps.fieldProps)}))}));try{InputAutocompleteMobile.displayName="InputAutocompleteMobile",InputAutocompleteMobile.__docgenInfo={description:"",displayName:"InputAutocompleteMobile",props:{open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"s"},description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) & ((payload: string | BaseSelectChangePayload) => void)"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},Arrow:{defaultValue:{value:"null"},description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},Field:{defaultValue:null,description:"Компонент поля",name:"Field",required:!1,type:{name:"FC<FieldProps>"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},onFilter:{defaultValue:null,description:"Обработчик ввода фильтра.",name:"onFilter",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},value:{defaultValue:{value:""},description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},filter:{defaultValue:{value:""},description:"Значение фильтра.",name:"filter",required:!1,type:{name:"string"}},onCancel:{defaultValue:null,description:'Обработчик нажатия на кнопку "Отмена".',name:"onCancel",required:!1,type:{name:"(() => void)"}},onClearFilter:{defaultValue:null,description:"Обработчик нажатия на крестик в инпуте фильтра.",name:"onClearFilter",required:!1,type:{name:"(() => void)"}},bottomSheetProps:{defaultValue:{value:"{}"},description:"Дополнительные пропсы компонента BottomSheet",name:"bottomSheetProps",required:!1,type:{name:"Partial<BottomSheetProps>"}},bottomSheetHeaderAddonsProps:{defaultValue:{value:"{}"},description:"Дополнительные пропсы на слот под заголовком компонента BottomSheet",name:"bottomSheetHeaderAddonsProps",required:!1,type:{name:"Record<string, unknown>"}},continueButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "продолжить"',name:"continueButtonProps",required:!1,type:{name:"CommonButtonProps"}},cancelButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "отмена"',name:"cancelButtonProps",required:!1,type:{name:"CommonButtonProps"}},Input:{defaultValue:null,description:"Кастомный инпут",name:"Input",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.mobile.tsx#InputAutocompleteMobile"]={docgenInfo:InputAutocompleteMobile.__docgenInfo,name:"InputAutocompleteMobile",path:"packages/input-autocomplete/src/Component.mobile.tsx#InputAutocompleteMobile"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/autocomplete-mobile-field/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{v:function(){return AutocompleteMobileField}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),mobile=__webpack_require__("./dist/form-control/modern/mobile/index.js"),modern=__webpack_require__("./dist/shared/modern/index.js"),esm=__webpack_require__("./node_modules/@alfalab/hooks/dist/esm/index.js"),index_module_component="component_shmZr",index_module_field="field_lHc4C",index_module_disabled="disabled_fvYlN",index_module_placeholder="placeholder__30Tu",index_module_contentWrapper="contentWrapper_sbKRl",index_module_value="value_GSNlj",index_module_focusVisible="focusVisible_lmfo8",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["size","open","disabled","value","innerProps","dataTestId","fieldClassName","labelView","placeholder","Arrow","valueRenderer","toggleMenu","setSelectedItems","selectedMultiple","FormControlComponent"],AutocompleteMobileField=function AutocompleteMobileField(_ref){var _cn,_ref$size=_ref.size,size=void 0===_ref$size?"m":_ref$size,disabled=(_ref.open,_ref.disabled),value=_ref.value,innerProps=_ref.innerProps,dataTestId=_ref.dataTestId,fieldClassName=_ref.fieldClassName,_ref$labelView=_ref.labelView,labelView=void 0===_ref$labelView?"inner":_ref$labelView,placeholder=_ref.placeholder,Arrow=_ref.Arrow,restProps=(_ref.valueRenderer,_ref.toggleMenu,_ref.setSelectedItems,_ref.selectedMultiple,_ref.FormControlComponent,(0,objectWithoutProperties.Z)(_ref,_excluded)),_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.Z)(_useState,2),focused=_useState2[0],setFocused=_useState2[1],wrapperRef=(0,react.useRef)(null),_useFocus=(0,esm.KK)(wrapperRef,"keyboard"),focusVisible=(0,slicedToArray.Z)(_useFocus,1)[0],filled=Boolean(value),showPlaceholder=placeholder&&!filled&&"outer"===labelView;return(0,jsx_runtime.jsx)("div",{className:index_module_component,ref:wrapperRef,onFocus:function onFocus(){return setFocused(!0)},onBlur:function onBlur(){return setFocused(!1)},children:(0,jsx_runtime.jsx)(mobile.FormControlMobile,(0,objectSpread2.Z)((0,objectSpread2.Z)((0,objectSpread2.Z)({fieldClassName:classnames_default()(index_module_field,fieldClassName,(_cn={},(0,defineProperty.Z)(_cn,index_module_disabled,disabled),(0,defineProperty.Z)(_cn,index_module_focusVisible,focusVisible),_cn)),block:!0,size:size,focused:focused,disabled:disabled,filled:filled,labelView:labelView,rightAddons:Arrow,dataTestId:(0,modern.getDataTestId)(dataTestId,"form-control")},restProps),innerProps),{},{children:(0,jsx_runtime.jsxs)("div",{className:index_module_contentWrapper,children:[showPlaceholder&&(0,jsx_runtime.jsx)("span",{className:index_module_placeholder,children:placeholder}),filled&&(0,jsx_runtime.jsx)("div",{className:index_module_value,children:value})]})}))})};try{AutocompleteMobileField.displayName="AutocompleteMobileField",AutocompleteMobileField.__docgenInfo={description:"",displayName:"AutocompleteMobileField",props:{size:{defaultValue:{value:"m"},description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},disabled:{defaultValue:null,description:"Заблокированное состояние",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Cостояние только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},colors:{defaultValue:null,description:"Набор цветов для компонента",name:"colors",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"inverted"'}]}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Текст подсказки",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл компонента",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:{value:"inner"},description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},leftAddons:{defaultValue:null,description:"Слот слева",name:"leftAddons",required:!1,type:{name:"ReactNode"}},rightAddons:{defaultValue:null,description:"Слот справа",name:"rightAddons",required:!1,type:{name:"ReactNode"}},leftAddonsProps:{defaultValue:null,description:"Свойства для обертки левых аддонов",name:"leftAddonsProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},rightAddonsProps:{defaultValue:null,description:"Свойства для обертки правых аддонов",name:"rightAddonsProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},bottomAddons:{defaultValue:null,description:"Слот под полем",name:"bottomAddons",required:!1,type:{name:"ReactNode"}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},labelClassName:{defaultValue:null,description:"Дополнительный класс для лейбла",name:"labelClassName",required:!1,type:{name:"string"}},addonsClassName:{defaultValue:null,description:"Дополнительный класс для аддонов",name:"addonsClassName",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},filled:{defaultValue:null,description:"Заполненное состояние",name:"filled",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Выбранное (фокус) состояние",name:"focused",required:!1,type:{name:"boolean"}},inputWrapperClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"inputWrapperClassName",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},FormControlComponent:{defaultValue:null,description:"Компонент FormControl",name:"FormControlComponent",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx#AutocompleteMobileField"]={docgenInfo:AutocompleteMobileField.__docgenInfo,name:"AutocompleteMobileField",path:"packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx#AutocompleteMobileField"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/desktop/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InputAutocompleteDesktop:function(){return _Component_desktop__WEBPACK_IMPORTED_MODULE_0__.$},InputAutocompleteDesktopProps:function(){return _Component_desktop__WEBPACK_IMPORTED_MODULE_0__.InputAutocompleteDesktopProps}});var _Component_desktop__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/input-autocomplete/src/Component.desktop.tsx")},"./packages/input-autocomplete/src/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InputAutocomplete:function(){return InputAutocompleteResponsive},InputAutocompleteProps:function(){return Component_responsive_namespaceObject.InputAutocompleteResponsiveProps}});var Component_responsive_namespaceObject={};__webpack_require__.r(Component_responsive_namespaceObject),__webpack_require__.d(Component_responsive_namespaceObject,{X:function(){return InputAutocompleteResponsive}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/@alfalab/hooks/dist/esm/index.js"),Component_desktop=__webpack_require__("./packages/input-autocomplete/src/Component.desktop.tsx"),Component_mobile=__webpack_require__("./packages/input-autocomplete/src/Component.mobile.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["breakpoint"],InputAutocompleteResponsive=(0,react.forwardRef)((function(_ref,ref){var _ref$breakpoint=_ref.breakpoint,breakpoint=void 0===_ref$breakpoint?1024:_ref$breakpoint,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded),_useMedia=(0,esm.GS)([["mobile","(max-width: ".concat(breakpoint-1,"px)")],["desktop","(min-width: ".concat(breakpoint,"px)")]],"desktop");return"desktop"===(0,slicedToArray.Z)(_useMedia,1)[0]?(0,jsx_runtime.jsx)(Component_desktop.$,(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps),{},{ref:ref})):(0,jsx_runtime.jsx)(Component_mobile.I,(0,objectSpread2.Z)((0,objectSpread2.Z)({},restProps),{},{ref:ref}))}));try{InputAutocompleteResponsive.displayName="InputAutocompleteResponsive",InputAutocompleteResponsive.__docgenInfo={description:"",displayName:"InputAutocompleteResponsive",props:{open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) & ((payload: string | BaseSelectChangePayload) => void)"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onScroll:{defaultValue:null,description:"Обработчик скрола",name:"onScroll",required:!1,type:{name:"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void)"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},autocomplete:{defaultValue:null,description:"Возможность использовать селект как input-autocomplete",name:"autocomplete",required:!1,type:{name:"boolean"}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},valueRenderer:{defaultValue:null,description:"Кастомный рендер выбранного пункта",name:"valueRenderer",required:!1,type:{name:"(({ selected, selectedMultiple, }: { selected?: OptionShape; selectedMultiple: OptionShape[]; }) => ReactNode)"}},Arrow:{defaultValue:null,description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},OptionsList:{defaultValue:null,description:"Компонент выпадающего меню",name:"OptionsList",required:!1,type:{name:"FC<OptionsListProps & RefAttributes<HTMLDivElement>>"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},Input:{defaultValue:null,description:"Компонент ввода значения\nКастомный инпут",name:"Input",required:!1,type:{name:'(FC<Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & RefAttributes<...>> & ElementType<...>) | undefined'}},inputProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в инпут",name:"inputProps",required:!1,type:{name:'(Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & Record<...>) | undefined'}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"Поле доступно только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},success:{defaultValue:null,description:"Отображение иконки успеха",name:"success",required:!1,type:{name:"boolean"}},onInput:{defaultValue:null,description:"Обработчик ввода",name:"onInput",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},Field:{defaultValue:null,description:"Компонент поля",name:"Field",required:!1,type:{name:"FC<FieldProps>"}},onFilter:{defaultValue:null,description:"Обработчик ввода фильтра.",name:"onFilter",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},filter:{defaultValue:null,description:"Значение фильтра.",name:"filter",required:!1,type:{name:"string"}},onCancel:{defaultValue:null,description:'Обработчик нажатия на кнопку "Отмена".',name:"onCancel",required:!1,type:{name:"(() => void)"}},onClearFilter:{defaultValue:null,description:"Обработчик нажатия на крестик в инпуте фильтра.",name:"onClearFilter",required:!1,type:{name:"(() => void)"}},bottomSheetProps:{defaultValue:null,description:"Дополнительные пропсы компонента BottomSheet",name:"bottomSheetProps",required:!1,type:{name:"Partial<BottomSheetProps>"}},bottomSheetHeaderAddonsProps:{defaultValue:null,description:"Дополнительные пропсы на слот под заголовком компонента BottomSheet",name:"bottomSheetHeaderAddonsProps",required:!1,type:{name:"Record<string, unknown>"}},continueButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "продолжить"',name:"continueButtonProps",required:!1,type:{name:"CommonButtonProps"}},cancelButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "отмена"',name:"cancelButtonProps",required:!1,type:{name:"CommonButtonProps"}},breakpoint:{defaultValue:{value:"1024"},description:"Контрольная точка, с нее начинается desktop версия",name:"breakpoint",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.responsive.tsx#InputAutocompleteResponsive"]={docgenInfo:InputAutocompleteResponsive.__docgenInfo,name:"InputAutocompleteResponsive",path:"packages/input-autocomplete/src/Component.responsive.tsx#InputAutocompleteResponsive"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/mobile/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InputAutocompleteMobile:function(){return Component_mobile.I},InputAutocompleteMobileProps:function(){return Component_mobile.InputAutocompleteMobileProps},InputAutocompleteModalMobile:function(){return InputAutocompleteModalMobile},InputAutocompleteModalMobileProps:function(){return Component_modal_mobile_namespaceObject.InputAutocompleteModalMobileProps}});var Component_modal_mobile_namespaceObject={};__webpack_require__.r(Component_modal_mobile_namespaceObject),__webpack_require__.d(Component_modal_mobile_namespaceObject,{I:function(){return InputAutocompleteModalMobile}});var Component_mobile=__webpack_require__("./packages/input-autocomplete/src/Component.mobile.tsx"),objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),lodash_throttle=__webpack_require__("./node_modules/lodash.throttle/index.js"),lodash_throttle_default=__webpack_require__.n(lodash_throttle),mobile=__webpack_require__("./dist/button/modern/mobile/index.js"),modern=__webpack_require__("./dist/input/modern/index.js"),modern_mobile=__webpack_require__("./dist/select/modern/mobile/index.js"),autocomplete_mobile_field=__webpack_require__("./packages/input-autocomplete/src/autocomplete-mobile-field/index.ts"),mobile_module=__webpack_require__("./packages/input-autocomplete/src/mobile.module.css"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["open","onOpen","name","size","Input","Arrow","onClearFilter","filter","onFilter","placeholder","bottomAddonProps","multiple","onChange","onCancel","value","cancelButtonProps","continueButtonProps","modalProps","modalHeaderProps","modalFooterProps"],InputAutocompleteModalMobile=react.forwardRef((function(_ref,ref){var openProp=_ref.open,onOpen=_ref.onOpen,name=_ref.name,_ref$size=_ref.size,size=void 0===_ref$size?"s":_ref$size,_ref$Input=_ref.Input,Input=void 0===_ref$Input?modern.Input:_ref$Input,_ref$Arrow=_ref.Arrow,Arrow=void 0===_ref$Arrow?null:_ref$Arrow,onClearFilter=_ref.onClearFilter,_ref$filter=_ref.filter,filter=void 0===_ref$filter?"":_ref$filter,onFilter=_ref.onFilter,placeholder=_ref.placeholder,bottomAddonProps=_ref.bottomAddonProps,multiple=_ref.multiple,onChange=_ref.onChange,onCancel=_ref.onCancel,value=_ref.value,cancelButtonProps=_ref.cancelButtonProps,continueButtonProps=_ref.continueButtonProps,modalProps=_ref.modalProps,modalHeaderProps=_ref.modalHeaderProps,modalFooterProps=_ref.modalFooterProps,restProps=(0,objectWithoutProperties.Z)(_ref,_excluded),_React$useState=react.useState(!1),_React$useState2=(0,slicedToArray.Z)(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1],targetRef=(0,react.useRef)(null),modalScrollableRef=(0,react.useRef)(null),bottomAddonRef=(0,react.useRef)(null);(0,react.useEffect)((function(){var modalContentNode=modalScrollableRef.current,handleListTouchMove=lodash_throttle_default()((function(){var input=bottomAddonRef.current;input&&document.activeElement===input&&input.blur()}),300);return null==modalContentNode||modalContentNode.addEventListener("touchmove",handleListTouchMove),function(){return null==modalContentNode?void 0:modalContentNode.removeEventListener("touchmove",handleListTouchMove)}}),[open]);var setOpenModalSelect=function setOpenModalSelect(isOpen){void 0===openProp&&setOpen(isOpen),null==onOpen||onOpen({open:isOpen,name:name})},handleApply=function handleApply(){setOpenModalSelect(!1),onChange(filter)},handleCancel=function handleCancel(){setOpenModalSelect(!1),null==onCancel||onCancel()};return(0,jsx_runtime.jsx)(modern_mobile.SelectModalMobile,(0,objectSpread2.Z)((0,objectSpread2.Z)({Field:autocomplete_mobile_field.v,useWithApplyHook:!1},restProps),{},{ref:(0,react_merge_refs_esm.Z)([ref,targetRef]),Arrow:Arrow,onOpen:function handleOpen(payload){setOpenModalSelect(Boolean(payload.open))},onChange:function handleChange(payload){var _bottomAddonRef$curre;(onChange(payload),multiple)&&(null===(_bottomAddonRef$curre=bottomAddonRef.current)||void 0===_bottomAddonRef$curre||_bottomAddonRef$curre.focus())},multiple:multiple,open:null!=openProp?openProp:open,size:size,fieldProps:(0,objectSpread2.Z)({value:value},restProps.fieldProps),placeholder:placeholder,name:name,modalProps:(0,objectSpread2.Z)((0,objectSpread2.Z)({},modalProps),{},{componentRef:modalScrollableRef}),modalHeaderProps:(0,objectSpread2.Z)((0,objectSpread2.Z)({},modalHeaderProps),{},{bottomAddons:function renderBottomAddon(){return(0,jsx_runtime.jsx)(Input,(0,objectSpread2.Z)((0,objectSpread2.Z)({block:!0,clear:!!onClearFilter,onClear:onClearFilter,value:filter,onInput:onFilter,placeholder:placeholder},bottomAddonProps),{},{className:classnames_default()(mobile_module.Z.bottomAddonInput,null==bottomAddonProps?void 0:bottomAddonProps.className),ref:(0,react_merge_refs_esm.Z)([bottomAddonRef,null==bottomAddonProps?void 0:bottomAddonProps.ref])}))}()}),modalFooterProps:(0,objectSpread2.Z)((0,objectSpread2.Z)({sticky:!0},modalFooterProps),{},{children:function renderFooter(){return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(mobile.ButtonMobile,(0,objectSpread2.Z)((0,objectSpread2.Z)({block:!0,view:"secondary",size:"m",onClick:handleCancel},cancelButtonProps),{},{children:"Отмена"})),(0,jsx_runtime.jsx)(mobile.ButtonMobile,(0,objectSpread2.Z)((0,objectSpread2.Z)({block:!0,view:"primary",size:"m",onClick:handleApply},continueButtonProps),{},{children:"Продолжить"}))]})}()})}))}));try{InputAutocompleteModalMobile.displayName="InputAutocompleteModalMobile",InputAutocompleteModalMobile.__docgenInfo={description:"",displayName:"InputAutocompleteModalMobile",props:{open:{defaultValue:null,description:"Управление открытием",name:"open",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"s"},description:"Размер компонента",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},onChange:{defaultValue:null,description:"Обработчик выбора",name:"onChange",required:!1,type:{name:"((payload: BaseSelectChangePayload) => void) & ((payload: string | BaseSelectChangePayload) => void)"}},disabled:{defaultValue:null,description:"Управление возможностью выбора значения",name:"disabled",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Возможность выбрать несколько значений",name:"multiple",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Атрибут name",name:"name",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Плейсхолдер поля",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Дополнительный класс",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Атрибут id",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Обработчик блюра поля",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"Обработчик фокуса поля",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLDivElement, Element>) => void)"}},block:{defaultValue:null,description:"Растягивает компонент на ширину контейнера",name:"block",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Отображение ошибки",name:"error",required:!1,type:{name:"ReactNode"}},hint:{defaultValue:null,description:"Подсказка под полем",name:"hint",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Лейбл поля",name:"label",required:!1,type:{name:"ReactNode"}},labelView:{defaultValue:null,description:"Вид лейбла внутри / снаружи",name:"labelView",required:!1,type:{name:"enum",value:[{value:'"inner"'},{value:'"outer"'}]}},fieldClassName:{defaultValue:null,description:"Дополнительный класс для поля",name:"fieldClassName",required:!1,type:{name:"string"}},dataTestId:{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования",name:"dataTestId",required:!1,type:{name:"string"}},preventFlip:{defaultValue:null,description:"Запрещает поповеру менять свою позицию.\nНапример, если места снизу недостаточно,то он все равно будет показан снизу",name:"preventFlip",required:!1,type:{name:"boolean"}},onOpen:{defaultValue:null,description:"Обработчик открытия\\закрытия селекта",name:"onOpen",required:!1,type:{name:"((payload: { open?: boolean; name?: string; }) => void) | undefined"}},updatePopover:{defaultValue:null,description:"Хранит функцию, с помощью которой можно обновить положение поповера",name:"updatePopover",required:!1,type:{name:"MutableRefObject<() => void>"}},fieldProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент поля",name:"fieldProps",required:!1,type:{name:"unknown"}},optionsListClassName:{defaultValue:null,description:"Дополнительный класс выпадающего меню",name:"optionsListClassName",required:!1,type:{name:"string"}},optionClassName:{defaultValue:null,description:"Дополнительный класс для пункта меню",name:"optionClassName",required:!1,type:{name:"string"}},optionGroupClassName:{defaultValue:null,description:"Дополнительный класс для компонента группы пунктов",name:"optionGroupClassName",required:!1,type:{name:"string"}},popperClassName:{defaultValue:null,description:"Дополнительный класс для поповера",name:"popperClassName",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"Список вариантов выбора",name:"options",required:!0,type:{name:"(OptionShape | GroupShape)[]"}},defaultOpen:{defaultValue:null,description:"Начальное состояние селекта",name:"defaultOpen",required:!1,type:{name:"boolean"}},optionsSize:{defaultValue:null,description:"Размер пунктов меню",name:"optionsSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'}]}},optionsListWidth:{defaultValue:null,description:"Управляет шириной выпадающего меню.\nШирину определяет контент, либо ширина равна ширине поля",name:"optionsListWidth",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"field"'}]}},allowUnselect:{defaultValue:null,description:"Позволяет снять выбранное значение",name:"allowUnselect",required:!1,type:{name:"boolean"}},closeOnSelect:{defaultValue:null,description:"Закрывать меню после выбора?",name:"closeOnSelect",required:!1,type:{name:"boolean"}},circularNavigation:{defaultValue:null,description:"При навигации с клавиатуры переходить от последнего пункта меню к первому и наоборот.",name:"circularNavigation",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Список value выбранных пунктов (controlled-селект)",name:"selected",required:!1,type:{name:"string | OptionShape | (string | OptionShape)[] | null"}},popoverPosition:{defaultValue:null,description:"Позиционирование выпадающего списка",name:"popoverPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},visibleOptions:{defaultValue:null,description:"Количество видимых пунктов меню (5 = 5.5)",name:"visibleOptions",required:!1,type:{name:"number"}},Arrow:{defaultValue:{value:"null"},description:"Компонент стрелки",name:"Arrow",required:!1,type:{name:"false | FC<ArrowProps> | null"}},Field:{defaultValue:null,description:"Компонент поля",name:"Field",required:!1,type:{name:"FC<FieldProps>"}},optionsListProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент списка",name:"optionsListProps",required:!1,type:{name:"unknown"}},optionProps:{defaultValue:null,description:"Пропсы, которые будут прокинуты в компонент пункта меню",name:"optionProps",required:!1,type:{name:"unknown"}},Optgroup:{defaultValue:null,description:"Компонент группы",name:"Optgroup",required:!1,type:{name:"FC<OptgroupProps>"}},Option:{defaultValue:null,description:"Компонент пункта меню",name:"Option",required:!1,type:{name:"FC<OptionProps>"}},showSearch:{defaultValue:null,description:"Включает отображение поиска",name:"showSearch",required:!1,type:{name:"boolean"}},Search:{defaultValue:null,description:"Компонент поиска",name:"Search",required:!1,type:{name:'FC<Omit<BaseInputProps, "FormControlComponent" | "colorStyles"> & { breakpoint?: number; defaultMatchMediaValue?: boolean | (() => boolean); } & RefAttributes<...>> | undefined'}},searchProps:{defaultValue:null,description:"Настройки поиска",name:"searchProps",required:!1,type:{name:"{ componentProps?: InputProps; accessor?: ((option: OptionShape) => string); value?: string | undefined; onChange?: ((value: string) => void) | undefined; } | undefined"}},zIndexPopover:{defaultValue:null,description:"z-index поповера",name:"zIndexPopover",required:!1,type:{name:"number"}},showEmptyOptionsList:{defaultValue:null,description:"Показывать OptionsList, если он пустой",name:"showEmptyOptionsList",required:!1,type:{name:"boolean"}},showClear:{defaultValue:null,description:"Показывать кнопку очистки",name:"showClear",required:!1,type:{name:"boolean"}},showSelectAll:{defaultValue:null,description:'Показывать пункт "Выбрать все"',name:"showSelectAll",required:!1,type:{name:"boolean"}},showHeaderWithSelectAll:{defaultValue:null,description:"",name:"showHeaderWithSelectAll",required:!1,type:{name:"boolean"}},useWithApplyHook:{defaultValue:null,description:"Использовать ли хук useSelectWithApply",name:"useWithApplyHook",required:!1,type:{name:"boolean"}},modalHeaderProps:{defaultValue:null,description:"Дополнительные пропсы шапки модалки",name:"modalHeaderProps",required:!1,type:{name:"Partial<HeaderProps>"}},modalProps:{defaultValue:null,description:"Дополнительные пропсы модалки",name:"modalProps",required:!1,type:{name:"Partial<ModalMobileProps & RefAttributes<HTMLDivElement>>"}},modalFooterProps:{defaultValue:null,description:"Дополнительные пропсы футера модалки",name:"modalFooterProps",required:!1,type:{name:"Partial<FooterProps>"}},onFilter:{defaultValue:null,description:"Обработчик ввода фильтра.",name:"onFilter",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},value:{defaultValue:null,description:"Значение поля ввода",name:"value",required:!1,type:{name:"string"}},filter:{defaultValue:{value:""},description:"Значение фильтра.",name:"filter",required:!1,type:{name:"string"}},onCancel:{defaultValue:null,description:'Обработчик нажатия на кнопку "Отмена".',name:"onCancel",required:!1,type:{name:"(() => void)"}},onClearFilter:{defaultValue:null,description:"Обработчик нажатия на крестик в инпуте фильтра.",name:"onClearFilter",required:!1,type:{name:"(() => void)"}},bottomAddonProps:{defaultValue:null,description:"Дополнительные пропсы на слот под заголовком",name:"bottomAddonProps",required:!1,type:{name:"Record<string, unknown>"}},continueButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "продолжить"',name:"continueButtonProps",required:!1,type:{name:"CommonButtonProps"}},cancelButtonProps:{defaultValue:null,description:'Дополнительные пропсы на кнопку "отмена"',name:"cancelButtonProps",required:!1,type:{name:"CommonButtonProps"}},Input:{defaultValue:{value:"forwardRef<HTMLInputElement, InputProps>(\n    ({ breakpoint = 1024, defaultMatchMediaValue, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue);\n\n        const Component = isDesktop ? InputDesktop : InputMobile;\n\n        return <Component ref={ref} {...restProps} />;\n    },\n)"},description:"Кастомный инпут",name:"Input",required:!1,type:{name:"ElementType<any>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/input-autocomplete/src/Component.modal.mobile.tsx#InputAutocompleteModalMobile"]={docgenInfo:InputAutocompleteModalMobile.__docgenInfo,name:"InputAutocompleteModalMobile",path:"packages/input-autocomplete/src/Component.modal.mobile.tsx#InputAutocompleteModalMobile"})}catch(__react_docgen_typescript_loader_error){}},"./packages/input-autocomplete/src/mobile.module.css":function(__unused_webpack_module,__webpack_exports__){__webpack_exports__.Z={bottomAddonInput:"bottomAddonInput_nFDlu",footer:"footer_WM8GQ"}}}]);