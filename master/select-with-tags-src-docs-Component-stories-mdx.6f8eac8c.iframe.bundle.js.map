{"version":3,"file":"select-with-tags-src-docs-Component-stories-mdx.6f8eac8c.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/select-with-tags/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/select-with-tags/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/utils/calculate-collapse-size.ts","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag/index.module.css?e9f6","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag/component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag-list/index.module.css?5829","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag-list/component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/utils/match.ts","webpack://@alfalab/core-components/./packages/select-with-tags/src/component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Размеры \", _jsx(_components.code, {\n        children: \"s\"\n      }), \" и \", _jsx(_components.code, {\n        children: \"m\"\n      }), \" пока лучше не использовать, так как еще нет актуальных макетов.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const options = [\\n    { key: '1', content: 'H', value: 'H' },\\n    { key: '2', content: 'Li', value: 'Li' },\\n    { key: '3', content: 'Na', value: 'Na' },\\n    { key: '4', content: 'Curium', value: 'Curium' },\\n    { key: '5', content: 'Berkelium', value: 'Berkelium' },\\n    { key: '6', content: 'Californium', value: 'Californium' },\\n    { key: '7', content: 'Einsteinium', value: 'Einsteinium' },\\n    { key: '8', content: 'Fermium', value: 'Fermium' },\\n];\\n\\nrender(() => {\\n    const [value, setValue] = React.useState('');\\n\\n    const handleInput = event => {\\n        setValue(event.target.value);\\n    };\\n\\n    return (\\n        <div style={{ width: '400px' }}>\\n            <SelectWithTags\\n                options={options}\\n                onInput={handleInput}\\n                value={value}\\n                autocomplete={true}\\n                block={true}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { pluralize } from '@alfalab/utils';\nimport { Arrow } from '@alfalab/core-components-select';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { SelectWithTags } from '@alfalab/core-components-select-with-tags';\nimport { SelectWithTags as SelectWithTagsTS } from '../component';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const options = [{\n  key: '1',\n  content: 'H',\n  value: 'H'\n}, {\n  key: '2',\n  content: 'Li',\n  value: 'Li'\n}, {\n  key: '3',\n  content: 'Na',\n  value: 'Na'\n}, {\n  key: '4',\n  content: 'Curium',\n  value: 'Curium'\n}, {\n  key: '5',\n  content: 'Berkelium',\n  value: 'Berkelium'\n}, {\n  key: '6',\n  content: 'Californium',\n  value: 'Californium'\n}, {\n  key: '7',\n  content: 'Einsteinium',\n  value: 'Einsteinium'\n}, {\n  key: '8',\n  content: 'Fermium',\n  value: 'Fermium'\n}, {\n  key: '9',\n  content: 'Mendelevium',\n  value: 'Mendelevium'\n}, {\n  key: '10',\n  content: 'Nobelium',\n  value: 'Nobelium'\n}, {\n  key: '11',\n  content: 'Lawrencium',\n  value: 'Lawrencium'\n}, {\n  key: '12',\n  content: 'Rutherfordium',\n  value: 'Rutherfordium'\n}, {\n  key: '13',\n  content: 'Dubnium',\n  value: 'Dubnium'\n}, {\n  key: '14',\n  content: 'Seaborgium',\n  value: 'Seaborgium'\n}, {\n  key: '15',\n  content: 'Bohrium',\n  value: 'Bohrium'\n}];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/SelectWithTags\",\n      component: SelectWithTags,\n      id: \"SelectWithTags\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"SelectWithTags\",\n      children: React.createElement(() => {\n        const [value, setValue] = React.useState('');\n        const [selected, setSelected] = React.useState([]);\n        const handleInput = event => {\n          setValue(event.target.value);\n        };\n        const handleChange = React.useCallback(({\n          selectedMultiple\n        }) => {\n          setSelected(selectedMultiple);\n        }, []);\n        const transformCollapsedTagText = count => {\n          return `+${count} ${pluralize(count, 'элемент', 'элемента', 'элементов')}`;\n        };\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            width: '400px'\n          },\n          children: /*#__PURE__*/_jsx(SelectWithTags, {\n            collapseTagList: boolean('collapseTagList', true),\n            moveInputToNewLine: boolean('moveInputToNewLine', true),\n            options: options,\n            block: boolean('block', true),\n            size: select('size', ['s', 'm', 'l', 'xl'], 'xl'),\n            disabled: boolean('disabled', false),\n            error: text('error', ''),\n            success: boolean('success', false),\n            hint: text('hint', ''),\n            Arrow: boolean('Arrow', false) ? Arrow : undefined,\n            circularNavigation: boolean('circularNavigation', false),\n            placeholder: text('placeholder', 'Элемент'),\n            label: text('label', ''),\n            autocomplete: boolean('autocomplete', true),\n            onInput: handleInput,\n            transformCollapsedTagText: transformCollapsedTagText,\n            value: value,\n            onChange: handleChange,\n            selected: selected,\n            emptyListPlaceholder: text('emptyListPlaceholder', 'Ничего не найдено.')\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"SelectWithTags\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=188%3A19065\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { SelectWithTags } from '@alfalab/core-components/select-with-tags';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: SelectWithTagsTS\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const selectWithTags = () => React.createElement(() => {\n  const [value, setValue] = React.useState(\"\");\n  const [selected, setSelected] = React.useState([]);\n  const handleInput = event => {\n    setValue(event.target.value);\n  };\n  const handleChange = React.useCallback(({\n    selectedMultiple\n  }) => {\n    setSelected(selectedMultiple);\n  }, []);\n  const transformCollapsedTagText = count => {\n    return `+${count} ${pluralize(count, \"\\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\", \"\\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\", \"\\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\")}`;\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      width: \"400px\"\n    },\n    children: /*#__PURE__*/_jsx(SelectWithTags, {\n      collapseTagList: boolean(\"collapseTagList\", true),\n      moveInputToNewLine: boolean(\"moveInputToNewLine\", true),\n      options: options,\n      block: boolean(\"block\", true),\n      size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"xl\"),\n      disabled: boolean(\"disabled\", false),\n      error: text(\"error\", \"\"),\n      success: boolean(\"success\", false),\n      hint: text(\"hint\", \"\"),\n      Arrow: boolean(\"Arrow\", false) ? Arrow : undefined,\n      circularNavigation: boolean(\"circularNavigation\", false),\n      placeholder: text(\"placeholder\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n      label: text(\"label\", \"\"),\n      autocomplete: boolean(\"autocomplete\", true),\n      onInput: handleInput,\n      transformCollapsedTagText: transformCollapsedTagText,\n      value: value,\n      onChange: handleChange,\n      selected: selected,\n      emptyListPlaceholder: text(\"emptyListPlaceholder\", \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\")\n    })\n  });\n});\nselectWithTags.storyName = 'SelectWithTags';\nselectWithTags.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [value, setValue] = React.useState(\\\"\\\");\\n  const [selected, setSelected] = React.useState([]);\\n  const handleInput = event => {\\n    setValue(event.target.value);\\n  };\\n  const handleChange = React.useCallback(({\\n    selectedMultiple\\n  }) => {\\n    setSelected(selectedMultiple);\\n  }, []);\\n  const transformCollapsedTagText = count => {\\n    return `+${count} ${pluralize(count, \\\"\\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\", \\\"\\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\\u0430\\\", \\\"\\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\\u043E\\\\u0432\\\")}`;\\n  };\\n  return <div style={{\\n    width: \\\"400px\\\"\\n  }}>\\n                <SelectWithTags collapseTagList={boolean(\\\"collapseTagList\\\", true)} moveInputToNewLine={boolean(\\\"moveInputToNewLine\\\", true)} options={options} block={boolean(\\\"block\\\", true)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"xl\\\")} disabled={boolean(\\\"disabled\\\", false)} error={text(\\\"error\\\", \\\"\\\")} success={boolean(\\\"success\\\", false)} hint={text(\\\"hint\\\", \\\"\\\")} Arrow={boolean(\\\"Arrow\\\", false) ? Arrow : undefined} circularNavigation={boolean(\\\"circularNavigation\\\", false)} placeholder={text(\\\"placeholder\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} label={text(\\\"label\\\", \\\"\\\")} autocomplete={boolean(\\\"autocomplete\\\", true)} onInput={handleInput} transformCollapsedTagText={transformCollapsedTagText} value={value} onChange={handleChange} selected={selected} emptyListPlaceholder={text(\\\"emptyListPlaceholder\\\", \\\"\\\\u041D\\\\u0438\\\\u0447\\\\u0435\\\\u0433\\\\u043E \\\\u043D\\\\u0435 \\\\u043D\\\\u0430\\\\u0439\\\\u0434\\\\u0435\\\\u043D\\\\u043E.\\\")} />\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/SelectWithTags',\n  id: 'SelectWithTags',\n  component: SelectWithTags,\n  tags: ['stories-mdx'],\n  includeStories: [\"selectWithTags\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","const getElementSize = (element: HTMLElement, property: string): number => {\n    const size = +window.getComputedStyle(element).getPropertyValue(property).replace('px', '');\n\n    return Number.isNaN(size) ? 0 : size;\n};\n\nconst getTagWidth = (tag: HTMLElement) => {\n    const tagMarginLeft = getElementSize(tag, 'margin-left');\n    const tagMarginRight = getElementSize(tag, 'margin-right');\n\n    return tag.getBoundingClientRect().width + tagMarginRight + tagMarginLeft;\n};\n\nexport const calculateTotalElementsPerRow = (\n    container: HTMLDivElement,\n    input?: HTMLInputElement | null,\n): number => {\n    let containerWidth = container.getBoundingClientRect().width;\n    const containerPaddingLeft = getElementSize(container, 'padding-left');\n    const containerPaddingRight = getElementSize(container, 'padding-right');\n\n    containerWidth -= containerPaddingLeft + containerPaddingRight;\n\n    if (input) {\n        const inputMinWidth = getElementSize(input, 'min-width');\n        const inputMarginLeft = getElementSize(input, 'margin-left');\n        const inputMarginRight = getElementSize(input, 'margin-right');\n        const minInputWidth = inputMarginLeft + inputMarginRight + inputMinWidth;\n\n        containerWidth -= minInputWidth;\n    }\n\n    const tags = container.getElementsByTagName('button');\n    const latestTag = tags[tags.length - 1];\n\n    if (latestTag && latestTag.getAttribute('data-collapse') === 'collapse-last-tag-element') {\n        containerWidth -= getTagWidth(latestTag);\n    }\n    let totalTagsWidth = 0;\n    let totalVisibleElements = 0;\n\n    for (let i = 0; i < tags.length; i++) {\n        const tag = tags[i];\n\n        if (tag.getAttribute('data-collapse') === 'collapse-last-tag-element') {\n            break;\n        }\n        totalTagsWidth += getTagWidth(tag);\n        if (totalTagsWidth < containerWidth) {\n            totalVisibleElements += 1;\n        }\n    }\n\n    return totalVisibleElements;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"tag_FY9oJ\",\"tagNoClose\":\"tagNoClose_bkg0f\",\"tagContentWrap\":\"tagContentWrap_jFIHW\",\"tagCross\":\"tagCross_u6yby\"};","import React, { useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { Tag as CoreTag } from '@alfalab/core-components-tag';\nimport { CrossCompactMIcon } from '@alfalab/icons-glyph/CrossCompactMIcon';\n\nimport { TagComponent } from '../../types';\n\nimport styles from './index.module.css';\n\nexport const Tag: TagComponent = ({\n    option: { content, key },\n    onClick,\n    handleDeleteTag,\n    ...props\n}) => {\n    const handleClick = useCallback(() => {\n        if (handleDeleteTag) {\n            handleDeleteTag(key);\n        }\n    }, [handleDeleteTag, key]);\n\n    return (\n        <CoreTag\n            key={key}\n            size='xxs'\n            onClick={onClick}\n            checked={!!handleDeleteTag}\n            className={cn(styles.tag, { [styles.tagNoClose]: !handleDeleteTag })}\n            {...props}\n        >\n            <span className={styles.tagContentWrap}>\n                {content}\n                {handleDeleteTag && (\n                    // eslint-disable-next-line\n                    <span className={styles.tagCross} onClick={handleClick}>\n                        <CrossCompactMIcon />\n                    </span>\n                )}\n            </span>\n        </CoreTag>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_H8dWc\",\"xl\":\"xl_HnEsq\",\"contentWrapper\":\"contentWrapper_up1O8\",\"l\":\"l_CDm6X\",\"m\":\"m_EyO5x\",\"s\":\"s_Wpirm\",\"contentWrapperVertical\":\"contentWrapperVertical_k4dOj\",\"hasInnerLabel\":\"hasInnerLabel_nUSST\",\"hasTags\":\"hasTags_Wud_3\",\"addons\":\"addons_dGzqn\",\"field\":\"field__FnTv\",\"input\":\"input_LboKB\",\"block\":\"block_qarp_\",\"focusVisible\":\"focusVisible_zDAeu\",\"placeholder\":\"placeholder_sQ_7l\",\"addons-size-m\":\"addons-size-m_XLFhq\",\"addons-size-l\":\"addons-size-l_Cat43\",\"addons-size-xl\":\"addons-size-xl_gDffy\",\"label\":\"label_TVxR9\"};","import React, {\n    ChangeEvent,\n    FC,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    MutableRefObject,\n    ReactNode,\n    useCallback,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { FormControl, FormControlProps } from '@alfalab/core-components-form-control';\nimport { FieldProps } from '@alfalab/core-components-select';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { TagComponent } from '../../types';\nimport { calculateTotalElementsPerRow } from '../../utils/calculate-collapse-size';\nimport { Tag as DefaultTag } from '../tag';\n\nimport styles from './index.module.css';\n\ntype TagListOwnProps = {\n    value?: string;\n    handleDeleteTag?: (key: string) => void;\n    onInput?: (event: ChangeEvent<HTMLInputElement>) => void;\n    inputRef?: MutableRefObject<HTMLInputElement>;\n    autocomplete?: boolean;\n    isPopoverOpen?: boolean;\n    collapseTagList?: boolean;\n    moveInputToNewLine?: boolean;\n    transformCollapsedTagText?: (collapsedCount: number) => string;\n    transformTagText?: (tagText?: ReactNode) => ReactNode;\n    Tag?: TagComponent;\n    handleUpdatePopover?: () => void;\n};\n\nexport const TagList: FC<FieldProps & FormControlProps & TagListOwnProps> = ({\n    size = 'xl',\n    open,\n    disabled,\n    placeholder,\n    selectedMultiple = [],\n    Arrow,\n    innerProps,\n    className,\n    fieldClassName,\n    value = '',\n    autocomplete,\n    label,\n    valueRenderer,\n    onInput,\n    handleDeleteTag,\n    collapseTagList,\n    moveInputToNewLine,\n    transformCollapsedTagText,\n    transformTagText,\n    isPopoverOpen,\n    handleUpdatePopover,\n    Tag = DefaultTag,\n    setSelectedItems,\n    toggleMenu,\n    labelView,\n    ...restProps\n}) => {\n    const [focused, setFocused] = useState(false);\n    const [isShowMoreEnabled, setShowMoreEnabled] = useState<boolean | undefined>(false);\n    const [visibleElements, setVisibleElements] = useState(1);\n    const [inputOnNewLine, setInputOnNewLine] = useState(false);\n\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const contentWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [focusVisible] = useFocus(wrapperRef, 'keyboard');\n    const [inputFocusVisible] = useFocus(inputRef, 'keyboard');\n\n    useLayoutEffect(() => {\n        setShowMoreEnabled(isPopoverOpen);\n    }, [isPopoverOpen]);\n\n    useLayoutEffect(() => {\n        setVisibleElements(selectedMultiple.length);\n        setShowMoreEnabled(false);\n    }, [selectedMultiple]);\n\n    useLayoutEffect(() => {\n        if (collapseTagList && contentWrapperRef.current) {\n            const totalVisibleElements = calculateTotalElementsPerRow(\n                contentWrapperRef.current,\n                autocomplete && inputRef.current ? inputRef.current : null,\n            );\n\n            setVisibleElements(totalVisibleElements);\n        }\n    }, [collapseTagList, visibleElements, autocomplete]);\n\n    const handleFocus = useCallback(() => setFocused(true), []);\n    const handleBlur = useCallback(() => setFocused(false), []);\n\n    const inputTextIsOverflow = useCallback(\n        () => inputRef.current && inputRef.current.scrollWidth > inputRef.current.clientWidth,\n        [],\n    );\n\n    const handleMouseDown = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    }, []);\n\n    const { onClick, ...restInnerProps } = innerProps;\n\n    const handleClick = useCallback<MouseEventHandler<HTMLDivElement>>(\n        (event) => {\n            if (onClick && contentWrapperRef.current) {\n                const eventTarget = event.target as HTMLDivElement;\n\n                const clickedInsideContent =\n                    eventTarget !== contentWrapperRef.current &&\n                    contentWrapperRef.current.contains(eventTarget);\n\n                if (!clickedInsideContent) {\n                    onClick(event);\n                }\n            }\n\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [onClick],\n    );\n\n    const handleKeyDown = useCallback<KeyboardEventHandler<HTMLDivElement>>(\n        (event) => {\n            const lastSelectedTag = selectedMultiple[selectedMultiple.length - 1];\n\n            if (event.key === 'Backspace' && !value && handleDeleteTag && lastSelectedTag) {\n                handleDeleteTag(lastSelectedTag.key);\n            }\n        },\n        [handleDeleteTag, selectedMultiple, value],\n    );\n\n    const toggleShowMoreLessButton = useCallback(\n        (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (event) {\n                event.stopPropagation();\n                setShowMoreEnabled((v) => !v);\n                if (handleUpdatePopover) {\n                    handleUpdatePopover();\n                }\n            }\n        },\n        [handleUpdatePopover],\n    );\n\n    useEffect(() => {\n        /**\n         * Если текст не помещается в инпут, то нужно перенести инпут на новую строку.\n         */\n        if (moveInputToNewLine) {\n            if (inputTextIsOverflow() && !inputOnNewLine) {\n                setInputOnNewLine(true);\n            } else if (value.length === 0) {\n                setInputOnNewLine(false);\n            }\n        }\n    }, [value, inputOnNewLine, inputTextIsOverflow, moveInputToNewLine]);\n\n    const collapseTagTitle = useMemo(() => {\n        if (isShowMoreEnabled) {\n            return 'Свернуть';\n        }\n        if (transformCollapsedTagText) {\n            return transformCollapsedTagText(selectedMultiple.length - visibleElements);\n        }\n\n        return `+${selectedMultiple.length - visibleElements}`;\n    }, [transformCollapsedTagText, isShowMoreEnabled, selectedMultiple.length, visibleElements]);\n\n    const filled = Boolean(selectedMultiple.length > 0) || Boolean(value);\n    const hasInnerLabel = Boolean(label) && labelView !== 'outer';\n\n    /**\n     * Флаг который позволит добавлять класс с вертикальными\n     * отступами если элементы не помещаются в один ряд,\n     * для того чтобы не менялась высота инпута\n     */\n    const shouldAddVerticalMargin = Boolean(\n        (!collapseTagList || isShowMoreEnabled) && !hasInnerLabel,\n    );\n\n    return (\n        <div\n            ref={wrapperRef}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            className={cn(className, styles.component, styles[size])}\n        >\n            <FormControl\n                {...restProps}\n                ref={innerProps.ref}\n                fieldClassName={cn(fieldClassName, styles.field, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                block={true}\n                size={size}\n                focused={open || focused}\n                disabled={disabled}\n                filled={filled || !!placeholder}\n                onMouseDown={handleMouseDown}\n                rightAddons={Arrow}\n                onClick={handleClick}\n                addonsClassName={cn(styles.addons, styles[`addons-size-${size}`])}\n                label={label}\n                labelClassName={styles.label}\n                labelView={labelView}\n            >\n                <div\n                    className={cn(styles.contentWrapper, {\n                        [styles.hasInnerLabel]: hasInnerLabel,\n                        [styles.hasTags]: selectedMultiple.length > 0,\n                        [styles.contentWrapperVertical]: shouldAddVerticalMargin,\n                    })}\n                    ref={contentWrapperRef}\n                >\n                    {selectedMultiple.map((option, index) =>\n                        isShowMoreEnabled || index + 1 <= visibleElements ? (\n                            <Tag\n                                option={{\n                                    ...option,\n                                    content: transformTagText\n                                        ? transformTagText(option.content)\n                                        : option.content,\n                                }}\n                                key={option.key}\n                                handleDeleteTag={handleDeleteTag}\n                            />\n                        ) : null,\n                    )}\n                    {visibleElements < selectedMultiple.length && (\n                        <Tag\n                            data-collapse='collapse-last-tag-element'\n                            onClick={toggleShowMoreLessButton}\n                            option={{\n                                key: 'collapse',\n                                content: collapseTagTitle,\n                            }}\n                        />\n                    )}\n\n                    {autocomplete && (\n                        <input\n                            {...restInnerProps}\n                            autoComplete='off'\n                            ref={inputRef}\n                            value={value}\n                            onChange={onInput}\n                            className={cn(styles.input, {\n                                [styles.focusVisible]: inputFocusVisible,\n                                [styles.block]: inputOnNewLine,\n                            })}\n                            disabled={disabled}\n                            onKeyDown={handleKeyDown}\n                            placeholder={filled ? '' : placeholder}\n                        />\n                    )}\n\n                    {placeholder && !filled && !autocomplete && (\n                        <span className={styles.placeholder}>{placeholder}</span>\n                    )}\n                </div>\n            </FormControl>\n        </div>\n    );\n};\n","import { GroupShape, isGroup, OptionShape } from '@alfalab/core-components-select';\n\nimport { OptionMatcher, SelectWithTagsProps } from '../types';\n\nconst defaultMatch: OptionMatcher = (option, inputValue) =>\n    option.value.toLowerCase().indexOf((inputValue || '').toLowerCase(), 0) !== -1;\n\nconst optionsIsGroupShapes = (options: SelectWithTagsProps['options']): options is GroupShape[] => {\n    const item = options[0];\n\n    if (!item) {\n        return false;\n    }\n\n    return isGroup(item);\n};\n\nexport const filterOptions = (\n    options: SelectWithTagsProps['options'],\n    inputValue: string,\n    math = defaultMatch,\n) => {\n    if (optionsIsGroupShapes(options)) {\n        return options.reduce<GroupShape[]>((acc, group) => {\n            const matchedOptions = group.options.filter((option) => math(option, inputValue));\n\n            if (matchedOptions.length > 0) {\n                acc.push({ ...group, options: matchedOptions });\n\n                return acc;\n            }\n\n            return acc;\n        }, []);\n    }\n\n    return (options as OptionShape[]).filter((option) => math(option, inputValue));\n};\n","import React, { ChangeEvent, forwardRef, useCallback, useRef, useState } from 'react';\n\nimport {\n    Arrow as DefaultArrow,\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    Option as DefaultOption,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { TagList } from './components';\nimport { SelectWithTagsProps } from './types';\nimport { filterOptions } from './utils';\n\nexport const SelectWithTags = forwardRef<HTMLInputElement, SelectWithTagsProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            Arrow = DefaultArrow,\n            value,\n            selected,\n            size = 'xl',\n            onOpen,\n            onInput,\n            onChange,\n            options,\n            autocomplete = true,\n            match,\n            allowUnselect = true,\n            collapseTagList = false,\n            moveInputToNewLine = true,\n            transformCollapsedTagText,\n            transformTagText,\n            Tag,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const controlled = Boolean(selected);\n\n        const [selectedTags, setSelectedTags] = useState(selected || []);\n        const [isPopoverOpen, setPopoverOpen] = useState<boolean | undefined>(false);\n        const updatePopover = useRef(() => null);\n\n        const resetValue = useCallback(() => {\n            const event = { target: { value: '' } };\n\n            onInput(event as ChangeEvent<HTMLInputElement>);\n        }, [onInput]);\n\n        const handleUpdatePopover = useCallback(() => {\n            if (updatePopover && updatePopover.current) {\n                updatePopover.current();\n            }\n        }, []);\n\n        const handleDeleteTag = useCallback(\n            (deletedKey: string) => {\n                let tags = selected || selectedTags;\n\n                tags = tags.filter((tag) => {\n                    const key = typeof tag === 'string' ? tag : tag.key;\n\n                    return deletedKey !== key;\n                });\n\n                if (onChange) {\n                    onChange({ selectedMultiple: tags });\n                }\n\n                if (!controlled) {\n                    setSelectedTags(tags);\n                }\n            },\n            [controlled, onChange, selected, selectedTags],\n        );\n\n        const handleChange = useCallback<Required<BaseSelectProps>['onChange']>(\n            ({ selectedMultiple, name, initiator }) => {\n                if (onChange) {\n                    onChange({ selectedMultiple, name, initiator });\n                }\n\n                if (!controlled) {\n                    setSelectedTags(selectedMultiple);\n                }\n\n                if (value) {\n                    resetValue();\n                }\n            },\n            [onChange, controlled, value, resetValue],\n        );\n\n        const handleOpen = useCallback<Required<BaseSelectProps>['onOpen']>(\n            (payload) => {\n                const { open } = payload;\n\n                if (!open && value) {\n                    resetValue();\n                }\n                setPopoverOpen(open);\n\n                if (onOpen) onOpen(payload);\n            },\n            [onOpen, resetValue, value],\n        );\n\n        const filteredOptions = filterOptions(options, value, match);\n\n        const isAutocomplete = autocomplete || Boolean(match);\n\n        return (\n            <BaseSelect\n                {...restProps}\n                ref={ref}\n                Option={Option}\n                Field={TagList}\n                Optgroup={Optgroup}\n                OptionsList={OptionsList}\n                Arrow={Arrow}\n                multiple={true}\n                updatePopover={updatePopover}\n                allowUnselect={allowUnselect}\n                showEmptyOptionsList={true}\n                fieldProps={{\n                    value,\n                    autocomplete: isAutocomplete,\n                    onInput,\n                    handleDeleteTag,\n                    Tag,\n                    collapseTagList,\n                    moveInputToNewLine,\n                    transformCollapsedTagText,\n                    transformTagText,\n                    handleUpdatePopover,\n                    isPopoverOpen,\n                }}\n                selected={selected || selectedTags}\n                autocomplete={isAutocomplete}\n                size={size}\n                options={filteredOptions}\n                onChange={handleChange}\n                onOpen={handleOpen}\n            />\n        );\n    },\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","pre","live","className","MDXContent","wrapper","MDXLayout","options","content","div","title","component","SelectWithTags","id","name","setValue","selected","setSelected","handleChange","selectedMultiple","style","width","collapseTagList","boolean","moveInputToNewLine","block","size","select","disabled","error","text","success","hint","Arrow","undefined","circularNavigation","placeholder","label","autocomplete","onInput","event","target","transformCollapsedTagText","count","onChange","emptyListPlaceholder","design","description","changelog","of","selectWithTags","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","development","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","getElementSize","property","window","getComputedStyle","getPropertyValue","Number","isNaN","getTagWidth","tagMarginLeft","tagMarginRight","getBoundingClientRect","Tag","_ref$option","option","handleDeleteTag","_objectWithoutProperties","_excluded","handleClick","CoreTag","_objectSpread","checked","CrossCompactMIcon","TagList","_cn2","_cn3","_ref$size","_ref$selectedMultiple","innerProps","fieldClassName","_ref$value","valueRenderer","transformTagText","isPopoverOpen","handleUpdatePopover","_ref$Tag","DefaultTag","labelView","setSelectedItems","toggleMenu","restProps","focused","setFocused","isShowMoreEnabled","setShowMoreEnabled","_useState5","_useState6","visibleElements","setVisibleElements","_useState7","_useState8","inputOnNewLine","setInputOnNewLine","wrapperRef","useRef","inputRef","contentWrapperRef","_useFocus","useFocus","focusVisible","_useFocus3","inputFocusVisible","useLayoutEffect","current","totalVisibleElements","calculateTotalElementsPerRow","container","input","containerWidth","inputMinWidth","getElementsByTagName","latestTag","getAttribute","totalTagsWidth","i","handleFocus","handleBlur","inputTextIsOverflow","scrollWidth","clientWidth","handleMouseDown","preventDefault","restInnerProps","_excluded2","eventTarget","contains","focus","handleKeyDown","lastSelectedTag","toggleShowMoreLessButton","stopPropagation","v","collapseTagTitle","filled","Boolean","hasInnerLabel","shouldAddVerticalMargin","ref","onFocus","onBlur","FormControl","onMouseDown","rightAddons","addonsClassName","labelClassName","map","autoComplete","onKeyDown","defaultMatch","inputValue","indexOf","filterOptions","math","optionsIsGroupShapes","isGroup","group","matchedOptions","forwardRef","_ref$OptionsList","OptionsList","DefaultOptionsList","_ref$Optgroup","Optgroup","DefaultOptgroup","_ref$Option","Option","DefaultOption","_ref$Arrow","DefaultArrow","onOpen","_ref$autocomplete","match","_ref$allowUnselect","allowUnselect","_ref$collapseTagList","_ref$moveInputToNewLi","controlled","selectedTags","setSelectedTags","setPopoverOpen","updatePopover","resetValue","deletedKey","initiator","handleOpen","payload","filteredOptions","isAutocomplete","BaseSelect","Field","multiple","showEmptyOptionsList","fieldProps"],"sourceRoot":""}