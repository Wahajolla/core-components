{"version":3,"file":"input-src-docs-Component-stories-mdx.3b38bd33.iframe.bundle.js","mappings":"sgBAiCO,MAAMA,WAAa,iDAAoB,CAAC,GAWxC,SAASC,kBAAkBC,WAChC,OAMA,SAASC,kBAAkBC,OACzB,MAAMC,cAAgBC,iBAAiBF,MAAMG,YAC7C,OAAO,iDAAoBL,UAAW,IAAIE,MAAOC,6BACnD,CACF,CAWO,SAASC,iBAAiBC,YAC/B,MAAMC,kBAAoB,8CAAiBR,YAG3C,OAAO,4CAAc,IAEO,mBAAfO,WACFA,WAAWC,mBAGb,IAAIA,qBAAsBD,aAChC,CAACC,kBAAmBD,YACzB,CAGA,MAAME,YAAc,CAAC,EAQd,SAASC,aAAY,WAACH,WAAU,SAAEI,SAAQ,qBAAEC,uBAEjD,IAAIP,cAWJ,OAREA,cADEO,qBAEsB,mBAAfL,WACHA,WAAW,CAAC,GACZA,YAAcE,YAEJH,iBAAiBC,YAG5B,iDACLP,WAAWa,SACX,CAACC,MAAOT,eACRM,SAEJ,C,qjBCvGII,kBAAkB,CAACC,KAAK,kDAAgBC,EAAE,qDAAa,mDAAYC,cAAc,cAAc,mCAAAhB,UAAUiB,cAAcC,SAASC,WAAWC,KAAKC,MAAM,CAACC,UAAS,EAAI,CAACC,kCAAkC,MAAO,CAACD,UAAS,EAAG,CAACE,kBAAkBC,KAAK,IAAG,cAACC,eAAeN,KAAKlB,MAAMwB,cAAcD,IAAK,CAACE,SAAS,IAAG,SAACL,UAAUF,KAAKC,OAAM,SAACZ,UAAUW,KAAKlB,MAAM,OAAOoB,SAAS,KAAKb,QAAQ,GAAGmB,aAAa,MAAMX,cAAcG,KAAKO,OAAOE,MAAMC,QAAQC,cAAcC,WAAW,IAAI3B,WAAW,IAAIQ,qBAAqBkB,eAAe1B,YAAY,OAAO,IAAI4B,SAAQ,CAACC,QAAQC,UAAU,wHAAwBC,MAAK,EAAE5B,4BAAe,4DAAc,iDAAoBQ,cAAc,CAACU,cAAcS,OAAOE,IAAIC,KAAKC,UAAU,iDAAoB/B,YAAY,CAACH,uBAAY,iDAAoB,kDAAK,CAACyB,gBAAQC,gCAAkBC,WAAUI,KAAKF,QAAQ,GAAE,EAAGd,KAAKoB,QAAQR,WAAU,4DAAeA,QAAQ,CAAG,E,oiDCEn3B,SAASS,kBAAkBvC,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLjC,KAAM,OACNC,EAAG,IACHiC,GAAI,KACJC,GAAI,OACH,YAAsB/C,MAAMG,YAC/B,OAAO,oBAAM,qBAAW,CACtBI,SAAU,EAAC,mBAAKiC,YAAYG,GAAI,CAC9BK,GAAI,UACJzC,SAAU,YACR,MAAM,mBAAKiC,YAAYI,EAAG,CAC5BrC,SAAU,+FACR,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,uSAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,YACJzC,SAAU,cACR,MAAM,oBAAMiC,YAAYI,EAAG,CAC7BrC,SAAU,CAAC,aAAa,mBAAKiC,YAAY3B,EAAG,CAC1CsC,KAAM,0CACN5C,SAAU,cACR,OACF,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,ssBAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,sBACJzC,SAAU,wBACR,MAAM,mBAAKiC,YAAYI,EAAG,CAC5BrC,SAAU,yMACR,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,mlCAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,4BACJzC,SAAU,8BACR,MAAM,mBAAKiC,YAAYI,EAAG,CAC5BrC,SAAU,6GACR,MAAM,oBAAMiC,YAAYM,GAAI,CAC9BvC,SAAU,CAAC,MAAM,mBAAKiC,YAAYO,GAAI,CACpCxC,SAAU,gHACR,MAAM,mBAAKiC,YAAYO,GAAI,CAC7BxC,SAAU,iHACR,MAAM,mBAAKiC,YAAYO,GAAI,CAC7BxC,SAAU,mCACR,QACF,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,89CAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,UACJzC,SAAU,YACR,MAAM,mBAAKiC,YAAYI,EAAG,CAC5BrC,SAAU,uFACR,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,inDAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,kBACJzC,SAAU,oBACR,MAAM,mBAAKiC,YAAYI,EAAG,CAC5BrC,SAAU,uLACR,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,+eAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,sBACJzC,SAAU,wBACR,MAAM,mBAAKiC,YAAYI,EAAG,CAC5BrC,SAAU,mFACR,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BI,MAAM,EACN1C,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,y5FAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,aACJzC,SAAU,eACR,MAAM,oBAAMiC,YAAYI,EAAG,CAC7BrC,SAAU,CAAC,oCAAoC,mBAAKiC,YAAY3B,EAAG,CACjEsC,KAAM,wCACN5C,SAAU,gBACR,6DAGV,CAOA,gBANA,SAAS6C,WAAWpD,MAAQ,CAAC,GAC3B,MAAOqD,QAASC,WAAab,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAC3E,OAAOmD,WAAY,mBAAKA,UAAWb,OAAOC,OAAO,CAAC,EAAG1C,MAAO,CAC1DO,UAAU,mBAAKgC,kBAAmBvC,UAC9BuC,kBAAkBvC,MAC1B,E,oECzHA,2+CCUA,SAAS,6BAAkBA,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJE,IAAK,MACLjC,KAAM,SACL,YAAsBZ,MAAMG,YAC/B,OAAO,oBAAM,qBAAW,CACtBI,SAAU,EAAC,mBAAKiC,YAAYG,GAAI,CAC9BK,GAAI,cACJzC,SAAU,gBACR,MAAM,mBAAKiC,YAAYK,IAAK,CAC9BtC,UAAU,mBAAKiC,YAAY5B,KAAM,CAC/BsC,UAAW,eACX3C,SAAU,gEAEV,MAAM,mBAAKiC,YAAYG,GAAI,CAC7BK,GAAI,WACJzC,SAAU,aACR,MAAM,mBAAK,QAAW,CACxBgD,GAAI,UAAAC,IACF,MAAM,mBAAKhB,YAAYG,GAAI,CAC7BK,GAAI,aACJzC,SAAU,eACR,MAAM,mBAAK,UAAS,CACtBkD,IAAKC,SAGX,CAOA,gBANA,SAAS,uBAAW1D,MAAQ,CAAC,GAC3B,MAAOqD,QAASC,WAAab,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAC3E,OAAOmD,WAAY,mBAAKA,UAAWb,OAAOC,OAAO,CAAC,EAAG1C,MAAO,CAC1DO,UAAU,mBAAK,6BAAmBP,UAC9B,6BAAkBA,MAC1B,E,67xBCzBA,SAAS,mCAAkBA,OACzB,MAAMwC,YAAcC,OAAOC,OAAO,CAChCiB,IAAK,MACLC,KAAM,SACL,YAAsB5D,MAAMG,YAC/B,OAAoB,oBAAM,qBAAW,CACnCI,SAAU,EAAc,mBAAK,QAAM,CACjCsD,MAAO,mBACPC,UAAW,OAAAC,MACXf,GAAI,UACF,KAAM,MAAmB,mBAAK,QAAO,CACvCgB,KAAM,QACNzD,SAAU,qBAAoB,KAC5B,MAAM0D,QAAS,mBAAAC,QAAO,SAAU,CAAC,UAAW,YAAa,WACzD,OAAoB,mBAAK1B,YAAYmB,IAAK,CACxCQ,MAAO,CACLC,gBAA4B,aAAXH,OAAwB,yCAA2C,cACpFI,QAAS,MACTC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVnE,UAAuB,mBAAK,OAAAwD,MAAO,CACjCY,MAAM,mBAAAT,QAAO,OAAQ,CAAC,SAAU,OAAQ,QAAS,QAAS,WAAY,MAAO,QAAS,QACtFxD,OAAO,mBAAAkE,MAAK,QAAS,IACrBC,OAAO,mBAAAC,SAAQ,SAAS,GACxBC,OAAO,mBAAAD,SAAQ,SAAS,GACxBE,MAAM,mBAAAd,QAAO,OAAQ,CAAC,IAAK,IAAK,IAAK,MAAO,KAC5CD,OAAQA,OACRgB,UAAU,mBAAAH,SAAQ,YAAY,GAC9BI,aAAa,mBAAAN,MAAK,cAAe,IACjCO,OAAO,mBAAAP,MAAK,QAAS,IACrBQ,WAAW,mBAAAlB,QAAO,YAAa,CAAC,QAAS,SAAU,SACnDmB,MAAM,mBAAAT,MAAK,OAAQ,IACnBU,OAAO,mBAAAV,MAAK,QAAS,IACrBW,SAAS,mBAAAT,SAAQ,WAAW,GAC5BU,aAAa,mBAAAV,SAAQ,eAAe,KAAuB,mBAAKW,UAAAA,UAAW,CAAC,GAC5EC,YAAY,mBAAAZ,SAAQ,cAAc,KAAuB,mBAAKW,UAAAA,UAAW,CAAC,GAC1EE,cAAc,mBAAAb,SAAQ,gBAAgB,KAAuB,mBAAKtC,YAAYoB,KAAM,CAClFrD,SAAU,gBAEZqF,UAAU,mBAAAd,SAAQ,YAAY,MAEhC,MAEF,KAAM,MAAmB,mBAAK,UAAiB,CACjDd,KAAM,QACN6B,QAAS,2BACTC,QAAS,iCACTC,OAAQ,2GACRxF,SAAU,4DACR,MAAmB,mBAAK,UAAM,CAChCyF,aAA0B,mBAAK,YAAa,CAAC,GAC7CC,WAAwB,mBAAK,QAAU,CACrC1F,SAAU,+BAEZ2F,aAA0B,mBAAK,YAAa,CAAC,OAGnD,CAaO,MAAMC,MAAQ,IAAM,qBAAoB,KAC7C,MAAMlC,QAAS,mBAAAC,QAAO,SAAU,CAAC,UAAW,YAAa,WACzD,OAAoB,mBAAK,MAAO,CAC9BC,MAAO,CACLC,gBAA4B,aAAXH,OAAwB,yCAA2C,cACpFI,QAAS,MACTC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVnE,UAAuB,mBAAK,OAAAwD,MAAO,CACjCY,MAAM,mBAAAT,QAAO,OAAQ,CAAC,SAAU,OAAQ,QAAS,QAAS,WAAY,MAAO,QAAS,QACtFxD,OAAO,mBAAAkE,MAAK,QAAS,IACrBC,OAAO,mBAAAC,SAAQ,SAAS,GACxBC,OAAO,mBAAAD,SAAQ,SAAS,GACxBE,MAAM,mBAAAd,QAAO,OAAQ,CAAC,IAAK,IAAK,IAAK,MAAO,KAC5CD,OAAQA,OACRgB,UAAU,mBAAAH,SAAQ,YAAY,GAC9BI,aAAa,mBAAAN,MAAK,cAAe,IACjCO,OAAO,mBAAAP,MAAK,QAAS,IACrBQ,WAAW,mBAAAlB,QAAO,YAAa,CAAC,QAAS,SAAU,SACnDmB,MAAM,mBAAAT,MAAK,OAAQ,IACnBU,OAAO,mBAAAV,MAAK,QAAS,IACrBW,SAAS,mBAAAT,SAAQ,WAAW,GAC5BU,aAAa,mBAAAV,SAAQ,eAAe,KAAuB,mBAAKW,UAAAA,UAAW,CAAC,GAC5EC,YAAY,mBAAAZ,SAAQ,cAAc,KAAuB,mBAAKW,UAAAA,UAAW,CAAC,GAC1EE,cAAc,mBAAAb,SAAQ,gBAAgB,KAAuB,mBAAK,OAAQ,CACxEvE,SAAU,gBAEZqF,UAAU,mBAAAd,SAAQ,YAAY,MAEhC,IAEJqB,MAAMC,UAAY,QAClBD,MAAME,WAAa,CACjBC,YAAa,CACXC,OAAQ,wmCAGZ,MAAMC,cAAgB,CACpB3C,MAAO,mBACPb,GAAI,QACJc,UAAW,OAAAC,MACX0C,KAAM,CAAC,eACPC,eAAgB,CAAC,UAEnBF,cAAcH,WAAaG,cAAcH,YAAc,CAAC,EACxDG,cAAcH,WAAWM,KAAO,IAC1BH,cAAcH,WAAWM,MAAQ,CAAC,EACtCC,KA/DF,SAAS,6BAAW5G,MAAQ,CAAC,GAC3B,MACEqD,QAASC,WACPb,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAClD,OAAOmD,WAAyB,mBAAKA,UAAW,IAC3CtD,MACHO,UAAuB,mBAAK,mCAAmB,IAC1CP,UAEF,mCAAkBA,MACzB,GAuDA,mC,gdChJA,uBAA4B,kBAA5B,kBAAqD,a,uECSxC6G,UAAuB,SAAvBA,UAAoBC,MAAmC,IAA7BC,QAAOD,KAAPC,QAAOC,UAAAF,KAAEG,KAAAA,UAAI,IAAAD,WAAQA,UACxD,OACIE,EAAAA,YAAAA,KAAA,OAAKhE,UAAWiE,qBAAGC,uBAAkBH,MAAQG,kBAAa,eAAe7G,SAAEwG,SAEnF,E,s2BCbA,wBAA0B,gBCapBM,gBAAkB,mBAClBC,YAAc,gCAEPC,QAAqB,SAArBA,QAAkBT,MAAmD,IAA7CrD,IAAGqD,KAAHrD,IAAKI,MAAKiD,KAALjD,MAAO2D,WAAUV,KAAVU,WAAUC,UAAAX,KAAEnC,KAAAA,UAAI,IAAA8C,UAAG,OAAMA,UACtEC,WAAwBC,EAAAA,MAAAA,UAAS,IAAGC,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAA7BhE,KAAIkE,WAAA,GAAEE,QAAOF,WAAA,GACpBG,YAAwBJ,EAAAA,MAAAA,WAAUH,YAAWQ,YAAAH,EAAAA,cAAAA,GAAAE,WAAA,GAAtCE,KAAID,WAAA,GAAEE,QAAOF,WAAA,GACdG,OAAkB,SAATxD,KACTyD,OAASD,OAASd,gBAAkBC,YA6B1C,OA3BAe,EAAAA,MAAAA,YAAU,WAKN,IAJA,IAAIC,eAAiBF,OAAOG,KAAK9E,KAE3B+E,WAAa,GAEZF,gBACHE,WAAWC,KAAKH,eAAe,IAC/BA,eAAiBF,OAAOG,KAAK9E,KAGjC,IAAIiF,OAASF,WAAWG,QACpB,SAACC,IAAKC,KAAMC,OACR,IACMC,QADSD,QAAUN,WAAWQ,OAAS,EACpB,GAAK,KAE9B,MAAM,GAANC,OAAUL,KAAGK,OAAGJ,MAAII,OAAGF,QAC3B,GACAZ,OAAS,UAAY,IAGrBA,SACAO,QAAU,KAGdZ,QAAQY,OACZ,GAAG,KAGCQ,EAAAA,YAAAA,MAAA,OAAKhG,UAAWiE,qBAAG,cAAeC,yBAAgB7G,SAAA,CAC7CsD,QAASqD,EAAAA,YAAAA,KAAA,MAAIhE,UAAWiE,qBAAG,SAAU,aAAa5G,SAAEsD,QACpDH,OACGwF,EAAAA,YAAAA,MAAAC,YAAAA,SAAA,CAAA5I,SAAA,CACKiH,aACGN,EAAAA,YAAAA,KAACkC,OAAAA,KAAI,CAACC,KAAK,UAAUC,QAAS,SAAAA,UAAA,OAAMpB,SAASD,KAAK,EAAEsB,QAAM,EAAAhJ,SACrD0H,KAAO,SAAW,aAG1BA,OAAQf,EAAAA,YAAAA,KAACsC,IAAAA,GAAO,CAACC,SAAS,MAAM7I,KAAM8C,KAAMT,MAAM,SAKvE,E,i3NChEA,iCAA4B,kBAA5B,4BAAqD,aAArD,kCAA+E,mBAA/E,4BAAyG,aAAzG,kCAAmI,mBAAnI,6BAA8J,cAA9J,iCAAwL,kBAAxL,8BAAmN,eAAnN,8BAA2O,e,2DCmB9NyG,gBAAkD,SAAlDA,gBAA+C5C,MAAoC,IAAD6C,aAAAC,cAAAC,cAAAC,cAAAC,cAAAC,cAA7BhG,KAAI8C,KAAJ9C,KAAM+B,OAAMe,KAANf,OAAQxF,SAAQuG,KAARvG,SAC5E0J,gBAAoBC,EAAAA,UAAAA,eAAc,cAA3BC,WAAwCtC,EAAAA,cAAAA,GAAAoC,eAAA,GAA/B,GAEVG,YAAcpG,KACfqG,QAAQ,qBAAsB,SAC9BA,QAAQ,2BAA4B,SACpCC,cAECC,WAAU,mEAAAtB,OAAsEmB,aAEhFI,MAAQL,UAAYM,kBAAAA,WAAAA,MAAmBA,kBAAAA,WAAAA,YAE7C,OACIvB,EAAAA,YAAAA,MAAA,OAAKhG,UAAWiE,qBAAG,cAAeC,kCAAkB7G,SAAA,EAChD2G,EAAAA,YAAAA,KAACsD,MAAK,CAACE,IAAI,KAAKrB,KAAK,SAAQ9I,SACxByD,OAEJzD,WACG2G,EAAAA,YAAAA,KAACuD,kBAAAA,WAAAA,KAAe,CACZC,IAAI,IACJrB,KAAK,iBACLnG,UAAWiE,qBAAGC,6BAAWuD,EAAAA,eAAAA,GAAA,GAAKvD,mCAAqB+C,YAAa5J,SAE/DA,YAGT2I,EAAAA,YAAAA,MAAA,OAAKhG,UAAWkE,6BAAa7G,SAAA,EACzB2G,EAAAA,YAAAA,KAAA,KACIhE,UAAWiE,qBAAGC,+BAAauD,EAAAA,eAAAA,GAAA,GACtBvD,mCAAqBrB,SAE1B5C,KACI4C,QACA,uFAEJ6E,OAAO,SAAQrK,SAClB,WAGD2I,EAAAA,YAAAA,MAAA,KAAGhG,UAAWkE,8BAAejE,KAAMoH,WAAYK,OAAO,SAAQrK,SAAA,EAC1D2G,EAAAA,YAAAA,KAAC2D,WAAAA,EAAU,CAACC,KAAK,uCAAuC,gBAKhE5D,EAAAA,YAAAA,KAAC6D,aAAAA,MAAK,CAACC,UAAU,aAAaC,MAAM,SAAS/H,UAAWkE,4BAAY7G,UACnD,QAAZoJ,aAAAuB,uBAAOlH,aAAK,IAAA2F,kBAAA,EAAZA,aAAcwB,UAAW,IACtBjC,EAAAA,YAAAA,MAACuB,kBAAAA,WAAAA,KAAe,CAACpB,KAAK,gBAAgB+B,MAAM,YAAW7K,SAAA,CAAC,iBACrC,KACf2I,EAAAA,YAAAA,MAACE,OAAAA,KAAI,CACDjG,KAAI,2DAAA8F,OAAyE,QAAzEW,cAA6DsB,uBAAOlH,aAAK,IAAA4F,mBAAA,EAAZA,cAAcyB,QAC/ET,OAAO,SACPvB,KAAK,YACLiC,WAAW,EACXzH,MAAM,+BACNX,UAAWkE,iCAAiB7G,SAAA,CAEf,QAFesJ,cAE3BqB,uBAAOlH,aAAK,IAAA6F,mBAAA,EAAZA,cAAcsB,SAAU,KACxBI,EAAAA,SAAAA,IAAsB,QAAbzB,cAACoB,uBAAOlH,aAAK,IAAA8F,mBAAA,EAAZA,cAAcqB,SAAU,UAAW,WAAY,eAE7D,MAAM,IAAc,QAAbpB,cAACmB,uBAAOlH,aAAK,IAAA+F,mBAAA,EAAZA,cAAcyB,QAAS,KAC/BD,EAAAA,SAAAA,IAAsB,QAAbvB,cAACkB,uBAAOlH,aAAK,IAAAgG,mBAAA,EAAZA,cAAcwB,QAAS,QAAS,SAAU,iBAM7E,E,o2BCtFA,uBAAuB,aCYlBC,QAAO,SAAPA,SAAO,OAAPA,QAAO,0BAAPA,QAAO,cAAPA,QAAO,oBAAPA,QAAO,sBAAPA,QAAO,0BAAPA,OAAO,EAAPA,SAAO,IAQNC,UAAQC,UAAA,IAAAhB,EAAAA,eAAAA,GAAAgB,UACTF,QAAQG,YAAc,aAAUjB,EAAAA,eAAAA,GAAAgB,UAChCF,QAAQI,MAAQ,aAAUlB,EAAAA,eAAAA,GAAAgB,UAC1BF,QAAQK,SAAW,mBAAgBnB,EAAAA,eAAAA,GAAAgB,UACnCF,QAAQM,UAAY,eAAYpB,EAAAA,eAAAA,GAAAgB,UAChCF,QAAQO,YAAc,gBAAcL,WAY5BM,KAAkB,SAAlBA,KAAenF,MAOrB,IANHd,YAAWc,KAAXd,YACAhG,MAAK8G,KAAL9G,MACAkM,QAAOpF,KAAPoF,QACAjG,UAASa,KAATb,UAASkG,qBAAArF,KACTsF,gBAAAA,qBAAe,IAAAD,qBAAGV,QAAQG,YAAWO,qBACrCjG,YAAWY,KAAXZ,YAEAwB,WAAgCC,EAAAA,MAAAA,UAASyE,iBAAgBxE,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAAlD2E,SAAQzE,WAAA,GAAE0E,YAAW1E,WAAA,GAEtB2E,cAAeC,EAAAA,MAAAA,cACjB,SAACC,EAACC,OAAsB,IAAlBC,WAAUD,MAAVC,WACFL,YAAYK,WAChB,GACA,IAqCEC,MAAOC,EAAAA,MAAAA,UAAQ,kBAlCF,SAAbC,aACF,MAAO,EACH5F,EAAAA,YAAAA,KAAC6F,YAAAA,IAAG,CAAClJ,MAAO6H,SAASD,QAAQG,aAAc5I,GAAIyI,QAAQG,YAAYrL,SAC9DyF,aADmE,eAGxEhG,OACIkH,EAAAA,YAAAA,KAAC6F,YAAAA,IAAG,CAAClJ,MAAO6H,SAASD,QAAQI,OAAQ7I,GAAIyI,QAAQI,MAAMtL,SAClDP,OADuD,SAG5D,KACJkM,SACIhF,EAAAA,YAAAA,KAAC6F,YAAAA,IAAG,CAAClJ,MAAO6H,SAASD,QAAQK,UAAW9I,GAAIyI,QAAQK,SAASvL,SACxD2L,SAD6D,YAGlE,KACJhG,aACIgB,EAAAA,YAAAA,KAAC6F,YAAAA,IAAG,CACAlJ,MAAO6H,SAASD,QAAQO,aACxBhJ,GAAIyI,QAAQO,YAAYzL,SAGvB2F,aAFG,eAIR,KACJD,WACIiB,EAAAA,YAAAA,KAAC6F,YAAAA,IAAG,CAAClJ,MAAO6H,SAASD,QAAQM,WAAY/I,GAAIyI,QAAQM,UAAUxL,UAC3D2G,EAAAA,YAAAA,KAAA,OAAK/C,MAAO,CAAE6I,UAAW,QAASzM,UAC9B2G,EAAAA,YAAAA,KAACL,UAAS,CAACE,QAASd,eAFwC,aAKpE,MACNgH,OAAOC,MAAAA,eACb,CAE2BJ,EAAY,GAAE,CAAC9G,YAAahG,MAAOkM,UAE9D,OACIhF,EAAAA,YAAAA,KAACiG,YAAAA,eAAc,CACXjK,UAAU,cACVyJ,WAAYN,SACZe,SAAUb,aACVc,mBAAoBjG,uBAAY7G,SAE/BqM,MAGb,E,85CCnGa/B,WAAa,SAAbA,WAAU/D,MAAA,IAAAwG,UAAAxG,KAAMgE,KAAAA,UAAI,IAAAwC,UAAG,UAASA,UAAAC,WAAAzG,KAAE0G,MAAAA,WAAK,IAAAD,WAAG,GAAEA,WAAAE,YAAA3G,KAAE4G,OAAAA,YAAM,IAAAD,YAAG,GAAEA,YAAA,OAClEvG,EAAAA,+CAAAA,KAAA,OAAKyG,MAAM,6BAA6BH,MAAOA,MAAOE,OAAQA,OAAQE,QAAQ,YAAWrN,UACrF2G,EAAAA,+CAAAA,KAAA,QACI2G,SAAS,UACTC,SAAS,UACTC,EAAE,uxBACFjD,KAAMA,QAER,EACRD,WAAAmD,aAAA,iP,6kDCVF,cAAgB,MAAQ,cAAc,cAAgB,sBAAsB,EAAI,UAAU,EAAI,UAAU,EAAI,UAAU,GAAK,WAAW,MAAQ,cAAc,UAAY,kBAAkB,UAAY,kBAAkB,eAAiB,uBAAuB,YAAc,oBAAoB,YAAc,oBAAoB,iBAAmB,yBAAyB,aAAe,qBAAqB,gBAAkB,wBAAwB,iBAAmB,0B,6eCyB3cC,YAAc,CAChBC,QC1BJ,CAAgB,MAAQ,cAAc,cAAgB,sBAAsB,UAAY,kBAAkB,MAAQ,eD2B9GC,SE3BJ,CAAgB,MAAQ,cAAc,cAAgB,sBAAsB,UAAY,kBAAkB,MAAQ,gBF2LrGpK,MAAQqK,MAAAA,YACjB,SAAAtH,KAsCIuH,KACE,IAADC,KAAAC,UAAAzH,KArCG9B,KAAAA,UAAI,IAAAuJ,UAAG,IAAGA,UAAA9G,UAAAX,KACVnC,KAAAA,UAAI,IAAA8C,UAAG,OAAMA,UAAA+G,WAAA1H,KACbjC,MAAAA,WAAK,IAAA2J,YAAQA,WAAAC,YAAA3H,KACb7C,OAAAA,YAAM,IAAAwK,YAAG,UAASA,YAClB9I,aAAYmB,KAAZnB,aACA+I,WAAU5H,KAAV4H,WAAUC,WAAA7H,KACV/B,MAAAA,WAAK,IAAA4J,YAAQA,WACb1J,SAAQ6B,KAAR7B,SACAK,MAAKwB,KAALxB,MACAC,QAAOuB,KAAPvB,QACAF,KAAIyB,KAAJzB,KACAnC,UAAS4D,KAAT5D,UACA0L,eAAc9H,KAAd8H,eACAC,eAAc/H,KAAd+H,eACAC,eAAchI,KAAdgI,eACAC,gBAAejI,KAAfiI,gBACAC,iBAAgBlI,KAAhBkI,iBACAC,gBAAenI,KAAfmI,gBACA9J,MAAK2B,KAAL3B,MAAK+J,eAAApI,KACL1B,UAAAA,eAAS,IAAA8J,eAAG,QAAOA,eACnBxJ,WAAUoB,KAAVpB,WACAyJ,QAAOrI,KAAPqI,QACAC,OAAMtI,KAANsI,OACAhC,SAAQtG,KAARsG,SACAiC,QAAOvI,KAAPuI,QACA/F,QAAOxC,KAAPwC,QACAgG,YAAWxI,KAAXwI,YACAC,UAASzI,KAATyI,UACAC,iBAAgB1I,KAAhB0I,iBACAhK,YAAWsB,KAAXtB,YACA9E,MAAKoG,KAALpG,MACA+O,aAAY3I,KAAZ2I,aACAC,WAAU5I,KAAV4I,WACA9J,SAAQkB,KAARlB,SACG+J,WAASC,EAAAA,wBAAAA,GAAA9I,KAAA+I,WAIVC,kBAAyBC,IAAVrP,MAEfsP,UAAWC,EAAAA,MAAAA,QAAyB,MAE1CC,WAAuBC,EAAAA,IAAAA,IAASH,SAAU,YAAnCI,cAA8CvI,EAAAA,cAAAA,GAAAqI,UAAA,GAAlC,GAEnBxI,WAA8BC,EAAAA,MAAAA,UAASgI,UAAUU,WAAUzI,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAApD4I,QAAO1I,WAAA,GAAE2I,WAAU3I,WAAA,GAC1BG,YAAoCJ,EAAAA,MAAAA,UAAS8H,cAAgB,IAAGzH,YAAAH,EAAAA,cAAAA,GAAAE,WAAA,GAAzDyI,WAAUxI,WAAA,GAAEyI,cAAazI,WAAA,GAE1B0I,OAASC,QAAQb,aAAeU,WAAa9P,OACnDkQ,YAAoCjJ,EAAAA,MAAAA,WAAS,GAAMkJ,YAAAhJ,EAAAA,cAAAA,GAAA+I,WAAA,GAA5CE,WAAUD,WAAA,GAAEE,cAAaF,WAAA,GAG1BG,mBAAqBjM,OAAS2L,SAAWzL,WAAaW,SACtDqL,cAAgB9L,OAAuB,UAAdC,UAEzB8L,kBAAmB1E,EAAAA,MAAAA,cACrB,SAAC2E,OACQvL,UACD2K,YAAW,GAGXpB,SACAA,QAAQgC,MAEhB,GACA,CAAChC,QAASvJ,WAGRwL,iBAAkB5E,EAAAA,MAAAA,cACpB,SAAC2E,OACGZ,YAAW,GAEPnB,QACAA,OAAO+B,MAEf,GACA,CAAC/B,SAGCiC,mBAAoB7E,EAAAA,MAAAA,cACtB,SAAC2E,OACO/D,UACAA,SAAS+D,MAAO,CAAEzQ,MAAOyQ,MAAMvG,OAAOlK,QAGtCoP,cACAW,cAAcU,MAAMvG,OAAOlK,MAEnC,GACA,CAAC0M,SAAU0C,eAGTwB,aAAc9E,EAAAA,MAAAA,cAChB,SAAC2E,OACQH,qBAEDlB,cACAW,cAAc,IAGdpB,SACAA,QAAQ8B,OAGRnB,SAASuB,UAAYjB,SACrBN,SAASuB,QAAQC,QAEzB,GACA,CAACR,mBAAoBV,QAASjB,QAASS,eAGrC2B,sBAAuBjF,EAAAA,MAAAA,cACzB,SAAC2E,OACO3B,kBACAA,iBAAiB2B,OAGrBJ,cAAcI,MAAMO,cAAcC,SAAS,SAC/C,GACA,CAACnC,mBAsDL,OACItI,EAAAA,YAAAA,KAAC0K,oBAAAA,YAAW,CACRvD,IAAKqB,WACLxM,UAAWiE,qBAAGjE,UAAWoN,SAAWtB,iBAAkB0B,QAAUzB,iBAChEL,eAAgBzH,qBAAGyH,gBAAcjE,EAAAA,eAAAA,GAAA,GAC5BvD,aAAAA,aAAsBgJ,eAE3BtB,eAAgBA,eAChBC,gBAAiBA,gBACjB/J,KAAMA,KACNf,OAAQA,OACRY,MAAOA,MACPI,SAAUA,SACVW,SAAUA,SACV8K,OAAQA,QAAUI,YAAcR,QAChCA,QAASA,QACThL,MAAOA,MACPH,MAAOA,MACPC,UAAWA,UACXC,KAAMA,KACNK,WAAYA,WACZF,YAxEkB,SAApBqM,oBAGF,OAFsBb,oBAAsBxL,aAAeF,OAASC,WAI5D2D,EAAAA,YAAAA,MAAC4I,MAAAA,SAAQ,CAAAvR,SAAA,CACJyQ,qBACG9J,EAAAA,YAAAA,KAAC6K,cAAAA,OAAM,CACHpN,KAAK,SACL0E,KAAK,QACLpE,SAAUA,SACV,aAAW,WACX/B,UAAWkE,aAAAA,YACXkC,QAASgI,YACTU,UAAW,EAAEzR,UAEb2G,EAAAA,YAAAA,KAAC+K,iBAAAA,iBAAgB,CACb/O,UAAWiE,qBAAGC,aAAAA,UAAkB6G,YAAYhK,QAAQiO,eAI/D1M,YACAF,QACG4B,EAAAA,YAAAA,KAAA,OAAKhE,UAAWkE,aAAAA,UAAiB7G,UAC7B2G,EAAAA,YAAAA,KAACiL,OAAAA,MAAK,CACF9I,KAAK,OACLrE,KAAK,IACLoN,UAAU,WACVrL,SACIG,EAAAA,YAAAA,KAACmL,uBAAAA,uBAAsB,CAACnP,UAAWkE,aAAAA,qBAKlD7B,UAAYD,QACT4B,EAAAA,YAAAA,KAAA,OAAKhE,UAAWkE,aAAAA,YAAmB7G,UAC/B2G,EAAAA,YAAAA,KAACiL,OAAAA,MAAK,CACF9I,KAAK,OACLrE,KAAK,IACLoN,UAAU,WACVrL,SACIG,EAAAA,YAAAA,KAACoL,qBAAAA,qBAAoB,CAACpP,UAAWkE,aAAAA,yBAQjE,CAuBqByK,GACblM,aAAcA,aACd2D,QAASA,QACTgG,YAAaA,YACbC,UAAWA,UAAUhP,UAErB2G,EAAAA,YAAAA,KAAA,SAAAqL,EAAAA,cAAAA,IAAAA,EAAAA,cAAAA,GAAA,GACQ5C,WAAS,IACbzM,UAAWiE,qBACPC,aAAAA,MACA6G,YAAYhK,QAAQkC,OAAKmI,KAAA,IAAA3D,EAAAA,eAAAA,GAAA2D,KAEpBlH,aAAAA,MAAe9B,QAAKqF,EAAAA,eAAAA,GAAA2D,KACpBL,YAAYhK,QAAQqB,MAAQA,QAAKqF,EAAAA,eAAAA,GAAA2D,KACjClH,aAAOpC,MAAQiM,gBAAatG,EAAAA,eAAAA,GAAA2D,KAC5BlH,aAAAA,cAAuB6J,gBAAatG,EAAAA,eAAAA,GAAA2D,KACpCL,YAAYhK,QAAQgN,cAAgBA,eAAa3C,MAEtDO,gBAEJ5J,SAAUA,SACVmK,OAAQgC,gBACRjC,QAAS+B,iBACT9D,SAAUiE,kBACV7B,iBAAkBiC,qBAClBpD,KAAKmE,EAAAA,qBAAAA,GAAU,CAACnE,IAAK2B,WACrBrL,KAAMA,KACNjE,MAAOoP,aAAeU,WAAa9P,MACnCkF,SAAUA,SACV,eAAc8I,WACd,aAA6B,iBAAVvJ,MAAqBA,WAAQ4K,MAIhE,IAMJhM,MAAM0O,aAAe,CACjBzN,KAAM,IACNL,KAAM,OACNE,OAAO,G","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/input/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/input/src/vars.css?d92b","webpack://@alfalab/core-components/./packages/input/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/input/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/input/src/index.module.css?434b","webpack://@alfalab/core-components/./packages/input/src/Component.tsx","webpack://@alfalab/core-components/./packages/input/src/default.module.css?1ad4","webpack://@alfalab/core-components/./packages/input/src/inverted.module.css?98db"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"размеры\",\n      children: \"Размеры\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Основным типом инпутов в вебе являются инпуты размера M с внутренним расположением лейбла.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Input block={true} label='Текст' size='m' />\\n            <Gap size='m' />\\n            <Input block={true} label='Email' size='m' />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"валидация\",\n      children: \"Валидация\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"См. гайд \", _jsx(_components.a, {\n        href: \"?path=/docs/guidelines-validation--page\",\n        children: \"валидация\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [error, setError] = React.useState(false);\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <div style={{ height: 80 }}>\\n                <Input block={true} label='Текст' size='m' error={error} />\\n            </div>\\n            <Gap size='xl' />\\n            <Button size='xxs' view='secondary' onClick={() => setError(false)}>\\n                По умолчанию\\n            </Button>\\n            <Gap size='s' direction='horizontal' />\\n            <Button size='xxs' view='secondary' onClick={() => setError('Error message')}>\\n                Состояние ошибки\\n            </Button>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"disabled-и-readonly\",\n      children: \"Disabled и ReadOnly\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Доступный только для чтения инпут может быть выбран с клавиатуры, его значение передается при отправке формы.\\nЗаблокированный инпут нельзя выбрать с клавиатуры и его значение не будет отправлено.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [inputProps, setInputProps] = React.useState({});\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <Input block={true} label='Текст' size='m' {...inputProps} />\\n            </div>\\n            <Gap size='xl' />\\n\\n            <Space direction='horizontal' wrap={true}>\\n                <Button size='xxs' view='secondary' onClick={() => setInputProps({})}>\\n                    По умолчанию\\n                </Button>\\n                <Button\\n                    size='xxs'\\n                    view='secondary'\\n                    onClick={() => setInputProps({ disabled: true })}\\n                >\\n                    Заблокирован\\n                </Button>\\n                <Button\\n                    size='xxs'\\n                    view='secondary'\\n                    onClick={() => setInputProps({ readOnly: true })}\\n                >\\n                    Только чтение\\n                </Button>\\n            </Space>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"дополнительная-информация\",\n      children: \"Дополнительная информация\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Для упрощения пользовательского ввода используется несколько паттернов вывода дополнительной информации.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Placeholder — подсказка внутри поля, отображается до тех пор, пока пользователь не начнет вводить значение.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Hint — подсказка под полем. Если поле перейдёт в состоянии ошибки hint будет заменен на сообщение об ошибке.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tooltip — иконка с подсказкой.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [open, setOpen] = React.useState(false);\\n\\n    /* Указать для IconButton через className */\\n    const css = `\\n        button[data-test-id='icon'] {\\n            margin-right: var(--gap-s-neg);\\n        }\\n    `;\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{css}</style>\\n            <Input\\n                block={true}\\n                placeholder='Инпут с плейсхолдером'\\n                size='m'\\n                hint='Подсказка под полем'\\n                rightAddons={\\n                    <TooltipResponsive\\n                        open={open}\\n                        targetClassName='target'\\n                        content={\\n                            <span\\n                                style={{ whiteSpace: 'pre-wrap' }}\\n                            >{`Сообщение тултипа\\\\nотображается при\\\\nнаведении`}</span>\\n                        }\\n                        onOpen={() => setOpen(true)}\\n                        onClose={() => setOpen(false)}\\n                        position='right'\\n                    >\\n                        <IconButton\\n                            view='secondary'\\n                            size='s'\\n                            icon={InformationCircleMIcon}\\n                            dataTestId='icon'\\n                        />\\n                    </TooltipResponsive>\\n                }\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"статусы\",\n      children: \"Статусы\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В некоторых кейсах может потребоваться дополнительная индикация ошибки или успеха.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [success, setSuccess] = React.useState(false);\\n    const [value, setValue] = React.useState('');\\n\\n    /* Не показываем вторую иконку ошибки в теме сайта */\\n    const css = `\\n        :root {\\n            --input-error-icon-display: none;\\n            --input-error-icon-not-alone-display: none;\\n        }\\n    `;\\n\\n    const handleChange = (e) => {\\n        const value = e.target.value;\\n        setValue(value);\\n\\n        if (value.length === 5) {\\n            setSuccess(true);\\n        } else {\\n            setSuccess(false);\\n        }\\n    };\\n\\n    const hasError = value !== '' && !success;\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{css}</style>\\n            <Input\\n                value={value}\\n                block={true}\\n                onChange={handleChange}\\n                placeholder='Введите 5 символов'\\n                size='m'\\n                success={success}\\n                error={hasError}\\n                rightAddons={\\n                    hasError ? (\\n                        <Badge\\n                            view='icon'\\n                            size='m'\\n                            iconColor='negative'\\n                            content={\\n                                <ExclamationCircleMIcon\\n                                    style={{ color: 'var(--color-light-graphic-negative)' }}\\n                                />\\n                            }\\n                        />\\n                    ) : undefined\\n                }\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"крестик-очистки\",\n      children: \"Крестик очистки\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В редких кейсах может потребоваться механика быстрой очистки введенного контента.\\nРекомендуется использовать данную механику точечно, а не глобально ко всем полям большой формы.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [value, setValue] = React.useState('Value');\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Input\\n                value={value}\\n                block={true}\\n                onChange={(e) => setValue(e.target.value)}\\n                label='Label'\\n                size='m'\\n                clear={true}\\n                onClear={() => setValue('')}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"кликабельные-аддоны\",\n      children: \"Кликабельные аддоны\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Для кликабельных адоннов рекомендуем использовать увеличенную область нажатия.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [isVisible, setIsVisible] = React.useState(false);\\n    const [title, setTitle] = React.useState('');\\n    const [valueOne, setValueOne] = React.useState('Value');\\n    const [valueTwo, setValueTwo] = React.useState('Value');\\n\\n    const toggleVisiblity = () => setIsVisible((prev) => !prev);\\n\\n    const singleIcon = () => {\\n        setTitle('Вы восхитительны!');\\n        toggleVisiblity();\\n    };\\n\\n    const leftIcon = () => {\\n        setTitle('Левая');\\n        toggleVisiblity();\\n    };\\n\\n    const rightIcon = () => {\\n        setTitle('Правая');\\n        toggleVisiblity();\\n    };\\n\\n    const hideNotification = React.useCallback(() => setIsVisible(false), []);\\n\\n    const styleWrapperIcons = {\\n        height: '100%',\\n        display: 'flex',\\n        gap: 4,\\n        marginRight: 'var(--gap-xs-neg)',\\n    };\\n\\n    /* Указать для IconButton через className */\\n    const css = `\\n        button[data-test-id='icon'] {\\n            margin-right: var(--gap-s-neg);\\n        }\\n    `;\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{css}</style>\\n            <Input\\n                value={valueOne}\\n                block={true}\\n                onChange={(e) => setValueOne(e.target.value)}\\n                label='Label'\\n                size='m'\\n                rightAddons={\\n                    <IconButton\\n                        view='secondary'\\n                        onClick={singleIcon}\\n                        icon={DiamondsMIcon}\\n                        size='s'\\n                        dataTestId='icon'\\n                    />\\n                }\\n            />\\n            <Gap size='l' />\\n            <Input\\n                value={valueTwo}\\n                block={true}\\n                onChange={(e) => setValueTwo(e.target.value)}\\n                label='Label'\\n                size='m'\\n                rightAddons={\\n                    <div style={styleWrapperIcons}>\\n                        <IconButton\\n                            view='secondary'\\n                            onClick={leftIcon}\\n                            icon={DiamondsMIcon}\\n                            size='xs'\\n                            alignIcon='right'\\n                        />\\n                        <IconButton\\n                            view='secondary'\\n                            onClick={rightIcon}\\n                            icon={FlowerMIcon}\\n                            size='xs'\\n                            alignIcon='left'\\n                        />\\n                    </div>\\n                }\\n            />\\n            <Toast\\n                title={title}\\n                open={isVisible}\\n                onClose={hideNotification}\\n                hasCloser={false}\\n                autoCloseDelay={2000}\\n                style={{ left: '48%' }}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/formcontrol--form-control\",\n        children: \"FormControl\"\n      }), \", поэтому наследует все доступные для него настройки.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    --input-color: var(--color-light-text-primary);\\n    --input-placeholder-color: var(--color-light-text-secondary);\\n    --input-focus-placeholder-color: var(--color-light-text-tertiary);\\n    --input-with-label-placeholder-color: var(--color-light-text-tertiary);\\n    --input-caret-color: var(--input-color);\\n    --input-inverted-color: var(--color-light-text-primary-inverted);\\n    --input-inverted-placeholder-color: var(--color-light-text-secondary-inverted);\\n    --input-inverted-focus-placeholder-color: var(--color-light-text-tertiary-inverted);\\n    --input-inverted-with-label-placeholder-color: var(--color-light-text-tertiary-inverted);\\n    --input-inverted-caret-color: var(--input-inverted-color);\\n\\n    /* disabled */\\n    --input-disabled-color: var(--color-light-text-secondary);\\n    --input-inverted-disabled-color: var(--color-light-text-secondary-inverted);\\n\\n    /* read-only */\\n    --input-read-only-color: var(--color-light-text-secondary);\\n    --input-inverted-read-only-color: var(--color-light-text-secondary-inverted);\\n\\n    /* error */\\n    --input-error-color: var(--color-light-text-primary);\\n    --input-inverted-error-color: var(--color-light-text-primary-inverted);\\n\\n    /* display */\\n    --input-error-icon-display: none;\\n    --input-success-icon-display: block;\\n\\n    /* управляет видимостью иконки ошибки, если она стоит рядом с другой иконкой */\\n    --input-error-icon-not-alone-display: none;\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {CssVars} from 'storybook/blocks';\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {Input as InputTS} from '../Component';\nimport vars from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Input } from '@alfalab/core-components/input';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: InputTS\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: vars\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { StarMIcon } from '@alfalab/icons-glyph/StarMIcon';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Input } from '@alfalab/core-components-input';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Input\",\n      component: Input,\n      id: \"Input\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Input\",\n      children: React.createElement(() => {\n        const colors = select('colors', ['default', 'inverted'], 'default');\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: colors === 'inverted' ? 'var(--color-light-bg-primary-inverted)' : 'transparent',\n            padding: '8px',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          children: /*#__PURE__*/_jsx(Input, {\n            type: select('type', ['number', 'card', 'email', 'money', 'password', 'tel', 'text'], 'text'),\n            value: text('value', ''),\n            block: boolean('block', false),\n            clear: boolean('clear', false),\n            size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n            colors: colors,\n            disabled: boolean('disabled', false),\n            placeholder: text('placeholder', ''),\n            label: text('label', ''),\n            labelView: select('labelView', ['inner', 'outer'], 'inner'),\n            hint: text('hint', ''),\n            error: text('error', ''),\n            success: boolean('success', false),\n            rightAddons: boolean('rightAddons', false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n            leftAddons: boolean('leftAddons', false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n            bottomAddons: boolean('bottomAddons', false) && /*#__PURE__*/_jsx(_components.span, {\n              children: \"bottom text\"\n            }),\n            readOnly: boolean('readOnly', false)\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Input\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/input\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=113%3A67583\",\n      children: \"\\u0414\\u0430\\u0435\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0443\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u043A\\u043B\\u0430\\u0432\\u0438\\u0430\\u0442\\u0443\\u0440\\u044B.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const input = () => React.createElement(() => {\n  const colors = select(\"colors\", [\"default\", \"inverted\"], \"default\");\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: colors === \"inverted\" ? \"var(--color-light-bg-primary-inverted)\" : \"transparent\",\n      padding: \"8px\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    children: /*#__PURE__*/_jsx(Input, {\n      type: select(\"type\", [\"number\", \"card\", \"email\", \"money\", \"password\", \"tel\", \"text\"], \"text\"),\n      value: text(\"value\", \"\"),\n      block: boolean(\"block\", false),\n      clear: boolean(\"clear\", false),\n      size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n      colors: colors,\n      disabled: boolean(\"disabled\", false),\n      placeholder: text(\"placeholder\", \"\"),\n      label: text(\"label\", \"\"),\n      labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n      hint: text(\"hint\", \"\"),\n      error: text(\"error\", \"\"),\n      success: boolean(\"success\", false),\n      rightAddons: boolean(\"rightAddons\", false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n      leftAddons: boolean(\"leftAddons\", false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n      bottomAddons: boolean(\"bottomAddons\", false) && /*#__PURE__*/_jsx(\"span\", {\n        children: \"bottom text\"\n      }),\n      readOnly: boolean(\"readOnly\", false)\n    })\n  });\n});\ninput.storyName = 'Input';\ninput.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const colors = select(\\\"colors\\\", [\\\"default\\\", \\\"inverted\\\"], \\\"default\\\");\\n  return <div style={{\\n    backgroundColor: colors === \\\"inverted\\\" ? \\\"var(--color-light-bg-primary-inverted)\\\" : \\\"transparent\\\",\\n    padding: \\\"8px\\\",\\n    position: \\\"absolute\\\",\\n    top: 0,\\n    left: 0,\\n    right: 0,\\n    bottom: 0\\n  }}>\\n                <Input type={select(\\\"type\\\", [\\\"number\\\", \\\"card\\\", \\\"email\\\", \\\"money\\\", \\\"password\\\", \\\"tel\\\", \\\"text\\\"], \\\"text\\\")} value={text(\\\"value\\\", \\\"\\\")} block={boolean(\\\"block\\\", false)} clear={boolean(\\\"clear\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} colors={colors} disabled={boolean(\\\"disabled\\\", false)} placeholder={text(\\\"placeholder\\\", \\\"\\\")} label={text(\\\"label\\\", \\\"\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} hint={text(\\\"hint\\\", \\\"\\\")} error={text(\\\"error\\\", \\\"\\\")} success={boolean(\\\"success\\\", false)} rightAddons={boolean(\\\"rightAddons\\\", false) && <StarMIcon />} leftAddons={boolean(\\\"leftAddons\\\", false) && <StarMIcon />} bottomAddons={boolean(\\\"bottomAddons\\\", false) && <span>bottom text</span>} readOnly={boolean(\\\"readOnly\\\", false)} />\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Input',\n  id: 'Input',\n  component: Input,\n  tags: ['stories-mdx'],\n  includeStories: [\"input\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_C0d9b\",\"hasInnerLabel\":\"hasInnerLabel_yRnKX\",\"s\":\"s_v1wlX\",\"m\":\"m_o6nWc\",\"l\":\"l_DXDjT\",\"xl\":\"xl_mPIz9\",\"block\":\"block_XBEOs\",\"clearIcon\":\"clearIcon_MoTZM\",\"errorIcon\":\"errorIcon_HsX_x\",\"errorColorIcon\":\"errorColorIcon_y8Bji\",\"clearButton\":\"clearButton_KfeHL\",\"successIcon\":\"successIcon_PtrJ_\",\"successColorIcon\":\"successColorIcon_ePWYD\",\"focusVisible\":\"focusVisible_BEGpe\",\"onautofillstart\":\"onautofillstart_rGNnQ\",\"onautofillcancel\":\"onautofillcancel_o8TSx\"};","import React, {\n    AnimationEvent,\n    ChangeEvent,\n    Fragment,\n    InputHTMLAttributes,\n    MouseEvent,\n    ReactNode,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { Button } from '@alfalab/core-components-button';\nimport { FormControl } from '@alfalab/core-components-form-control';\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { ExclamationCircleMIcon } from '@alfalab/icons-glyph/ExclamationCircleMIcon';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type InputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    | 'size'\n    | 'type'\n    | 'value'\n    | 'defaultValue'\n    | 'onChange'\n    | 'onClick'\n    | 'onMouseDown'\n    | 'enterKeyHint'\n> & {\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Начальное значение поля\n     */\n    defaultValue?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Крестик для очистки поля\n     */\n    clear?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Текст подсказки\n     */\n    hint?: ReactNode;\n\n    /**\n     * Лейбл компонента\n     */\n    label?: React.ReactNode;\n\n    /**\n     * Вид лейбла внутри / снаружи\n     */\n    labelView?: 'inner' | 'outer';\n\n    /**\n     * Атрибут type\n     */\n    type?: 'number' | 'card' | 'email' | 'money' | 'password' | 'tel' | 'text';\n\n    /**\n     * Ref для обертки input\n     */\n    wrapperRef?: React.Ref<HTMLDivElement>;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: React.ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: React.ReactNode;\n\n    /**\n     * Слот под инпутом\n     */\n    bottomAddons?: React.ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    fieldClassName?: string;\n\n    /**\n     * Дополнительный класс инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для лейбла\n     */\n    labelClassName?: string;\n\n    /**\n     * Дополнительный класс для аддонов\n     */\n    addonsClassName?: string;\n\n    /**\n     * Класс, который будет установлен при фокусе\n     */\n    focusedClassName?: string;\n\n    /**\n     * Класс, который будет установлен, если в поле есть значение\n     */\n    filledClassName?: string;\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => void;\n\n    /**\n     * Обработчик нажатия на кнопку очистки\n     */\n    onClear?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Обработчик клика по полю\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseDown по полю\n     */\n    onMouseDown?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseUp по полю\n     */\n    onMouseUp?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n    (\n        {\n            size = 's',\n            type = 'text',\n            block = false,\n            colors = 'default',\n            bottomAddons,\n            dataTestId,\n            clear = false,\n            disabled,\n            error,\n            success,\n            hint,\n            className,\n            fieldClassName,\n            inputClassName,\n            labelClassName,\n            addonsClassName,\n            focusedClassName,\n            filledClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onClear,\n            onClick,\n            onMouseDown,\n            onMouseUp,\n            onAnimationStart,\n            rightAddons,\n            value,\n            defaultValue,\n            wrapperRef,\n            readOnly,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        const [focused, setFocused] = useState(restProps.autoFocus);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const [autofilled, setAutofilled] = useState(false);\n\n        // отображаем крестик только для заполненного и активного инпута\n        const clearButtonVisible = clear && filled && !disabled && !readOnly;\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const handleInputFocus = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                if (!readOnly) {\n                    setFocused(true);\n                }\n\n                if (onFocus) {\n                    onFocus(event);\n                }\n            },\n            [onFocus, readOnly],\n        );\n\n        const handleInputBlur = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                setFocused(false);\n\n                if (onBlur) {\n                    onBlur(event);\n                }\n            },\n            [onBlur],\n        );\n\n        const handleInputChange = useCallback(\n            (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (onChange) {\n                    onChange(event, { value: event.target.value });\n                }\n\n                if (uncontrolled) {\n                    setStateValue(event.target.value);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                if (!clearButtonVisible) return;\n\n                if (uncontrolled) {\n                    setStateValue('');\n                }\n\n                if (onClear) {\n                    onClear(event);\n                }\n\n                if (inputRef.current && !focused) {\n                    inputRef.current.focus();\n                }\n            },\n            [clearButtonVisible, focused, onClear, uncontrolled],\n        );\n\n        const handleAnimationStart = useCallback(\n            (event: AnimationEvent<HTMLInputElement>) => {\n                if (onAnimationStart) {\n                    onAnimationStart(event);\n                }\n\n                setAutofilled(event.animationName.includes('start'));\n            },\n            [onAnimationStart],\n        );\n\n        const renderRightAddons = () => {\n            const addonsVisible = clearButtonVisible || rightAddons || error || success;\n\n            return (\n                addonsVisible && (\n                    <Fragment>\n                        {clearButtonVisible && (\n                            <Button\n                                type='button'\n                                view='ghost'\n                                disabled={disabled}\n                                aria-label='Очистить'\n                                className={styles.clearButton}\n                                onClick={handleClear}\n                                tabIndex={-1}\n                            >\n                                <CrossCircleMIcon\n                                    className={cn(styles.clearIcon, colorStyles[colors].clearIcon)}\n                                />\n                            </Button>\n                        )}\n                        {rightAddons}\n                        {error && (\n                            <div className={styles.errorIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='negative'\n                                    content={\n                                        <ExclamationCircleMIcon className={styles.errorColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                        {success && !error && (\n                            <div className={styles.successIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='positive'\n                                    content={\n                                        <CheckmarkCircleMIcon className={styles.successColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )\n            );\n        };\n\n        return (\n            <FormControl\n                ref={wrapperRef}\n                className={cn(className, focused && focusedClassName, filled && filledClassName)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                labelClassName={labelClassName}\n                addonsClassName={addonsClassName}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                readOnly={readOnly}\n                filled={filled || autofilled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={renderRightAddons()}\n                bottomAddons={bottomAddons}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n            >\n                <input\n                    {...restProps}\n                    className={cn(\n                        styles.input,\n                        colorStyles[colors].input,\n                        {\n                            [styles.error]: error,\n                            [colorStyles[colors].error]: error,\n                            [styles[size]]: hasInnerLabel,\n                            [styles.hasInnerLabel]: hasInnerLabel,\n                            [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                        },\n                        inputClassName,\n                    )}\n                    disabled={disabled}\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    onChange={handleInputChange}\n                    onAnimationStart={handleAnimationStart}\n                    ref={mergeRefs([ref, inputRef])}\n                    type={type}\n                    value={uncontrolled ? stateValue : value}\n                    readOnly={readOnly}\n                    data-test-id={dataTestId}\n                    aria-label={typeof label === 'string' ? label : undefined}\n                />\n            </FormControl>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nInput.defaultProps = {\n    size: 's',\n    type: 'text',\n    block: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_hk5F7\",\"hasInnerLabel\":\"hasInnerLabel_MjKbH\",\"clearIcon\":\"clearIcon_FDQqO\",\"error\":\"error_OKfim\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_qJTKO\",\"hasInnerLabel\":\"hasInnerLabel_XqipF\",\"clearIcon\":\"clearIcon_Nvkp0\",\"error\":\"error_T3UAo\"};"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","ol","li","id","live","className","href","MDXContent","wrapper","MDXLayout","of","I","css","vars","div","span","title","component","Input","name","colors","select","style","backgroundColor","padding","position","top","left","right","bottom","type","text","block","boolean","clear","size","disabled","placeholder","label","labelView","hint","error","success","rightAddons","StarMIcon","leftAddons","bottomAddons","readOnly","version","package","design","description","changelog","development","input","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","_useState","useState","_useState2","_slicedToArray","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","colorStyles","default","inverted","React","ref","_cn2","_ref$size","_ref$block","_ref$colors","dataTestId","_ref$clear","fieldClassName","inputClassName","labelClassName","addonsClassName","focusedClassName","filledClassName","_ref$labelView","onFocus","onBlur","onClear","onMouseDown","onMouseUp","onAnimationStart","defaultValue","wrapperRef","restProps","_objectWithoutProperties","_excluded","uncontrolled","undefined","inputRef","useRef","_useFocus","useFocus","focusVisible","autoFocus","focused","setFocused","stateValue","setStateValue","filled","Boolean","_useState5","_useState6","autofilled","setAutofilled","clearButtonVisible","hasInnerLabel","handleInputFocus","event","handleInputBlur","handleInputChange","handleClear","current","focus","handleAnimationStart","animationName","includes","FormControl","renderRightAddons","Fragment","Button","tabIndex","CrossCircleMIcon","clearIcon","Badge","iconColor","ExclamationCircleMIcon","CheckmarkCircleMIcon","_objectSpread","mergeRefs","defaultProps"],"sourceRoot":""}