{"version":3,"file":"textarea-src-docs-Component-stories-mdx.39716e7d.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/textarea/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/textarea/src/index.module.css?e19f","webpack://@alfalab/core-components/./packages/textarea/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/textarea/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/textarea/src/index.module.css?3463","webpack://@alfalab/core-components/./packages/textarea/src/components/PseudoTextArea.tsx","webpack://@alfalab/core-components/./packages/textarea/src/default.module.css?83a0","webpack://@alfalab/core-components/./packages/textarea/src/Component.tsx","webpack://@alfalab/core-components/./packages/textarea/src/inverted.module.css?fb93"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Компонент текстового поля ввода.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"высота\",\n      children: \"Высота\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Для компонента можно задать одну из механик изменения высоты:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Зафиксировать минимальное и максимальное количество строк.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Задать максимальную высоту.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Сделать изменение высоты автоматическим.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Предоставить пользователю возможность управлять высотой самостоятельно.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const OPTIONS = [\\n    { key: '1', content: 'Нет' },\\n    { key: '2', content: 'Внутри' },\\n    { key: '3', content: 'Снаружи' },\\n];\\nrender(() => {\\n    const [selected, setSelected] = React.useState(OPTIONS[1]);\\n    const handleChange = ({ selected }) => {\\n        if (selected) {\\n            setSelected(selected);\\n        }\\n    };\\n    const visibleLabel = selected.key !== '1'\\n    const positionLabel = visibleLabel && selected.key !== '2' ? 'outer' : 'inner';\\n    return (\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <Select\\n                    label='Лейбл'\\n                    allowUnselect={true}\\n                    block={true}\\n                    size='m'\\n                    options={OPTIONS}\\n                    Option={BaseOption}\\n                    onChange={handleChange}\\n                    selected={selected}\\n                />\\n                <Gap size='xl' />\\n                <Textarea \\n                    label={visibleLabel && 'Автоматическое изменение высоты'} \\n                    block={true}\\n                    labelView={positionLabel}\\n                />\\n                <Gap size='m' />\\n                <Textarea \\n                    label={visibleLabel && 'Высота в три строки'} \\n                    minRows={3} \\n                    autosize={false} \\n                    block={true} \\n                    labelView={positionLabel}\\n                />\\n                <Gap size='m' />\\n                <Textarea\\n                    label={visibleLabel && 'Ручное управление высотой'}\\n                    labelView={positionLabel}\\n                    autosize={false}\\n                    resize='vertical'\\n                    minRows={3}\\n                    block={true}\\n                />\\n            </div>\\n    );\\n});\\n//MOBILE\\nconst OPTIONS = [\\n    { key: '1', content: 'Нет' },\\n    { key: '2', content: 'Внутри' },\\n    { key: '3', content: 'Снаружи' },\\n];\\nrender(() => {\\n    const [selected, setSelected] = React.useState(OPTIONS[1]);\\n    const handleChange = ({ selected }) => {\\n        if (selected) {\\n            setSelected(selected);\\n        }\\n    };\\n    const visibleLabel = selected.key !== '1'\\n    const positionLabel = visibleLabel && selected.key !== '2' ? 'outer' : 'inner';\\n    return (\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <SelectMobile\\n                    label='Лейбл'\\n                    allowUnselect={true}\\n                    block={true}\\n                    size='m'\\n                    options={OPTIONS}\\n                    onChange={handleChange}\\n                    selected={selected}\\n                />\\n                <Gap size='xl' />\\n                <Textarea \\n                    label={visibleLabel && 'Автоматическое изменение высоты'} \\n                    block={true}\\n                    labelView={positionLabel}\\n                />\\n                <Gap size='m' />\\n                <Textarea \\n                    label={visibleLabel && 'Высота в три строки'} \\n                    minRows={3} \\n                    autosize={false} \\n                    block={true} \\n                    labelView={positionLabel}\\n                />\\n                <Gap size='m' />\\n                <Textarea\\n                    label={visibleLabel && 'Ручное управление высотой'}\\n                    labelView={positionLabel}\\n                    autosize={false}\\n                    resize='vertical'\\n                    minRows={3}\\n                    block={true}\\n                />\\n            </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"максимальное-количество-символов\",\n      children: \"Максимальное количество символов\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Можно ограничить количество вводимых символов.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n    <Textarea label='Label' block={true} minRows={3} maxLength={96} showCounter={true} />\\n</div>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Поле ввода является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/formcontrol--form-control\",\n        children: \"FormControl\"\n      }), \",\\nпоэтому наследует все доступные для него настройки.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n@import '../../form-control/src/vars.css';\\n\\n:root {\\n    /* min-height */\\n    --textarea-s-min-height: var(--form-control-s-min-height);\\n    --textarea-m-min-height: var(--form-control-m-min-height);\\n    --textarea-l-min-height: var(--form-control-l-min-height);\\n    --textarea-xl-min-height: var(--form-control-xl-min-height);\\n\\n    /* spacer */\\n    --textarea-spacer-style: solid transparent;\\n    --textarea-s-spacer: 14px;\\n    --textarea-m-spacer: 18px;\\n    --textarea-l-spacer: 22px;\\n    --textarea-xl-spacer: 24px;\\n\\n    /* filled spacer-top */\\n    --textarea-s-filled-spacer-top: 24px;\\n    --textarea-m-filled-spacer-top: 24px;\\n    --textarea-l-filled-spacer-top: 32px;\\n    --textarea-xl-filled-spacer-top: 34px;\\n\\n    /* filled spacer-bottom */\\n    --textarea-s-filled-spacer-bottom: 4px;\\n    --textarea-m-filled-spacer-bottom: 8px;\\n    --textarea-l-filled-spacer-bottom: 12px;\\n    --textarea-xl-filled-spacer-bottom: 14px;\\n\\n    /* filled min-height */\\n    --textarea-s-filled-min-height: calc(\\n        var(--textarea-s-min-height) - var(--textarea-s-filled-spacer-top) -\\n            var(--textarea-s-filled-spacer-bottom)\\n    );\\n    --textarea-m-filled-min-height: calc(\\n        var(--textarea-m-min-height) - var(--textarea-m-filled-spacer-top) -\\n            var(--textarea-m-filled-spacer-bottom)\\n    );\\n    --textarea-l-filled-min-height: calc(\\n        var(--textarea-l-min-height) - var(--textarea-l-filled-spacer-top) -\\n            var(--textarea-l-filled-spacer-bottom)\\n    );\\n    --textarea-xl-filled-min-height: calc(\\n        var(--textarea-xl-min-height) - var(--textarea-xl-filled-spacer-top) -\\n            var(--textarea-xl-filled-spacer-bottom)\\n    );\\n}\\n\\n.textarea {\\n    @mixin paragraph_component;\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    min-height: 100%;\\n    background: none;\\n    border: none;\\n    margin: 0;\\n    outline: none;\\n    box-sizing: border-box;\\n    resize: none;\\n    -webkit-appearance: none;\\n    height: inherit;\\n}\\n\\n.customScrollbar {\\n    @mixin custom-scrollbar;\\n}\\n\\n.textarea::placeholder {\\n    transition: opacity 0.2s ease, color 0.2s ease;\\n}\\n\\n.hasInnerLabel::placeholder {\\n    opacity: 0;\\n}\\n\\n.pseudoTextarea {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    box-sizing: border-box;\\n    word-wrap: break-word;\\n    white-space: pre-wrap;\\n    z-index: -1;\\n    overflow: hidden;\\n    max-height: 100%;\\n    & span {\\n        color: transparent;\\n    }\\n    & .overflow {\\n        background-color: var(--color-light-graphic-negative-alpha-40);\\n    }\\n    &.nativeScrollbar {\\n        overflow: auto;\\n    }\\n}\\n\\n.sub {\\n    @mixin paragraph_component_secondary;\\n    @mixin form-control-sub;\\n}\\n\\n.textarea.hasInnerLabel.hasInnerLabel {\\n    padding-top: 0;\\n    padding-bottom: 0;\\n}\\n\\n/* DISABLED STATE */\\n.textarea:disabled {\\n    cursor: var(--disabled-cursor);\\n    opacity: 1;\\n}\\n\\n/* READ-ONLY STATE */\\n.textarea:read-only {\\n    cursor: var(--disabled-cursor);\\n}\\n\\n/* FOCUS STATE */\\n.textarea:focus.hasInnerLabel::placeholder {\\n    opacity: 1;\\n}\\n\\n.focusVisible {\\n    @mixin focus-outline;\\n}\\n\\n/* FILLED STATE */\\n.textarea.filled.hasInnerLabel {\\n    padding-top: 0;\\n    &.s {\\n        min-height: var(--textarea-s-filled-min-height);\\n    }\\n    &.m {\\n        min-height: var(--textarea-m-filled-min-height);\\n    }\\n    &.l {\\n        min-height: var(--textarea-l-filled-min-height);\\n    }\\n    &.xl {\\n        min-height: var(--textarea-xl-filled-min-height);\\n    }\\n}\\n\\n/* Correct pseudoTextarea size */\\n.pseudoTextarea.filled.hasInnerLabel {\\n    &.s {\\n        min-height: calc(100% - var(--textarea-s-filled-spacer-top));\\n    }\\n\\n    &.m {\\n        min-height: calc(100% - var(--textarea-m-filled-spacer-top));\\n    }\\n\\n    &.l {\\n        min-height: calc(100% - var(--textarea-l-filled-spacer-top));\\n    }\\n\\n    &.xl {\\n        min-height: calc(100% - var(--textarea-xl-filled-spacer-top));\\n    }\\n}\\n\\n.wrapper {\\n    &.resizeVertical {\\n        resize: vertical;\\n        min-height: 48px;\\n    }\\n}\\n\\n/* Border нужен для того чтобы растянуть textarea на всю высоту FormControl , если заменить на padding, то лейбл не будет кликабельный */\\n.textarea {\\n    &.s {\\n        border-top: var(--textarea-s-spacer) var(--textarea-spacer-style);\\n        border-bottom: var(--textarea-s-spacer) var(--textarea-spacer-style);\\n    }\\n\\n    &.m {\\n        border-top: var(--textarea-m-spacer) var(--textarea-spacer-style);\\n        border-bottom: var(--textarea-m-spacer) var(--textarea-spacer-style);\\n    }\\n\\n    &.l {\\n        border-top: var(--textarea-l-spacer) var(--textarea-spacer-style);\\n        border-bottom: var(--textarea-l-spacer) var(--textarea-spacer-style);\\n    }\\n\\n    &.xl {\\n        border-top: var(--textarea-xl-spacer) var(--textarea-spacer-style);\\n        border-bottom: var(--textarea-xl-spacer) var(--textarea-spacer-style);\\n    }\\n\\n    &.hasInnerLabel {\\n        &.s {\\n            border-top: var(--textarea-s-filled-spacer-top) var(--textarea-spacer-style);\\n            border-bottom: var(--textarea-s-filled-spacer-bottom) var(--textarea-spacer-style);\\n        }\\n\\n        &.m {\\n            border-top: var(--textarea-m-filled-spacer-top) var(--textarea-spacer-style);\\n            border-bottom: var(--textarea-m-filled-spacer-bottom) var(--textarea-spacer-style);\\n        }\\n\\n        &.l {\\n            border-top: var(--textarea-l-filled-spacer-top) var(--textarea-spacer-style);\\n            border-bottom: var(--textarea-l-filled-spacer-bottom) var(--textarea-spacer-style);\\n        }\\n\\n        &.xl {\\n            border-top: var(--textarea-xl-filled-spacer-top) var(--textarea-spacer-style);\\n            border-bottom: var(--textarea-xl-filled-spacer-bottom) var(--textarea-spacer-style);\\n        }\\n    }\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {Textarea as TextareaTS} from '../Component';\nimport styles from '!!raw-loader!../index.module.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Textarea } from '@alfalab/core-components/textarea';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: TextareaTS\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: styles\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean, number } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { StarMIcon } from '@alfalab/icons-glyph/StarMIcon';\nimport { Textarea } from '@alfalab/core-components-textarea';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Textarea\",\n      component: Textarea,\n      id: \"Textarea\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Textarea\",\n      children: React.createElement(() => {\n        return /*#__PURE__*/_jsx(Textarea, {\n          showCounter: boolean('showCounter', false),\n          maxLength: number('maxLength', 500),\n          autosize: boolean('autosize', true),\n          allowOverflow: boolean('allowOverflow', true),\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          placeholder: text('placeholder', ''),\n          resize: select('resize', ['none', 'vertical'], 'none'),\n          minRows: number('minRows', undefined),\n          maxRows: number('maxRows', undefined),\n          maxHeight: number('maxHeight', undefined),\n          label: text('label', ''),\n          labelView: select('labelView', ['inner', 'outer'], 'inner'),\n          hint: text('hint', ''),\n          error: text('error', ''),\n          rightAddons: boolean('rightAddons', false) && !text('error') && /*#__PURE__*/_jsx(StarMIcon, {}),\n          leftAddons: boolean('leftAddons', false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n          bottomAddons: boolean('bottomAddons', false) && /*#__PURE__*/_jsx(_components.span, {\n            children: \"bottom text\"\n          }),\n          readOnly: boolean('readOnly', false),\n          nativeScrollbar: boolean('nativeScrollbar', false)\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Textarea\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/textarea\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=113%3A67583\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const textarea = () => React.createElement(() => {\n  return /*#__PURE__*/_jsx(Textarea, {\n    showCounter: boolean(\"showCounter\", false),\n    maxLength: number(\"maxLength\", 500),\n    autosize: boolean(\"autosize\", true),\n    allowOverflow: boolean(\"allowOverflow\", true),\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    placeholder: text(\"placeholder\", \"\"),\n    resize: select(\"resize\", [\"none\", \"vertical\"], \"none\"),\n    minRows: number(\"minRows\", undefined),\n    maxRows: number(\"maxRows\", undefined),\n    maxHeight: number(\"maxHeight\", undefined),\n    label: text(\"label\", \"\"),\n    labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n    hint: text(\"hint\", \"\"),\n    error: text(\"error\", \"\"),\n    rightAddons: boolean(\"rightAddons\", false) && !text(\"error\") && /*#__PURE__*/_jsx(StarMIcon, {}),\n    leftAddons: boolean(\"leftAddons\", false) && /*#__PURE__*/_jsx(StarMIcon, {}),\n    bottomAddons: boolean(\"bottomAddons\", false) && /*#__PURE__*/_jsx(\"span\", {\n      children: \"bottom text\"\n    }),\n    readOnly: boolean(\"readOnly\", false),\n    nativeScrollbar: boolean(\"nativeScrollbar\", false)\n  });\n});\ntextarea.storyName = 'Textarea';\ntextarea.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  return <Textarea showCounter={boolean(\\\"showCounter\\\", false)} maxLength={number(\\\"maxLength\\\", 500)} autosize={boolean(\\\"autosize\\\", true)} allowOverflow={boolean(\\\"allowOverflow\\\", true)} block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} placeholder={text(\\\"placeholder\\\", \\\"\\\")} resize={select(\\\"resize\\\", [\\\"none\\\", \\\"vertical\\\"], \\\"none\\\")} minRows={number(\\\"minRows\\\", undefined)} maxRows={number(\\\"maxRows\\\", undefined)} maxHeight={number(\\\"maxHeight\\\", undefined)} label={text(\\\"label\\\", \\\"\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} hint={text(\\\"hint\\\", \\\"\\\")} error={text(\\\"error\\\", \\\"\\\")} rightAddons={boolean(\\\"rightAddons\\\", false) && !text(\\\"error\\\") && <StarMIcon />} leftAddons={boolean(\\\"leftAddons\\\", false) && <StarMIcon />} bottomAddons={boolean(\\\"bottomAddons\\\", false) && <span>bottom text</span>} readOnly={boolean(\\\"readOnly\\\", false)} nativeScrollbar={boolean(\\\"nativeScrollbar\\\", false)} />;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Textarea',\n  id: 'Textarea',\n  component: Textarea,\n  tags: ['stories-mdx'],\n  includeStories: [\"textarea\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"textarea_eFnZe\",\"customScrollbar\":\"customScrollbar_tmwi2\",\"hasInnerLabel\":\"hasInnerLabel_cVFCc\",\"pseudoTextarea\":\"pseudoTextarea_QqcK5\",\"overflow\":\"overflow_PftLL\",\"nativeScrollbar\":\"nativeScrollbar_JnrBu\",\"sub\":\"sub_rdjjJ\",\"focusVisible\":\"focusVisible_hjd3a\",\"filled\":\"filled_a1dRJ\",\"s\":\"s_LtGs9\",\"m\":\"m_gz3uo\",\"l\":\"l_YuLpX\",\"xl\":\"xl_IfJfI\",\"wrapper\":\"wrapper_xCVU1\",\"resizeVertical\":\"resizeVertical_Wl6Qu\"};","import React, { forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { TextareaIncomeProps } from '../typings';\n\nimport styles from '../index.module.css';\n\ntype PseudoTextAreaProps = {\n    /**\n     * Дополнительный класс компонента\n     */\n    pseudoTextareaClassName?: string;\n    /**\n     * Значение PseudoTextArea, разделяется на 2 части по maxLength\n     */\n    value: string;\n    /**\n     * Максимальное количество символов, символы свыше maxLength будут выделены\n     */\n    maxLength: number;\n} & Pick<TextareaIncomeProps, 'size'>;\n\nexport const PseudoTextArea = forwardRef<HTMLDivElement, PseudoTextAreaProps>(\n    ({ size = 's', pseudoTextareaClassName, maxLength, value }, ref) => (\n        <div\n            className={cn(styles.pseudoTextarea, styles[size], pseudoTextareaClassName)}\n            ref={ref}\n            hidden={true}\n        >\n            <span>{value.slice(0, maxLength)}</span>\n            <span className={cn(styles.overflow)}>{value.slice(maxLength)}</span>\n            {/* Перенос строки нужен для правильной позиции */}\n            <br />\n        </div>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_EIE3e\",\"hasInnerLabel\":\"hasInnerLabel_fe_J3\",\"clearIcon\":\"clearIcon_Kt2sC\",\"error\":\"error_VvdRX\",\"textarea\":\"textarea_gaLkG\",\"hint\":\"hint_buzk6\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport cn from 'classnames';\n\nimport { FormControl } from '@alfalab/core-components-form-control';\nimport { useFocus, useMedia } from '@alfalab/hooks';\n\nimport { PseudoTextArea } from './components';\nimport { TextareaProps } from './typings';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport const getDefaultCounterText = (textLength: number, maxLength = 0): string =>\n    `${textLength}/${maxLength} символов`;\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n    (\n        {\n            autoComplete = 'on',\n            autosize = true,\n            size = 's',\n            colors = 'default',\n            block = false,\n            bottomAddons,\n            fieldClassName,\n            className,\n            dataTestId,\n            disabled,\n            error,\n            hint,\n            textareaClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onHeightChange,\n            rightAddons,\n            maxRows,\n            minRows,\n            maxHeight,\n            resize = 'none',\n            value,\n            defaultValue,\n            rows = autosize ? 1 : 3,\n            showCounter = false,\n            getCounterText = getDefaultCounterText,\n            maxLength,\n            allowOverflow = true,\n            nativeScrollbar: nativeScrollbarProp,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const textareaRef = useRef<HTMLTextAreaElement>(null);\n        const pseudoTextareaRef = useRef<HTMLDivElement>(null);\n\n        const [focused, setFocused] = useState(false);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n        const [scrollPosition, setScrollPosition] = useState(0);\n\n        const [focusVisible] = useFocus(textareaRef, 'keyboard');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const hasOverflow = Boolean(\n            maxLength && allowOverflow && (value?.slice(maxLength) || stateValue.slice(maxLength)),\n        );\n\n        useEffect(() => {\n            const pseudoNode = pseudoTextareaRef.current;\n\n            if (pseudoNode) {\n                pseudoNode.scrollTop = scrollPosition;\n            }\n        }, [scrollPosition, stateValue]);\n\n        // Хак, так как react-textarea-autosize перестал поддерживать maxHeight\n        useEffect(() => {\n            if (autosize && maxHeight && textareaRef.current && textareaRef.current.style) {\n                textareaRef.current.style.maxHeight = `${maxHeight}px`;\n            }\n        }, [autosize, maxHeight]);\n\n        const handleTextareaFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n            setFocused(true);\n\n            if (onFocus) {\n                onFocus(event);\n            }\n        };\n\n        const handleTextareaBlur = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n            setFocused(false);\n\n            if (onBlur) {\n                onBlur(event);\n            }\n        };\n\n        const handleTextareaChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n            const {\n                target: { value: newValue },\n            } = event;\n\n            if (onChange) {\n                onChange(event, { value: newValue });\n            }\n\n            if (uncontrolled) {\n                setStateValue(newValue);\n            }\n        };\n\n        const handleTeaxtareaScroll = (event: React.UIEvent) => {\n            if (maxLength) {\n                const val = (event.target as HTMLElement).scrollTop;\n\n                setScrollPosition(val);\n            }\n        };\n\n        const getValueLength = (): number => {\n            if (uncontrolled) {\n                return stateValue.length;\n            }\n\n            return (value as string).length;\n        };\n\n        const textareaClassNameCalc = cn(\n            styles.textarea,\n            colorStyles[colors].textarea,\n            styles[size],\n            {\n                [styles.customScrollbar]: !nativeScrollbar,\n                [styles.hasInnerLabel]: hasInnerLabel,\n                [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                [styles.filled]: filled,\n            },\n            textareaClassName,\n        );\n\n        const textareaProps = {\n            ...restProps,\n            className: textareaClassNameCalc,\n            autoComplete,\n            disabled,\n            maxLength: allowOverflow ? undefined : maxLength,\n            onBlur: handleTextareaBlur,\n            onFocus: handleTextareaFocus,\n            onChange: handleTextareaChange,\n            value: uncontrolled ? stateValue : value,\n            rows,\n            ref: mergeRefs([ref, textareaRef]),\n            'data-test-id': dataTestId,\n            onScroll: handleTeaxtareaScroll,\n        };\n\n        const getBottomAddons = () => {\n            const counterIsVisible = Boolean(maxLength && showCounter);\n\n            return (\n                <React.Fragment>\n                    {counterIsVisible && (\n                        <span\n                            className={cn(styles.sub, {\n                                [colorStyles[colors].error]: hasOverflow,\n                                [colorStyles[colors].hint]: !hasOverflow,\n                            })}\n                        >\n                            {getCounterText(getValueLength(), maxLength)}\n                        </span>\n                    )}\n                    {bottomAddons}\n                </React.Fragment>\n            );\n        };\n\n        return (\n            <FormControl\n                className={cn(className)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                inputWrapperClassName={cn(styles.wrapper, styles[size], {\n                    [styles.hasInnerLabel]: hasInnerLabel,\n                    [styles.resizeVertical]: resize === 'vertical',\n                })}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                filled={filled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={rightAddons}\n                bottomAddons={getBottomAddons()}\n            >\n                <React.Fragment>\n                    {hasOverflow && (\n                        <PseudoTextArea\n                            value={value ?? stateValue}\n                            size={size}\n                            maxLength={maxLength as number}\n                            pseudoTextareaClassName={cn(textareaClassNameCalc, {\n                                [styles.nativeScrollbar]: nativeScrollbar,\n                            })}\n                            ref={pseudoTextareaRef}\n                        />\n                    )}\n                    {autosize ? (\n                        <TextareaAutosize\n                            {...textareaProps}\n                            maxRows={maxRows}\n                            minRows={minRows}\n                            onHeightChange={onHeightChange}\n                        />\n                    ) : (\n                        <textarea {...textareaProps} style={{ maxHeight }} />\n                    )}\n                </React.Fragment>\n            </FormControl>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_gbNCi\",\"hasInnerLabel\":\"hasInnerLabel_mi2vV\",\"clearIcon\":\"clearIcon_B6A9F\",\"error\":\"error_Opext\",\"textarea\":\"textarea_k6pha\",\"hint\":\"hint_eswZv\"};"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","h2","ol","li","pre","id","live","className","href","MDXContent","wrapper","MDXLayout","of","css","span","title","component","Textarea","name","showCounter","boolean","maxLength","number","autosize","allowOverflow","block","size","select","disabled","placeholder","text","resize","minRows","undefined","maxRows","maxHeight","label","labelView","hint","error","rightAddons","StarMIcon","leftAddons","bottomAddons","readOnly","nativeScrollbar","version","package","design","description","changelog","development","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","PseudoTextArea","forwardRef","ref","_ref$size","pseudoTextareaClassName","hidden","slice","colorStyles","default","inverted","getDefaultCounterText","textLength","_cn","_cn4","_ref$autoComplete","autoComplete","_ref$autosize","_ref$colors","colors","_ref$block","fieldClassName","dataTestId","textareaClassName","_ref$labelView","onFocus","onBlur","onHeightChange","_ref$resize","defaultValue","_ref$rows","rows","_ref$showCounter","_ref$getCounterText","getCounterText","_ref$allowOverflow","nativeScrollbarProp","restProps","_objectWithoutProperties","_excluded","uncontrolled","_useMedia","useMedia","Boolean","textareaRef","useRef","pseudoTextareaRef","focused","setFocused","stateValue","setStateValue","_useState5","_useState6","scrollPosition","setScrollPosition","_useFocus","useFocus","focusVisible","filled","hasInnerLabel","hasOverflow","pseudoNode","current","scrollTop","getValueLength","textareaClassNameCalc","textarea","textareaProps","_objectSpread","handleTextareaBlur","event","handleTextareaFocus","handleTextareaChange","newValue","mergeRefs","onScroll","handleTeaxtareaScroll","val","FormControl","inputWrapperClassName","getBottomAddons","_cn2","counterIsVisible","React","TextareaAutosize"],"sourceRoot":""}