{"version":3,"file":"date-input-src-docs-Component-stories-mdx.10abc737.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/date-input/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/date-input/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/date-input/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/date-input/src/index.module.css?4373","webpack://@alfalab/core-components/./packages/date-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/date-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-input/src/utils/native-supports.ts"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {DateInput as DateInputTS} from '../Component';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { DateInput } from '@alfalab/core-components/date-input';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: DateInputTS\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"стандартный-вид-компонента\",\n      children: \"Стандартный вид компонента\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Поле ввода с маской ДД.ММ.ГГГГ.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"<div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n    <DateInput label='Дата зимнего солнцестояния' size='m' />\\n</div>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Поле ввода является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/components-formcontrol--docs\",\n        children: \"FormControl\"\n      }), \",\\nпоэтому наследует все доступные для него настройки. Пикер это\\n\", _jsx(_components.a, {\n        href: \"?path=/docs/components-calendar--docs\",\n        children: \"Calendar\"\n      }), \"\\nв \", _jsx(_components.a, {\n        href: \"?path=/docs/components-popover--docs\",\n        children: \"Popover\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { DateInput } from '@alfalab/core-components-date-input';\nimport packageJson from '../../package.json';\nimport Development from './development.mdx';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/DateInput\",\n      component: DateInput,\n      id: \"DateInput\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"DateInput\",\n      children: /*#__PURE__*/_jsx(DateInput, {\n        block: boolean('block', false),\n        size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n        error: text('error', ''),\n        hint: text('hint', ''),\n        label: text('label', '')\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"DateInput\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/date-input\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=55547%3A52787\",\n      children: \"\\u041F\\u043E\\u043B\\u0435 \\u0434\\u043B\\u044F \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u0438\\u044F \\u0434\\u0430\\u0442\\u044B.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const dateInput = () => /*#__PURE__*/_jsx(DateInput, {\n  block: boolean(\"block\", false),\n  size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n  error: text(\"error\", \"\"),\n  hint: text(\"hint\", \"\"),\n  label: text(\"label\", \"\")\n});\ndateInput.storyName = 'DateInput';\ndateInput.parameters = {\n  storySource: {\n    source: '<DateInput block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} error={text(\\\"error\\\", \\\"\\\")} hint={text(\\\"hint\\\", \\\"\\\")} label={text(\\\"label\\\", \\\"\\\")} />'\n  }\n};\nconst componentMeta = {\n  title: 'Components/DateInput',\n  id: 'DateInput',\n  component: DateInput,\n  tags: ['stories-mdx'],\n  includeStories: [\"dateInput\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"nativeInput\":\"nativeInput_vCIEk\"};","import React, {\n    ChangeEvent,\n    FocusEvent,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport {\n    format,\n    formatDate,\n    isCompleteDateInput,\n    isInputDateSupported,\n    isValid,\n    NATIVE_DATE_FORMAT,\n    parseDateString,\n} from './utils';\n\nimport styles from './index.module.css';\n\nexport type DateInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Управление нативным режимом на мобильных устройствах\n     */\n    mobileMode?: 'input' | 'native';\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { date: Date; value: string },\n    ) => void;\n};\n\nexport const DateInput = forwardRef<HTMLInputElement, DateInputProps>(\n    (\n        {\n            mobileMode = 'input',\n            defaultValue = '',\n            rightAddons,\n            error,\n            value: propValue,\n            onBlur,\n            onChange,\n            onComplete,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [shouldRenderNative, setShouldRenderNative] = useState(false);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n\n        const handleChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                const { value: newValue } = event.target;\n\n                // Позволяем вводить только цифры и точки\n                if (/[^\\d.]/.test(newValue)) {\n                    return;\n                }\n\n                const dots = newValue.match(/\\./g);\n\n                // Не даем вводить больше, чем 2 точки\n                if (dots && dots.length > 2) {\n                    return;\n                }\n\n                // Форматируем введенное значение (добавляем точки)\n                const formattedValue = format(newValue);\n                const date = parseDateString(formattedValue);\n\n                setValue(formattedValue);\n\n                if (onChange) onChange(event, { date, value: formattedValue });\n\n                if (isCompleteDateInput(formattedValue)) {\n                    const valid = formattedValue.length > 0 && isValid(formattedValue);\n\n                    if (!valid) return;\n\n                    if (onComplete) onComplete(event, { date, value: formattedValue });\n                }\n            },\n            [onChange, onComplete],\n        );\n\n        const handleNativeInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                const newDate = parseDateString(event.target.value, NATIVE_DATE_FORMAT);\n                const newValue = event.target.value === '' ? '' : formatDate(newDate);\n\n                setValue(newValue);\n\n                if (onComplete) onComplete(event, { date: newDate, value: newValue });\n                if (onChange) onChange(event, { date: newDate, value: newValue });\n            },\n            [onComplete, onChange],\n        );\n\n        const handleBlur = useCallback(\n            (event: FocusEvent<HTMLInputElement>) => {\n                if (onBlur) onBlur(event);\n            },\n            [onBlur],\n        );\n\n        useEffect(() => {\n            if (mobileMode === 'native' && isInputDateSupported()) {\n                setShouldRenderNative(true);\n            }\n        }, [mobileMode]);\n\n        useEffect(() => {\n            if (typeof propValue !== 'undefined') {\n                setValue(propValue);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [propValue]);\n\n        return (\n            <Input\n                {...restProps}\n                ref={mergeRefs([ref, inputRef])}\n                value={value}\n                inputMode='decimal'\n                pattern='[0-9\\.]*'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder='ДД.ММ.ГГГГ'\n                error={error}\n                rightAddons={\n                    <React.Fragment>\n                        {rightAddons}\n\n                        {shouldRenderNative && (\n                            <input\n                                type='date'\n                                ref={ref}\n                                defaultValue={defaultValue}\n                                onChange={handleNativeInputChange}\n                                className={styles.nativeInput}\n                            />\n                        )}\n                    </React.Fragment>\n                }\n            />\n        );\n    },\n);\n","import dateFnsFormat from 'date-fns/format';\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const NATIVE_DATE_FORMAT = 'yyyy-MM-dd';\nexport const DATE_MASK = [/\\d/, /\\d/, '.', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/];\n\nexport const isCompleteDateInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const formatDate = (date: Date | number, dateFormat = DATE_FORMAT) =>\n    dateFnsFormat(date, dateFormat);\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\nexport const isValid = (inputValue?: string) =>\n    !inputValue || (isCompleteDateInput(inputValue) && dateFnsIsValid(parseDateString(inputValue)));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d).*/, '$1') // 12.12.20056 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 01.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 01..2005123123 => 01..2005\n        .replace(/^(\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 1..2005123123 => 1..2005\n        .replace(/^()\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // ..2005123123 => ..2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n","/**\n * Возвращает `true`, если поддерживается `input[type=\"date\"]`\n */\nexport function isInputDateSupported() {\n    const input = document.createElement('input');\n    const value = 'a';\n\n    input.setAttribute('type', 'date');\n    input.setAttribute('value', value);\n\n    return input.value !== value;\n}\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","pre","id","className","of","MDXContent","wrapper","MDXLayout","p","live","href","title","component","DateInput","name","block","boolean","size","select","error","text","hint","label","version","package","design","description","changelog","development","dateInput","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","forwardRef","ref","_ref$mobileMode","mobileMode","_ref$defaultValue","defaultValue","rightAddons","propValue","onBlur","onComplete","restProps","_objectWithoutProperties","_excluded","inputRef","useRef","shouldRenderNative","setShouldRenderNative","setValue","event","newValue","test","dots","match","formattedValue","format","date","parseDateString","isCompleteDateInput","isValid","handleNativeInputChange","newDate","NATIVE_DATE_FORMAT","formatDate","handleBlur","isInputDateSupported","Input","_objectSpread","mergeRefs","inputMode","pattern","placeholder","React","DATE_FORMAT","DATE_MASK","input","dateFormat","undefined","dateFnsFormat","parse","Date","inputValue","dateFnsIsValid","document","createElement","setAttribute"],"sourceRoot":""}