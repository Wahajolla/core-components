{"version":3,"file":"input-src-docs-Component-docs-mdx.be3ea18e.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/input/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/input/src/vars.css?d92b","webpack://@alfalab/core-components/./packages/input/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/input/src/docs/Component.docs.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/input/src/components/base-input/index.module.css?36f6","webpack://@alfalab/core-components/./packages/input/src/components/base-input/Component.tsx","webpack://@alfalab/core-components/./packages/input/src/components/base-input/default.module.css?d092","webpack://@alfalab/core-components/./packages/input/src/components/base-input/inverted.module.css?e8a9","webpack://@alfalab/core-components/./packages/utils/isClient.ts"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"размеры\",\n      children: \"Размеры\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Основным типом инпутов в вебе являются инпуты размера M с внутренним расположением лейбла.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Input block={true} label='Текст' size='m' />\\n            <Gap size='m' />\\n            <Input block={true} label='Email' size='m' />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"валидация\",\n      children: \"Валидация\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"См. гайд \", _jsx(_components.a, {\n        href: \"?path=/docs/patterns-%D0%B2%D0%B0%D0%BB%D0%B8%D0%B4%D0%B0%D1%86%D0%B8%D1%8F--docs\",\n        children: \"валидация\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [error, setError] = React.useState(false);\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <div style={{ height: 80 }}>\\n                <Input block={true} label='Текст' size='m' error={error} />\\n            </div>\\n            <Gap size='xl' />\\n            <Button size='xxs' view='secondary' onClick={() => setError(false)}>\\n                По умолчанию\\n            </Button>\\n            <Gap size='s' direction='horizontal' />\\n            <Button size='xxs' view='secondary' onClick={() => setError('Error message')}>\\n                Состояние ошибки\\n            </Button>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"disabled-и-readonly\",\n      children: \"Disabled и ReadOnly\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Доступный только для чтения инпут может быть выбран с клавиатуры, его значение передается при отправке формы.\\nЗаблокированный инпут нельзя выбрать с клавиатуры и его значение не будет отправлено.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [inputProps, setInputProps] = React.useState({});\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <Input block={true} label='Текст' size='m' {...inputProps} />\\n            </div>\\n            <Gap size='xl' />\\n\\n            <Space direction='horizontal' wrap={true}>\\n                <Button size='xxs' view='secondary' onClick={() => setInputProps({})}>\\n                    По умолчанию\\n                </Button>\\n                <Button\\n                    size='xxs'\\n                    view='secondary'\\n                    onClick={() => setInputProps({ disabled: true })}\\n                >\\n                    Заблокирован\\n                </Button>\\n                <Button\\n                    size='xxs'\\n                    view='secondary'\\n                    onClick={() => setInputProps({ readOnly: true })}\\n                >\\n                    Только чтение\\n                </Button>\\n            </Space>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"дополнительная-информация\",\n      children: \"Дополнительная информация\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Для упрощения пользовательского ввода используется несколько паттернов вывода дополнительной информации.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Placeholder — подсказка внутри поля, отображается до тех пор, пока пользователь не начнет вводить значение.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Hint — подсказка под полем. Если поле перейдёт в состоянии ошибки hint будет заменен на сообщение об ошибке.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tooltip — иконка с подсказкой.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [open, setOpen] = React.useState(false);\\n\\n    /* Указать для IconButton через className */\\n    const css = `\\n        button[data-test-id='icon'] {\\n            margin-right: var(--gap-s-neg);\\n        }\\n    `;\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{css}</style>\\n            <Input\\n                block={true}\\n                placeholder='Инпут с плейсхолдером'\\n                size='m'\\n                hint='Подсказка под полем'\\n                rightAddons={\\n                    <TooltipResponsive\\n                        open={open}\\n                        targetClassName='target'\\n                        content={\\n                            <span\\n                                style={{ whiteSpace: 'pre-wrap' }}\\n                            >{`Сообщение тултипа\\\\nотображается при\\\\nнаведении`}</span>\\n                        }\\n                        onOpen={() => setOpen(true)}\\n                        onClose={() => setOpen(false)}\\n                        position='right'\\n                    >\\n                        <IconButton\\n                            view='secondary'\\n                            size='s'\\n                            icon={InformationCircleMIcon}\\n                            dataTestId='icon'\\n                        />\\n                    </TooltipResponsive>\\n                }\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"статусы\",\n      children: \"Статусы\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В некоторых кейсах может потребоваться дополнительная индикация ошибки или успеха.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [success, setSuccess] = React.useState(false);\\n    const [value, setValue] = React.useState('');\\n\\n    /* Не показываем вторую иконку ошибки в теме сайта */\\n    const css = `\\n        :root {\\n            --input-error-icon-display: none;\\n            --input-error-icon-not-alone-display: none;\\n        }\\n    `;\\n\\n    const handleChange = (e) => {\\n        const value = e.target.value;\\n        setValue(value);\\n\\n        if (value.length === 5) {\\n            setSuccess(true);\\n        } else {\\n            setSuccess(false);\\n        }\\n    };\\n\\n    const hasError = value !== '' && !success;\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{css}</style>\\n            <Input\\n                value={value}\\n                block={true}\\n                onChange={handleChange}\\n                placeholder='Введите 5 символов'\\n                size='m'\\n                success={success}\\n                error={hasError}\\n                rightAddons={\\n                    hasError ? (\\n                        <Badge\\n                            view='icon'\\n                            size='m'\\n                            iconColor='negative'\\n                            content={\\n                                <ExclamationCircleMIcon\\n                                    style={{ color: 'var(--color-light-graphic-negative)' }}\\n                                />\\n                            }\\n                        />\\n                    ) : undefined\\n                }\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"крестик-очистки\",\n      children: \"Крестик очистки\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В редких кейсах может потребоваться механика быстрой очистки введенного контента.\\nРекомендуется использовать данную механику точечно, а не глобально ко всем полям большой формы.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [value, setValue] = React.useState('Value');\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <Input\\n                value={value}\\n                block={true}\\n                onChange={(e) => setValue(e.target.value)}\\n                label='Label'\\n                size='m'\\n                clear={true}\\n                onClear={() => setValue('')}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"кликабельные-аддоны\",\n      children: \"Кликабельные аддоны\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Для кликабельных адоннов рекомендуем использовать увеличенную область нажатия.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [isVisible, setIsVisible] = React.useState(false);\\n    const [title, setTitle] = React.useState('');\\n    const [valueOne, setValueOne] = React.useState('Value');\\n    const [valueTwo, setValueTwo] = React.useState('Value');\\n\\n    const toggleVisiblity = () => setIsVisible((prev) => !prev);\\n\\n    const singleIcon = () => {\\n        setTitle('Вы восхитительны!');\\n        toggleVisiblity();\\n    };\\n\\n    const leftIcon = () => {\\n        setTitle('Левая');\\n        toggleVisiblity();\\n    };\\n\\n    const rightIcon = () => {\\n        setTitle('Правая');\\n        toggleVisiblity();\\n    };\\n\\n    const hideNotification = React.useCallback(() => setIsVisible(false), []);\\n\\n    const styleWrapperIcons = {\\n        height: '100%',\\n        display: 'flex',\\n        gap: 4,\\n        marginRight: 'var(--gap-xs-neg)',\\n    };\\n\\n    /* Указать для IconButton через className */\\n    const css = `\\n        button[data-test-id='icon'] {\\n            margin-right: var(--gap-s-neg);\\n        }\\n    `;\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <style>{css}</style>\\n            <Input\\n                value={valueOne}\\n                block={true}\\n                onChange={(e) => setValueOne(e.target.value)}\\n                label='Label'\\n                size='m'\\n                rightAddons={\\n                    <IconButton\\n                        view='secondary'\\n                        onClick={singleIcon}\\n                        icon={DiamondsMIcon}\\n                        size='s'\\n                        dataTestId='icon'\\n                    />\\n                }\\n            />\\n            <Gap size='l' />\\n            <Input\\n                value={valueTwo}\\n                block={true}\\n                onChange={(e) => setValueTwo(e.target.value)}\\n                label='Label'\\n                size='m'\\n                rightAddons={\\n                    <div style={styleWrapperIcons}>\\n                        <IconButton\\n                            view='secondary'\\n                            onClick={leftIcon}\\n                            icon={DiamondsMIcon}\\n                            size='xs'\\n                            alignIcon='right'\\n                        />\\n                        <IconButton\\n                            view='secondary'\\n                            onClick={rightIcon}\\n                            icon={FlowerMIcon}\\n                            size='xs'\\n                            alignIcon='left'\\n                        />\\n                    </div>\\n                }\\n            />\\n            <Toast\\n                title={title}\\n                open={isVisible}\\n                onClose={hideNotification}\\n                hasCloser={false}\\n                autoCloseDelay={2000}\\n                style={{ left: '48%' }}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/components-formcontrol--docs\",\n        children: \"FormControl\"\n      }), \", поэтому наследует все доступные для него настройки.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    --input-color: var(--color-light-text-primary);\\n    --input-placeholder-color: var(--color-light-text-secondary);\\n    --input-focus-placeholder-color: var(--color-light-text-tertiary);\\n    --input-with-label-placeholder-color: var(--color-light-text-tertiary);\\n    --input-caret-color: var(--input-color);\\n    --input-inverted-color: var(--color-light-text-primary-inverted);\\n    --input-inverted-placeholder-color: var(--color-light-text-secondary-inverted);\\n    --input-inverted-focus-placeholder-color: var(--color-light-text-tertiary-inverted);\\n    --input-inverted-with-label-placeholder-color: var(--color-light-text-tertiary-inverted);\\n    --input-inverted-caret-color: var(--input-inverted-color);\\n\\n    /* disabled */\\n    --input-disabled-color: var(--color-light-text-secondary);\\n    --input-inverted-disabled-color: var(--color-light-text-secondary-inverted);\\n\\n    /* read-only */\\n    --input-read-only-color: var(--color-light-text-secondary);\\n    --input-inverted-read-only-color: var(--color-light-text-secondary-inverted);\\n\\n    /* error */\\n    --input-error-color: var(--color-light-text-primary);\\n    --input-inverted-error-color: var(--color-light-text-primary-inverted);\\n\\n    /* display */\\n    --input-error-icon-display: none;\\n    --input-success-icon-display: block;\\n\\n    /* управляет видимостью иконки ошибки, если она стоит рядом с другой иконкой */\\n    --input-error-icon-not-alone-display: none;\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {CssVars} from 'storybook/blocks';\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {Input} from '../Component.responsive';\nimport {InputDesktop} from '../Component.desktop';\nimport {InputMobile} from '../Component.mobile';\nimport vars from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Input } from '@alfalab/core-components/input';\\nimport { InputDesktop } from '@alfalab/core-components/input/desktop';\\nimport { InputMobile } from '@alfalab/core-components/input/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Из индекса импортируется responsive версия компонента.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        InputDesktop,\n        InputMobile,\n        Input\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: vars\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Meta, Markdown} from '@storybook/addon-docs';\nimport {ComponentHeader, Tabs} from 'storybook/blocks';\nimport * as Stories from './Component.stories';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport packageJson from '../../package.json';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: Stories\n    }), \"\\n\", _jsx(ComponentHeader, {\n      name: \"Input\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/input\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=113%3A67583\",\n      children: \"Дает возможность указать значение с помощью клавиатуры.\"\n    }), \"\\n\", _jsx(Tabs, {\n      description: _jsx(Description, {}),\n      changelog: _jsx(Markdown, {\n        children: Changelog\n      }),\n      development: _jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import React, { forwardRef } from 'react';\n\nimport { FormControlDesktop } from '@alfalab/core-components-form-control/desktop';\n\nimport { BaseInput, BaseInputProps } from './components/base-input';\n\nexport type InputDesktopProps = Omit<BaseInputProps, 'FromControlComponent'>;\n\nexport const InputDesktop = forwardRef<HTMLInputElement, InputDesktopProps>((restProps, ref) => (\n    <BaseInput {...restProps} FormControlComponent={FormControlDesktop} ref={ref} />\n));\n","import React, { forwardRef } from 'react';\n\nimport { FormControlMobile } from '@alfalab/core-components-form-control/mobile';\n\nimport { BaseInput, BaseInputProps } from './components/base-input';\n\nexport type InputMobileProps = Omit<BaseInputProps, 'FromControlComponent'>;\n\nexport const InputMobile = forwardRef<HTMLInputElement, InputMobileProps>((restProps, ref) => (\n    <BaseInput {...restProps} FormControlComponent={FormControlMobile} ref={ref} />\n));\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { isClient } from '../../utils';\n\nimport { BaseInputProps } from './components/base-input';\nimport { InputDesktop } from './Component.desktop';\nimport { InputMobile } from './Component.mobile';\n\nexport type InputProps = Omit<BaseInputProps, 'FromControlComponent'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n\n    /**\n     * Значение по-умолчанию для хука useMatchMedia\n     */\n    defaultMatchMediaValue?: boolean | (() => boolean);\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n    ({ breakpoint = 1024, defaultMatchMediaValue, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n        const getDefaultValue = () => (isClient() ? window.matchMedia(query).matches : false);\n\n        const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue ?? getDefaultValue);\n\n        const Component = isDesktop ? InputDesktop : InputMobile;\n\n        return <Component ref={ref} {...restProps} />;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_sDL1C\",\"hasInnerLabel\":\"hasInnerLabel_f4A1y\",\"s\":\"s_lK8yt\",\"m\":\"m_zKp3C\",\"l\":\"l_ykIhv\",\"xl\":\"xl_enTDZ\",\"block\":\"block_bmIew\",\"clearIcon\":\"clearIcon_xxFc0\",\"errorIcon\":\"errorIcon_w6ug0\",\"errorColorIcon\":\"errorColorIcon_vF50F\",\"clearButton\":\"clearButton_A0Gju\",\"successIcon\":\"successIcon_CKes0\",\"successColorIcon\":\"successColorIcon_ZRUt2\",\"focusVisible\":\"focusVisible_TwtEQ\",\"onautofillstart\":\"onautofillstart_CELbt\",\"onautofillcancel\":\"onautofillcancel_g2IzH\"};","import React, {\n    AnimationEvent,\n    ChangeEvent,\n    ElementType,\n    Fragment,\n    InputHTMLAttributes,\n    MouseEvent,\n    ReactNode,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { Button } from '@alfalab/core-components-button';\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { ExclamationCircleMIcon } from '@alfalab/icons-glyph/ExclamationCircleMIcon';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type BaseInputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    | 'size'\n    | 'type'\n    | 'value'\n    | 'defaultValue'\n    | 'onChange'\n    | 'onClick'\n    | 'onMouseDown'\n    | 'enterKeyHint'\n> & {\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Начальное значение поля\n     */\n    defaultValue?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Крестик для очистки поля\n     */\n    clear?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Текст подсказки\n     */\n    hint?: ReactNode;\n\n    /**\n     * Лейбл компонента\n     */\n    label?: React.ReactNode;\n\n    /**\n     * Вид лейбла внутри / снаружи\n     */\n    labelView?: 'inner' | 'outer';\n\n    /**\n     * Атрибут type\n     */\n    type?: 'number' | 'card' | 'email' | 'money' | 'password' | 'tel' | 'text';\n\n    /**\n     * Ref для обертки input\n     */\n    wrapperRef?: React.Ref<HTMLDivElement> | null;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: React.ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: React.ReactNode;\n\n    /**\n     * Слот под инпутом\n     */\n    bottomAddons?: React.ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    fieldClassName?: string;\n\n    /**\n     * Дополнительный класс инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для лейбла\n     */\n    labelClassName?: string;\n\n    /**\n     * Дополнительный класс для аддонов\n     */\n    addonsClassName?: string;\n\n    /**\n     * Класс, который будет установлен при фокусе\n     */\n    focusedClassName?: string;\n\n    /**\n     * Класс, который будет установлен, если в поле есть значение\n     */\n    filledClassName?: string;\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => void;\n\n    /**\n     * Обработчик нажатия на кнопку очистки\n     */\n    onClear?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Обработчик клика по полю\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseDown по полю\n     */\n    onMouseDown?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseUp по полю\n     */\n    onMouseUp?: (event: MouseEvent<HTMLDivElement>) => void;\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    FormControlComponent?: ElementType;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const BaseInput = React.forwardRef<HTMLInputElement, BaseInputProps>(\n    (\n        {\n            size = 's',\n            type = 'text',\n            block = false,\n            colors = 'default',\n            bottomAddons,\n            dataTestId,\n            clear = false,\n            disabled,\n            error,\n            success,\n            hint,\n            className,\n            fieldClassName,\n            inputClassName,\n            labelClassName,\n            addonsClassName,\n            focusedClassName,\n            filledClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onClear,\n            onClick,\n            onMouseDown,\n            onMouseUp,\n            onAnimationStart,\n            rightAddons,\n            value,\n            defaultValue,\n            wrapperRef,\n            readOnly,\n            FormControlComponent,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        const [focused, setFocused] = useState(restProps.autoFocus);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const [autofilled, setAutofilled] = useState(false);\n\n        // отображаем крестик только для заполненного и активного инпута\n        const clearButtonVisible = clear && filled && !disabled && !readOnly;\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const handleInputFocus = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                if (!readOnly) {\n                    setFocused(true);\n                }\n\n                if (onFocus) {\n                    onFocus(event);\n                }\n            },\n            [onFocus, readOnly],\n        );\n\n        const handleInputBlur = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                setFocused(false);\n\n                if (onBlur) {\n                    onBlur(event);\n                }\n            },\n            [onBlur],\n        );\n\n        const handleInputChange = useCallback(\n            (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (onChange) {\n                    onChange(event, { value: event.target.value });\n                }\n\n                if (uncontrolled) {\n                    setStateValue(event.target.value);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                if (!clearButtonVisible) return;\n\n                if (uncontrolled) {\n                    setStateValue('');\n                }\n\n                if (onClear) {\n                    onClear(event);\n                }\n\n                if (inputRef.current && !focused) {\n                    inputRef.current.focus();\n                }\n            },\n            [clearButtonVisible, focused, onClear, uncontrolled],\n        );\n\n        const handleAnimationStart = useCallback(\n            (event: AnimationEvent<HTMLInputElement>) => {\n                if (onAnimationStart) {\n                    onAnimationStart(event);\n                }\n\n                setAutofilled(event.animationName.includes('start'));\n            },\n            [onAnimationStart],\n        );\n\n        const renderRightAddons = () => {\n            const addonsVisible = clearButtonVisible || rightAddons || error || success;\n\n            return (\n                addonsVisible && (\n                    <Fragment>\n                        {clearButtonVisible && (\n                            <Button\n                                type='button'\n                                view='ghost'\n                                disabled={disabled}\n                                aria-label='Очистить'\n                                className={styles.clearButton}\n                                onClick={handleClear}\n                                tabIndex={-1}\n                            >\n                                <CrossCircleMIcon\n                                    className={cn(styles.clearIcon, colorStyles[colors].clearIcon)}\n                                />\n                            </Button>\n                        )}\n                        {rightAddons}\n                        {error && (\n                            <div className={styles.errorIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='negative'\n                                    content={\n                                        <ExclamationCircleMIcon className={styles.errorColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                        {success && !error && (\n                            <div className={styles.successIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='positive'\n                                    content={\n                                        <CheckmarkCircleMIcon className={styles.successColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )\n            );\n        };\n\n        return FormControlComponent ? (\n            <FormControlComponent\n                ref={wrapperRef}\n                className={cn(className, focused && focusedClassName, filled && filledClassName)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                labelClassName={labelClassName}\n                addonsClassName={addonsClassName}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                readOnly={readOnly}\n                filled={filled || autofilled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={renderRightAddons()}\n                bottomAddons={bottomAddons}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n            >\n                <input\n                    {...restProps}\n                    className={cn(\n                        styles.input,\n                        colorStyles[colors].input,\n                        {\n                            [styles.error]: error,\n                            [colorStyles[colors].error]: error,\n                            [styles[size]]: hasInnerLabel,\n                            [styles.hasInnerLabel]: hasInnerLabel,\n                            [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                        },\n                        inputClassName,\n                    )}\n                    disabled={disabled}\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    onChange={handleInputChange}\n                    onAnimationStart={handleAnimationStart}\n                    ref={mergeRefs([ref, inputRef])}\n                    type={type}\n                    value={uncontrolled ? stateValue : value}\n                    readOnly={readOnly}\n                    data-test-id={dataTestId}\n                    aria-label={typeof label === 'string' ? label : undefined}\n                />\n            </FormControlComponent>\n        ) : null;\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\n// BaseInput.defaultProps = {\n\n//     size: 's',\n\n//     type: 'text',\n\n//     block: false,\n\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_lTgZB\",\"hasInnerLabel\":\"hasInnerLabel_M1dw9\",\"clearIcon\":\"clearIcon_LuHni\",\"error\":\"error_iJrOw\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_GszJj\",\"hasInnerLabel\":\"hasInnerLabel_aw_ra\",\"clearIcon\":\"clearIcon_rwrYS\",\"error\":\"error_f3mNG\"};","export const isClient = () => typeof window !== 'undefined';\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","ol","li","id","live","className","href","MDXContent","wrapper","MDXLayout","InputDesktop","InputMobile","Input","css","vars","of","name","version","package","design","description","changelog","development","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","title","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","forwardRef","restProps","ref","BaseInput","_objectSpread","FormControlComponent","FormControlDesktop","FormControlMobile","_ref$breakpoint","breakpoint","defaultMatchMediaValue","_objectWithoutProperties","_excluded","query","getDefaultValue","isClient","window","matchMedia","matches","colorStyles","default","inverted","React","_cn2","_ref$size","size","_ref$block","block","_ref$colors","colors","bottomAddons","dataTestId","_ref$clear","clear","disabled","error","success","hint","fieldClassName","inputClassName","labelClassName","addonsClassName","focusedClassName","filledClassName","label","_ref$labelView","labelView","leftAddons","onFocus","onBlur","onClear","onMouseDown","onMouseUp","onAnimationStart","rightAddons","defaultValue","wrapperRef","readOnly","uncontrolled","undefined","inputRef","useRef","_useFocus","useFocus","focusVisible","autoFocus","focused","setFocused","stateValue","setStateValue","filled","Boolean","_useState5","_useState6","autofilled","setAutofilled","clearButtonVisible","hasInnerLabel","handleInputFocus","event","handleInputBlur","handleInputChange","handleClear","current","focus","handleAnimationStart","animationName","includes","renderRightAddons","Fragment","Button","tabIndex","CrossCircleMIcon","clearIcon","Badge","iconColor","ExclamationCircleMIcon","CheckmarkCircleMIcon","input","mergeRefs"],"sourceRoot":""}