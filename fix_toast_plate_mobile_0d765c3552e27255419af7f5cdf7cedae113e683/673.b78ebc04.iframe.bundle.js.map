{"version":3,"file":"673.b78ebc04.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/table/src/components/table-context/index.tsx","webpack://@alfalab/core-components/./packages/table/src/components/thead/index.module.css?ffd0","webpack://@alfalab/core-components/./packages/table/src/components/thead/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/table/utils.ts","webpack://@alfalab/core-components/./packages/table/src/utils.ts","webpack://@alfalab/core-components/./packages/table/src/components/table/index.module.css?2300","webpack://@alfalab/core-components/./packages/table/src/components/table/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/pagination/select-field/index.module.css?c360","webpack://@alfalab/core-components/./packages/table/src/components/pagination/select-field/index.tsx","webpack://@alfalab/core-components/./packages/table/src/components/pagination/index.module.css?bb5c","webpack://@alfalab/core-components/./packages/table/src/components/pagination/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/thead-cell/index.module.css?1ae6","webpack://@alfalab/core-components/./packages/table/src/components/thead-cell/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/tsortable-head-cell/sort-icon-asc.tsx","webpack://@alfalab/core-components/./packages/table/src/components/tsortable-head-cell/sort-icon-desc.tsx","webpack://@alfalab/core-components/./packages/table/src/components/tsortable-head-cell/sort-icon-unset.tsx","webpack://@alfalab/core-components/./packages/table/src/components/tsortable-head-cell/index.module.css?c445","webpack://@alfalab/core-components/./packages/table/src/components/tsortable-head-cell/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/tbody/index.module.css?f7d0","webpack://@alfalab/core-components/./packages/table/src/components/tbody/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/tcell/index.module.css?77e1","webpack://@alfalab/core-components/./packages/table/src/components/tcell/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/trow/index.module.css?fbef","webpack://@alfalab/core-components/./packages/table/src/components/trow/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/components/texpandable-row/index.module.css?bf47","webpack://@alfalab/core-components/./packages/table/src/components/texpandable-row/Component.tsx","webpack://@alfalab/core-components/./packages/table/src/component.tsx"],"sourcesContent":["import React, { RefObject } from 'react';\n\nimport { TextAlignProperty } from '../../typings';\n\nexport type ColumnConfiguration = {\n    width?: string | number;\n    textAlign?: TextAlignProperty;\n    hidden?: boolean;\n    index: number;\n};\n\nexport type TableContextType = {\n    columnsConfiguration: ColumnConfiguration[];\n    stickyHeader: boolean;\n    compactView: boolean;\n    compactHorizontal: boolean;\n    wrapperRef: RefObject<HTMLDivElement>;\n};\n\nexport const DEFAULT_TABLE_CONTEXT: TableContextType = {\n    columnsConfiguration: [],\n    compactView: false,\n    stickyHeader: false,\n    compactHorizontal: false,\n    wrapperRef: { current: null },\n};\n\nexport const TableContext = React.createContext<TableContextType>(DEFAULT_TABLE_CONTEXT);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_vs83Z\",\"row\":\"row_O9oH1\"};","import React, { HTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type THeadProps = HTMLAttributes<HTMLTableSectionElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для tr\n     */\n    rowClassName?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const THead: React.FC<THeadProps> = ({\n    className,\n    rowClassName,\n    children,\n    dataTestId,\n    ...restProps\n}) => (\n    <thead className={cn(styles.component, className)} data-test-id={dataTestId} {...restProps}>\n        <tr className={cn(styles.row, rowClassName)}>{children}</tr>\n    </thead>\n);\n","import React from 'react';\n\nimport { isChildInstanceOf } from '../../utils';\nimport { THead } from '../thead';\nimport { THeadCellProps } from '../thead-cell';\n\nexport function findAllHeadCellsProps(children: React.ReactElement | React.ReactElement[]) {\n    const result: THeadCellProps[] = [];\n\n    React.Children.forEach(children, (child) => {\n        if (isChildInstanceOf(child, THead)) {\n            React.Children.forEach(child.props.children, (headChild) => {\n                result.push(headChild.props);\n            });\n        }\n    });\n\n    return result;\n}\n","import React from 'react';\n\nexport function isChildInstanceOf<P>(child: React.ReactElement, Component: React.ComponentType<P>) {\n    // мы не можем полагаться на child.type === Component, см. https://github.com/gaearon/react-hot-loader/issues/304\n    return child.type === React.createElement(Component).type;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_kaY_4\",\"wrapper\":\"wrapper_MViIA\",\"stickyHeader\":\"stickyHeader_DwFZd\",\"hasPagination\":\"hasPagination_a0rW6\",\"table\":\"table_kSy1r\"};","import React, { forwardRef, ReactNode, TableHTMLAttributes, useMemo, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { ColumnConfiguration, TableContext } from '../table-context';\n\nimport { findAllHeadCellsProps } from './utils';\n\nimport styles from './index.module.css';\n\nexport type TableProps = TableHTMLAttributes<HTMLTableElement> & {\n    /**\n     * Компактный вид\n     */\n    compactView?: boolean;\n\n    /**\n     * Уменьшение горизонтальных паддингов\n     */\n    compactHorizontal?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние компоненты\n     */\n    children: React.ReactElement | React.ReactElement[];\n\n    /**\n     * Оборачивает таблицу в стилизованный контейнер\n     */\n    wrapper?: boolean;\n\n    /**\n     * Слот для пагинации\n     */\n    pagination?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Если true то заголовок будет фиксироваться при скроле\n     */\n    stickyHeader?: boolean;\n};\n\nexport const Table = forwardRef<HTMLTableElement, TableProps>(\n    (\n        {\n            className,\n            children,\n            compactView = false,\n            compactHorizontal = false,\n            wrapper = true,\n            pagination,\n            dataTestId,\n            stickyHeader = false,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const wrapperRef = useRef<HTMLDivElement>(null);\n\n        const columnsConfiguration: ColumnConfiguration[] = useMemo(\n            () =>\n                findAllHeadCellsProps(children).map((columnProps, index) => ({\n                    width: columnProps.width,\n                    textAlign: columnProps.textAlign,\n                    hidden: columnProps.hidden,\n                    index,\n                })),\n            [children],\n        );\n\n        /* eslint-disable react/jsx-no-constructed-context-values */\n        return (\n            <TableContext.Provider\n                value={{\n                    stickyHeader,\n                    columnsConfiguration,\n                    compactView,\n                    compactHorizontal,\n                    wrapperRef,\n                }}\n            >\n                <div\n                    ref={wrapperRef}\n                    className={cn(styles.component, className, {\n                        [styles.wrapper]: wrapper,\n                        [styles.hasPagination]: !!pagination,\n                        [styles.stickyHeader]: stickyHeader,\n                    })}\n                    data-test-id={dataTestId}\n                >\n                    <table ref={ref} className={styles.table} {...restProps}>\n                        {children}\n                    </table>\n\n                    {pagination}\n                </div>\n            </TableContext.Provider>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"field_cvJt_\",\"open\":\"open_hNdlJ\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { SelectProps } from '@alfalab/core-components-select';\n\nimport styles from './index.module.css';\n\nexport const CustomSelectField: SelectProps['Field'] = ({ selected, innerProps, Arrow, open }) => {\n    const { ref, ...restInnerProps } = innerProps;\n\n    return (\n        <div ref={ref}>\n            <Button\n                {...(restInnerProps as ButtonProps)}\n                size='xxs'\n                view='link'\n                className={cn(styles.field, { [styles.open]: open })}\n                rightAddons={Arrow}\n            >\n                {selected?.content}\n            </Button>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QO6Gn\",\"pagesWrapper\":\"pagesWrapper_QCT7k\",\"tag\":\"tag_LKsKn\",\"tagActive\":\"tagActive_MQHia\",\"menu\":\"menu_jPrF8\",\"option\":\"option_CnkZJ\"};","import React, { FC, useCallback, useContext, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport {\n    Pagination as CorePagination,\n    PaginationProps as CorePaginationProps,\n} from '@alfalab/core-components-pagination';\nimport { BaseSelectChangePayload, Select, SelectProps } from '@alfalab/core-components-select';\n\nimport { TableContext } from '../table-context';\n\nimport { CustomSelectField } from './select-field';\n\nimport styles from './index.module.css';\n\nexport type PaginationProps = CorePaginationProps & {\n    /**\n     * Количество строк на страницу\n     */\n    perPage?: number;\n\n    /**\n     * Возможные варианты разбивки\n     */\n    possiblePerPage?: number[];\n\n    /**\n     * Обработчик переключения perPage\n     */\n    onPerPageChange?: (perPage: number) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Pagination: FC<PaginationProps> = ({\n    perPage = 25,\n    possiblePerPage = [25, 50, 100],\n    onPerPageChange = () => null,\n    pagesCount,\n    onPageChange = () => null,\n    className,\n    dataTestId,\n    ...restPaginationProps\n}) => {\n    const { wrapperRef } = useContext(TableContext);\n\n    const options = useMemo(\n        () =>\n            Array.from(new Set<number>(possiblePerPage.concat(perPage)))\n                .sort((a, b) => a - b)\n                .map((value) => ({\n                    key: value.toString(),\n                    content: `Показывать по ${value}`,\n                })),\n        [perPage, possiblePerPage],\n    );\n\n    const handlePerPageChange: SelectProps['onChange'] = useCallback(\n        ({ selected }: BaseSelectChangePayload) => {\n            onPerPageChange(Number(selected?.key));\n        },\n        [onPerPageChange],\n    );\n\n    const handlePageChange = useCallback(\n        (pageIndex: number) => {\n            onPageChange(pageIndex);\n\n            setTimeout(() => {\n                if (wrapperRef.current) {\n                    wrapperRef.current.scrollIntoView();\n                }\n            }, 0);\n        },\n        [onPageChange, wrapperRef],\n    );\n\n    return (\n        <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n            <Select\n                options={options}\n                selected={perPage.toString()}\n                onChange={handlePerPageChange}\n                preventFlip={false}\n                size='s'\n                className={styles.select}\n                optionsListClassName={styles.menu}\n                optionClassName={styles.option}\n                Field={CustomSelectField}\n            />\n            {pagesCount > 1 && (\n                <CorePagination\n                    pagesCount={pagesCount}\n                    onPageChange={handlePageChange}\n                    {...restPaginationProps}\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_fNV98\",\"sortable\":\"sortable_IAQwA\",\"sorted\":\"sorted_RI8_2\",\"stickyHeader\":\"stickyHeader_hQfP_\",\"compactHorizontal\":\"compactHorizontal_HE6Ga\"};","import React, { ThHTMLAttributes, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { TextAlignProperty } from '../../typings';\nimport { TableContext } from '../table-context';\n\nimport styles from './index.module.css';\n\nexport type THeadCellProps = ThHTMLAttributes<HTMLHeadingElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Ширина колонки\n     */\n    width?: string | number;\n\n    /**\n     * Скрытие колонки\n     */\n    hidden?: boolean;\n\n    /**\n     * Выравнивание текста в колонке\n     */\n    textAlign?: TextAlignProperty;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const THeadCell = ({\n    children,\n    className,\n    dataTestId,\n    style,\n    width,\n    textAlign,\n    hidden,\n    ...restProps\n}: THeadCellProps) => {\n    const { compactHorizontal, stickyHeader } = useContext(TableContext);\n\n    if (hidden) return null;\n\n    return (\n        <th\n            className={cn(\n                styles.component,\n                className,\n                compactHorizontal && styles.compactHorizontal,\n                {\n                    [styles.stickyHeader]: stickyHeader,\n                },\n            )}\n            style={{ ...style, width, textAlign }}\n            data-test-id={dataTestId}\n            {...restProps}\n        >\n            {children}\n        </th>\n    );\n};\n","import React, { SVGProps } from 'react';\n\nexport const SortIconAsc: React.FC<SVGProps<SVGSVGElement>> = (props) => (\n    <svg\n        width='18'\n        height='18'\n        viewBox='0 0 18 18'\n        fill='currentColor'\n        xmlns='http://www.w3.org/2000/svg'\n        focusable='false'\n        role='img'\n        {...props}\n    >\n        <path d='M3.00004 10C3.00004 10 11.4477 10 12 10C12 9.33333 12.0001 8.16667 12.0001 7.5H3.0001C3.00006 8 3.0001 9.5 3.00004 10ZM3.0001 3.5C3.00003 4.16667 3 5.33333 3 6H9C9 5.33333 9 4.16667 9 3.5C9 3.5 3.55238 3.5 3.0001 3.5ZM3.00009 14C3.21041 14 15 14 15 14C15 13.5 15 12 15 11.5C15 11.5 3.55238 11.5 3.00009 11.5C3 12 3 13.5 3.00009 14Z' />\n    </svg>\n);\n","import React, { SVGProps } from 'react';\n\nexport const SortIconDesc: React.FC<SVGProps<SVGSVGElement>> = (props) => (\n    <svg\n        width='18'\n        height='18'\n        viewBox='0 0 18 18'\n        fill='currentColor'\n        xmlns='http://www.w3.org/2000/svg'\n        focusable='false'\n        role='img'\n        {...props}\n    >\n        <path d='M3.00004 10C3.00004 10 11.4477 10 12 10C12 9.33333 12.0001 8.16667 12.0001 7.5H3.0001C3.00006 8 3.0001 9.5 3.00004 10ZM3.0001 3.5C3.00003 4.16667 3 5.33333 3 6H15C15 5.33333 15 4.16667 15 3.5C15 3.5 3.55238 3.5 3.0001 3.5ZM3.00009 14C3.21041 14 9 14 9 14C9 13.5 9 12 9 11.5C9 11.5 3.55238 11.5 3.00009 11.5C3 12 3 13.5 3.00009 14Z' />\n    </svg>\n);\n","import React, { SVGProps } from 'react';\n\nexport const SortIconUnset: React.FC<SVGProps<SVGSVGElement>> = (props) => (\n    <svg\n        width='18'\n        height='18'\n        viewBox='0 0 18 18'\n        fill='currentColor'\n        xmlns='http://www.w3.org/2000/svg'\n        focusable='false'\n        role='img'\n        {...props}\n    >\n        <path d='M3 10C3 10 10.4477 10 11 10C11 9.33333 11.0001 8.16667 11.0001 7.5H3.00006C3.00002 8 3.00006 9.5 3 10ZM3.0001 3.5C3.00003 4.16667 3 5.33333 3 6H15C15 5.33333 15 4.16667 15 3.5C15 3.5 3.55238 3.5 3.0001 3.5ZM3 14C3.21032 14 14 14 14 14C14 13.5 14 12 14 11.5C14 11.5 3.55228 11.5 3 11.5C2.99991 12 2.99991 13.5 3 14Z' />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_oHIDI\",\"content\":\"content_XVBBr\",\"icon\":\"icon_IkNjy\",\"reverse\":\"reverse_zQaYI\",\"sorted\":\"sorted_EQan_\"};","import React, { useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { THeadCell, THeadCellProps } from '../thead-cell';\n\nimport { SortIconAsc } from './sort-icon-asc';\nimport { SortIconDesc } from './sort-icon-desc';\nimport { SortIconUnset } from './sort-icon-unset';\n\nimport styles from './index.module.css';\n\nexport type TSortableHeadCellProps = THeadCellProps & {\n    isSortedDesc?: boolean;\n    defaultIsSortedDesc?: boolean;\n    onSort?: () => void;\n};\n\nexport const TSortableHeadCell = ({\n    children,\n    className,\n    defaultIsSortedDesc,\n    isSortedDesc,\n    textAlign,\n    onSort,\n    ...restProps\n}: TSortableHeadCellProps) => {\n    const SortIcon = useMemo(() => {\n        let value = isSortedDesc;\n\n        if (value === undefined) value = defaultIsSortedDesc;\n\n        if (typeof value === 'boolean') return value ? SortIconDesc : SortIconAsc;\n\n        return SortIconUnset;\n    }, [defaultIsSortedDesc, isSortedDesc]);\n\n    return (\n        <THeadCell className={cn(className, styles.component)} {...restProps}>\n            <div className={cn(styles.content, { [styles.reverse]: textAlign === 'right' })}>\n                {children}\n                <SortIcon\n                    onClick={onSort}\n                    className={cn(styles.icon, {\n                        [styles.sorted]: isSortedDesc !== undefined,\n                    })}\n                />\n            </div>\n        </THeadCell>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dTGCd\"};","import React, { HTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type TBodyProps = HTMLAttributes<HTMLTableSectionElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const TBody: React.FC<TBodyProps> = ({ className, children, dataTestId, ...restProps }) => (\n    <tbody className={cn(styles.component, className)} data-test-id={dataTestId} {...restProps}>\n        {children}\n    </tbody>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_cxly2\",\"compactHorizontal\":\"compactHorizontal_cOuYl\",\"compact\":\"compact_qwE97\"};","import React, { TdHTMLAttributes, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { TableContext } from '../table-context';\n\nimport styles from './index.module.css';\n\nexport type TCellProps = TdHTMLAttributes<HTMLTableCellElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Устанавливается автоматически и позволяет использовать конфиг для соответствующего индекса\n     */\n    index?: number;\n};\n\nexport const TCell = ({\n    className,\n    style,\n    dataTestId,\n    children,\n    index,\n    ...restProps\n}: TCellProps) => {\n    const { columnsConfiguration, compactView, compactHorizontal } = useContext(TableContext);\n    const column = index === undefined ? null : columnsConfiguration[index];\n    const width = column?.width;\n    const textAlign = column?.textAlign;\n    const hidden = column?.hidden || false;\n\n    if (hidden) return null;\n\n    return (\n        <td\n            className={cn(\n                styles.component,\n                className,\n                compactView && styles.compact,\n                compactHorizontal && styles.compactHorizontal,\n            )}\n            style={{ ...style, width, textAlign }}\n            data-test-id={dataTestId}\n            {...restProps}\n        >\n            {children}\n        </td>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_toLsp\",\"withoutBorder\":\"withoutBorder_mO7ZF\",\"clickable\":\"clickable_KdIfi\",\"selected\":\"selected_A6zao\"};","import React, { HTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport { TCell, TCellProps } from '../tcell';\n\nimport styles from './index.module.css';\n\ntype TCellElement = React.ReactElement<TCellProps, typeof TCell>;\n\nexport type TRowProps = HTMLAttributes<HTMLTableRowElement> & {\n    /**\n     * Компоненты ячеек\n     */\n    children: TCellElement | TCellElement[];\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Стиль выбранной строки\n     */\n    selected?: boolean;\n\n    /**\n     * Убирает нижнюю границу\n     */\n    withoutBorder?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const TRow = ({\n    children,\n    className,\n    selected,\n    withoutBorder,\n    dataTestId,\n    ...restProps\n}: TRowProps) => (\n    <tr\n        className={cn(styles.component, className, {\n            [styles.clickable]: typeof restProps.onClick !== 'undefined',\n            [styles.selected]: selected,\n            [styles.withoutBorder]: withoutBorder,\n        })}\n        data-test-id={dataTestId}\n        {...restProps}\n    >\n        {React.Children.map(children, (child, index) => React.cloneElement(child, { index }))}\n    </tr>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"row_ZBKcT\",\"selected\":\"selected_LFEVk\",\"expanded\":\"expanded_Hdy7J\",\"expandable\":\"expandable_QGzbx\"};","import React, { ReactNode, useState } from 'react';\nimport cn from 'classnames';\n\nimport { TRow, TRowProps } from '../trow';\n\nimport styles from './index.module.css';\n\nexport type TExpandableRowProps = TRowProps & {\n    defaultExpanded?: boolean;\n\n    expanded?: boolean;\n\n    onToggle?: (expanded: boolean) => void;\n\n    renderContent: (expanded: boolean) => ReactNode;\n};\n\nexport const TExpandableRow = ({\n    className,\n    selected,\n    expanded,\n    defaultExpanded = false,\n    onToggle = () => null,\n    renderContent = () => null,\n    ...restProps\n}: TExpandableRowProps) => {\n    const [expandedState, setExpandedState] = useState<boolean>(defaultExpanded);\n\n    const uncontrolled = expanded === undefined;\n\n    const isExpanded = (uncontrolled ? expandedState : expanded) as boolean;\n\n    const handleToggle = () => {\n        if (uncontrolled) {\n            setExpandedState(!isExpanded);\n        }\n\n        onToggle(isExpanded);\n    };\n\n    return (\n        <React.Fragment>\n            <TRow\n                className={cn(styles.row, className, {\n                    [styles.selected]: selected,\n                    [styles.expanded]: isExpanded,\n                })}\n                selected={selected}\n                onClick={handleToggle}\n                {...restProps}\n            />\n\n            <tr className={cn(styles.expandable, { [styles.expanded]: isExpanded })}>\n                {renderContent(isExpanded)}\n            </tr>\n        </React.Fragment>\n    );\n};\n","import {\n    Pagination,\n    Table as TableComponent,\n    TBody,\n    TCell,\n    TExpandableRow,\n    THead,\n    THeadCell,\n    TRow,\n    TSortableHeadCell,\n} from './components';\n\nexport const Table = Object.assign(TableComponent, {\n    TBody,\n    THead,\n    THeadCell,\n    TSortableHeadCell,\n    TCell,\n    TRow,\n    TExpandableRow,\n    Pagination,\n});\n"],"names":["DEFAULT_TABLE_CONTEXT","columnsConfiguration","compactView","stickyHeader","compactHorizontal","wrapperRef","current","TableContext","React","THead","_ref","className","rowClassName","children","dataTestId","restProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","cn","styles","findAllHeadCellsProps","result","child","isChildInstanceOf","Component","type","props","headChild","push","Table","forwardRef","ref","_cn","_ref$compactView","_ref$compactHorizonta","_ref$wrapper","wrapper","pagination","_ref$stickyHeader","useRef","useMemo","map","columnProps","index","width","textAlign","hidden","Provider","value","_jsxs","_defineProperty","CustomSelectField","selected","innerProps","Arrow","open","restInnerProps","Button","size","view","rightAddons","content","Pagination","_ref$perPage","perPage","_ref$possiblePerPage","possiblePerPage","_ref$onPerPageChange","onPerPageChange","pagesCount","_ref$onPageChange","onPageChange","restPaginationProps","useContext","options","Array","from","Set","concat","sort","a","b","key","toString","handlePerPageChange","useCallback","_ref2","Number","handlePageChange","pageIndex","setTimeout","scrollIntoView","Select","onChange","preventFlip","optionsListClassName","optionClassName","Field","CorePagination","THeadCell","style","_useContext","SortIconAsc","height","viewBox","fill","xmlns","focusable","role","d","SortIconDesc","SortIconUnset","TSortableHeadCell","defaultIsSortedDesc","isSortedDesc","onSort","SortIcon","undefined","onClick","TBody","TCell","column","TRow","withoutBorder","TExpandableRow","expanded","_ref$defaultExpanded","defaultExpanded","_ref$onToggle","onToggle","_ref$renderContent","renderContent","_useState","useState","_useState2","_slicedToArray","expandedState","setExpandedState","uncontrolled","isExpanded","handleToggle","Object","assign","TableComponent"],"sourceRoot":""}