{"version":3,"file":"input-autocomplete-src-docs-Component-stories-mdx.5b67c1bf.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/input-autocomplete/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/input-autocomplete/node_modules/@alfalab/hooks/dist/index.js","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-field/index.module.css?87c8","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-field/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-mobile-field/index.module.css?29f1","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/mobile.module.css?688a","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.responsive.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"шеврон\",\n      children: \"Шеврон\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Добавляйте шеврон, если пользователю будет удобней выбирать значение, просматривая список, не вводя первые символы.\\nЕсли список длинный и вы предполагаете, что пользователь будет вводить значение с клавиатуры, шеврон можно скрыть.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [shownChevron, setShownChevron] = React.useState(false);\\n    const [multiple, setMultiple] = React.useState(false);\\n    const [value, setValue] = React.useState('');\\n\\n    const options = [\\n        { key: 'Neptunium' },\\n        { key: 'Plutonium' },\\n        { key: 'Americium' },\\n        { key: 'Curium' },\\n        { key: 'Berkelium' },\\n        { key: 'Californium' },\\n        { key: 'Einsteinium' },\\n        { key: 'Fermium' },\\n        { key: 'Mendelevium' },\\n        { key: 'Nobelium' },\\n        { key: 'Lawrencium' },\\n        { key: 'Rutherfordium' },\\n        { key: 'Dubnium' },\\n        { key: 'Seaborgium' },\\n        { key: 'Bohrium' },\\n    ];\\n\\n    const matchOption = (option, inputValue) =>\\n        option.key.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const handleInput = (event) => {\\n        setValue(event.target.value);\\n    };\\n\\n    const handleChange = ({ selected, selectedMultiple }) => {\\n        if (multiple) {\\n            const value = selectedMultiple.length\\n                ? selectedMultiple.map((option) => option.key).join(', ') + ', '\\n                : '';\\n            setValue(value);\\n\\n            return;\\n        }\\n\\n        setValue(selected ? selected.key : '');\\n    };\\n\\n    const inputValues = value.replace(/ /g, '').split(',');\\n\\n    const selectedOptions = options.filter((option) => inputValues.includes(option.key.trim()));\\n\\n    const selected = selectedOptions.map((option) => option.key);\\n\\n    const getFilteredOptions = () => {\\n        if (multiple) {\\n            return inputValues.length === selected.length\\n                ? options\\n                : options.filter((option) => {\\n                      return (\\n                          selectedOptions.includes(option) ||\\n                          matchOption(option, inputValues[inputValues.length - 1])\\n                      );\\n                  });\\n        }\\n\\n        return options.filter((option) => matchOption(option, value));\\n    };\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <InputAutocomplete\\n                    size='m'\\n                    selected={multiple ? selected : undefined}\\n                    block={true}\\n                    options={getFilteredOptions()}\\n                    label='Инпут с автокомплитом'\\n                    onChange={handleChange}\\n                    onInput={handleInput}\\n                    value={value}\\n                    Arrow={shownChevron ? Arrow : undefined}\\n                    multiple={multiple}\\n                    allowUnselect={true}\\n                    Option={BaseOption}\\n                    {...(shownChevron\\n                        ? {\\n                              showEmptyOptionsList: true,\\n                              optionsListProps: {\\n                                  emptyPlaceholder: (\\n                                      <div style={{ display: 'flex', justifyContent: 'center' }}>\\n                                          <Typography.Text view='component'>\\n                                              Ничего не нашлось\\n                                          </Typography.Text>\\n                                      </div>\\n                                  ),\\n                              },\\n                          }\\n                        : null)}\\n                />\\n            </div>\\n            <Gap size='xl' />\\n\\n            <Switch\\n                checked={shownChevron}\\n                label='Шеврон'\\n                onChange={() => setShownChevron((prevState) => !prevState)}\\n            />\\n            <Gap size='m' />\\n            <Switch\\n                checked={multiple}\\n                label='Мультивыбор'\\n                onChange={() => {\\n                    setMultiple((prevState) => !prevState);\\n                    setValue('');\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [shownChevron, setShownChevron] = React.useState(false);\\n    const [multiple, setMultiple] = React.useState(false);\\n    const [value, setValue] = React.useState('');\\n    const [filter, setFilter] = React.useState('');\\n\\n    const options = [\\n        { key: 'Neptunium' },\\n        { key: 'Plutonium' },\\n        { key: 'Americium' },\\n        { key: 'Curium' },\\n        { key: 'Berkelium' },\\n        { key: 'Californium' },\\n        { key: 'Einsteinium' },\\n        { key: 'Fermium' },\\n        { key: 'Mendelevium' },\\n        { key: 'Nobelium' },\\n        { key: 'Lawrencium' },\\n        { key: 'Rutherfordium' },\\n        { key: 'Dubnium' },\\n        { key: 'Seaborgium' },\\n        { key: 'Bohrium' },\\n    ];\\n\\n    const matchOption = (option, inputValue) =>\\n        option.key.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const handleFilter = (event) => {\\n        setFilter(event.target.value);\\n    };\\n\\n    const filterValues = filter\\n        .split(',')\\n        .map((v) => v.trim())\\n        .filter((v) => v);\\n\\n    const selectedOptions = options.filter((option) => filterValues.includes(option.key.trim()));\\n\\n    const selected = selectedOptions.map((option) => option.key);\\n\\n    const handleChange = (payload) => {\\n        let newValue = '';\\n\\n        if (payload && payload.selectedMultiple) {\\n            newValue = payload.selectedMultiple.length\\n                ? payload.selectedMultiple.map((option) => option.key).join(', ') +\\n                  `${multiple ? `,` : ''}`\\n                : '';\\n        } else {\\n            newValue = payload || '';\\n        }\\n\\n        setValue(newValue);\\n        setFilter(newValue);\\n    };\\n\\n    const filteredOptions =\\n        filterValues.length === selected.length\\n            ? options\\n            : options.filter((option) => {\\n                  return (\\n                      selectedOptions.includes(option) ||\\n                      matchOption(option, filterValues[filterValues.length - 1])\\n                  );\\n              });\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <InputAutocompleteMobile\\n                size='m'\\n                block={true}\\n                value={value}\\n                Arrow={shownChevron ? Arrow : undefined}\\n                filter={filter}\\n                options={filteredOptions}\\n                label='Инпут с автокомплитом'\\n                placeholder='Начните вводить название'\\n                multiple={multiple}\\n                selected={selected}\\n                closeOnSelect={!multiple}\\n                allowUnselect={true}\\n                onChange={handleChange}\\n                onFilter={handleFilter}\\n                onClearFilter={() => setFilter('')}\\n                onCancel={() => setFilter(value)}\\n            />\\n            <Gap size='xl' />\\n\\n            <Switch\\n                checked={shownChevron}\\n                label='Шеврон'\\n                onChange={() => setShownChevron((prevState) => !prevState)}\\n            />\\n            <Gap size='m' />\\n            <Switch\\n                checked={multiple}\\n                label='Мультивыбор'\\n                onChange={() => {\\n                    setMultiple((prevState) => !prevState);\\n                    setValue('');\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"пустой-список\",\n      children: \"Пустой список\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Когда по запросу пользователя не находится соответствия в списке, рекомендуется использовать такой шаблон.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <InputAutocomplete\\n                size='m'\\n                block={true}\\n                options={[]}\\n                label='Пустой список'\\n                showEmptyOptionsList={true}\\n                optionsListProps={{\\n                    emptyPlaceholder: (\\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\\n                            <Typography.Text view='component'>Ничего не нашлось</Typography.Text>\\n                        </div>\\n                    ),\\n                }}\\n                Option={BaseOption}\\n            />\\n        </div>\\n    );\\n});\\n@MOBILE@\\nrender(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <InputAutocompleteMobile\\n                size='m'\\n                block={true}\\n                options={[]}\\n                label='Инпут с автокомплитом'\\n                placeholder='Начните вводить название'\\n                optionsListProps={{\\n                    emptyPlaceholder: (\\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\\n                            <Typography.Text view='component'>Ничего не нашлось</Typography.Text>\\n                        </div>\\n                    ),\\n                }}\\n                Option={BaseOption}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"кастомизация-инпута\",\n      children: \"Кастомизация инпута\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"При необходимости можно кастомизировать инпут и выпадающий список.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const matchOption = (option, inputValue) =>\\n        option.content.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const mask = [\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n    ];\\n\\n    const cards = [\\n        {\\n            key: 'Карта 1',\\n            content: '4035 5010 0000 0008',\\n        },\\n        {\\n            key: 'Карта 2',\\n            content: '4360 0000 0100 0005',\\n        },\\n        {\\n            key: 'Карта 3',\\n            content: '8171 9999 2766 0000',\\n        },\\n        {\\n            key: 'Карта 4',\\n            content: '5204 2477 5000 1471',\\n        },\\n        {\\n            key: 'Карта 5',\\n            content: '4111 1111 1111 1111',\\n        },\\n    ];\\n\\n    const CardOption = (props) => (\\n        <BaseOption {...props}>\\n            <div style={{ padding: 'var(--gap-s)' }}>\\n                {props.option.key}\\n                <br />\\n                <sub>{props.option.content}</sub>\\n            </div>\\n        </BaseOption>\\n    );\\n\\n    const [value, setValue] = React.useState('');\\n    const inputRef = React.useRef();\\n\\n    const handleInput = (event) => {\\n        setValue(event.target.value);\\n    };\\n\\n    const handleChange = ({ selected }) => {\\n        const value = selected ? selected.content : null\\n        setValue(value);\\n        if (value && inputRef.current) {\\n            requestAnimationFrame(() => inputRef.current.setSelectionRange(value.length, value.length));\\n        }\\n    };\\n\\n    const filteredOptions = cards.filter((option) => matchOption(option, value));\\n\\n    return (\\n        <InputAutocomplete\\n            size='m'\\n            options={filteredOptions}\\n            selected={[]}\\n            label='Маскированный ввод счёта'\\n            onInput={handleInput}\\n            onChange={handleChange}\\n            value={value}\\n            Option={CardOption}\\n            Input={MaskedInput}\\n            inputProps={{\\n                ref: inputRef,\\n                mask,\\n            }}\\n        />\\n    );\\n});\\n@MOBILE@\\nrender(() => {\\n    const [value, setValue] = React.useState('');\\n    const [filter, setFilter] = React.useState('');\\n\\n    const matchOption = (option, inputValue) =>\\n        option.content.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const mask = [\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n    ];\\n\\n    const cards = [\\n        {\\n            key: 'Карта 1',\\n            content: '4035 5010 0000 0008',\\n        },\\n        {\\n            key: 'Карта 2',\\n            content: '4360 0000 0100 0005',\\n        },\\n        {\\n            key: 'Карта 3',\\n            content: '8171 9999 2766 0000',\\n        },\\n        {\\n            key: 'Карта 4',\\n            content: '5204 2477 5000 1471',\\n        },\\n        {\\n            key: 'Карта 5',\\n            content: '4111 1111 1111 1111',\\n        },\\n    ];\\n\\n    const CardOption = (props) => (\\n        <BaseOption {...props}>\\n            <div style={{ padding: 'var(--gap-s) var(--gap-m)' }}>\\n                {props.option.key}\\n                <br />\\n                <sub>{props.option.content}</sub>\\n            </div>\\n        </BaseOption>\\n    );\\n\\n    const handleFilter = (event) => {\\n        setFilter(event.target.value);\\n    };\\n\\n    const handleChange = (payload) => {\\n        const newValue = payload\\n            ? isOptionShape(payload.selected)\\n                ? payload.selected.content\\n                : payload\\n            : '';\\n\\n        setValue(newValue);\\n        setFilter(newValue);\\n    };\\n\\n    const filteredOptions = cards.filter((option) => matchOption(option, filter));\\n\\n    return (\\n        <InputAutocompleteMobile\\n            size='m'\\n            block={true}\\n            value={value}\\n            filter={filter}\\n            options={filteredOptions}\\n            label='Счёт'\\n            placeholder='Маскированный ввод счёта'\\n            onChange={handleChange}\\n            onClearFilter={() => setFilter('')}\\n            bottomSheetProps={{\\n                transitionProps: {\\n                    onEnter: () => setFilter(value),\\n                },\\n            }}\\n            Option={CardOption}\\n            Input={MaskedInput}\\n            bottomSheetHeaderAddonsProps={{ mask, onChange: handleFilter }}\\n        />\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/formcontrol--form-control\",\n        children: \"FormControl\"\n      }), \",\\nпоэтому наследует все доступные для него настройки.\\nСписок это кастомизируемый \", _jsx(_components.a, {\n        href: \"?path=/docs/popover--popover\",\n        children: \"Popover\"\n      }), \"\\nв десктопной версии и \", _jsx(_components.a, {\n        href: \"?path=/docs/bottomsheet--bottom-sheet\",\n        children: \"Bottomsheet\"\n      }), \"\\nили \", _jsx(_components.a, {\n        href: \"?path=/docs/modal--modal\",\n        children: \"Modal\"\n      }), \"\\nв мобильной.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {InputAutocompleteResponsive as InputAutocompleteTS} from '../responsive';\nimport {InputAutocompleteMobile as InputAutocompleteMobileTS} from '../Component.mobile';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { InputAutocomplete } from '@alfalab/core-components/input-autocomplete';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        InputAutocomplete: InputAutocompleteTS,\n        InputAutocompleteMobile: InputAutocompleteMobileTS\n      }\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Arrow, isOptionShape } from '@alfalab/core-components-select';\nimport { InputAutocomplete } from '@alfalab/core-components-input-autocomplete';\nimport { InputAutocompleteMobile } from '@alfalab/core-components-input-autocomplete/mobile';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const options = [{\n  key: 'Neptunium'\n}, {\n  key: 'Plutonium'\n}, {\n  key: 'Americium'\n}, {\n  key: 'Curium'\n}, {\n  key: 'Berkelium'\n}, {\n  key: 'Californium'\n}, {\n  key: 'Einsteinium'\n}, {\n  key: 'Fermium'\n}, {\n  key: 'Mendelevium'\n}, {\n  key: 'Nobelium'\n}, {\n  key: 'Lawrencium'\n}, {\n  key: 'Rutherfordium'\n}, {\n  key: 'Dubnium'\n}, {\n  key: 'Seaborgium'\n}, {\n  key: 'Bohrium'\n}];\nexport const matchOption = (option, inputValue) => option.key.toLowerCase().includes((inputValue || '').toLowerCase());\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/InputAutocomplete\",\n      component: InputAutocomplete,\n      id: \"InputAutocomplete\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"InputAutocomplete\",\n      children: React.createElement(() => {\n        const [value, setValue] = React.useState('');\n        const handleInput = event => {\n          setValue(event.target.value);\n        };\n        const handleChange = ({\n          selected\n        }) => {\n          setValue(selected ? selected.key : '');\n        };\n        const filteredOptions = options.filter(option => matchOption(option, value));\n        return /*#__PURE__*/_jsx(InputAutocomplete, {\n          options: filteredOptions,\n          selected: boolean('prevent select', true) ? [] : undefined,\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          error: text('error', ''),\n          success: boolean('success', false),\n          hint: text('hint', ''),\n          allowUnselect: boolean('allowUnselect', true),\n          closeOnSelect: boolean('closeOnSelect', false),\n          Arrow: boolean('Arrow', false) ? Arrow : undefined,\n          circularNavigation: boolean('circularNavigation', false),\n          placeholder: text('placeholder', 'Введите элемент'),\n          label: text('label', 'Элемент'),\n          labelView: select('labelView', ['inner', 'outer'], 'inner'),\n          onChange: handleChange,\n          onInput: handleInput,\n          value: value\n        });\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"InputAutocompleteMobile\",\n      children: React.createElement(() => {\n        const options = [{\n          key: '1',\n          content: 'Neptunium'\n        }, {\n          key: '2',\n          content: 'Plutonium'\n        }, {\n          key: '3',\n          content: 'Americium'\n        }, {\n          key: '4',\n          content: 'Curium'\n        }, {\n          key: '5',\n          content: 'Berkelium'\n        }, {\n          key: '6',\n          content: 'Californium'\n        }, {\n          key: '7',\n          content: 'Einsteinium'\n        }, {\n          key: '8',\n          content: 'Fermium'\n        }, {\n          key: '9',\n          content: 'Hydrogenium'\n        }, {\n          key: '10',\n          content: 'Helium'\n        }, {\n          key: '11',\n          content: 'Lithium'\n        }, {\n          key: '12',\n          content: 'Beryllium'\n        }, {\n          key: '13',\n          content: 'Borum'\n        }, {\n          key: '14',\n          content: 'Carboneum'\n        }, {\n          key: '15',\n          content: 'Nitrogenium'\n        }, {\n          key: '16',\n          content: 'Oxygenium'\n        }];\n        const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || '').toLowerCase());\n        const [value, setValue] = React.useState('');\n        const [filter, setFilter] = React.useState('');\n        const handleFilter = event => {\n          setFilter(event.target.value);\n        };\n        const handleChange = payload => {\n          const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : '';\n          setValue(newValue);\n          setFilter(newValue);\n        };\n        const filteredOptions = options.filter(option => matchOption(option, filter));\n        return /*#__PURE__*/_jsx(InputAutocompleteMobile, {\n          dataTestId: 'asfa fs asf afa',\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          error: text('error', ''),\n          hint: text('hint', ''),\n          closeOnSelect: boolean('closeOnSelect', true),\n          value: value,\n          filter: filter,\n          options: filteredOptions,\n          placeholder: text('placeholder', 'Выберите элемент'),\n          label: text('label', 'Элемент'),\n          labelView: select('labelView', ['inner', 'outer'], 'inner'),\n          onChange: handleChange,\n          onFilter: handleFilter,\n          onClearFilter: () => setFilter(''),\n          continueButtonProps: {\n            dataTestId: 'continue'\n          },\n          cancelButtonProps: {\n            dataTestId: 'cancel'\n          },\n          bottomSheetProps: {\n            transitionProps: {\n              onEnter: () => setFilter(value)\n            }\n          }\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"InputAutocomplete\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/input-autocomplete\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=58839%3A63017\",\n      children: \"\\u0414\\u0430\\u0435\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445, \\u043B\\u0438\\u0431\\u043E \\u0432\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0441\\u0432\\u043E\\u0451 \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u043A\\u043B\\u0430\\u0432\\u0438\\u0430\\u0442\\u0443\\u0440\\u044B.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const inputAutocomplete = () => React.createElement(() => {\n  const [value, setValue] = React.useState(\"\");\n  const handleInput = event => {\n    setValue(event.target.value);\n  };\n  const handleChange = ({\n    selected\n  }) => {\n    setValue(selected ? selected.key : \"\");\n  };\n  const filteredOptions = options.filter(option => matchOption(option, value));\n  return /*#__PURE__*/_jsx(InputAutocomplete, {\n    options: filteredOptions,\n    selected: boolean(\"prevent select\", true) ? [] : undefined,\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    error: text(\"error\", \"\"),\n    success: boolean(\"success\", false),\n    hint: text(\"hint\", \"\"),\n    allowUnselect: boolean(\"allowUnselect\", true),\n    closeOnSelect: boolean(\"closeOnSelect\", false),\n    Arrow: boolean(\"Arrow\", false) ? Arrow : undefined,\n    circularNavigation: boolean(\"circularNavigation\", false),\n    placeholder: text(\"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    label: text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n    onChange: handleChange,\n    onInput: handleInput,\n    value: value\n  });\n});\ninputAutocomplete.storyName = 'InputAutocomplete';\ninputAutocomplete.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [value, setValue] = React.useState(\\\"\\\");\\n  const handleInput = event => {\\n    setValue(event.target.value);\\n  };\\n  const handleChange = ({\\n    selected\\n  }) => {\\n    setValue(selected ? selected.key : \\\"\\\");\\n  };\\n  const filteredOptions = options.filter(option => matchOption(option, value));\\n  return <InputAutocomplete options={filteredOptions} selected={boolean(\\\"prevent select\\\", true) ? [] : undefined} block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} error={text(\\\"error\\\", \\\"\\\")} success={boolean(\\\"success\\\", false)} hint={text(\\\"hint\\\", \\\"\\\")} allowUnselect={boolean(\\\"allowUnselect\\\", true)} closeOnSelect={boolean(\\\"closeOnSelect\\\", false)} Arrow={boolean(\\\"Arrow\\\", false) ? Arrow : undefined} circularNavigation={boolean(\\\"circularNavigation\\\", false)} placeholder={text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u0432\\\\u0435\\\\u0434\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} label={text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} onChange={handleChange} onInput={handleInput} value={value} />;\\n})'\n  }\n};\nexport const inputAutocompleteMobile = () => React.createElement(() => {\n  const options = [{\n    key: \"1\",\n    content: \"Neptunium\"\n  }, {\n    key: \"2\",\n    content: \"Plutonium\"\n  }, {\n    key: \"3\",\n    content: \"Americium\"\n  }, {\n    key: \"4\",\n    content: \"Curium\"\n  }, {\n    key: \"5\",\n    content: \"Berkelium\"\n  }, {\n    key: \"6\",\n    content: \"Californium\"\n  }, {\n    key: \"7\",\n    content: \"Einsteinium\"\n  }, {\n    key: \"8\",\n    content: \"Fermium\"\n  }, {\n    key: \"9\",\n    content: \"Hydrogenium\"\n  }, {\n    key: \"10\",\n    content: \"Helium\"\n  }, {\n    key: \"11\",\n    content: \"Lithium\"\n  }, {\n    key: \"12\",\n    content: \"Beryllium\"\n  }, {\n    key: \"13\",\n    content: \"Borum\"\n  }, {\n    key: \"14\",\n    content: \"Carboneum\"\n  }, {\n    key: \"15\",\n    content: \"Nitrogenium\"\n  }, {\n    key: \"16\",\n    content: \"Oxygenium\"\n  }];\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || \"\").toLowerCase());\n  const [value, setValue] = React.useState(\"\");\n  const [filter, setFilter] = React.useState(\"\");\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n  const handleChange = payload => {\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : \"\";\n    setValue(newValue);\n    setFilter(newValue);\n  };\n  const filteredOptions = options.filter(option => matchOption(option, filter));\n  return /*#__PURE__*/_jsx(InputAutocompleteMobile, {\n    dataTestId: \"asfa fs asf afa\",\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    error: text(\"error\", \"\"),\n    hint: text(\"hint\", \"\"),\n    closeOnSelect: boolean(\"closeOnSelect\", true),\n    value: value,\n    filter: filter,\n    options: filteredOptions,\n    placeholder: text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    label: text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n    onChange: handleChange,\n    onFilter: handleFilter,\n    onClearFilter: () => setFilter(\"\"),\n    continueButtonProps: {\n      dataTestId: \"continue\"\n    },\n    cancelButtonProps: {\n      dataTestId: \"cancel\"\n    },\n    bottomSheetProps: {\n      transitionProps: {\n        onEnter: () => setFilter(value)\n      }\n    }\n  });\n});\ninputAutocompleteMobile.storyName = 'InputAutocompleteMobile';\ninputAutocompleteMobile.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const options = [{\\n    key: \\\"1\\\",\\n    content: \\\"Neptunium\\\"\\n  }, {\\n    key: \\\"2\\\",\\n    content: \\\"Plutonium\\\"\\n  }, {\\n    key: \\\"3\\\",\\n    content: \\\"Americium\\\"\\n  }, {\\n    key: \\\"4\\\",\\n    content: \\\"Curium\\\"\\n  }, {\\n    key: \\\"5\\\",\\n    content: \\\"Berkelium\\\"\\n  }, {\\n    key: \\\"6\\\",\\n    content: \\\"Californium\\\"\\n  }, {\\n    key: \\\"7\\\",\\n    content: \\\"Einsteinium\\\"\\n  }, {\\n    key: \\\"8\\\",\\n    content: \\\"Fermium\\\"\\n  }, {\\n    key: \\\"9\\\",\\n    content: \\\"Hydrogenium\\\"\\n  }, {\\n    key: \\\"10\\\",\\n    content: \\\"Helium\\\"\\n  }, {\\n    key: \\\"11\\\",\\n    content: \\\"Lithium\\\"\\n  }, {\\n    key: \\\"12\\\",\\n    content: \\\"Beryllium\\\"\\n  }, {\\n    key: \\\"13\\\",\\n    content: \\\"Borum\\\"\\n  }, {\\n    key: \\\"14\\\",\\n    content: \\\"Carboneum\\\"\\n  }, {\\n    key: \\\"15\\\",\\n    content: \\\"Nitrogenium\\\"\\n  }, {\\n    key: \\\"16\\\",\\n    content: \\\"Oxygenium\\\"\\n  }];\\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || \\\"\\\").toLowerCase());\\n  const [value, setValue] = React.useState(\\\"\\\");\\n  const [filter, setFilter] = React.useState(\\\"\\\");\\n  const handleFilter = event => {\\n    setFilter(event.target.value);\\n  };\\n  const handleChange = payload => {\\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : \\\"\\\";\\n    setValue(newValue);\\n    setFilter(newValue);\\n  };\\n  const filteredOptions = options.filter(option => matchOption(option, filter));\\n  return <InputAutocompleteMobile dataTestId={\\\"asfa fs asf afa\\\"} block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} error={text(\\\"error\\\", \\\"\\\")} hint={text(\\\"hint\\\", \\\"\\\")} closeOnSelect={boolean(\\\"closeOnSelect\\\", true)} value={value} filter={filter} options={filteredOptions} placeholder={text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} label={text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} onChange={handleChange} onFilter={handleFilter} onClearFilter={() => setFilter(\\\"\\\")} continueButtonProps={{\\n    dataTestId: \\\"continue\\\"\\n  }} cancelButtonProps={{\\n    dataTestId: \\\"cancel\\\"\\n  }} bottomSheetProps={{\\n    transitionProps: {\\n      onEnter: () => setFilter(value)\\n    }\\n  }} />;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/InputAutocomplete',\n  id: 'InputAutocomplete',\n  component: InputAutocomplete,\n  tags: ['stories-mdx'],\n  includeStories: [\"inputAutocomplete\", \"inputAutocompleteMobile\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"react\"),t=require(\"@alfalab/utils\");function n(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var u,r,o=n(e);function c(e){\"Tab\"===e.key&&(u=\"keyboard\")}function f(){u=\"mouse\"}function a(){u=\"mouse\"}function i(){document.addEventListener(\"keydown\",c),document.addEventListener(\"mousedown\",f),document.addEventListener(\"touchstart\",a)}function s(e){return e.map((function(e){var t=e[0];return e[1].matches?t:null})).filter(Boolean)}!function(e){e.LOADED=\"loaded\",e.LOADING=\"loading\",e.ERROR=\"error\"}(r||(r={})),exports.useClickOutside=function(e,t){o.default.useEffect((function(){var n=function(n){e.current&&!e.current.contains(n.target)&&t(n)};return document.addEventListener(\"mousedown\",n),document.addEventListener(\"touchstart\",n),function(){document.removeEventListener(\"mousedown\",n),document.removeEventListener(\"touchstart\",n)}}),[e,t])},exports.useCountdown=function(t){var n,u,r,o=t.endDate,c=t.onStart,f=t.onEnd,a=e.useRef(null),i=e.useState((n=o,u=new Date,(r=(n.getTime()-u.getTime())/1e3)>0?Math.floor(r):Math.ceil(r))),s=i[0],d=i[1],l=e.useCallback((function(){return clearInterval(a.current)}),[]);return e.useEffect((function(){c&&c()}),[]),e.useEffect((function(){return a.current=setInterval((function(){d((function(e){return e-1}))}),1e3),l}),[l]),e.useEffect((function(){s<=0&&(l(),f&&f())}),[s]),[s]},exports.useDidUpdateEffect=function(e,t){var n=o.default.useRef(!1);o.default.useEffect((function(){if(n.current){var t=e();if(t)return function(){return t()}}n.current=!0}),t)},exports.useEventCallback=function(e){var t=o.default.useRef(e);return o.default.useEffect((function(){t.current=e})),o.default.useCallback((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return t.current.apply(void 0,e)}),[])},exports.useFocus=function(e,t){var n=o.default.useState(!1),r=n[0],c=n[1],f=o.default.useCallback((function(){t&&t!==u||c(!0)}),[t]),a=o.default.useCallback((function(){c(!1)}),[]);return o.default.useEffect((function(){var t=e.current;return t&&(t.addEventListener(\"focusin\",f),t.addEventListener(\"focusout\",a)),function(){t&&(t.removeEventListener(\"focusin\",f),t.removeEventListener(\"focusout\",a))}}),[a,f,e]),o.default.useEffect(i,[]),[r]},exports.useImageLoadingState=function(t){var n=t.src,u=e.useState(r.LOADING),o=u[0],c=u[1];return e.useEffect((function(){var e=!0;c(r.LOADING);var t=new Image;return t.onload=function(){e&&c(r.LOADED)},t.onerror=function(){e&&c(r.ERROR)},t.srcset=n,function(){e=!1}}),[n]),o},exports.useKeydownOutside=function(e,t){o.default.useEffect((function(){var n=function(n){!e.current||n.target instanceof Node&&e.current.contains(n.target)||t(n)};return document.addEventListener(\"keydown\",n),function(){document.removeEventListener(\"keydown\",n)}}),[e,t])},exports.useMedia=function(e,t){var n=o.default.useState([t]),u=n[0],r=n[1],c=o.default.useState([]),f=c[0],a=c[1],i=\"undefined\"!=typeof window;return o.default.useEffect((function(){if(i&&window.matchMedia){var t=e.map((function(e){var t=e[0],n=e[1];return[t,window.matchMedia(n)]}));a(t),r(s(t))}}),[i]),o.default.useEffect((function(){var e=function(){r(s(f))};return f.forEach((function(t){return t[0],t[1].addListener(e)})),function(){f.forEach((function(t){return t[0],t[1].removeListener(e)}))}}),[u,f]),u},exports.usePrevious=function(e){var t=o.default.useRef();return o.default.useEffect((function(){t.current=e})),t.current},exports.useScrolledToBottomOfPage=function(e,n){void 0===n&&(n=!0),o.default.useEffect((function(){var u=function(){t.hasScrolledToBottomOfPage()&&(e(),n&&document.removeEventListener(\"scroll\",u))};return document.addEventListener(\"scroll\",u),function(){document.removeEventListener(\"scroll\",u)}}),[e])};\n","// extracted by mini-css-extract-plugin\nexport default {\"arrow\":\"arrow_RWc1Z\",\"error\":\"error_HXxNm\"};","import React, { useCallback, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Input as DefaultInput } from '@alfalab/core-components-input';\nimport { FieldProps } from '@alfalab/core-components-select';\n\nimport { InputAutocompleteDesktopProps } from '../Component.desktop';\n\nimport styles from './index.module.css';\n\nexport type AutocompleteFieldProps = FieldProps &\n    Pick<InputAutocompleteDesktopProps, 'Input' | 'inputProps' | 'value' | 'onInput' | 'readOnly'>;\n\nexport const AutocompleteField = ({\n    label,\n    labelView = 'inner',\n    placeholder,\n    size,\n    Arrow,\n    Input = DefaultInput,\n    value,\n    error,\n    success,\n    hint,\n    disabled,\n    readOnly,\n    onInput,\n    inputProps = {},\n    innerProps,\n}: AutocompleteFieldProps) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const { onClick, onFocus } = innerProps;\n\n    const inputDisabled = disabled || readOnly;\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            if (onClick) onClick(event);\n\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [onClick],\n    );\n\n    return (\n        <Input\n            {...inputProps}\n            {...innerProps}\n            wrapperRef={mergeRefs([\n                innerProps.ref as React.Ref<HTMLElement>,\n                inputProps.wrapperRef as React.Ref<HTMLElement>,\n            ])}\n            ref={mergeRefs([inputRef, inputProps.ref as React.Ref<HTMLElement>])}\n            disabled={disabled}\n            readOnly={readOnly}\n            block={true}\n            label={label}\n            labelView={labelView}\n            placeholder={placeholder}\n            size={size}\n            error={error}\n            success={success}\n            hint={hint}\n            onChange={onInput}\n            onClick={inputDisabled ? undefined : handleClick}\n            onFocus={inputDisabled ? undefined : onFocus}\n            autoComplete='off'\n            value={value}\n            rightAddons={\n                (Arrow || inputProps.rightAddons) && (\n                    <React.Fragment>\n                        {inputProps.rightAddons}\n                        {Arrow && (\n                            <span\n                                className={cn(styles.arrow, {\n                                    [styles.error]: error,\n                                })}\n                            >\n                                {Arrow}\n                            </span>\n                        )}\n                    </React.Fragment>\n                )\n            }\n        />\n    );\n};\n","import React, { ChangeEvent, FC, forwardRef, RefAttributes } from 'react';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport {\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    Option as DefaultOption,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { AutocompleteField } from './autocomplete-field';\n\nexport type InputAutocompleteDesktopProps = Omit<BaseSelectProps, 'Field' | 'nativeSelect'> & {\n    /**\n     * Компонент ввода значения\n     */\n    Input?: FC<InputProps & RefAttributes<HTMLInputElement>>;\n\n    /**\n     * Пропсы, которые будут прокинуты в инпут\n     */\n    inputProps?: InputProps & Record<string, unknown>;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Поле доступно только для чтения\n     */\n    readOnly?: InputProps['readOnly'];\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Обработчик ввода\n     */\n    onInput?: (event: ChangeEvent<HTMLInputElement>) => void;\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение поповера\n     */\n    updatePopover?: BaseSelectProps['updatePopover'];\n};\n\nexport const InputAutocompleteDesktop = forwardRef<HTMLInputElement, InputAutocompleteDesktopProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            Input,\n            inputProps = {},\n            onInput,\n            value,\n            success,\n            readOnly,\n            closeOnSelect = false,\n            options,\n            ...restProps\n        },\n        ref,\n    ) => (\n        <BaseSelect\n            ref={ref}\n            autocomplete={true}\n            options={options}\n            closeOnSelect={closeOnSelect}\n            Option={Option}\n            Field={AutocompleteField}\n            fieldProps={{\n                Input,\n                onInput,\n                value,\n                inputProps,\n                readOnly,\n                success,\n            }}\n            Optgroup={Optgroup}\n            OptionsList={OptionsList}\n            {...restProps}\n        />\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_shmZr\",\"field\":\"field_lHc4C\",\"disabled\":\"disabled_fvYlN\",\"placeholder\":\"placeholder__30Tu\",\"contentWrapper\":\"contentWrapper_sbKRl\",\"value\":\"value_GSNlj\",\"focusVisible\":\"focusVisible_lmfo8\"};","import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { FormControl, FormControlProps } from '@alfalab/core-components-form-control';\nimport { InputAutocompleteProps } from '@alfalab/core-components-input-autocomplete';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select';\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nexport type AutocompleteMobileFieldProps = FormControlProps &\n    Omit<BaseFieldProps, 'selected' | 'multiple' | 'success'> &\n    Pick<InputAutocompleteProps, 'value'>;\n\nexport const AutocompleteMobileField = ({\n    size = 'm',\n    open,\n    error,\n    hint,\n    disabled,\n    label,\n    labelView = 'inner',\n    placeholder,\n    value,\n    innerProps,\n    dataTestId,\n    fieldClassName,\n    Arrow,\n    valueRenderer,\n    toggleMenu,\n    setSelectedItems,\n    selectedMultiple,\n    ...restProps\n}: AutocompleteMobileFieldProps) => {\n    const [focused, setFocused] = useState(false);\n\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    const [focusVisible] = useFocus(wrapperRef, 'keyboard');\n\n    const filled = Boolean(value);\n    const showLabel = !!label && (filled || !placeholder || labelView === 'outer');\n\n    return (\n        <div\n            className={styles.component}\n            ref={wrapperRef}\n            onFocus={() => setFocused(true)}\n            onBlur={() => setFocused(false)}\n        >\n            <FormControl\n                fieldClassName={cn(styles.field, fieldClassName, {\n                    [styles.disabled]: disabled,\n                    [styles.focusVisible]: focusVisible,\n                })}\n                block={true}\n                size={size}\n                focused={focused}\n                disabled={disabled}\n                filled={filled}\n                label={showLabel && label}\n                labelView={labelView}\n                error={error}\n                hint={hint}\n                rightAddons={Arrow}\n                data-test-id={dataTestId}\n                {...restProps}\n                {...innerProps}\n            >\n                <div className={styles.contentWrapper}>\n                    {placeholder && !filled && (\n                        <span className={styles.placeholder}>{placeholder}</span>\n                    )}\n                    {filled && <div className={styles.value}>{value}</div>}\n                </div>\n            </FormControl>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"bottomSheetInput\":\"bottomSheetInput_F5C4G\",\"footer\":\"footer_WM8GQ\"};","import React, { ChangeEvent, ElementType, RefObject, useMemo, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport throttle from 'lodash.throttle';\n\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { Input as CoreInput } from '@alfalab/core-components-input';\nimport {\n    BaseSelectChangePayload,\n    BaseSelectProps,\n    SelectMobile,\n    SelectMobileProps,\n} from '@alfalab/core-components-select';\n\nimport { AutocompleteMobileField } from './autocomplete-mobile-field';\n\nimport styles from './mobile.module.css';\n\nexport type InputAutocompleteMobileProps = Omit<\n    BaseSelectProps,\n    'OptionsList' | 'Checkmark' | 'onScroll' | 'nativeSelect' | 'autocomplete' | 'valueRenderer'\n> & {\n    /**\n     * Обработчик выбора\n     */\n    onChange: (payload: string | BaseSelectChangePayload) => void;\n\n    /**\n     * Обработчик ввода фильтра.\n     */\n    onFilter: (event: ChangeEvent<HTMLInputElement>) => void;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Значение фильтра.\n     */\n    filter?: string;\n\n    /**\n     * Обработчик нажатия на кнопку \"Отмена\".\n     */\n    onCancel?: () => void;\n\n    /**\n     * Обработчик нажатия на крестик в инпуте фильтра.\n     */\n    onClearFilter?: () => void;\n\n    /**\n     * Дополнительные пропсы компонента BottomSheet\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Дополнительные пропсы на слот под заголовком компонента BottomSheet\n     */\n    bottomSheetHeaderAddonsProps?: Record<string, unknown>;\n\n    /**\n     * Дополнительные пропсы на кнопку \"продолжить\"\n     */\n    continueButtonProps?: ButtonProps;\n\n    /**\n     * Дополнительные пропсы на кнопку \"отмена\"\n     */\n    cancelButtonProps?: ButtonProps;\n\n    /**\n     * Кастомный инпут\n     */\n    Input?: ElementType;\n};\n\nconst SELECTED: string[] = [];\n\nexport const InputAutocompleteMobile = React.forwardRef(\n    (\n        {\n            Input,\n            bottomSheetProps = {},\n            bottomSheetHeaderAddonsProps = {},\n            value = '',\n            filter = '',\n            name,\n            Arrow = null,\n            label,\n            placeholder,\n            size = 's',\n            open: openProp,\n            onFilter,\n            onChange,\n            onOpen,\n            onCancel,\n            onClearFilter,\n            continueButtonProps,\n            cancelButtonProps,\n            selected,\n            multiple,\n            ...restProps\n        }: InputAutocompleteMobileProps,\n        ref,\n    ) => {\n        const [open, setOpen] = useState(false);\n        const bottomSheetInputRef = useRef<HTMLInputElement>(null);\n        const targetRef = useRef<HTMLDivElement>(null);\n\n        const setBottomSheetVisibility = (isOpen: boolean) => {\n            if (openProp === undefined) {\n                setOpen(isOpen);\n            }\n\n            if (onOpen) {\n                onOpen({ open: isOpen, name });\n            }\n        };\n\n        const handleOpen: SelectMobileProps['onOpen'] = (payload) => {\n            setBottomSheetVisibility(Boolean(payload.open));\n        };\n\n        const handleOptionsListTouchMove = useMemo(\n            () =>\n                throttle(() => {\n                    const input = bottomSheetInputRef.current;\n\n                    if (input && document.activeElement === input) {\n                        input.blur();\n                    }\n                }, 300),\n            [],\n        );\n\n        const handleApply = () => {\n            setBottomSheetVisibility(false);\n            onChange(filter);\n        };\n\n        const handleChange: SelectMobileProps['onChange'] = (payload) => {\n            onChange(payload);\n\n            if (multiple) {\n                // После выбора опции возвращаем фокус в поле ввода.\n                requestAnimationFrame(() => bottomSheetInputRef.current?.focus());\n            }\n        };\n\n        const handleCancel = () => {\n            setBottomSheetVisibility(false);\n\n            if (onCancel) {\n                onCancel();\n            }\n        };\n\n        const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n            const input = bottomSheetInputRef.current;\n\n            // Перед закрытием шторки снимаем фокус с инпута, чтобы предотвратить скачок шторки.\n            if (\n                event.relatedTarget === targetRef.current &&\n                input &&\n                input === document.activeElement\n            ) {\n                input.blur();\n            }\n        };\n\n        const getBottomSheetProps = (): InputAutocompleteMobileProps['bottomSheetProps'] => {\n            const Component = Input || CoreInput;\n\n            return {\n                actionButton: (\n                    <div className={styles.footer}>\n                        <Button\n                            block={true}\n                            view='secondary'\n                            size='s'\n                            onClick={handleCancel}\n                            {...cancelButtonProps}\n                        >\n                            Отмена\n                        </Button>\n                        <Button\n                            block={true}\n                            view='primary'\n                            size='s'\n                            onClick={handleApply}\n                            {...continueButtonProps}\n                        >\n                            Продолжить\n                        </Button>\n                    </div>\n                ),\n                title: label || placeholder,\n                bottomAddons: (\n                    <Component\n                        block={true}\n                        clear={!!onClearFilter}\n                        onClear={onClearFilter}\n                        value={filter}\n                        onInput={onFilter}\n                        placeholder={placeholder}\n                        onFocus={handleInputFocus}\n                        {...bottomSheetHeaderAddonsProps}\n                        className={cn(\n                            styles.bottomSheetInput,\n                            bottomSheetHeaderAddonsProps.className as string,\n                        )}\n                        ref={mergeRefs([\n                            bottomSheetInputRef,\n                            bottomSheetHeaderAddonsProps.ref as RefObject<HTMLInputElement>,\n                        ])}\n                    />\n                ),\n                initialHeight: 'full',\n                ...bottomSheetProps,\n                containerProps: {\n                    onTouchMove: handleOptionsListTouchMove,\n                    ...bottomSheetProps.containerProps,\n                },\n            };\n        };\n\n        return (\n            <SelectMobile\n                ref={mergeRefs([targetRef, ref])}\n                selected={selected || SELECTED}\n                open={Boolean(open || openProp)}\n                onOpen={handleOpen}\n                onChange={handleChange}\n                Arrow={Arrow}\n                Field={AutocompleteMobileField}\n                fieldProps={{ value }}\n                placeholder={placeholder}\n                label={label}\n                size={size}\n                name={name}\n                multiple={multiple}\n                bottomSheetProps={getBottomSheetProps()}\n                optionsListProps={{ showFooter: false }}\n                {...restProps}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BaseSelectProps } from '@alfalab/core-components-select';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { InputAutocompleteDesktop, InputAutocompleteDesktopProps } from './Component.desktop';\nimport { InputAutocompleteMobile, InputAutocompleteMobileProps } from './Component.mobile';\n\nexport type InputAutocompleteResponsiveProps = InputAutocompleteDesktopProps &\n    InputAutocompleteMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport type InputAutocompleteMedia = 'desktop' | 'mobile';\n\nexport const InputAutocompleteResponsive = forwardRef<\n    HTMLInputElement | HTMLDivElement,\n    InputAutocompleteResponsiveProps\n>(({ breakpoint = 1024, ...restProps }, ref) => {\n    const [view] = useMedia<InputAutocompleteMedia>(\n        [\n            ['mobile', `(max-width: ${breakpoint - 1}px)`],\n            ['desktop', `(min-width: ${breakpoint}px)`],\n        ],\n        'desktop',\n    );\n\n    return view === 'desktop' ? (\n        <InputAutocompleteDesktop {...restProps} ref={ref as React.Ref<HTMLInputElement>} />\n    ) : (\n        <InputAutocompleteMobile {...restProps} ref={ref} />\n    );\n});\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","id","live","className","href","MDXContent","wrapper","MDXLayout","InputAutocomplete","InputAutocompleteMobile","I","options","matchOption","option","inputValue","toLowerCase","includes","title","component","name","setValue","filteredOptions","filter","selected","boolean","undefined","block","size","select","disabled","error","text","success","hint","allowUnselect","closeOnSelect","Arrow","circularNavigation","placeholder","label","labelView","onChange","onInput","event","target","setFilter","content","dataTestId","payload","newValue","isOptionShape","onFilter","onClearFilter","continueButtonProps","cancelButtonProps","bottomSheetProps","transitionProps","onEnter","version","package","design","description","changelog","development","inputAutocomplete","storyName","parameters","storySource","source","inputAutocompleteMobile","componentMeta","tags","includeStories","docs","page","Changelog","_ref","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","githubLink","Title","Typography","tag","_defineProperty","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","e","require","t","u","r","o","n","default","c","f","i","document","addEventListener","s","map","matches","Boolean","LOADED","LOADING","ERROR","exports","current","removeEventListener","window","matchMedia","forEach","addListener","removeListener","AutocompleteField","_ref$labelView","_ref$Input","Input","DefaultInput","readOnly","_ref$inputProps","inputProps","innerProps","inputRef","useRef","onFocus","inputDisabled","handleClick","focus","_objectSpread","wrapperRef","mergeRefs","ref","autoComplete","rightAddons","React","InputAutocompleteDesktop","forwardRef","_ref$OptionsList","OptionsList","DefaultOptionsList","_ref$Optgroup","Optgroup","DefaultOptgroup","_ref$Option","Option","DefaultOption","_ref$closeOnSelect","restProps","_objectWithoutProperties","_excluded","BaseSelect","autocomplete","Field","fieldProps","AutocompleteMobileField","_cn","_ref$size","fieldClassName","valueRenderer","toggleMenu","setSelectedItems","selectedMultiple","focused","setFocused","_useFocus","useFocus","focusVisible","filled","showLabel","onBlur","FormControl","SELECTED","_ref$bottomSheetProps","_ref$bottomSheetHeade","bottomSheetHeaderAddonsProps","_ref$value","_ref$filter","_ref$Arrow","openProp","onOpen","onCancel","multiple","bottomSheetInputRef","targetRef","setBottomSheetVisibility","isOpen","handleOptionsListTouchMove","throttle","input","activeElement","blur","handleApply","handleCancel","handleInputFocus","relatedTarget","SelectMobile","handleOpen","requestAnimationFrame","_bottomSheetInputRef$","getBottomSheetProps","CoreInput","actionButton","Button","bottomAddons","clear","onClear","initialHeight","containerProps","onTouchMove","optionsListProps","showFooter","InputAutocompleteResponsive","_ref$breakpoint","breakpoint","_useMedia","useMedia"],"sourceRoot":""}