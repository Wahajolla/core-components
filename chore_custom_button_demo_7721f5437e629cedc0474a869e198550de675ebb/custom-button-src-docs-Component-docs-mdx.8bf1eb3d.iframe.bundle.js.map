{"version":3,"file":"custom-button-src-docs-Component-docs-mdx.8bf1eb3d.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/custom-button/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/custom-button/src/index.module.css?ccab","webpack://@alfalab/core-components/./packages/custom-button/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/custom-button/src/docs/Component.docs.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/custom-button/src/index.module.css?0c1d","webpack://@alfalab/core-components/./packages/custom-button/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"виды-кнопок\",\n      children: \"Виды кнопок\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Размеры и отступы идентичны компоненту \", _jsx(_components.a, {\n        href: \"?path=/docs/components-button--docs\",\n        children: \"Button\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const SIZES = ['xxs', 'xs', 's', 'm', 'l', 'xl'].reverse();\\n\\nrender(() => {\\n    const isMobile = document.body.clientWidth < 450;\\n    return (\\n        <div style={{ display: 'flex', flexFlow: 'row wrap', gap: '16px', alignItems: 'start' }}>\\n            {SIZES.map((size) => (\\n                <CustomButton size={size} block={isMobile} key={size}>\\n                    <Typography.Text\\n                        view='primary-large'\\n                        weight='medium'\\n                    >{`${size.toUpperCase()}-size`}</Typography.Text>\\n                </CustomButton>\\n            ))}\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"состояния-и-цвет-контента\",\n      children: \"Состояния и цвет контента\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Кнопка поддерживает четыре вида генерации состояний \", _jsx(_components.code, {\n        children: \"stateType\"\n      }), \" и четыре цвета контента \", _jsx(_components.code, {\n        children: \"contentColor\"\n      }), \".\\nДля корректного поведения рекомендуется сочетать эти параметры только следующим образом:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const VARIANTS = {\\n    Light: {\\n        stateType: 'darkening',\\n        contentColor: 'white',\\n        backgroundColor: '#EB58BF',\\n    },\\n    Dark: {\\n        stateType: 'lightening',\\n        contentColor: 'black',\\n        backgroundColor: '#7FEFFA',\\n    },\\n};\\nrender(() => {\\n    const isMobile = document.body.clientWidth < 450;\\n    return (\\n        <div style={{ display: 'flex', flexFlow: 'row wrap', gap: '16px' }}>\\n            {Object.keys(VARIANTS).map((title) => (\\n                <CustomButton {...VARIANTS[title]} block={isMobile} key={title}>\\n                    {title}\\n                </CustomButton>\\n            ))}\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"цвет-фона\",\n      children: \"Цвет фона\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Кнопка может принимать в качестве цвета фона как токены, так и кастомные значения.\\nПри использовании токенов, необходимо учитывать их поведение в dark mode.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const VARIANTS = {\\n    Token: {\\n        stateType: 'darkening',\\n        contentColor: 'white',\\n        backgroundColor: 'var(--color-light-bg-secondary-inverted)',\\n    },\\n    Color: {\\n        stateType: 'darkening',\\n        contentColor: 'white',\\n        backgroundColor: '#EB58BF',\\n    },\\n    Gradient: {\\n        stateType: 'darkening',\\n        contentColor: 'white',\\n        backgroundColor: 'linear-gradient(264deg, #FF42CA 0%, #FF8A00 100%)',\\n    },\\n};\\nrender(() => {\\n    const isMobile = document.body.clientWidth < 450;\\n    return (\\n        <div style={{ display: 'flex', flexFlow: 'row wrap', gap: '16px' }}>\\n            {Object.keys(VARIANTS).map((title) => (\\n                <CustomButton {...VARIANTS[title]} block={isMobile}>\\n                    {title}\\n                </CustomButton>\\n            ))}\\n        </div>\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n.customButton {\\n    overflow: hidden;\\n    position: relative;\\n\\n    &.white * {\\n        color: var(--color-static-text-primary-light);\\n    }\\n\\n    &.black * {\\n        color: var(--color-static-text-primary-dark);\\n    }\\n\\n    & span {\\n        position: relative;\\n        z-index: 3;\\n    }\\n\\n    &:before {\\n        position: absolute;\\n        left: 0;\\n        right: 0;\\n        top: 0;\\n        bottom: 0;\\n        background-color: rgba(0, 0, 0, 0);\\n        content: '';\\n        transition: 0.2s;\\n        opacity: 1;\\n        pointer-events: none;\\n    }\\n\\n    &.darkening {\\n        &:hover:before {\\n            background-color: rgba(0, 0, 0, 0.07);\\n        }\\n\\n        &:active:before {\\n            background-color: rgba(0, 0, 0, 0.15);\\n        }\\n    }\\n\\n    &.lightening {\\n        &:hover:before {\\n            background-color: rgba(255, 255, 255, 0.15);\\n        }\\n\\n        &:active:before {\\n            background-color: rgba(255, 255, 255, 0.2);\\n        }\\n    }\\n}\\n\\n/* Disabled */\\n\\n.customButton:disabled {\\n    opacity: 0.3;\\n\\n    &.customLoading {\\n        opacity: 1;\\n    }\\n\\n    &.white * {\\n        color: var(--color-static-text-primary-light);\\n    }\\n\\n    &.black * {\\n        color: var(--color-static-text-primary-dark);\\n    }\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {CustomButton} from '../Component';\nimport styles from '!!raw-loader!../index.module.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { CustomButton } from '@alfalab/core-components/custom-button';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: CustomButton\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: styles\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Meta, Markdown} from '@storybook/addon-docs';\nimport {ComponentHeader, Tabs} from 'storybook/blocks';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport packageJson from '../../package.json';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      title: \"Components/CustomButton\",\n      id: \"CustomButton\"\n    }), \"\\n\", _jsx(ComponentHeader, {\n      name: \"CustomButton\",\n      version: packageJson.version,\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?type=design&node-id=86259-120469&t=uXSyrcmZCCbwjZpo-0\"\n    }), \"\\n\", _jsx(Tabs, {\n      description: _jsx(Description, {}),\n      changelog: _jsx(Markdown, {\n        children: Changelog\n      }),\n      development: _jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"customButton\":\"customButton_PgaWT\",\"white\":\"white_dlAho\",\"black\":\"black_SkdGZ\",\"darkening\":\"darkening_Y0jpS\",\"lightening\":\"lightening_uLTt0\",\"customLoading\":\"customLoading_Yjvef\"};","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ComponentProps as ButtonComponentProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type ComponentProps = Omit<ButtonComponentProps, 'view' | 'colors'> & {\n    /**\n     * Цвет кнопки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'black' | 'white';\n\n    /**\n     * Затемнение или осветление кнопки при hover и active\n     */\n    stateType?: 'darkening' | 'lightening';\n};\n\ntype AnchorButtonProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype NativeButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type CustomButtonProps = Partial<AnchorButtonProps | NativeButtonProps>;\n\nexport const CustomButton = React.forwardRef<\n    HTMLAnchorElement | HTMLButtonElement,\n    CustomButtonProps\n>(\n    (\n        {\n            children,\n            className,\n            loading,\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const buttonProps = {\n            style: { background: backgroundColor },\n            ...restProps,\n        };\n\n        const buttonClassName = cn(\n            styles.customButton,\n            className,\n            styles[contentColor],\n            styles[stateType],\n            {\n                [styles.customLoading]: loading,\n            },\n        );\n\n        return (\n            <Button\n                {...buttonProps}\n                view='primary'\n                ref={ref}\n                className={buttonClassName}\n                loading={loading}\n            >\n                {children}\n            </Button>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nCustomButton.defaultProps = {\n    size: 'm',\n    block: false,\n    loading: false,\n    nowrap: false,\n};\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","id","href","live","className","MDXContent","wrapper","MDXLayout","of","css","title","name","version","design","description","changelog","development","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","CustomButton","React","ref","loading","_ref$backgroundColor","backgroundColor","_ref$contentColor","contentColor","_ref$stateType","stateType","restProps","_objectWithoutProperties","_excluded","buttonProps","_objectSpread","background","buttonClassName","Button","defaultProps","size","block","nowrap"],"sourceRoot":""}