{"version":3,"file":"chart-src-docs-Component-stories-mdx.32221e1d.iframe.bundle.js","mappings":"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WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,SACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,SACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,UACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,UACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO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OyC,UACPxC,UAAWyC,cACXxC,MAAOyC,UACP5D,OAAQ4D,WAEV7C,IAAK+C,QACLvE,YAAasE,iBAEflD,KAAM,CAAC,CACLC,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,SACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,UACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,UACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,SACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,IACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,UACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,UACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,KACN,CACD4M,MAAO,WACP5M,MAAO,OAGLwQ,iBAAmB,CACvBlO,GAAI,aACJiH,0BACAF,wCACAC,4BACAG,YACAiB,YACAQ,gBACAL,cACAgB,YACAyB,OAAQ2C,gBACR1C,OAAQ,CAAC2C,YAEX,OAAoB,oBAAM,MAAO,CAC/B1C,MAAO,CACLC,QAAS,QAEX5N,SAAU,EAAc,mBAAK,MAAO,CAClC2N,MAAO,CACLE,aAAc,OACdnJ,IAAK,GACL4I,MAAO,SACPnB,OAAQ,SAEVnM,UAAuB,mBAAK,OAAA8N,MAAO,CACjCrL,GAAI,aACJiH,aAAcA,aACdF,oBAAqBA,oBACrBC,cAAeA,cACfG,MAAOA,MACPiB,MAAOA,MACPQ,QAASA,QACTL,OAAQA,OACRgB,MAAOA,MACPyB,OAAQ2C,gBACR1C,OAAQ,CAACT,UAAWoD,gBAEP,mBAAK,MAAO,CAC3B1C,MAAO,CACLL,MAAO,QACPnB,OAAQ,QACR4B,SAAU,QAEZ/N,UAAuB,mBAAK,MAAO,CACjCA,SAAUgO,KAAKC,UAppBHC,OAChB,MAEMR,OAFOM,KAAKG,MAAMH,KAAKC,UAAUC,MAEnBR,OAAOU,KAAIC,OAC7BA,KAAKvB,KAAO,CAAC,CACXC,MAAO,QACP5M,MAAO,SACN,OACIkO,QAET,MAAO,IACFH,IACHT,OAVa,CAAC,QAAS,QAAS,OAWhCC,cACD,EAsoB4BY,CAAUqC,kBAAmB,KAAM,SAGhE,IAEJuB,UAAUJ,UAAY,aACtBI,UAAUH,WAAa,CACrBC,YAAa,CACXC,OAAQ,25lBAGL,MAAME,eAAiB,IAAM,qBAAoB,KACtD,MA0DM7O,UAAW,mBAAAC,QAAO,WAAY,EAAG,CAAC,EANV,uBAOxBC,UAAW,mBAAAC,SAAQ,YAAY,EANb,iBAOlBC,YAAa,mBAAAD,SAAQ,cAAc,EAPjB,iBAQlBM,eAAgB,mBAAAR,QAAO,iBAAkB,GAAI,CAAC,EAP7B,gBAQjBS,kBAAmB,mBAAAT,QAAO,oBAAqB,GAAI,CAAC,EARnC,gBASjBU,YAAa,mBAAAV,QAAO,kBAAmB,GAAI,CAAC,EAT3B,gBAUjBW,aAAc,mBAAAX,QAAO,mBAAoB,GAAI,CAAC,EAV7B,gBAWjBY,gBAAiB,mBAAAN,MAAK,iBAAkB,MAXvB,gBAYjBO,QAAS,mBAAAb,QAAO,SAAU,EAAG,CAAC,EAZb,gBAajBc,YAAa,mBAAAd,QAAO,aAAc,GAAI,CAAC,EAbtB,gBAcjBe,WAAY,mBAAAb,SAAQ,QAAQ,EAblB,SAcVc,kBAAmB,mBAAAC,QAAO,cArDJ,CAC1BC,OAAQ,SACRC,IAAK,OAmD6D,SAdpD,SAeVE,eAAgB,mBAAAnB,SAAQ,YAAY,EAf1B,SAgBVoB,eAAgB,mBAAAtB,QAAO,WAAY,EAAG,CAAC,EAhB7B,SAiBVyB,iBAAkB,mBAAAzB,QAAO,aAAc,GAAI,CAAC,EAjBlC,SAkBV0B,iBAAkB,mBAAA1B,QAAO,aAAc,EAAG,CAAC,EAlBjC,SAmBV2B,WAAY,mBAAAzB,SAAQ,YAAY,EAnBtB,SAoBV0B,WAAY,mBAAA1B,SAAQ,QAAQ,EAnBlB,SAqBVmN,gBADU,mBAAAnN,SAAQ,QAAQ,EAnBlB,QAoBQ,mBAAAA,SAAQ,cAAc,EApB9B,QAqBRoN,gBAAiB,mBAAApN,SAAQ,eAAe,EArBhC,OAsBRqN,WAAY,mBAAAvN,QAAO,SAAU,GAAI,CAAC,EAtB1B,OAuBRwN,SAAU,mBAAAvM,QAAO,OAlCL,CAChBtB,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,OAAQ,UA8BgC,SAvB5B,OAwBR2N,WAAY,mBAAAC,QAAO,SAAU,CACjCvM,IAAK,GACLD,OAAQ,IA1BI,OA4BRyM,cAAe,mBAAArN,MAAK,sBAAuB,GA5BnC,OA6BRsN,oBAAqB,mBAAA5N,QAAO,mBAAoB,GAAI,CAAC,EA7B7C,OA8BR6N,SAAU,mBAAAvN,MAAK,kBAAmB,2CA9B1B,OAgCR2F,oBAAsB,CAC1BlG,mBAEImG,cAAgB,CACpBjG,kBACAE,uBAEIgG,aAAe,CACnBC,WAAY,CACVjF,IAAKX,cACLU,OAAQT,iBACRqB,KAAMpB,WACNqB,MAAOpB,aAETE,cACAC,sBACAF,+BAEIyF,MAAQ,CACZC,KAAMvF,UACNwF,SAAU5E,UACV6E,KAAM,WACNC,eAAe,EACfC,yBAAyB,EACzBG,SAAU,mBACVC,WAAYpF,gBACZqF,SAAU1F,cACV2F,SAAU1F,cACV6F,WAAY1F,gBACZ2F,QAAS,QACTC,YAAarG,kBAETsG,MAAQ,CACZhB,KAAM1E,WAEFkH,eAAiB,CAAC,aAAc,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAC5FgF,SAAW,CACfxH,KAAM+G,cACNrE,WAAYqE,cACZpE,YAAaqE,eACbpE,OAAQqE,UACRpE,MAAO,MACPC,KAAMoE,QACNO,OAAQN,WAAa,EACrBO,UAAW,CACT1E,UAAW9B,SAAW,GAAGA,UAAUmG,eACnC3F,OAAQ4F,oBAEVvE,WAAY,CACV5J,MAlDY,mBAAAa,MAAK,kBAAmB,SA/B1B,OAkFV8G,QAAS,KACTkC,UAAW9B,SAAW,GAAa,IAAVA,QACzBjH,KAAMsN,SAERtE,KAAM,CAAC,CACLC,MAAO,aACP5M,MAAO,KACN,CACD4M,MAAO,SACP5M,MAAO,KACN,CACD4M,MAAO,SACP5M,MAAO,MACN,CACD4M,MAAO,SACP5M,MAAO,GACN,CACD4M,MAAO,SACP5M,MAAO,KACN,CACD4M,MAAO,SACP5M,MAAO,MACN,CACD4M,MAAO,SACP5M,MAAO,KACN,CACD4M,MAAO,SACP5M,MAAO,KAGLqN,gBAAkB,CACtB/K,GAAI,YACJiH,0BACAF,wCACAC,4BACAG,YACAiB,YACA4C,OAAQpB,eACRqB,OAAQ,CAAC2D,WAEX,OAAoB,oBAAM,MAAO,CAC/B1D,MAAO,CACLC,QAAS,QAEX5N,SAAU,EAAc,mBAAK,MAAO,CAClC2N,MAAO,CACLE,aAAc,OACdnJ,IAAK,GACL4I,MAAO,SACPnB,OAAQ,SAEVnM,UAAuB,mBAAK,OAAA8N,MAAO,CACjCrL,GAAI,YACJiH,aAAcA,aACdF,oBAAqBA,oBACrBC,cAAeA,cACfG,MAAOA,MACPiB,MAAOA,MACP4C,OAAQpB,eACRqB,OAAQ,CAAC2D,eAEI,mBAAK,MAAO,CAC3B1D,MAAO,CACLL,MAAO,QACPnB,OAAQ,QACR4B,SAAU,QAEZ/N,UAAuB,mBAAK,MAAO,CACjCA,SAAUgO,KAAKC,UA/MHC,OAChB,MAEMR,OAFOM,KAAKG,MAAMH,KAAKC,UAAUC,MAEnBR,OAAOU,KAAIC,OAC7BA,KAAKvB,KAAO,CAAC,CACXC,MAAO,QACP5M,MAAO,SACN,OACIkO,QAET,MAAO,IACFH,IACHT,OAVa,CAAC,QAAS,QAAS,OAWhCC,cACD,EAiM4BY,CAAUd,iBAAkB,KAAM,SAG/D,IAEJ2E,eAAeL,UAAY,kBAC3BK,eAAeJ,WAAa,CAC1BC,YAAa,CACXC,OAAQ,m0LAGZ,MAAMG,cAAgB,CACpBrP,MAAO,mBACPN,GAAI,QACJ4P,KAAM,CAAC,eACPC,eAAgB,CAAC,WAAY,YAAa,mBAE5CF,cAAcL,WAAaK,cAAcL,YAAc,CAAC,EACxDK,cAAcL,WAAWQ,KAAO,IAC1BH,cAAcL,WAAWQ,MAAQ,CAAC,EACtCC,KA3yCF,SAAS,6BAAW/S,MAAQ,CAAC,GAC3B,MACEmD,QAASC,WACPX,OAAOC,OAAO,CAAC,GAAG,YAAsB1C,MAAMG,YAClD,OAAOiD,WAAyB,mBAAKA,UAAW,IAC3CpD,MACHO,UAAuB,mBAAK,mCAAmB,IAC1CP,UAEF,mCAAkBA,MACzB,GAmyCA,mC,gdCxmFA,uBAA4B,kBAA5B,kBAAqD,a,uECSxCgT,UAAuB,SAAvBA,UAAoBC,MAAmC,IAA7BC,QAAOD,KAAPC,QAAOC,UAAAF,KAAEG,KAAAA,UAAI,IAAAD,WAAQA,UACxD,OACIE,EAAAA,YAAAA,KAAA,OAAKpQ,UAAWqQ,qBAAGC,uBAAkBH,MAAQG,kBAAa,eAAehT,SAAE2S,SAEnF,E,s2BCbA,wBAA0B,gBCapBM,gBAAkB,mBAClBC,YAAc,gCAEPC,QAAqB,SAArBA,QAAkBT,MAAmD,IAA7CU,IAAGV,KAAHU,IAAKrQ,MAAK2P,KAAL3P,MAAOsQ,WAAUX,KAAVW,WAAUC,UAAAZ,KAAE3I,KAAAA,UAAI,IAAAuJ,UAAG,OAAMA,UACtEC,WAAwBC,EAAAA,MAAAA,UAAS,IAAGC,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAA7BI,KAAIF,WAAA,GAAEG,QAAOH,WAAA,GACpBI,YAAwBL,EAAAA,MAAAA,WAAUH,YAAWS,YAAAJ,EAAAA,cAAAA,GAAAG,WAAA,GAAtCE,KAAID,WAAA,GAAEE,QAAOF,WAAA,GACdG,OAAkB,SAATlK,KACTmK,OAASD,OAAShB,gBAAkBC,YA6B1C,OA3BAiB,EAAAA,MAAAA,YAAU,WAKN,IAJA,IAAIC,eAAiBF,OAAOG,KAAKjB,KAE3BkB,WAAa,GAEZF,gBACHE,WAAWC,KAAKH,eAAe,IAC/BA,eAAiBF,OAAOG,KAAKjB,KAGjC,IAAIoB,OAASF,WAAWG,QACpB,SAACC,IAAKrG,KAAMsG,OACR,IACMC,QADSD,QAAUL,WAAWO,OAAS,EACpB,GAAK,KAE9B,MAAM,GAANC,OAAUJ,KAAGI,OAAGzG,MAAIyG,OAAGF,QAC3B,GACAX,OAAS,UAAY,IAGrBA,SACAO,QAAU,KAGdZ,QAAQY,OACZ,GAAG,KAGCO,EAAAA,YAAAA,MAAA,OAAKrS,UAAWqQ,qBAAG,cAAeC,yBAAgBhT,SAAA,CAC7C+C,QAAS+P,EAAAA,YAAAA,KAAA,MAAIpQ,UAAWqQ,qBAAG,SAAU,aAAa/S,SAAE+C,QACpD4Q,OACGoB,EAAAA,YAAAA,MAAAC,YAAAA,SAAA,CAAAhV,SAAA,CACKqT,aACGP,EAAAA,YAAAA,KAACmC,OAAAA,KAAI,CAACC,KAAK,UAAUC,QAAS,SAAAA,UAAA,OAAMnB,SAASD,KAAK,EAAEqB,QAAM,EAAApV,SACrD+T,KAAO,SAAW,aAG1BA,OAAQjB,EAAAA,YAAAA,KAACuC,IAAAA,GAAO,CAACC,SAAS,MAAMjV,KAAMsT,KAAM4B,MAAM,SAKvE,E,i3NChEA,iCAA4B,kBAA5B,4BAAqD,aAArD,kCAA+E,mBAA/E,4BAAyG,aAAzG,kCAAmI,mBAAnI,6BAA8J,cAA9J,iCAAwL,kBAAxL,8BAAmN,eAAnN,8BAA2O,e,2DCmB9NC,gBAAkD,SAAlDA,gBAA+C9C,MAAoC,IAAD+C,aAAAC,cAAAC,cAAAC,cAAAC,cAAAC,cAA7B9S,KAAI0P,KAAJ1P,KAAM+S,OAAMrD,KAANqD,OAAQ/V,SAAQ0S,KAAR1S,SAC5EgW,gBAAoBC,EAAAA,UAAAA,eAAc,cAA3BC,WAAwCxC,EAAAA,cAAAA,GAAAsC,eAAA,GAA/B,GAEVG,YAAcnT,KACfoT,QAAQ,qBAAsB,SAC9BA,QAAQ,2BAA4B,SACpCC,cAECC,WAAU,mEAAAxB,OAAsEqB,aAEhFI,MAAQL,UAAYM,kBAAAA,WAAAA,MAAmBA,kBAAAA,WAAAA,YAE7C,OACIzB,EAAAA,YAAAA,MAAA,OAAKrS,UAAWqQ,qBAAG,cAAeC,kCAAkBhT,SAAA,EAChD8S,EAAAA,YAAAA,KAACyD,MAAK,CAACE,IAAI,KAAKvB,KAAK,SAAQlV,SACxBgD,OAEJhD,WACG8S,EAAAA,YAAAA,KAAC0D,kBAAAA,WAAAA,KAAe,CACZC,IAAI,IACJvB,KAAK,iBACLxS,UAAWqQ,qBAAGC,6BAAW0D,EAAAA,eAAAA,GAAA,GAAK1D,mCAAqBkD,YAAalW,SAE/DA,YAGT+U,EAAAA,YAAAA,MAAA,OAAKrS,UAAWsQ,6BAAahT,SAAA,EACzB8S,EAAAA,YAAAA,KAAA,KACIpQ,UAAWqQ,qBAAGC,+BAAa0D,EAAAA,eAAAA,GAAA,GACtB1D,mCAAqB+C,SAE1BY,KACIZ,QACA,uFAEJa,OAAO,SAAQ5W,SAClB,WAGD+U,EAAAA,YAAAA,MAAA,KAAGrS,UAAWsQ,8BAAe2D,KAAML,WAAYM,OAAO,SAAQ5W,SAAA,EAC1D8S,EAAAA,YAAAA,KAAC+D,WAAAA,EAAU,CAAC/S,KAAK,uCAAuC,gBAKhEgP,EAAAA,YAAAA,KAACgE,aAAAA,MAAK,CAACC,UAAU,aAAa7L,MAAM,SAASxI,UAAWsQ,4BAAYhT,UACnD,QAAZyV,aAAAuB,uBAAOhU,aAAK,IAAAyS,kBAAA,EAAZA,aAAcwB,UAAW,IACtBlC,EAAAA,YAAAA,MAACyB,kBAAAA,WAAAA,KAAe,CAACtB,KAAK,gBAAgBgC,MAAM,YAAWlX,SAAA,CAAC,iBACrC,KACf+U,EAAAA,YAAAA,MAACE,OAAAA,KAAI,CACD0B,KAAI,2DAAA7B,OAAyE,QAAzEY,cAA6DsB,uBAAOhU,aAAK,IAAA0S,mBAAA,EAAZA,cAAcyB,QAC/EP,OAAO,SACP1B,KAAK,YACLkC,WAAW,EACXrU,MAAM,+BACNL,UAAWsQ,iCAAiBhT,SAAA,CAEf,QAFe2V,cAE3BqB,uBAAOhU,aAAK,IAAA2S,mBAAA,EAAZA,cAAcsB,SAAU,KACxBI,EAAAA,SAAAA,IAAsB,QAAbzB,cAACoB,uBAAOhU,aAAK,IAAA4S,mBAAA,EAAZA,cAAcqB,SAAU,UAAW,WAAY,eAE7D,MAAM,IAAc,QAAbpB,cAACmB,uBAAOhU,aAAK,IAAA6S,mBAAA,EAAZA,cAAcyB,QAAS,KAC/BD,EAAAA,SAAAA,IAAsB,QAAbvB,cAACkB,uBAAOhU,aAAK,IAAA8S,mBAAA,EAAZA,cAAcwB,QAAS,QAAS,SAAU,iBAM7E,E,o2BCtFA,uBAAuB,aCYlBC,QAAO,SAAPA,SAAO,OAAPA,QAAO,0BAAPA,QAAO,cAAPA,QAAO,oBAAPA,QAAO,sBAAPA,QAAO,0BAAPA,OAAO,EAAPA,SAAO,IAQNC,UAAQC,UAAA,IAAAf,EAAAA,eAAAA,GAAAe,UACTF,QAAQG,YAAc,aAAUhB,EAAAA,eAAAA,GAAAe,UAChCF,QAAQI,MAAQ,aAAUjB,EAAAA,eAAAA,GAAAe,UAC1BF,QAAQK,SAAW,mBAAgBlB,EAAAA,eAAAA,GAAAe,UACnCF,QAAQM,UAAY,eAAYnB,EAAAA,eAAAA,GAAAe,UAChCF,QAAQO,YAAc,gBAAcL,WAY5BM,KAAkB,SAAlBA,KAAerF,MAOrB,IANHhB,YAAWgB,KAAXhB,YACAjS,MAAKiT,KAALjT,MACAuY,QAAOtF,KAAPsF,QACArG,UAASe,KAATf,UAASsG,qBAAAvF,KACTwF,gBAAAA,qBAAe,IAAAD,qBAAGV,QAAQG,YAAWO,qBACrCE,YAAWzF,KAAXyF,YAEA5E,WAAgCC,EAAAA,MAAAA,UAAS0E,iBAAgBzE,YAAAC,EAAAA,cAAAA,GAAAH,UAAA,GAAlD6E,SAAQ3E,WAAA,GAAE4E,YAAW5E,WAAA,GAEtB6E,cAAeC,EAAAA,MAAAA,cAA6C,SAACC,EAACC,OAAsB,IAAlBC,WAAUD,MAAVC,WACpEL,YAAYK,WAChB,GAAG,IAoCGC,MAAOC,EAAAA,MAAAA,UAAQ,kBAlCF,SAAbC,aACF,MAAO,EACH/F,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC/V,MAAOyU,SAASD,QAAQG,aAAcjV,GAAI8U,QAAQG,YAAY1X,SAC9D0R,aADmE,eAGxEjS,OACIqT,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC/V,MAAOyU,SAASD,QAAQI,OAAQlV,GAAI8U,QAAQI,MAAM3X,SAClDP,OADuD,SAG5D,KACJuY,SACIlF,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC/V,MAAOyU,SAASD,QAAQK,UAAWnV,GAAI8U,QAAQK,SAAS5X,SACxDgY,SAD6D,YAGlE,KACJG,aACIrF,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CACA/V,MAAOyU,SAASD,QAAQO,aACxBrV,GAAI8U,QAAQO,YAAY9X,SAGvBmY,aAFG,eAIR,KACJxG,WACImB,EAAAA,YAAAA,KAACgG,YAAAA,IAAG,CAAC/V,MAAOyU,SAASD,QAAQM,WAAYpV,GAAI8U,QAAQM,UAAU7X,UAC3D8S,EAAAA,YAAAA,KAAA,OAAKnF,MAAO,CAAExC,UAAW,QAASnL,UAC9B8S,EAAAA,YAAAA,KAACL,UAAS,CAACE,QAAShB,eAFwC,aAKpE,MACNoH,OAAOC,MAAAA,eACb,CAE2BH,EAAY,GAAE,CAACnH,YAAajS,MAAOuY,UAE9D,OACIlF,EAAAA,YAAAA,KAACmG,YAAAA,KAAc,CACXvW,UAAU,cACVgW,WAAYN,SACZc,SAAUZ,aACVa,mBAAoBnG,uBAAYhT,SAE/B2Y,MAGb,E,85CChGa9B,WAAa,SAAbA,WAAUnE,MAAA,IAAA0G,UAAA1G,KAAM5O,KAAAA,UAAI,IAAAsV,UAAG,UAASA,UAAAC,WAAA3G,KAAEpF,MAAAA,WAAK,IAAA+L,WAAG,GAAEA,WAAAC,YAAA5G,KAAEvG,OAAAA,YAAM,IAAAmN,YAAG,GAAEA,YAAA,OAClExG,EAAAA,+CAAAA,KAAA,OAAKyG,MAAM,6BAA6BjM,MAAOA,MAAOnB,OAAQA,OAAQqN,QAAQ,YAAWxZ,UACrF8S,EAAAA,+CAAAA,KAAA,QACI2G,SAAS,UACTC,SAAS,UACTC,EAAE,uxBACF7V,KAAMA,QAER,EACR+S,WAAA+C,aAAA,iP","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/chart/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/chart/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Компонент для построения графиков основан на библиотеке основаной на D3 с лицензией - MIT https://recharts.org.\\nВ данный момент компонент поддерживает три типа графиков: \", _jsx(_components.code, {\n        children: \"bar\"\n      }), \", \", _jsx(_components.code, {\n        children: \"line\"\n      }), \", \", _jsx(_components.code, {\n        children: \"area\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"данные-для-отрисовки\",\n      children: \"Данные для отрисовки\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"options.labels\"\n        }), \" - массив меток \", _jsx(_components.code, {\n          children: \"string | number\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"options.series\"\n        }), \" - массив объектов с параметрами грaфиков с обязательным полем \", _jsx(_components.code, {\n          children: \"data\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"options.series.data\"\n        }), \" - массив данных, который должен состоять из меток \", _jsx(_components.code, {\n          children: \"label: string | number\"\n        }), \" и значений \", _jsx(_components.code, {\n          children: \"value: number\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"пример-объекта-с-дефолтными-значениями\",\n      children: \"Пример объекта с дефолтными значениями\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"options: {\\n    /**\\n     * Oбязательное уникальное поле, такие елменты как `legend`\\n     * `linearGradient` используют его\\n     */\\n    id,\\n\\n    /**\\n     * Компонент контейнера, позволяющий адаптировать диаграммы к размеру\\n     * родительского контейнера\\n     */\\n    responsiveContainer?: {\\n        /**\\n         * Значение для debounce функции при ресайзе\\n         */\\n        debounce?: 0,\\n    },\\n\\n    /*\\n     * Диграмма для построения графиков с разными типами\\n     */\\n    composeChart: {\\n        /*\\n        * Отступы графика на момент инициализации компонента\\n        */\\n        initMargin?: {\\n            top?: 5,\\n            right?: 5,\\n            bottom?: 5,\\n            left?: 5,\\n        },\\n\\n        /*\\n        * Максимальная ширина графиков типа bar\\n        */\\n        maxBarSize?,\\n\\n        /*\\n        * Разрыв между двумя категориями столбцов,\\n        который может быть процентным или фиксированным значением\\n        */\\n        barCategoryGap?: '10%',\\n\\n        /*\\n        * Разрыв между двумя столбцами одной категории\\n        */\\n        barGap?: 4,\\n    },\\n\\n    /**\\n     * Отображение линий осей графика\\n     */\\n    cartesianGrid?: {\\n        /**\\n         * Отображение горизонтальной сетки\\n         */\\n        horizontal?: true,\\n\\n        /**\\n         * Отображение вертикальной сетки\\n         */\\n        vertical?: true,\\n\\n        /**\\n         * Штрихи для осей\\n         */\\n        strokeDasharray?,\\n\\n        /**\\n         * Цвет разметки сетки\\n         */\\n        stroke?,\\n\\n        /**\\n         * Цвет заливки графика\\n         */\\n        fill?,\\n    },\\n\\n    /**\\n     * Настройки оси Х\\n     */\\n    xAxis: {\\n        /**\\n         * Скрыть ось\\n         */\\n        hide?: false,\\n\\n        /**\\n         * Отображение линии оси.\\n         */\\n        axisLine?: true,\\n\\n        /**\\n         * Тип оси.\\n         */\\n        type: 'category',\\n\\n        /**\\n         * Разрешить значениям оси быть десятичными или нет.\\n         */\\n        allowDecimals?: true,\\n\\n        /**\\n         * Разрешить или нет на оси дублировать категории,\\n         * если \\\"type\\\" оси - \\\"category\\\".\\n         */\\n        allowDuplicatedCategory?: true,\\n\\n        /**\\n         * Угол наклона значений оси.\\n         */\\n        angle?: 0,\\n\\n        /**\\n         * Количество делений оси. Не используется,\\n         * если \\\"тип\\\" - \\\"категория\\\".\\n         */\\n        tickCount?: 5,\\n\\n        /**\\n         * Интревал линий деления оси\\n         */\\n        interval?: 'preserveEnd',\\n\\n        /**\\n         * Минимальный зазор между двумя соседними делениями оси.\\n         */\\n        minTickGap?: 5,\\n\\n        /**\\n         * Отображение линий деления оси\\n         */\\n        tickLine?: true,\\n\\n        /**\\n         * Размер линий деления оси\\n         */\\n        tickSize?: 6,\\n\\n        /**\\n         * Если установлено значение true,\\n         * галочки переворачиваются вокруг оси,\\n         * отображая метки внутри диаграммы, а не снаружи.\\n         */\\n\\n        mirror?: false,\\n\\n        /**\\n         * Отображение горизонтальной сетки\\n         */\\n        reversed?: false,\\n\\n        /**\\n         * Реверсировать ось или нет\\n         */\\n        tickMargin?: 0,\\n\\n        /**\\n         * Функция форматирования значения деления оси.\\n         */\\n        tickFormatter?,\\n\\n        /**\\n         * Ключ данных, отображаемых на оси.\\n         */\\n        dataKey,\\n\\n        /**\\n         * Ориентация оси\\n         */\\n        orientation?: 'bottom',\\n\\n        /**\\n         * Тип деления оси\\n         */\\n        tickType?,\\n    },\\n\\n    /**\\n     * Настройки оси Y\\n     */\\n    yAxis: {\\n        /**\\n         * Скрыть ось\\n         */\\n        hide?: false,\\n\\n        /**\\n         * Отображение линии оси.\\n         */\\n        axisLine?: true,\\n\\n        /**\\n         * Тип оси.\\n         */\\n        type: 'number',\\n\\n        /**\\n         * Разрешить значениям оси быть десятичными или нет.\\n         */\\n        allowDecimals?: true,\\n\\n        /**\\n         * Разрешить или нет на оси дублировать категории,\\n         * если \\\"type\\\" оси - \\\"category\\\".\\n         */\\n        allowDuplicatedCategory?: true,\\n\\n        /**\\n         * Угол наклона значений оси.\\n         */\\n        angle?: 0,\\n\\n        /**\\n         * Количество делений оси.\\n         * Не используется, если \\\"тип\\\" - \\\"категория\\\".\\n         */\\n        tickCount?: 5,\\n\\n        /**\\n         * Интревал линий деления оси\\n         */\\n        interval?: 'preserveEnd',\\n\\n        /**\\n         * Минимальный зазор между двумя соседними делениями оси.\\n         */\\n        minTickGap?: 5,\\n\\n        /**\\n         * Отображение линий деления оси\\n         */\\n        tickLine?: true,\\n\\n        /**\\n         * Размер линий деления оси\\n         */\\n        tickSize?: 6,\\n\\n        /**\\n         * Если установлено значение true,\\n         * галочки переворачиваются вокруг оси,\\n         * отображая метки внутри диаграммы, а не снаружи.\\n         */\\n        mirror?: false,\\n\\n        /**\\n         * Отображение горизонтальной сетки\\n         */\\n        reversed?: false,\\n\\n        /**\\n         * Реверсировать ось или нет\\n         */\\n        tickMargin?: 0,\\n\\n        /**\\n         * Функция форматирования значения деления оси.\\n         */\\n        tickFormatter?,\\n\\n        /**\\n         * Ключ данных, отображаемых на оси.\\n         */\\n        orientation?: 'bottom',\\n    },\\n\\n    /**\\n     * Всплывающаяся подсказка\\n     */\\n    tooltip?: {\\n        /**\\n         * Разделитель между именем и значением\\n         */\\n        separator?,\\n\\n        /**\\n         * Размер смещения между положением всплывающей\\n         * подсказки и активной позицией\\n         */\\n        offset?: 10,\\n\\n        /**\\n         * Когда элемент полезной нагрузки имеет значение null или undefined,\\n         * этот элемент не отображается\\n         */\\n        filterNull: true,\\n\\n        /**\\n         * Если установлено false, курсор не будет отображаться, когда всплывающая подсказка активна.\\n         * Если установлен объект, опция - это конфигурация курсора.\\n         * Если установлен элемент React, опция является настраиваемым элементом реакции курсора рисования.\\n         */\\n        cursor?: {\\n            /**\\n             * Цвет линии\\n             */\\n            stroke: cursorStroke,\\n\\n            /**\\n             * Ширина линии\\n             */\\n            strokeWidth: cursorStrokeWidth,\\n        },\\n\\n        /**\\n         * Если это поле установлено, положение всплывающей подсказки\\n         * будет фиксированным и больше не будет перемещаться.\\n         */\\n        position?: {\\n            x,\\n            y,\\n        };\\n\\n        /**\\n         * Если установлено false, анимация всплывающей подсказки будет отключена.\\n         */\\n        isAnimationActive?: true,\\n\\n        /**\\n         * Указывает, когда должна начинаться анимация,\\n         * единица измерения этого параметра - мс.\\n         */\\n        animationBegin?: 0,\\n\\n        /**\\n         * Определяет продолжительность анимации,\\n         * единица измерения этого параметра - мс.\\n         */\\n        animationDuration?: 1500,\\n\\n        /**\\n         * Тип функции плавности\\n         */\\n        animationEasing?: 'ease',\\n\\n        /**\\n         * Отображение стрелки тултипа\\n         */\\n        arrow?: false,\\n    };\\n\\n    /**\\n     * Компонент маштабирования графика\\n     */\\n    brush?: {\\n        /**\\n         * Ключ данных\\n         */\\n        dataKey,\\n\\n        /**\\n         * Ширина ползунков\\n         */\\n        travellerWidth?: 5,\\n\\n        /**\\n         * Начальный индекс интервала показа\\n         */\\n        startIndex?,\\n\\n        /**\\n         * Конечный индекс интервала показа\\n         */\\n        endIndex?,\\n\\n        /**\\n         * Отступ\\n         */\\n        brushMargin?: 0,\\n\\n        /**\\n         * Высота\\n         */\\n        height?: 40,\\n\\n        /**\\n         * Форматирование значений\\n         */\\n        tickFormatter?,\\n\\n        /**\\n         * Всегда показывать значение текущего интервала\\n         */\\n        alwaysShowText?: false,\\n\\n        /**\\n         * Цвет\\n         */\\n        stroke?: brushStroke,\\n    }\\n\\n    /**\\n     * Компонент подписи графиков\\n     */\\n    legend?: {\\n        /**\\n         * Выравнивание элементов легенды в вертикальном направлении\\n         */\\n        verticalAlign?: 'middle',\\n\\n        /**\\n         * Функция форматирования каждого текста в легенде\\n         */\\n        formatter?,\\n\\n        /**\\n         * Выравнивание элементов легенды в горизонтальном направлении\\n         */\\n        align?: 'center',\\n\\n        /**\\n         * Вертикальный отступ\\n         */\\n        marginTop?: 0,\\n\\n        /**\\n         * Высота иконок\\n         */\\n        iconHeight?: 16,\\n    },\\n\\n    /**\\n     * Mассив меток\\n     */\\n    labels: Array<string | number>,\\n\\n    /**\\n     * Mассив объектов с параметрами грaфиков с обязательным полем\\n     */\\n    series: [\\n        /*\\n         * Пример графика типа bar\\n         */\\n        {\\n            /*\\n             * Скрыть график\\n             */\\n            hide?: false,\\n\\n            /*\\n             * Скрыть график в легенде\\n             */\\n            hideLegend?: false,\\n\\n            /*\\n             * Скрыть график в тултипe\\n             */\\n            hideTooltip?: false,\\n\\n            /*\\n             * Z-index графика\\n             */\\n            zIndex,\\n\\n            /*\\n             * Тип графика\\n             */\\n            chart: 'bar',\\n\\n            /**\\n             * Радиус закругления углов графика типа bar\\n             */\\n            radius?: {\\n                /**\\n                 * Верхний pадиус закругления углов графика типа bar\\n                 */\\n                top?,\\n\\n                /**\\n                 * Нижний радиус закругления углов графика типа bar\\n                 */\\n                bottom?,\\n            },\\n\\n            /*\\n             * Тип иконки для графика\\n             */\\n            icon,\\n\\n            /*\\n             * Параметры графика\\n             */\\n            properties: {\\n\\n                /*\\n                * Название графика (отображается в легендах и тултипе)\\n                */\\n                name,\\n\\n                /*\\n                * Ключ данных\\n                */\\n                dataKey,\\n\\n                /*\\n                * Форматирование значения графика для тултипа\\n                */\\n                formatter?,\\n\\n                /*\\n                * Цвет заливки графика\\n                */\\n                fill,\\n\\n                /*\\n                * Цвет бордера графика\\n                */\\n                strokeWidth?,\\n            },\\n\\n            /**\\n             * Данные для построения графика\\n             */\\n            data: [\\n                /**\\n                 * Метка\\n                 */\\n                label,\\n\\n                /**\\n                 * Значение\\n                 */\\n                value\\n            ];\\n        },\\n\\n        /*\\n         * Пример графика типа line\\n         */\\n        {\\n            /*\\n             * Скрыть график\\n             */\\n            hide?: false,\\n\\n            /*\\n             * Скрыть график в легенде\\n             */\\n            hideLegend?: false,\\n\\n            /*\\n             * Скрыть график в тултипe\\n             */\\n            hideTooltip?: false,\\n\\n            /*\\n             * Z-index графика\\n             */\\n            zIndex,\\n\\n            /*\\n             * Тип графика\\n             */\\n            chart: 'line',\\n\\n            /*\\n             * Тип иконки для графика\\n             */\\n            icon,\\n\\n            /*\\n             * Параметры графика\\n             */\\n            properties: {\\n\\n                /*\\n                 * Название графика (отображается в легендах и тултипе)\\n                 */\\n                name,\\n\\n                /*\\n                 * Ключ данных\\n                 */\\n                dataKey,\\n\\n                /*\\n                 * Цвет линии графика\\n                 */\\n                stroke?: '#3182bd',\\n\\n                /*\\n                 * Отображение точек на графике\\n                 */\\n                dot?,\\n\\n                /*\\n                 * Параметры для точек грфика (если dot: true)\\n                 */\\n                dotSettings: [{\\n\\n                    /*\\n                     * Значение media query\\n                     */\\n                    media,\\n\\n                    /*\\n                     * Значение маштаба при ховере\\n                     */\\n                    scale,\\n\\n                    /*\\n                     * Начальный значения маштаба\\n                     */\\n                    initScale,\\n\\n                    /*\\n                     * Ширина точки\\n                     */\\n                    width,\\n\\n                    /*\\n                     * Высота точки\\n                     */\\n                    height,\\n                }],\\n\\n                /*\\n                 * Наследование цвета\\n                 */\\n                inheritStroke?: false,\\n\\n                /*\\n                 * Форматирование значения графика для тултипа\\n                 */\\n                formatter?,\\n\\n                /*\\n                 * Тип линии\\n                 */\\n                type? 'linear',\\n\\n                /*\\n                 * Толщина линии\\n                 */\\n                strokeWidth?: 1,\\n\\n                /*\\n                 * Прерывистость линии\\n                 */\\n                strokeDasharray?,\\n            },\\n\\n            /*\\n             *  Массив данных для отрисовки\\n             */\\n            data: [\\n\\n                /**\\n                 * Метка\\n                 */\\n                label,\\n\\n                /**\\n                 * Значение\\n                 */\\n                value,\\n            ],\\n        },\\n\\n        /*\\n         * Пример графика типа area\\n         */\\n        {\\n            /*\\n             * Скрыть график\\n             */\\n            hide?: false,\\n\\n            /*\\n             * Скрыть график в легенде\\n             */\\n            hideLegend?: false,\\n\\n            /*\\n             * Скрыть график в тултипe\\n             */\\n            hideTooltip?: false,\\n\\n            /*\\n             * Z-index графика\\n             */\\n            zIndex,\\n\\n            /*\\n             * Тип графика\\n             */\\n            chart: 'ara',\\n\\n            /*\\n             * Тип иконки для графика\\n             */\\n            icon,\\n\\n            /*\\n             * Оффсет для градиента (только для типа area)\\n             */\\n            offset,\\n\\n            /**\\n             * Параметры градиента\\n             */\\n            gradient: {\\n\\n                /**\\n                 * Индефикатор градиента\\n                 */\\n                gid,\\n\\n                /**\\n                 * Параметра точек для градиента\\n                 */\\n                points: [\\n\\n                    /**\\n                     * Отступ\\n                     */\\n                    offset: number,\\n\\n                    /**\\n                     * Цвет\\n                     */\\n                    stopColor: string,\\n\\n                    /**\\n                     * Прозрачность\\n                     */\\n                    stopOpacity: number,\\n                ];\\n            };\\n\\n            /*\\n             * Параметры графика\\n             */\\n            properties: {\\n\\n                /*\\n                 * Название графика (отображается в легендах и тултипе)\\n                 */\\n                name,\\n\\n                /*\\n                 * Ключ данных\\n                 */\\n                dataKey,\\n\\n                /*\\n                 * Цвет линии графика\\n                 */\\n                stroke?: '#3182bd',\\n\\n                /*\\n                 * Отображение точек на графике\\n                 */\\n                dot?,\\n\\n                /*\\n                 * Параметры для точек грфика (если dot: true)\\n                 */\\n                dotSettings: [{\\n\\n                    /*\\n                     * Значение media query\\n                     */\\n                    media,\\n\\n                    /*\\n                     * Значение маштаба при ховере\\n                     */\\n                    scale,\\n\\n                    /*\\n                     * Начальный значения маштаба\\n                     */\\n                    initScale,\\n\\n                    /*\\n                     * Ширина точки\\n                     */\\n                    width,\\n\\n                    /*\\n                     * Высота точки\\n                     */\\n                    height,\\n                }],\\n\\n                /*\\n                 * Наследование цвета\\n                 */\\n                inheritStroke?: false,\\n\\n                /*\\n                 * Форматирование значения графика для тултипа\\n                 */\\n                formatter?,\\n\\n                /*\\n                 * Тип линии\\n                 */\\n                type? 'linear',\\n\\n                /*\\n                 * Толщина линии\\n                 */\\n                strokeWidth?: 1,\\n\\n                /*\\n                 * Прерывистость линии\\n                 */\\n                strokeDasharray?,\\n            },\\n\\n            /**\\n             * Данные для построения графика\\n             */\\n            data: [\\n\\n                /**\\n                 * Метка\\n                 */\\n                label,\\n\\n                /**\\n                 * Значение\\n                 */\\n                value,\\n            ]\\n        },\\n    ],\\n};\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Canvas*/\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport format from 'date-fns/format';\nimport { Chart } from '@alfalab/core-components-chart';\nimport { Chart as ChartTS } from '../Component';\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { number, boolean, select, text, object } from '@storybook/addon-knobs';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Chart\",\n      id: \"Chart\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Chart.Bar\",\n      children: React.createElement(() => {\n        const clearData = obj => {\n          const copy = JSON.parse(JSON.stringify(obj));\n          const labels = ['label', 'label', '...'];\n          const series = copy.series.map(item => {\n            item.data = [{\n              label: 'label',\n              value: 'value'\n            }, '...'];\n            return item;\n          });\n          return {\n            ...obj,\n            labels,\n            series\n          };\n        };\n        const orientationVertical = {\n          bottom: 'bottom',\n          top: 'top'\n        };\n        const orientationHorizontal = {\n          left: 'left',\n          right: 'right'\n        };\n        const alignHorizontal = {\n          left: 'left',\n          center: 'center',\n          right: 'right'\n        };\n        const alignVertical = {\n          bottom: 'bottom',\n          middle: 'middle',\n          top: 'top'\n        };\n        const linesType = {\n          linear: 'linear',\n          monotone: 'monotone',\n          step: 'step'\n        };\n        const animationType = {\n          ease: 'ease',\n          'ease-in': 'ease-in',\n          'ease-out': 'ease-out',\n          'ease-in-out': 'ease-in-out',\n          linear: 'linear'\n        };\n        const iconTypes = {\n          circleLine: 'circleLine',\n          filledCircle: 'filledCircle',\n          strokeCircle: 'strokeCircle',\n          circle: 'circle'\n        };\n        const responsiveContainerId = 'responsiveContainer';\n        const cartesianGridId = 'cartesianGrid';\n        const composeChartId = 'composeChart';\n        const xAxisId = 'xAxis';\n        const yAxisId = 'yAxis';\n        const legendId = 'legend';\n        const tooltipId = 'tooltip';\n        const brushId = 'brush';\n        const lineId = 'line';\n        const barIdFirst = 'barFirst';\n        const barIdSecond = 'barSecond';\n        const debounce = number('debounce', 0, {}, responsiveContainerId);\n        const vertical = boolean('vertical', false, cartesianGridId);\n        const horizontal = boolean('horizontal', true, cartesianGridId);\n        const strokeDasharray = number('strokeDasharray', 0, {}, cartesianGridId);\n        const stroke = text('stroke', 'var(--color-light-border-primary)', cartesianGridId);\n        const fill = text('fill', 'var(--color-light-bg-primary)', cartesianGridId);\n        const initMarginTop = number('initMargin.top', 40, {}, composeChartId);\n        const initMarginBottom = number('initMargin.bottom', 20, {}, composeChartId);\n        const marginLeft = number('initMargin.left', 20, {}, composeChartId);\n        const marginRight = number('initMargin.right', 50, {}, composeChartId);\n        const barCategoryGap = text('barCategoryGap', '30%', composeChartId);\n        const barGap = number('barGap', 4, {}, composeChartId);\n        const maxBarSize = number('maxBarSize', 24, {}, composeChartId);\n        const xAxisHide = boolean('hide', false, xAxisId);\n        const xAxisOrientation = select('orientation', orientationVertical, 'bottom', xAxisId);\n        const xAxisAngle = number('angle', 0, {}, xAxisId);\n        const xAxisTickLine = boolean('tickLine', false, xAxisId);\n        const xAxisTickSize = number('tickSize', 6, {}, xAxisId);\n        const xAxisMirror = boolean('mirror', false, xAxisId);\n        const xAxisReversed = boolean('reversed', false, xAxisId);\n        const xAxisTickMargin = number('tickMargin', 10, {}, xAxisId);\n        const xAxisMinTickGap = number('minTickGap', 5, {}, xAxisId);\n        const xAxisLine = boolean('axisLine', false, xAxisId);\n        const yAxisHide = boolean('hide', false, yAxisId);\n        const yAxisOrientation = select('orientation', orientationHorizontal, 'left', yAxisId);\n        const yAxisAngle = number('angle', 0, {}, yAxisId);\n        const yAxisTickLine = boolean('tickLine', false, yAxisId);\n        const yAxisTickSize = number('tickSize', 6, {}, yAxisId);\n        const yAxisMirror = boolean('mirror', false, yAxisId);\n        const yAxisReversed = boolean('reversed', false, yAxisId);\n        const yAxisTickCoiunt = number('tickCount', 6, {}, yAxisId);\n        const yAxisTickMargin = number('tickMargin', 0, {}, yAxisId);\n        const yAxisMinTickGap = number('minTickGap', 5, {}, yAxisId);\n        const yAxisLine = boolean('axisLine', false, yAxisId);\n        const yAxisLabel = text('label', 'тыс.', yAxisId);\n        const legendAlign = select('align', alignHorizontal, 'center', legendId);\n        const legendVerticalAlign = select('verticalAlign', alignVertical, 'bottom', legendId);\n        const legendMarginTop = number('marginTop', 10, {}, legendId);\n        const legendIconHeight = number('iconHeight', 16, {}, legendId);\n        const tooltipArrow = boolean('arrow', true, tooltipId);\n        const tooltipIsAnimationActive = boolean('isAnimationActive', true, tooltipId);\n        const tooltipSeparator = text('separator', ' ', tooltipId);\n        const tooltipOffset = number('offset', 20, {}, tooltipId);\n        const cursorStroke = text('cursor.stroke', 'var(--color-light-border-primary)', tooltipId);\n        const cursorStrokeWidth = number('cursor.strokeWidth', 1, {}, tooltipId);\n        const tooltipFilterNull = boolean('filterNull', true, tooltipId);\n        const tooltipAnimationBegin = number('animationBegin', 0, {}, tooltipId);\n        const tooltipAnimationDuration = number('animationDuration', 500, {}, tooltipId);\n        const tooltipAnimationEasing = select('animationEasing', animationType, 'ease', tooltipId);\n        const travellerWidth = number('travellerWidth', 20, {}, brushId);\n        const brushHeight = number('height', 20, {}, brushId);\n        const brushStartIndex = number('startIndex', 0, {\n          min: 0,\n          max: 5\n        }, brushId);\n        const brushEndIndex = number('endIndex', 5, {\n          min: 0,\n          max: 5\n        }, brushId);\n        const brushStroke = text('stroke', 'var(--color-static-status-blue)', brushId);\n        const brushMargin = number('brushMargin', 10, {\n          min: 0,\n          max: 100\n        }, brushId);\n        const brushHeightAlwaysShowText = boolean('alwaysShowText', true, brushId);\n        const lineHide = boolean('hide', false, lineId);\n        const lineHideLegend = boolean('hideLegend', false, lineId);\n        const lineHideTooltip = boolean('hideTooltip', false, lineId);\n        const lineZIndex = number('zIndex', 50, {}, lineId);\n        const lineIcon = select('icon', iconTypes, 'circleLine', lineId);\n        const lineName = text('properties.name', 'остаток', lineId);\n        const lineStroke = text('properties.stroke', 'var(--color-static-status-blue)', lineId);\n        const lineDot = boolean('properties.dot', true, lineId);\n        const lineScale = number('properties.dotSettings.scale', 1.5, {}, lineId);\n        const lineInitScale = number('properties.dotSettings.initScale', 1, {}, lineId);\n        const lineWidth = number('properties.dotSettings.width', 18, {}, lineId);\n        const lineType = select('properties.type', linesType, 'monotone', lineId);\n        const lineInheritStroke = boolean('properties.inheritStroke', true, lineId);\n        const lineStrokeWidth = number('properties.strokeWidth', 2, {}, lineId);\n        const lineStrokeDasharray = text('properties.strokeDasharray', '1 0', lineId);\n        const barHideFirst = boolean('hide', false, barIdFirst);\n        const barHideLegendFirst = boolean('hideLegend', false, barIdFirst);\n        const barHideTooltipFirst = boolean('hideTooltip', false, barIdFirst);\n        const barZIndexFirst = number('zIndex', 1, {}, barIdFirst);\n        const barIconFirst = select('icon', iconTypes, 'circle', barIdFirst);\n        const barFillFirst = text('properties.fill', 'var(--color-static-graphic-persimmon)', barIdFirst);\n        const barNameFirst = text('properties.name', 'расход', barIdFirst);\n        const barHideSecond = boolean('hide', false, barIdSecond);\n        const barHideLegendSecond = boolean('hideLegend', false, barIdSecond);\n        const barHideTooltipSecond = boolean('hideTooltip', false, barIdSecond);\n        const barZIndexSecond = number('zIndex', 10, {}, barIdSecond);\n        const barIconSecond = select('icon', iconTypes, 'circle', barIdSecond);\n        const barFillSecond = text('properties.fill', 'var(--color-static-graphic-green-jungle)', barIdSecond);\n        const barNameSecond = text('properties.name', 'приход', barIdSecond);\n        const responsiveContainer = {\n          debounce\n        };\n        const cartesianGrid = {\n          vertical,\n          horizontal,\n          strokeDasharray,\n          stroke,\n          fill\n        };\n        const composeChart = {\n          initMargin: {\n            top: initMarginTop,\n            bottom: initMarginBottom,\n            left: marginLeft,\n            right: marginRight\n          },\n          barGap,\n          maxBarSize,\n          barCategoryGap\n        };\n        const xAxis = {\n          hide: xAxisHide,\n          axisLine: xAxisLine,\n          type: 'category',\n          allowDecimals: true,\n          allowDuplicatedCategory: true,\n          angle: xAxisAngle,\n          tickCount: 5,\n          interval: 'preserveStartEnd',\n          minTickGap: xAxisMinTickGap,\n          tickLine: xAxisTickLine,\n          tickSize: xAxisTickSize,\n          mirror: xAxisMirror,\n          reversed: xAxisReversed,\n          tickMargin: xAxisTickMargin,\n          dataKey: 'label',\n          orientation: xAxisOrientation\n        };\n        const yAxis = {\n          hide: yAxisHide,\n          axisLine: yAxisLine,\n          type: 'number',\n          allowDecimals: true,\n          allowDuplicatedCategory: true,\n          angle: yAxisAngle,\n          tickCount: yAxisTickCoiunt,\n          interval: 'preserveStartEnd',\n          minTickGap: yAxisMinTickGap,\n          tickLine: yAxisTickLine,\n          tickSize: yAxisTickSize,\n          mirror: yAxisMirror,\n          reversed: yAxisReversed,\n          tickMargin: yAxisTickMargin,\n          tickFormatter: decimal => `${decimal}\\xa0${yAxisLabel}`,\n          orientation: yAxisOrientation\n        };\n        const legend = {\n          verticalAlign: legendVerticalAlign,\n          align: legendAlign,\n          marginTop: legendMarginTop,\n          iconHeight: legendIconHeight\n        };\n        const tooltip = {\n          separator: tooltipSeparator,\n          offset: tooltipOffset,\n          filterNull: tooltipFilterNull,\n          cursor: {\n            stroke: cursorStroke,\n            strokeWidth: cursorStrokeWidth\n          },\n          isAnimationActive: tooltipIsAnimationActive,\n          animationBegin: tooltipAnimationBegin,\n          animationDuration: tooltipAnimationDuration,\n          animationEasing: tooltipAnimationEasing,\n          arrow: tooltipArrow\n        };\n        const brush = {\n          dataKey: 'label',\n          travellerWidth,\n          startIndex: brushStartIndex,\n          endIndex: brushEndIndex,\n          brushMargin: brushMargin,\n          height: brushHeight,\n          alwaysShowText: brushHeightAlwaysShowText,\n          stroke: brushStroke\n        };\n        const labelsBarChart = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь'];\n        const barChartFirst = {\n          hide: barHideLegendFirst,\n          hideLegend: barHideLegendFirst,\n          hideTooltip: barHideTooltipFirst,\n          zIndex: barZIndexFirst,\n          chart: 'bar',\n          icon: barIconFirst,\n          properties: {\n            name: barNameFirst,\n            dataKey: 'uv',\n            formatter: decimal => `${decimal * 1000}`,\n            fill: barFillFirst\n          },\n          data: [{\n            label: 'Январь',\n            value: 80\n          }, {\n            label: 'Февраль',\n            value: 140\n          }, {\n            label: 'Март',\n            value: 70\n          }, {\n            label: 'Апрель',\n            value: 210\n          }, {\n            label: 'Май',\n            value: 80\n          }, {\n            label: 'Июнь',\n            value: 20\n          }]\n        };\n        const barChartSecond = {\n          hide: barHideLegendSecond,\n          hideLegend: barHideLegendSecond,\n          hideTooltip: barHideTooltipSecond,\n          zIndex: barZIndexSecond,\n          chart: 'bar',\n          icon: barIconSecond,\n          properties: {\n            name: barNameSecond,\n            dataKey: 'pv',\n            formatter: decimal => `${decimal * 1000}`,\n            fill: barFillSecond\n          },\n          data: [{\n            label: 'Январь',\n            value: 110\n          }, {\n            label: 'Февраль',\n            value: 190\n          }, {\n            label: 'Март',\n            value: 60\n          }, {\n            label: 'Апрель',\n            value: 230\n          }, {\n            label: 'Май',\n            value: 190\n          }, {\n            label: 'Июнь',\n            value: 30\n          }]\n        };\n        const lineChart = {\n          hide: lineHide,\n          hideLegend: lineHideLegend,\n          hideTooltip: lineHideTooltip,\n          zIndex: lineZIndex,\n          chart: 'line',\n          icon: lineIcon,\n          properties: {\n            name: lineName,\n            dataKey: 'cnt',\n            stroke: lineStroke,\n            dot: lineDot,\n            dotSettings: {\n              scale: lineScale,\n              initScale: lineInitScale,\n              width: lineWidth,\n              height: lineWidth\n            },\n            inheritStroke: lineInheritStroke,\n            formatter: decimal => `${decimal * 1000}`,\n            type: lineType,\n            strokeWidth: lineStrokeWidth,\n            strokeDasharray: lineStrokeDasharray\n          },\n          data: [{\n            label: 'Январь',\n            value: 60\n          }, {\n            label: 'Февраль',\n            value: 95\n          }, {\n            label: 'Март',\n            value: 20\n          }, {\n            label: 'Апрель',\n            value: 180\n          }, {\n            label: 'Май',\n            value: 70\n          }, {\n            label: 'Июнь',\n            value: 10\n          }]\n        };\n        const barChartOptions = {\n          id: 'bar-chart',\n          composeChart,\n          responsiveContainer,\n          cartesianGrid,\n          xAxis,\n          yAxis,\n          tooltip,\n          legend,\n          brush,\n          labels: labelsBarChart,\n          series: [barChartFirst, barChartSecond, lineChart]\n        };\n        return /*#__PURE__*/_jsxs(_components.div, {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsx(_components.div, {\n            style: {\n              marginBottom: '20px',\n              top: 25,\n              width: '1050px',\n              height: '600px'\n            },\n            children: /*#__PURE__*/_jsx(Chart, {\n              id: \"bar-chart\",\n              composeChart: composeChart,\n              responsiveContainer: responsiveContainer,\n              cartesianGrid: cartesianGrid,\n              xAxis: xAxis,\n              yAxis: yAxis,\n              tooltip: tooltip,\n              legend: legend,\n              brush: brush,\n              labels: labelsBarChart,\n              series: [barChartFirst, barChartSecond, lineChart]\n            })\n          }), /*#__PURE__*/_jsx(_components.div, {\n            style: {\n              width: '500px',\n              height: '600px',\n              overflow: 'auto'\n            },\n            children: /*#__PURE__*/_jsx(_components.pre, {\n              children: JSON.stringify(clearData(barChartOptions), null, 2)\n            })\n          })]\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Chart.Line\",\n      children: React.createElement(() => {\n        const clearData = obj => {\n          const copy = JSON.parse(JSON.stringify(obj));\n          const labels = ['label', 'label', '...'];\n          const series = copy.series.map(item => {\n            item.data = [{\n              label: 'label',\n              value: 'value'\n            }, '...'];\n            return item;\n          });\n          return {\n            ...obj,\n            labels,\n            series\n          };\n        };\n        const formatXAxis = time => format(time, 'dd LLL');\n        const orientationVertical = {\n          bottom: 'bottom',\n          top: 'top'\n        };\n        const orientationHorizontal = {\n          left: 'left',\n          right: 'right'\n        };\n        const alignHorizontal = {\n          left: 'left',\n          center: 'center',\n          right: 'right'\n        };\n        const alignVertical = {\n          bottom: 'bottom',\n          middle: 'middle',\n          top: 'top'\n        };\n        const linesType = {\n          linear: 'linear',\n          monotone: 'monotone',\n          step: 'step'\n        };\n        const animationType = {\n          ease: 'ease',\n          'ease-in': 'ease-in',\n          'ease-out': 'ease-out',\n          'ease-in-out': 'ease-in-out',\n          linear: 'linear'\n        };\n        const iconTypes = {\n          circleLine: 'circleLine',\n          filledCircle: 'filledCircle',\n          strokeCircle: 'strokeCircle',\n          circle: 'circle'\n        };\n        const responsiveContainerId = 'responsiveContainerId';\n        const cartesianGridId = 'cartesianGridId';\n        const composeChartId = 'composeChartId';\n        const xAxisId = 'xAxisId';\n        const yAxisId = 'yAxisId';\n        const legendId = 'legendId';\n        const tooltipId = 'tooltipId';\n        const brushId = 'brushId';\n        const lineId = 'lineId';\n        const areaId = 'areaId';\n        const debounce = number('debounce', 0, {}, responsiveContainerId);\n        const vertical = boolean('vertical', true, cartesianGridId);\n        const horizontal = boolean('horizontal', true, cartesianGridId);\n        const strokeDasharray = number('strokeDasharray', 0, {}, cartesianGridId);\n        const stroke = text('stroke', 'var(--color-light-border-primary)', cartesianGridId);\n        const fill = text('fill', 'var(--color-light-bg-primary)', cartesianGridId);\n        const initMarginTop = number('initMargin.top', 40, {}, composeChartId);\n        const initMarginBottom = number('initMargin.bottom', 20, {}, composeChartId);\n        const marginLeft = number('initMargin.left', 20, {}, composeChartId);\n        const marginRight = number('initMargin.right', 70, {}, composeChartId);\n        const barCategoryGap = text('barCategoryGap', '30%', composeChartId);\n        const barGap = number('barGap', 4, {}, composeChartId);\n        const barSize = number('barSize', 24, {}, composeChartId);\n        const maxBarSize = number('maxBarSize', 24, {}, composeChartId);\n        const xAxisHide = boolean('hide', false, xAxisId);\n        const xAxisOrientation = select('orientation', orientationVertical, 'bottom', xAxisId);\n        const xAxisAngle = number('angle', 0, {}, xAxisId);\n        const xAxisTickLine = boolean('tickLine', false, xAxisId);\n        const xAxisTickSize = number('tickSize', 6, {}, xAxisId);\n        const xAxisMirror = boolean('mirror', false, xAxisId);\n        const xAxisReversed = boolean('reversed', false, xAxisId);\n        const xAxisTickMargin = number('tickMargin', 2, {}, xAxisId);\n        const xAxisMinTickGap = number('minTickGap', 20, {}, xAxisId);\n        const xAxisLine = boolean('axisLine', false, xAxisId);\n        const yAxisHide = boolean('hide', false, yAxisId);\n        const yAxisOrientation = select('orientation', orientationHorizontal, 'left', yAxisId);\n        const yAxisAngle = number('angle', 0, {}, yAxisId);\n        const yAxisTickLine = boolean('tickLine', false, yAxisId);\n        const yAxisTickSize = number('tickSize', 6, {}, yAxisId);\n        const yAxisMirror = boolean('mirror', false, yAxisId);\n        const yAxisReversed = boolean('reversed', false, yAxisId);\n        const yAxisTickCoiunt = number('tickCount', 6, {}, yAxisId);\n        const yAxisMinTickGap = number('minTickGap', 5, {}, yAxisId);\n        const yAxisTickMargin = number('tickMargin', 0, {}, yAxisId);\n        const yAxisLine = boolean('axisLine', false, yAxisId);\n        const yAxisLabel = text('label', '', yAxisId);\n        const legendAlign = select('align', alignHorizontal, 'right', legendId);\n        const legendVerticalAlign = select('verticalAlign', alignVertical, 'top', legendId);\n        const legendMarginTop = number('marginTop', 20, {}, legendId);\n        const legendIconHeight = number('iconHeight', 20, {}, legendId);\n        const tooltipArrow = boolean('arrow', true, tooltipId);\n        const tooltipIsAnimationActive = boolean('isAnimationActive', true, tooltipId);\n        const tooltipSeparator = text('separator', ' ', tooltipId);\n        const tooltipOffset = number('offset', 20, {}, tooltipId);\n        const cursorStroke = text('cursor.stroke', 'var(--color-light-border-primary)', tooltipId);\n        const cursorStrokeWidth = number('cursor.strokeWidth', 1, {}, tooltipId);\n        const tooltipFilterNull = boolean('filterNull', true, tooltipId);\n        const tooltipAnimationBegin = number('animationBegin', 0, {}, tooltipId);\n        const tooltipAnimationDuration = number('animationDuration', 500, {}, tooltipId);\n        const tooltipAnimationEasing = select('animationEasing', animationType, 'ease', tooltipId);\n        const travellerWidth = number('travellerWidth', 20, {}, brushId);\n        const brushHeight = number('height', 20, {}, brushId);\n        const brushStartIndex = number('startIndex', 0, {\n          min: 0,\n          max: 47\n        }, brushId);\n        const brushEndIndex = number('endIndex', 47, {\n          min: 0,\n          max: 47\n        }, brushId);\n        const brushStroke = text('stroke', 'var(--color-static-status-blue)', brushId);\n        const brushMargin = number('brushMargin', 10, {\n          min: 0,\n          max: 100\n        }, brushId);\n        const brushHeightAlwaysShowText = boolean('alwaysShowText', true, brushId);\n        const lineHide = boolean('hide', false, lineId);\n        const lineHideLegend = boolean('hideLegend', false, lineId);\n        const lineHideTooltip = boolean('hideTooltip', false, lineId);\n        const lineZIndex = number('zIndex', 50, {}, lineId);\n        const lineIcon = select('icon', iconTypes, 'strokeCircle', lineId);\n        const lineName = text('properties.name', 'текущий период', lineId);\n        const lineStroke = text('properties.stroke', 'var(--color-static-status-blue)', lineId);\n        const lineDot = boolean('properties.dot', true, lineId);\n        const lineScale = number('properties.dotSettings.scale', 1.5, {}, lineId);\n        const lineInitScale = number('properties.dotSettings.initScale', 0, {}, lineId);\n        const lineStrokeWidth = number('properties.strokeWidth', 2, {}, lineId);\n        const lineInheritStroke = boolean('properties.inheritStroke', true, lineId);\n        const lineType = select('properties.type', linesType, 'monotone', lineId);\n        const lineWidth = number('properties.dotSettings.width', 18, {}, lineId);\n        const lineStrokeDasharray = text('properties.strokeDasharray', '10 10', lineId);\n        const areaHide = boolean('hide', false, areaId);\n        const areaHideLegend = boolean('hideLegend', false, areaId);\n        const areaHideTooltip = boolean('hideTooltip', false, areaId);\n        const areaZIndex = number('zIndex', 100, {}, areaId);\n        const areaIcon = select('icon', iconTypes, 'filledCircle', areaId);\n        const areaOffset = number('offset', 0.1, {\n          min: 0,\n          max: 1,\n          step: 0.1\n        }, areaId);\n        const areaColor_1 = text('gradient.points.color above', 'rgba(0, 112, 224, 0.2)', areaId);\n        const areaColorOpacity_1 = number('gradient.points.opacity of color above', 1, {\n          min: 0,\n          max: 1,\n          step: 0.1\n        }, areaId);\n        const areaColor_2 = text('gradient.points.color below', 'rgba(0, 128, 255, 0)', areaId);\n        const areaColorOpacity_2 = number('gradient opacity of color below', 1, {\n          min: 0,\n          max: 1,\n          step: 0.1\n        }, areaId);\n        const areaName = text('properties.name', 'предыдущий период', areaId);\n        const areaType = select('properties.type', linesType, 'monotone', areaId);\n        const areaStroke = text('properties.stroke', 'var(--color-static-status-blue)', areaId);\n        const areaScale = number('properties.dotSettings.scale', 1.5, {}, areaId);\n        const areaInitScale = number('properties.dotSettings.initScale', 0, {}, areaId);\n        const areaWidth = number('properties.dotSettings.width', 18, {}, areaId);\n        const areaStrokeWidth = number('properties.strokeWidth', 2, {}, areaId);\n        const areaDot = boolean('properties.dot', true, areaId);\n        const areaStrokeDasharray = text('properties.strokeDasharray', '10 10', areaId);\n        const responsiveContainer = {\n          debounce\n        };\n        const cartesianGrid = {\n          vertical,\n          horizontal,\n          strokeDasharray,\n          stroke,\n          fill\n        };\n        const composeChart = {\n          initMargin: {\n            top: initMarginTop,\n            bottom: initMarginBottom,\n            left: marginLeft,\n            right: marginRight\n          },\n          barCategoryGap,\n          barSize,\n          maxBarSize\n        };\n        const xAxis = {\n          hide: xAxisHide,\n          axisLine: xAxisLine,\n          type: 'category',\n          allowDecimals: true,\n          allowDuplicatedCategory: true,\n          angle: xAxisAngle,\n          tickCount: 5,\n          interval: 'preserveStartEnd',\n          minTickGap: xAxisMinTickGap,\n          tickLine: xAxisTickLine,\n          tickSize: xAxisTickSize,\n          mirror: xAxisMirror,\n          reversed: xAxisReversed,\n          dataKey: 'label',\n          tickMargin: xAxisTickMargin,\n          orientation: xAxisOrientation,\n          tickFormatter: formatXAxis,\n          tickType: 'point'\n        };\n        const yAxis = {\n          hide: yAxisHide,\n          axisLine: yAxisLine,\n          type: 'number',\n          allowDecimals: true,\n          allowDuplicatedCategory: true,\n          angle: yAxisAngle,\n          tickCount: yAxisTickCoiunt,\n          interval: 'preserveStartEnd',\n          minTickGap: yAxisMinTickGap,\n          tickLine: yAxisTickLine,\n          tickSize: yAxisTickSize,\n          mirror: yAxisMirror,\n          reversed: yAxisReversed,\n          tickFormatter: decimal => `${decimal}\\xa0${yAxisLabel}`,\n          orientation: yAxisOrientation,\n          tickMargin: yAxisTickMargin\n        };\n        const legend = {\n          verticalAlign: legendVerticalAlign,\n          align: legendAlign,\n          marginTop: legendMarginTop,\n          iconHeight: legendIconHeight\n        };\n        const tooltip = {\n          separator: tooltipSeparator,\n          offset: tooltipOffset,\n          filterNull: tooltipFilterNull,\n          cursor: {\n            stroke: cursorStroke,\n            strokeWidth: cursorStrokeWidth\n          },\n          isAnimationActive: tooltipIsAnimationActive,\n          animationBegin: tooltipAnimationBegin,\n          animationDuration: tooltipAnimationDuration,\n          animationEasing: tooltipAnimationEasing,\n          arrow: tooltipArrow,\n          labelFormatter: formatXAxis\n        };\n        const brush = {\n          dataKey: 'label',\n          travellerWidth,\n          startIndex: brushStartIndex,\n          endIndex: brushEndIndex,\n          brushMargin: brushMargin,\n          height: brushHeight,\n          stroke: brushStroke,\n          alwaysShowText: brushHeightAlwaysShowText,\n          tickFormatter: formatXAxis\n        };\n        const labelsLineChart = [1608242400000, 1608328800000, 1608415200000, 1608501600000, 1608588000000, 1608674400000, 1608760800000, 1608847200000, 1608933600000, 1609020000000, 1609106400000, 1609192800000, 1609279200000, 1609365600000, 1609452000000, 1609538400000, 1609624800000, 1609711200000, 1609797600000, 1609884000000, 1609970400000, 1610056800000, 1610143200000, 1610229600000, 1610316000000, 1610402400000, 1610488800000, 1610575200000, 1610661600000, 1610748000000, 1610834400000, 1610920800000, 1611007200000, 1611093600000, 1611180000000, 1611266400000, 1611352800000, 1611439200000, 1611525600000, 1611612000000, 1611698400000, 1611784800000, 1611871200000, 1611957600000, 1612044000000, 1612130400000, 1612216800000, 1612303200000];\n        const lineChart = {\n          hide: lineHide,\n          hideLegend: lineHideLegend,\n          hideTooltip: lineHideTooltip,\n          zIndex: 200,\n          chart: 'line',\n          icon: lineIcon,\n          properties: {\n            name: lineName,\n            dataKey: 'b',\n            stroke: lineStroke,\n            dot: lineDot,\n            dotSettings: {\n              scale: lineScale,\n              initScale: lineInitScale,\n              width: lineWidth,\n              height: lineWidth\n            },\n            inheritStroke: lineInheritStroke,\n            type: lineType,\n            strokeWidth: lineStrokeWidth,\n            strokeDasharray: lineStrokeDasharray\n          },\n          data: [{\n            label: 1608242400000,\n            value: 35\n          }, {\n            label: 1608328800000,\n            value: 20\n          }, {\n            label: 1608415200000,\n            value: 34\n          }, {\n            label: 1608501600000,\n            value: 42\n          }, {\n            label: 1608588000000,\n            value: 14\n          }, {\n            label: 1608674400000,\n            value: 37\n          }, {\n            label: 1608760800000,\n            value: 19\n          }, {\n            label: 1608847200000,\n            value: 37\n          }, {\n            label: 1608933600000,\n            value: 22\n          }, {\n            label: 1609020000000,\n            value: 21\n          }, {\n            label: 1609106400000,\n            value: 28\n          }, {\n            label: 1609192800000,\n            value: 26\n          }, {\n            label: 1609279200000,\n            value: 31\n          }, {\n            label: 1609365600000,\n            value: 37\n          }, {\n            label: 1609452000000,\n            value: 40\n          }, {\n            label: 1609538400000,\n            value: 39\n          }, {\n            label: 1609624800000,\n            value: 45\n          }, {\n            label: 1609711200000,\n            value: 40\n          }, {\n            label: 1609797600000,\n            value: 45\n          }, {\n            label: 1609884000000,\n            value: 40\n          }, {\n            label: 1609970400000,\n            value: 45\n          }, {\n            label: 1610056800000,\n            value: 46\n          }, {\n            label: 1610143200000,\n            value: 36\n          }, {\n            label: 1610229600000,\n            value: 50\n          }, {\n            label: 1610316000000,\n            value: 44\n          }, {\n            label: 1610402400000,\n            value: 55\n          }, {\n            label: 1610488800000,\n            value: 59\n          }, {\n            label: 1610575200000,\n            value: 65\n          }, {\n            label: 1610661600000,\n            value: 49\n          }, {\n            label: 1610748000000,\n            value: 51\n          }, {\n            label: 1610834400000,\n            value: 69\n          }, {\n            label: 1610920800000,\n            value: 61\n          }, {\n            label: 1611007200000,\n            value: 63\n          }, {\n            label: 1611093600000,\n            value: 57\n          }, {\n            label: 1611180000000,\n            value: 61\n          }, {\n            label: 1611266400000,\n            value: 43\n          }, {\n            label: 1611352800000,\n            value: 68\n          }, {\n            label: 1611439200000,\n            value: 69\n          }, {\n            label: 1611525600000,\n            value: 69\n          }, {\n            label: 1611612000000,\n            value: 76\n          }, {\n            label: 1611698400000,\n            value: 61\n          }, {\n            label: 1611784800000,\n            value: 84\n          }, {\n            label: 1611871200000,\n            value: 96\n          }, {\n            label: 1611957600000,\n            value: 97\n          }, {\n            label: 1612044000000,\n            value: 72\n          }, {\n            label: 1612130400000,\n            value: 71\n          }, {\n            label: 1612216800000,\n            value: 88\n          }, {\n            label: 1612303200000,\n            value: 87\n          }]\n        };\n        const areaChart = {\n          hide: areaHide,\n          hideLegend: areaHideLegend,\n          hideTooltip: areaHideTooltip,\n          zIndex: areaZIndex,\n          chart: 'area',\n          icon: areaIcon,\n          offset: areaOffset,\n          gradient: {\n            gid: 'ar-grad',\n            points: [{\n              offset: 0,\n              stopColor: areaColor_1,\n              stopOpacity: areaColorOpacity_1\n            }, {\n              offset: 95,\n              stopColor: areaColor_2,\n              stopOpacity: areaColorOpacity_2\n            }]\n          },\n          properties: {\n            name: areaName,\n            dataKey: 'a',\n            type: areaType,\n            stroke: areaStroke,\n            dotSettings: {\n              scale: areaScale,\n              initScale: areaInitScale,\n              width: areaWidth,\n              height: areaWidth\n            },\n            dot: areaDot,\n            strokeWidth: areaStrokeWidth\n          },\n          data: [{\n            label: 1608242400000,\n            value: 70\n          }, {\n            label: 1608328800000,\n            value: 40\n          }, {\n            label: 1608415200000,\n            value: 69\n          }, {\n            label: 1608501600000,\n            value: 84\n          }, {\n            label: 1608588000000,\n            value: 29\n          }, {\n            label: 1608674400000,\n            value: 74\n          }, {\n            label: 1608760800000,\n            value: 39\n          }, {\n            label: 1608847200000,\n            value: 74\n          }, {\n            label: 1608933600000,\n            value: 44\n          }, {\n            label: 1609020000000,\n            value: 43\n          }, {\n            label: 1609106400000,\n            value: 57\n          }, {\n            label: 1609192800000,\n            value: 52\n          }, {\n            label: 1609279200000,\n            value: 62\n          }, {\n            label: 1609365600000,\n            value: 74\n          }, {\n            label: 1609452000000,\n            value: 81\n          }, {\n            label: 1609538400000,\n            value: 78\n          }, {\n            label: 1609624800000,\n            value: 91\n          }, {\n            label: 1609711200000,\n            value: 80\n          }, {\n            label: 1609797600000,\n            value: 90\n          }, {\n            label: 1609884000000,\n            value: 80\n          }, {\n            label: 1609970400000,\n            value: 91\n          }, {\n            label: 1610056800000,\n            value: 93\n          }, {\n            label: 1610143200000,\n            value: 72\n          }, {\n            label: 1610229600000,\n            value: 101\n          }, {\n            label: 1610316000000,\n            value: 88\n          }, {\n            label: 1610402400000,\n            value: 110\n          }, {\n            label: 1610488800000,\n            value: 119\n          }, {\n            label: 1610575200000,\n            value: 130\n          }, {\n            label: 1610661600000,\n            value: 98\n          }, {\n            label: 1610748000000,\n            value: 102\n          }, {\n            label: 1610834400000,\n            value: 139\n          }, {\n            label: 1610920800000,\n            value: 123\n          }, {\n            label: 1611007200000,\n            value: 127\n          }, {\n            label: 1611093600000,\n            value: 114\n          }, {\n            label: 1611180000000,\n            value: 123\n          }, {\n            label: 1611266400000,\n            value: 86\n          }, {\n            label: 1611352800000,\n            value: 136\n          }, {\n            label: 1611439200000,\n            value: 139\n          }, {\n            label: 1611525600000,\n            value: 138\n          }, {\n            label: 1611612000000,\n            value: 153\n          }, {\n            label: 1611698400000,\n            value: 122\n          }, {\n            label: 1611784800000,\n            value: 169\n          }, {\n            label: 1611871200000,\n            value: 192\n          }, {\n            label: 1611957600000,\n            value: 195\n          }, {\n            label: 1612044000000,\n            value: 144\n          }, {\n            label: 1612130400000,\n            value: 142\n          }, {\n            label: 1612216800000,\n            value: 176\n          }, {\n            label: 1612303200000,\n            value: 174\n          }]\n        };\n        const lineChartOptions = {\n          id: 'line-chart',\n          composeChart,\n          responsiveContainer,\n          cartesianGrid,\n          xAxis,\n          yAxis,\n          tooltip,\n          legend,\n          brush,\n          labels: labelsLineChart,\n          series: [areaChart]\n        };\n        return /*#__PURE__*/_jsxs(_components.div, {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsx(_components.div, {\n            style: {\n              marginBottom: '20px',\n              top: 25,\n              width: '1050px',\n              height: '600px'\n            },\n            children: /*#__PURE__*/_jsx(Chart, {\n              id: 'line-chart',\n              composeChart: composeChart,\n              responsiveContainer: responsiveContainer,\n              cartesianGrid: cartesianGrid,\n              xAxis: xAxis,\n              yAxis: yAxis,\n              tooltip: tooltip,\n              legend: legend,\n              brush: brush,\n              labels: labelsLineChart,\n              series: [lineChart, areaChart]\n            })\n          }), /*#__PURE__*/_jsx(_components.div, {\n            style: {\n              width: '500px',\n              height: '600px',\n              overflow: 'auto'\n            },\n            children: /*#__PURE__*/_jsx(_components.pre, {\n              children: JSON.stringify(clearData(lineChartOptions), null, 2)\n            })\n          })]\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Chart.Histogram\",\n      children: React.createElement(() => {\n        const clearData = obj => {\n          const copy = JSON.parse(JSON.stringify(obj));\n          const labels = ['label', 'label', '...'];\n          const series = copy.series.map(item => {\n            item.data = [{\n              label: 'label',\n              value: 'value'\n            }, '...'];\n            return item;\n          });\n          return {\n            ...obj,\n            labels,\n            series\n          };\n        };\n        const orientationVertical = {\n          bottom: 'bottom',\n          top: 'top'\n        };\n        const orientationHorizontal = {\n          left: 'left',\n          right: 'right'\n        };\n        const alignHorizontal = {\n          left: 'left',\n          center: 'center',\n          right: 'right'\n        };\n        const alignVertical = {\n          bottom: 'bottom',\n          middle: 'middle',\n          top: 'top'\n        };\n        const linesType = {\n          linear: 'linear',\n          monotone: 'monotone',\n          step: 'step'\n        };\n        const animationType = {\n          ease: 'ease',\n          'ease-in': 'ease-in',\n          'ease-out': 'ease-out',\n          'ease-in-out': 'ease-in-out',\n          linear: 'linear'\n        };\n        const iconTypes = {\n          circleLine: 'circleLine',\n          filledCircle: 'filledCircle',\n          strokeCircle: 'strokeCircle',\n          circle: 'circle'\n        };\n        const responsiveContainerId = 'responsiveContainer';\n        const cartesianGridId = 'cartesianGrid';\n        const composeChartId = 'composeChart';\n        const xAxisId = 'xAxis';\n        const yAxisId = 'yAxis';\n        const barId = 'bar';\n        const debounce = number('debounce', 0, {}, responsiveContainerId);\n        const vertical = boolean('vertical', false, cartesianGridId);\n        const horizontal = boolean('horizontal', false, cartesianGridId);\n        const initMarginTop = number('initMargin.top', 40, {}, composeChartId);\n        const initMarginBottom = number('initMargin.bottom', 20, {}, composeChartId);\n        const marginLeft = number('initMargin.left', 20, {}, composeChartId);\n        const marginRight = number('initMargin.right', 50, {}, composeChartId);\n        const barCategoryGap = text('barCategoryGap', '10%', composeChartId);\n        const barGap = number('barGap', 4, {}, composeChartId);\n        const maxBarSize = number('maxBarSize', 64, {}, composeChartId);\n        const xAxisHide = boolean('hide', false, xAxisId);\n        const xAxisOrientation = select('orientation', orientationVertical, 'bottom', xAxisId);\n        const xAxisTickLine = boolean('tickLine', false, xAxisId);\n        const xAxisTickSize = number('tickSize', 6, {}, xAxisId);\n        const xAxisTickMargin = number('tickMargin', 10, {}, xAxisId);\n        const xAxisMinTickGap = number('minTickGap', 5, {}, xAxisId);\n        const xAxisLine = boolean('axisLine', false, xAxisId);\n        const yAxisHide = boolean('hide', true, yAxisId);\n        const barHide = boolean('hide', false, barId);\n        const barHideLegend = boolean('hideLegend', false, barId);\n        const barHideTooltip = boolean('hideTooltip', false, barId);\n        const barZIndex = number('zIndex', 10, {}, barId);\n        const barIcon = select('icon', iconTypes, 'circle', barId);\n        const barRadius = object('radius', {\n          top: 10,\n          bottom: 10\n        }, barId);\n        const barFormatter = text('labelList.formatter', '', barId);\n        const barLabelListOffset = number('labelList.offset', 10, {}, barId);\n        const barFill = text('properties.fill', 'var(--color-static-graphic-green-jungle)', barId);\n        const barName = text('properties.name', 'приход', barId);\n        const responsiveContainer = {\n          debounce\n        };\n        const cartesianGrid = {\n          vertical,\n          horizontal\n        };\n        const composeChart = {\n          initMargin: {\n            top: initMarginTop,\n            bottom: initMarginBottom,\n            left: marginLeft,\n            right: marginRight\n          },\n          barGap,\n          maxBarSize,\n          barCategoryGap\n        };\n        const xAxis = {\n          hide: xAxisHide,\n          axisLine: xAxisLine,\n          type: 'category',\n          allowDecimals: true,\n          allowDuplicatedCategory: true,\n          interval: 'preserveStartEnd',\n          minTickGap: xAxisMinTickGap,\n          tickLine: xAxisTickLine,\n          tickSize: xAxisTickSize,\n          tickMargin: xAxisTickMargin,\n          dataKey: 'label',\n          orientation: xAxisOrientation\n        };\n        const yAxis = {\n          hide: yAxisHide\n        };\n        const labelsBarChart = ['Long label', 'Label1', 'Label2', 'Label3', 'Label4', 'Label5', 'Label6', 'Label7'];\n        const barChart = {\n          hide: barHideLegend,\n          hideLegend: barHideLegend,\n          hideTooltip: barHideTooltip,\n          zIndex: barZIndex,\n          chart: 'bar',\n          icon: barIcon,\n          radius: barRadius || 0,\n          labelList: {\n            formatter: decimal => `${decimal}${barFormatter}`,\n            offset: barLabelListOffset\n          },\n          properties: {\n            name: barName,\n            dataKey: 'cm',\n            formatter: decimal => `${decimal * 1000}`,\n            fill: barFill\n          },\n          data: [{\n            label: 'Long label',\n            value: 5000\n          }, {\n            label: 'Label1',\n            value: 650\n          }, {\n            label: 'Label2',\n            value: 3522\n          }, {\n            label: 'Label3',\n            value: 0\n          }, {\n            label: 'Label4',\n            value: 2000\n          }, {\n            label: 'Label5',\n            value: 1043\n          }, {\n            label: 'Label6',\n            value: 600\n          }, {\n            label: 'Label7',\n            value: 1\n          }]\n        };\n        const barChartOptions = {\n          id: 'bar-chart',\n          composeChart,\n          responsiveContainer,\n          cartesianGrid,\n          xAxis,\n          yAxis,\n          labels: labelsBarChart,\n          series: [barChart]\n        };\n        return /*#__PURE__*/_jsxs(_components.div, {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsx(_components.div, {\n            style: {\n              marginBottom: '20px',\n              top: 25,\n              width: '1050px',\n              height: '600px'\n            },\n            children: /*#__PURE__*/_jsx(Chart, {\n              id: \"bar-chart\",\n              composeChart: composeChart,\n              responsiveContainer: responsiveContainer,\n              cartesianGrid: cartesianGrid,\n              xAxis: xAxis,\n              yAxis: yAxis,\n              labels: labelsBarChart,\n              series: [barChart]\n            })\n          }), /*#__PURE__*/_jsx(_components.div, {\n            style: {\n              width: '500px',\n              height: '600px',\n              overflow: 'auto'\n            },\n            children: /*#__PURE__*/_jsx(_components.pre, {\n              children: JSON.stringify(clearData(barChartOptions), null, 2)\n            })\n          })]\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Chart\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/chart\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Chart } from '@alfalab/core-components/chart';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: ChartTS\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const chartBar = () => React.createElement(() => {\n  const clearData = obj => {\n    const copy = JSON.parse(JSON.stringify(obj));\n    const labels = [\"label\", \"label\", \"...\"];\n    const series = copy.series.map(item => {\n      item.data = [{\n        label: \"label\",\n        value: \"value\"\n      }, \"...\"];\n      return item;\n    });\n    return {\n      ...obj,\n      labels,\n      series\n    };\n  };\n  const orientationVertical = {\n    bottom: \"bottom\",\n    top: \"top\"\n  };\n  const orientationHorizontal = {\n    left: \"left\",\n    right: \"right\"\n  };\n  const alignHorizontal = {\n    left: \"left\",\n    center: \"center\",\n    right: \"right\"\n  };\n  const alignVertical = {\n    bottom: \"bottom\",\n    middle: \"middle\",\n    top: \"top\"\n  };\n  const linesType = {\n    linear: \"linear\",\n    monotone: \"monotone\",\n    step: \"step\"\n  };\n  const animationType = {\n    ease: \"ease\",\n    \"ease-in\": \"ease-in\",\n    \"ease-out\": \"ease-out\",\n    \"ease-in-out\": \"ease-in-out\",\n    linear: \"linear\"\n  };\n  const iconTypes = {\n    circleLine: \"circleLine\",\n    filledCircle: \"filledCircle\",\n    strokeCircle: \"strokeCircle\",\n    circle: \"circle\"\n  };\n  const responsiveContainerId = \"responsiveContainer\";\n  const cartesianGridId = \"cartesianGrid\";\n  const composeChartId = \"composeChart\";\n  const xAxisId = \"xAxis\";\n  const yAxisId = \"yAxis\";\n  const legendId = \"legend\";\n  const tooltipId = \"tooltip\";\n  const brushId = \"brush\";\n  const lineId = \"line\";\n  const barIdFirst = \"barFirst\";\n  const barIdSecond = \"barSecond\";\n  const debounce = number(\"debounce\", 0, {}, responsiveContainerId);\n  const vertical = boolean(\"vertical\", false, cartesianGridId);\n  const horizontal = boolean(\"horizontal\", true, cartesianGridId);\n  const strokeDasharray = number(\"strokeDasharray\", 0, {}, cartesianGridId);\n  const stroke = text(\"stroke\", \"var(--color-light-border-primary)\", cartesianGridId);\n  const fill = text(\"fill\", \"var(--color-light-bg-primary)\", cartesianGridId);\n  const initMarginTop = number(\"initMargin.top\", 40, {}, composeChartId);\n  const initMarginBottom = number(\"initMargin.bottom\", 20, {}, composeChartId);\n  const marginLeft = number(\"initMargin.left\", 20, {}, composeChartId);\n  const marginRight = number(\"initMargin.right\", 50, {}, composeChartId);\n  const barCategoryGap = text(\"barCategoryGap\", \"30%\", composeChartId);\n  const barGap = number(\"barGap\", 4, {}, composeChartId);\n  const maxBarSize = number(\"maxBarSize\", 24, {}, composeChartId);\n  const xAxisHide = boolean(\"hide\", false, xAxisId);\n  const xAxisOrientation = select(\"orientation\", orientationVertical, \"bottom\", xAxisId);\n  const xAxisAngle = number(\"angle\", 0, {}, xAxisId);\n  const xAxisTickLine = boolean(\"tickLine\", false, xAxisId);\n  const xAxisTickSize = number(\"tickSize\", 6, {}, xAxisId);\n  const xAxisMirror = boolean(\"mirror\", false, xAxisId);\n  const xAxisReversed = boolean(\"reversed\", false, xAxisId);\n  const xAxisTickMargin = number(\"tickMargin\", 10, {}, xAxisId);\n  const xAxisMinTickGap = number(\"minTickGap\", 5, {}, xAxisId);\n  const xAxisLine = boolean(\"axisLine\", false, xAxisId);\n  const yAxisHide = boolean(\"hide\", false, yAxisId);\n  const yAxisOrientation = select(\"orientation\", orientationHorizontal, \"left\", yAxisId);\n  const yAxisAngle = number(\"angle\", 0, {}, yAxisId);\n  const yAxisTickLine = boolean(\"tickLine\", false, yAxisId);\n  const yAxisTickSize = number(\"tickSize\", 6, {}, yAxisId);\n  const yAxisMirror = boolean(\"mirror\", false, yAxisId);\n  const yAxisReversed = boolean(\"reversed\", false, yAxisId);\n  const yAxisTickCoiunt = number(\"tickCount\", 6, {}, yAxisId);\n  const yAxisTickMargin = number(\"tickMargin\", 0, {}, yAxisId);\n  const yAxisMinTickGap = number(\"minTickGap\", 5, {}, yAxisId);\n  const yAxisLine = boolean(\"axisLine\", false, yAxisId);\n  const yAxisLabel = text(\"label\", \"\\u0442\\u044B\\u0441.\", yAxisId);\n  const legendAlign = select(\"align\", alignHorizontal, \"center\", legendId);\n  const legendVerticalAlign = select(\"verticalAlign\", alignVertical, \"bottom\", legendId);\n  const legendMarginTop = number(\"marginTop\", 10, {}, legendId);\n  const legendIconHeight = number(\"iconHeight\", 16, {}, legendId);\n  const tooltipArrow = boolean(\"arrow\", true, tooltipId);\n  const tooltipIsAnimationActive = boolean(\"isAnimationActive\", true, tooltipId);\n  const tooltipSeparator = text(\"separator\", \" \", tooltipId);\n  const tooltipOffset = number(\"offset\", 20, {}, tooltipId);\n  const cursorStroke = text(\"cursor.stroke\", \"var(--color-light-border-primary)\", tooltipId);\n  const cursorStrokeWidth = number(\"cursor.strokeWidth\", 1, {}, tooltipId);\n  const tooltipFilterNull = boolean(\"filterNull\", true, tooltipId);\n  const tooltipAnimationBegin = number(\"animationBegin\", 0, {}, tooltipId);\n  const tooltipAnimationDuration = number(\"animationDuration\", 500, {}, tooltipId);\n  const tooltipAnimationEasing = select(\"animationEasing\", animationType, \"ease\", tooltipId);\n  const travellerWidth = number(\"travellerWidth\", 20, {}, brushId);\n  const brushHeight = number(\"height\", 20, {}, brushId);\n  const brushStartIndex = number(\"startIndex\", 0, {\n    min: 0,\n    max: 5\n  }, brushId);\n  const brushEndIndex = number(\"endIndex\", 5, {\n    min: 0,\n    max: 5\n  }, brushId);\n  const brushStroke = text(\"stroke\", \"var(--color-static-status-blue)\", brushId);\n  const brushMargin = number(\"brushMargin\", 10, {\n    min: 0,\n    max: 100\n  }, brushId);\n  const brushHeightAlwaysShowText = boolean(\"alwaysShowText\", true, brushId);\n  const lineHide = boolean(\"hide\", false, lineId);\n  const lineHideLegend = boolean(\"hideLegend\", false, lineId);\n  const lineHideTooltip = boolean(\"hideTooltip\", false, lineId);\n  const lineZIndex = number(\"zIndex\", 50, {}, lineId);\n  const lineIcon = select(\"icon\", iconTypes, \"circleLine\", lineId);\n  const lineName = text(\"properties.name\", \"\\u043E\\u0441\\u0442\\u0430\\u0442\\u043E\\u043A\", lineId);\n  const lineStroke = text(\"properties.stroke\", \"var(--color-static-status-blue)\", lineId);\n  const lineDot = boolean(\"properties.dot\", true, lineId);\n  const lineScale = number(\"properties.dotSettings.scale\", 1.5, {}, lineId);\n  const lineInitScale = number(\"properties.dotSettings.initScale\", 1, {}, lineId);\n  const lineWidth = number(\"properties.dotSettings.width\", 18, {}, lineId);\n  const lineType = select(\"properties.type\", linesType, \"monotone\", lineId);\n  const lineInheritStroke = boolean(\"properties.inheritStroke\", true, lineId);\n  const lineStrokeWidth = number(\"properties.strokeWidth\", 2, {}, lineId);\n  const lineStrokeDasharray = text(\"properties.strokeDasharray\", \"1 0\", lineId);\n  const barHideFirst = boolean(\"hide\", false, barIdFirst);\n  const barHideLegendFirst = boolean(\"hideLegend\", false, barIdFirst);\n  const barHideTooltipFirst = boolean(\"hideTooltip\", false, barIdFirst);\n  const barZIndexFirst = number(\"zIndex\", 1, {}, barIdFirst);\n  const barIconFirst = select(\"icon\", iconTypes, \"circle\", barIdFirst);\n  const barFillFirst = text(\"properties.fill\", \"var(--color-static-graphic-persimmon)\", barIdFirst);\n  const barNameFirst = text(\"properties.name\", \"\\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\", barIdFirst);\n  const barHideSecond = boolean(\"hide\", false, barIdSecond);\n  const barHideLegendSecond = boolean(\"hideLegend\", false, barIdSecond);\n  const barHideTooltipSecond = boolean(\"hideTooltip\", false, barIdSecond);\n  const barZIndexSecond = number(\"zIndex\", 10, {}, barIdSecond);\n  const barIconSecond = select(\"icon\", iconTypes, \"circle\", barIdSecond);\n  const barFillSecond = text(\"properties.fill\", \"var(--color-static-graphic-green-jungle)\", barIdSecond);\n  const barNameSecond = text(\"properties.name\", \"\\u043F\\u0440\\u0438\\u0445\\u043E\\u0434\", barIdSecond);\n  const responsiveContainer = {\n    debounce\n  };\n  const cartesianGrid = {\n    vertical,\n    horizontal,\n    strokeDasharray,\n    stroke,\n    fill\n  };\n  const composeChart = {\n    initMargin: {\n      top: initMarginTop,\n      bottom: initMarginBottom,\n      left: marginLeft,\n      right: marginRight\n    },\n    barGap,\n    maxBarSize,\n    barCategoryGap\n  };\n  const xAxis = {\n    hide: xAxisHide,\n    axisLine: xAxisLine,\n    type: \"category\",\n    allowDecimals: true,\n    allowDuplicatedCategory: true,\n    angle: xAxisAngle,\n    tickCount: 5,\n    interval: \"preserveStartEnd\",\n    minTickGap: xAxisMinTickGap,\n    tickLine: xAxisTickLine,\n    tickSize: xAxisTickSize,\n    mirror: xAxisMirror,\n    reversed: xAxisReversed,\n    tickMargin: xAxisTickMargin,\n    dataKey: \"label\",\n    orientation: xAxisOrientation\n  };\n  const yAxis = {\n    hide: yAxisHide,\n    axisLine: yAxisLine,\n    type: \"number\",\n    allowDecimals: true,\n    allowDuplicatedCategory: true,\n    angle: yAxisAngle,\n    tickCount: yAxisTickCoiunt,\n    interval: \"preserveStartEnd\",\n    minTickGap: yAxisMinTickGap,\n    tickLine: yAxisTickLine,\n    tickSize: yAxisTickSize,\n    mirror: yAxisMirror,\n    reversed: yAxisReversed,\n    tickMargin: yAxisTickMargin,\n    tickFormatter: decimal => `${decimal}\\xa0${yAxisLabel}`,\n    orientation: yAxisOrientation\n  };\n  const legend = {\n    verticalAlign: legendVerticalAlign,\n    align: legendAlign,\n    marginTop: legendMarginTop,\n    iconHeight: legendIconHeight\n  };\n  const tooltip = {\n    separator: tooltipSeparator,\n    offset: tooltipOffset,\n    filterNull: tooltipFilterNull,\n    cursor: {\n      stroke: cursorStroke,\n      strokeWidth: cursorStrokeWidth\n    },\n    isAnimationActive: tooltipIsAnimationActive,\n    animationBegin: tooltipAnimationBegin,\n    animationDuration: tooltipAnimationDuration,\n    animationEasing: tooltipAnimationEasing,\n    arrow: tooltipArrow\n  };\n  const brush = {\n    dataKey: \"label\",\n    travellerWidth,\n    startIndex: brushStartIndex,\n    endIndex: brushEndIndex,\n    brushMargin: brushMargin,\n    height: brushHeight,\n    alwaysShowText: brushHeightAlwaysShowText,\n    stroke: brushStroke\n  };\n  const labelsBarChart = [\"\\u042F\\u043D\\u0432\\u0430\\u0440\\u044C\", \"\\u0424\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C\", \"\\u041C\\u0430\\u0440\\u0442\", \"\\u0410\\u043F\\u0440\\u0435\\u043B\\u044C\", \"\\u041C\\u0430\\u0439\", \"\\u0418\\u044E\\u043D\\u044C\"];\n  const barChartFirst = {\n    hide: barHideLegendFirst,\n    hideLegend: barHideLegendFirst,\n    hideTooltip: barHideTooltipFirst,\n    zIndex: barZIndexFirst,\n    chart: \"bar\",\n    icon: barIconFirst,\n    properties: {\n      name: barNameFirst,\n      dataKey: \"uv\",\n      formatter: decimal => `${decimal * 1000}`,\n      fill: barFillFirst\n    },\n    data: [{\n      label: \"\\u042F\\u043D\\u0432\\u0430\\u0440\\u044C\",\n      value: 80\n    }, {\n      label: \"\\u0424\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C\",\n      value: 140\n    }, {\n      label: \"\\u041C\\u0430\\u0440\\u0442\",\n      value: 70\n    }, {\n      label: \"\\u0410\\u043F\\u0440\\u0435\\u043B\\u044C\",\n      value: 210\n    }, {\n      label: \"\\u041C\\u0430\\u0439\",\n      value: 80\n    }, {\n      label: \"\\u0418\\u044E\\u043D\\u044C\",\n      value: 20\n    }]\n  };\n  const barChartSecond = {\n    hide: barHideLegendSecond,\n    hideLegend: barHideLegendSecond,\n    hideTooltip: barHideTooltipSecond,\n    zIndex: barZIndexSecond,\n    chart: \"bar\",\n    icon: barIconSecond,\n    properties: {\n      name: barNameSecond,\n      dataKey: \"pv\",\n      formatter: decimal => `${decimal * 1000}`,\n      fill: barFillSecond\n    },\n    data: [{\n      label: \"\\u042F\\u043D\\u0432\\u0430\\u0440\\u044C\",\n      value: 110\n    }, {\n      label: \"\\u0424\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C\",\n      value: 190\n    }, {\n      label: \"\\u041C\\u0430\\u0440\\u0442\",\n      value: 60\n    }, {\n      label: \"\\u0410\\u043F\\u0440\\u0435\\u043B\\u044C\",\n      value: 230\n    }, {\n      label: \"\\u041C\\u0430\\u0439\",\n      value: 190\n    }, {\n      label: \"\\u0418\\u044E\\u043D\\u044C\",\n      value: 30\n    }]\n  };\n  const lineChart = {\n    hide: lineHide,\n    hideLegend: lineHideLegend,\n    hideTooltip: lineHideTooltip,\n    zIndex: lineZIndex,\n    chart: \"line\",\n    icon: lineIcon,\n    properties: {\n      name: lineName,\n      dataKey: \"cnt\",\n      stroke: lineStroke,\n      dot: lineDot,\n      dotSettings: {\n        scale: lineScale,\n        initScale: lineInitScale,\n        width: lineWidth,\n        height: lineWidth\n      },\n      inheritStroke: lineInheritStroke,\n      formatter: decimal => `${decimal * 1000}`,\n      type: lineType,\n      strokeWidth: lineStrokeWidth,\n      strokeDasharray: lineStrokeDasharray\n    },\n    data: [{\n      label: \"\\u042F\\u043D\\u0432\\u0430\\u0440\\u044C\",\n      value: 60\n    }, {\n      label: \"\\u0424\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C\",\n      value: 95\n    }, {\n      label: \"\\u041C\\u0430\\u0440\\u0442\",\n      value: 20\n    }, {\n      label: \"\\u0410\\u043F\\u0440\\u0435\\u043B\\u044C\",\n      value: 180\n    }, {\n      label: \"\\u041C\\u0430\\u0439\",\n      value: 70\n    }, {\n      label: \"\\u0418\\u044E\\u043D\\u044C\",\n      value: 10\n    }]\n  };\n  const barChartOptions = {\n    id: \"bar-chart\",\n    composeChart,\n    responsiveContainer,\n    cartesianGrid,\n    xAxis,\n    yAxis,\n    tooltip,\n    legend,\n    brush,\n    labels: labelsBarChart,\n    series: [barChartFirst, barChartSecond, lineChart]\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        top: 25,\n        width: \"1050px\",\n        height: \"600px\"\n      },\n      children: /*#__PURE__*/_jsx(Chart, {\n        id: \"bar-chart\",\n        composeChart: composeChart,\n        responsiveContainer: responsiveContainer,\n        cartesianGrid: cartesianGrid,\n        xAxis: xAxis,\n        yAxis: yAxis,\n        tooltip: tooltip,\n        legend: legend,\n        brush: brush,\n        labels: labelsBarChart,\n        series: [barChartFirst, barChartSecond, lineChart]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        width: \"500px\",\n        height: \"600px\",\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsx(\"pre\", {\n        children: JSON.stringify(clearData(barChartOptions), null, 2)\n      })\n    })]\n  });\n});\nchartBar.storyName = 'Chart.Bar';\nchartBar.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const clearData = obj => {\\n    const copy = JSON.parse(JSON.stringify(obj));\\n    const labels = [\\\"label\\\", \\\"label\\\", \\\"...\\\"];\\n    const series = copy.series.map(item => {\\n      item.data = [{\\n        label: \\\"label\\\",\\n        value: \\\"value\\\"\\n      }, \\\"...\\\"];\\n      return item;\\n    });\\n    return {\\n      ...obj,\\n      labels,\\n      series\\n    };\\n  };\\n  const orientationVertical = {\\n    bottom: \\\"bottom\\\",\\n    top: \\\"top\\\"\\n  };\\n  const orientationHorizontal = {\\n    left: \\\"left\\\",\\n    right: \\\"right\\\"\\n  };\\n  const alignHorizontal = {\\n    left: \\\"left\\\",\\n    center: \\\"center\\\",\\n    right: \\\"right\\\"\\n  };\\n  const alignVertical = {\\n    bottom: \\\"bottom\\\",\\n    middle: \\\"middle\\\",\\n    top: \\\"top\\\"\\n  };\\n  const linesType = {\\n    linear: \\\"linear\\\",\\n    monotone: \\\"monotone\\\",\\n    step: \\\"step\\\"\\n  };\\n  const animationType = {\\n    ease: \\\"ease\\\",\\n    \\\"ease-in\\\": \\\"ease-in\\\",\\n    \\\"ease-out\\\": \\\"ease-out\\\",\\n    \\\"ease-in-out\\\": \\\"ease-in-out\\\",\\n    linear: \\\"linear\\\"\\n  };\\n  const iconTypes = {\\n    circleLine: \\\"circleLine\\\",\\n    filledCircle: \\\"filledCircle\\\",\\n    strokeCircle: \\\"strokeCircle\\\",\\n    circle: \\\"circle\\\"\\n  };\\n  const responsiveContainerId = \\\"responsiveContainer\\\";\\n  const cartesianGridId = \\\"cartesianGrid\\\";\\n  const composeChartId = \\\"composeChart\\\";\\n  const xAxisId = \\\"xAxis\\\";\\n  const yAxisId = \\\"yAxis\\\";\\n  const legendId = \\\"legend\\\";\\n  const tooltipId = \\\"tooltip\\\";\\n  const brushId = \\\"brush\\\";\\n  const lineId = \\\"line\\\";\\n  const barIdFirst = \\\"barFirst\\\";\\n  const barIdSecond = \\\"barSecond\\\";\\n  const debounce = number(\\\"debounce\\\", 0, {}, responsiveContainerId);\\n  const vertical = boolean(\\\"vertical\\\", false, cartesianGridId);\\n  const horizontal = boolean(\\\"horizontal\\\", true, cartesianGridId);\\n  const strokeDasharray = number(\\\"strokeDasharray\\\", 0, {}, cartesianGridId);\\n  const stroke = text(\\\"stroke\\\", \\\"var(--color-light-border-primary)\\\", cartesianGridId);\\n  const fill = text(\\\"fill\\\", \\\"var(--color-light-bg-primary)\\\", cartesianGridId);\\n  const initMarginTop = number(\\\"initMargin.top\\\", 40, {}, composeChartId);\\n  const initMarginBottom = number(\\\"initMargin.bottom\\\", 20, {}, composeChartId);\\n  const marginLeft = number(\\\"initMargin.left\\\", 20, {}, composeChartId);\\n  const marginRight = number(\\\"initMargin.right\\\", 50, {}, composeChartId);\\n  const barCategoryGap = text(\\\"barCategoryGap\\\", \\\"30%\\\", composeChartId);\\n  const barGap = number(\\\"barGap\\\", 4, {}, composeChartId);\\n  const maxBarSize = number(\\\"maxBarSize\\\", 24, {}, composeChartId);\\n  const xAxisHide = boolean(\\\"hide\\\", false, xAxisId);\\n  const xAxisOrientation = select(\\\"orientation\\\", orientationVertical, \\\"bottom\\\", xAxisId);\\n  const xAxisAngle = number(\\\"angle\\\", 0, {}, xAxisId);\\n  const xAxisTickLine = boolean(\\\"tickLine\\\", false, xAxisId);\\n  const xAxisTickSize = number(\\\"tickSize\\\", 6, {}, xAxisId);\\n  const xAxisMirror = boolean(\\\"mirror\\\", false, xAxisId);\\n  const xAxisReversed = boolean(\\\"reversed\\\", false, xAxisId);\\n  const xAxisTickMargin = number(\\\"tickMargin\\\", 10, {}, xAxisId);\\n  const xAxisMinTickGap = number(\\\"minTickGap\\\", 5, {}, xAxisId);\\n  const xAxisLine = boolean(\\\"axisLine\\\", false, xAxisId);\\n  const yAxisHide = boolean(\\\"hide\\\", false, yAxisId);\\n  const yAxisOrientation = select(\\\"orientation\\\", orientationHorizontal, \\\"left\\\", yAxisId);\\n  const yAxisAngle = number(\\\"angle\\\", 0, {}, yAxisId);\\n  const yAxisTickLine = boolean(\\\"tickLine\\\", false, yAxisId);\\n  const yAxisTickSize = number(\\\"tickSize\\\", 6, {}, yAxisId);\\n  const yAxisMirror = boolean(\\\"mirror\\\", false, yAxisId);\\n  const yAxisReversed = boolean(\\\"reversed\\\", false, yAxisId);\\n  const yAxisTickCoiunt = number(\\\"tickCount\\\", 6, {}, yAxisId);\\n  const yAxisTickMargin = number(\\\"tickMargin\\\", 0, {}, yAxisId);\\n  const yAxisMinTickGap = number(\\\"minTickGap\\\", 5, {}, yAxisId);\\n  const yAxisLine = boolean(\\\"axisLine\\\", false, yAxisId);\\n  const yAxisLabel = text(\\\"label\\\", \\\"\\\\u0442\\\\u044B\\\\u0441.\\\", yAxisId);\\n  const legendAlign = select(\\\"align\\\", alignHorizontal, \\\"center\\\", legendId);\\n  const legendVerticalAlign = select(\\\"verticalAlign\\\", alignVertical, \\\"bottom\\\", legendId);\\n  const legendMarginTop = number(\\\"marginTop\\\", 10, {}, legendId);\\n  const legendIconHeight = number(\\\"iconHeight\\\", 16, {}, legendId);\\n  const tooltipArrow = boolean(\\\"arrow\\\", true, tooltipId);\\n  const tooltipIsAnimationActive = boolean(\\\"isAnimationActive\\\", true, tooltipId);\\n  const tooltipSeparator = text(\\\"separator\\\", \\\" \\\", tooltipId);\\n  const tooltipOffset = number(\\\"offset\\\", 20, {}, tooltipId);\\n  const cursorStroke = text(\\\"cursor.stroke\\\", \\\"var(--color-light-border-primary)\\\", tooltipId);\\n  const cursorStrokeWidth = number(\\\"cursor.strokeWidth\\\", 1, {}, tooltipId);\\n  const tooltipFilterNull = boolean(\\\"filterNull\\\", true, tooltipId);\\n  const tooltipAnimationBegin = number(\\\"animationBegin\\\", 0, {}, tooltipId);\\n  const tooltipAnimationDuration = number(\\\"animationDuration\\\", 500, {}, tooltipId);\\n  const tooltipAnimationEasing = select(\\\"animationEasing\\\", animationType, \\\"ease\\\", tooltipId);\\n  const travellerWidth = number(\\\"travellerWidth\\\", 20, {}, brushId);\\n  const brushHeight = number(\\\"height\\\", 20, {}, brushId);\\n  const brushStartIndex = number(\\\"startIndex\\\", 0, {\\n    min: 0,\\n    max: 5\\n  }, brushId);\\n  const brushEndIndex = number(\\\"endIndex\\\", 5, {\\n    min: 0,\\n    max: 5\\n  }, brushId);\\n  const brushStroke = text(\\\"stroke\\\", \\\"var(--color-static-status-blue)\\\", brushId);\\n  const brushMargin = number(\\\"brushMargin\\\", 10, {\\n    min: 0,\\n    max: 100\\n  }, brushId);\\n  const brushHeightAlwaysShowText = boolean(\\\"alwaysShowText\\\", true, brushId);\\n  const lineHide = boolean(\\\"hide\\\", false, lineId);\\n  const lineHideLegend = boolean(\\\"hideLegend\\\", false, lineId);\\n  const lineHideTooltip = boolean(\\\"hideTooltip\\\", false, lineId);\\n  const lineZIndex = number(\\\"zIndex\\\", 50, {}, lineId);\\n  const lineIcon = select(\\\"icon\\\", iconTypes, \\\"circleLine\\\", lineId);\\n  const lineName = text(\\\"properties.name\\\", \\\"\\\\u043E\\\\u0441\\\\u0442\\\\u0430\\\\u0442\\\\u043E\\\\u043A\\\", lineId);\\n  const lineStroke = text(\\\"properties.stroke\\\", \\\"var(--color-static-status-blue)\\\", lineId);\\n  const lineDot = boolean(\\\"properties.dot\\\", true, lineId);\\n  const lineScale = number(\\\"properties.dotSettings.scale\\\", 1.5, {}, lineId);\\n  const lineInitScale = number(\\\"properties.dotSettings.initScale\\\", 1, {}, lineId);\\n  const lineWidth = number(\\\"properties.dotSettings.width\\\", 18, {}, lineId);\\n  const lineType = select(\\\"properties.type\\\", linesType, \\\"monotone\\\", lineId);\\n  const lineInheritStroke = boolean(\\\"properties.inheritStroke\\\", true, lineId);\\n  const lineStrokeWidth = number(\\\"properties.strokeWidth\\\", 2, {}, lineId);\\n  const lineStrokeDasharray = text(\\\"properties.strokeDasharray\\\", \\\"1 0\\\", lineId);\\n  const barHideFirst = boolean(\\\"hide\\\", false, barIdFirst);\\n  const barHideLegendFirst = boolean(\\\"hideLegend\\\", false, barIdFirst);\\n  const barHideTooltipFirst = boolean(\\\"hideTooltip\\\", false, barIdFirst);\\n  const barZIndexFirst = number(\\\"zIndex\\\", 1, {}, barIdFirst);\\n  const barIconFirst = select(\\\"icon\\\", iconTypes, \\\"circle\\\", barIdFirst);\\n  const barFillFirst = text(\\\"properties.fill\\\", \\\"var(--color-static-graphic-persimmon)\\\", barIdFirst);\\n  const barNameFirst = text(\\\"properties.name\\\", \\\"\\\\u0440\\\\u0430\\\\u0441\\\\u0445\\\\u043E\\\\u0434\\\", barIdFirst);\\n  const barHideSecond = boolean(\\\"hide\\\", false, barIdSecond);\\n  const barHideLegendSecond = boolean(\\\"hideLegend\\\", false, barIdSecond);\\n  const barHideTooltipSecond = boolean(\\\"hideTooltip\\\", false, barIdSecond);\\n  const barZIndexSecond = number(\\\"zIndex\\\", 10, {}, barIdSecond);\\n  const barIconSecond = select(\\\"icon\\\", iconTypes, \\\"circle\\\", barIdSecond);\\n  const barFillSecond = text(\\\"properties.fill\\\", \\\"var(--color-static-graphic-green-jungle)\\\", barIdSecond);\\n  const barNameSecond = text(\\\"properties.name\\\", \\\"\\\\u043F\\\\u0440\\\\u0438\\\\u0445\\\\u043E\\\\u0434\\\", barIdSecond);\\n  const responsiveContainer = {\\n    debounce\\n  };\\n  const cartesianGrid = {\\n    vertical,\\n    horizontal,\\n    strokeDasharray,\\n    stroke,\\n    fill\\n  };\\n  const composeChart = {\\n    initMargin: {\\n      top: initMarginTop,\\n      bottom: initMarginBottom,\\n      left: marginLeft,\\n      right: marginRight\\n    },\\n    barGap,\\n    maxBarSize,\\n    barCategoryGap\\n  };\\n  const xAxis = {\\n    hide: xAxisHide,\\n    axisLine: xAxisLine,\\n    type: \\\"category\\\",\\n    allowDecimals: true,\\n    allowDuplicatedCategory: true,\\n    angle: xAxisAngle,\\n    tickCount: 5,\\n    interval: \\\"preserveStartEnd\\\",\\n    minTickGap: xAxisMinTickGap,\\n    tickLine: xAxisTickLine,\\n    tickSize: xAxisTickSize,\\n    mirror: xAxisMirror,\\n    reversed: xAxisReversed,\\n    tickMargin: xAxisTickMargin,\\n    dataKey: \\\"label\\\",\\n    orientation: xAxisOrientation\\n  };\\n  const yAxis = {\\n    hide: yAxisHide,\\n    axisLine: yAxisLine,\\n    type: \\\"number\\\",\\n    allowDecimals: true,\\n    allowDuplicatedCategory: true,\\n    angle: yAxisAngle,\\n    tickCount: yAxisTickCoiunt,\\n    interval: \\\"preserveStartEnd\\\",\\n    minTickGap: yAxisMinTickGap,\\n    tickLine: yAxisTickLine,\\n    tickSize: yAxisTickSize,\\n    mirror: yAxisMirror,\\n    reversed: yAxisReversed,\\n    tickMargin: yAxisTickMargin,\\n    tickFormatter: decimal => `${decimal}\\\\xa0${yAxisLabel}`,\\n    orientation: yAxisOrientation\\n  };\\n  const legend = {\\n    verticalAlign: legendVerticalAlign,\\n    align: legendAlign,\\n    marginTop: legendMarginTop,\\n    iconHeight: legendIconHeight\\n  };\\n  const tooltip = {\\n    separator: tooltipSeparator,\\n    offset: tooltipOffset,\\n    filterNull: tooltipFilterNull,\\n    cursor: {\\n      stroke: cursorStroke,\\n      strokeWidth: cursorStrokeWidth\\n    },\\n    isAnimationActive: tooltipIsAnimationActive,\\n    animationBegin: tooltipAnimationBegin,\\n    animationDuration: tooltipAnimationDuration,\\n    animationEasing: tooltipAnimationEasing,\\n    arrow: tooltipArrow\\n  };\\n  const brush = {\\n    dataKey: \\\"label\\\",\\n    travellerWidth,\\n    startIndex: brushStartIndex,\\n    endIndex: brushEndIndex,\\n    brushMargin: brushMargin,\\n    height: brushHeight,\\n    alwaysShowText: brushHeightAlwaysShowText,\\n    stroke: brushStroke\\n  };\\n  const labelsBarChart = [\\\"\\\\u042F\\\\u043D\\\\u0432\\\\u0430\\\\u0440\\\\u044C\\\", \\\"\\\\u0424\\\\u0435\\\\u0432\\\\u0440\\\\u0430\\\\u043B\\\\u044C\\\", \\\"\\\\u041C\\\\u0430\\\\u0440\\\\u0442\\\", \\\"\\\\u0410\\\\u043F\\\\u0440\\\\u0435\\\\u043B\\\\u044C\\\", \\\"\\\\u041C\\\\u0430\\\\u0439\\\", \\\"\\\\u0418\\\\u044E\\\\u043D\\\\u044C\\\"];\\n  const barChartFirst = {\\n    hide: barHideLegendFirst,\\n    hideLegend: barHideLegendFirst,\\n    hideTooltip: barHideTooltipFirst,\\n    zIndex: barZIndexFirst,\\n    chart: \\\"bar\\\",\\n    icon: barIconFirst,\\n    properties: {\\n      name: barNameFirst,\\n      dataKey: \\\"uv\\\",\\n      formatter: decimal => `${decimal * 1000}`,\\n      fill: barFillFirst\\n    },\\n    data: [{\\n      label: \\\"\\\\u042F\\\\u043D\\\\u0432\\\\u0430\\\\u0440\\\\u044C\\\",\\n      value: 80\\n    }, {\\n      label: \\\"\\\\u0424\\\\u0435\\\\u0432\\\\u0440\\\\u0430\\\\u043B\\\\u044C\\\",\\n      value: 140\\n    }, {\\n      label: \\\"\\\\u041C\\\\u0430\\\\u0440\\\\u0442\\\",\\n      value: 70\\n    }, {\\n      label: \\\"\\\\u0410\\\\u043F\\\\u0440\\\\u0435\\\\u043B\\\\u044C\\\",\\n      value: 210\\n    }, {\\n      label: \\\"\\\\u041C\\\\u0430\\\\u0439\\\",\\n      value: 80\\n    }, {\\n      label: \\\"\\\\u0418\\\\u044E\\\\u043D\\\\u044C\\\",\\n      value: 20\\n    }]\\n  };\\n  const barChartSecond = {\\n    hide: barHideLegendSecond,\\n    hideLegend: barHideLegendSecond,\\n    hideTooltip: barHideTooltipSecond,\\n    zIndex: barZIndexSecond,\\n    chart: \\\"bar\\\",\\n    icon: barIconSecond,\\n    properties: {\\n      name: barNameSecond,\\n      dataKey: \\\"pv\\\",\\n      formatter: decimal => `${decimal * 1000}`,\\n      fill: barFillSecond\\n    },\\n    data: [{\\n      label: \\\"\\\\u042F\\\\u043D\\\\u0432\\\\u0430\\\\u0440\\\\u044C\\\",\\n      value: 110\\n    }, {\\n      label: \\\"\\\\u0424\\\\u0435\\\\u0432\\\\u0440\\\\u0430\\\\u043B\\\\u044C\\\",\\n      value: 190\\n    }, {\\n      label: \\\"\\\\u041C\\\\u0430\\\\u0440\\\\u0442\\\",\\n      value: 60\\n    }, {\\n      label: \\\"\\\\u0410\\\\u043F\\\\u0440\\\\u0435\\\\u043B\\\\u044C\\\",\\n      value: 230\\n    }, {\\n      label: \\\"\\\\u041C\\\\u0430\\\\u0439\\\",\\n      value: 190\\n    }, {\\n      label: \\\"\\\\u0418\\\\u044E\\\\u043D\\\\u044C\\\",\\n      value: 30\\n    }]\\n  };\\n  const lineChart = {\\n    hide: lineHide,\\n    hideLegend: lineHideLegend,\\n    hideTooltip: lineHideTooltip,\\n    zIndex: lineZIndex,\\n    chart: \\\"line\\\",\\n    icon: lineIcon,\\n    properties: {\\n      name: lineName,\\n      dataKey: \\\"cnt\\\",\\n      stroke: lineStroke,\\n      dot: lineDot,\\n      dotSettings: {\\n        scale: lineScale,\\n        initScale: lineInitScale,\\n        width: lineWidth,\\n        height: lineWidth\\n      },\\n      inheritStroke: lineInheritStroke,\\n      formatter: decimal => `${decimal * 1000}`,\\n      type: lineType,\\n      strokeWidth: lineStrokeWidth,\\n      strokeDasharray: lineStrokeDasharray\\n    },\\n    data: [{\\n      label: \\\"\\\\u042F\\\\u043D\\\\u0432\\\\u0430\\\\u0440\\\\u044C\\\",\\n      value: 60\\n    }, {\\n      label: \\\"\\\\u0424\\\\u0435\\\\u0432\\\\u0440\\\\u0430\\\\u043B\\\\u044C\\\",\\n      value: 95\\n    }, {\\n      label: \\\"\\\\u041C\\\\u0430\\\\u0440\\\\u0442\\\",\\n      value: 20\\n    }, {\\n      label: \\\"\\\\u0410\\\\u043F\\\\u0440\\\\u0435\\\\u043B\\\\u044C\\\",\\n      value: 180\\n    }, {\\n      label: \\\"\\\\u041C\\\\u0430\\\\u0439\\\",\\n      value: 70\\n    }, {\\n      label: \\\"\\\\u0418\\\\u044E\\\\u043D\\\\u044C\\\",\\n      value: 10\\n    }]\\n  };\\n  const barChartOptions = {\\n    id: \\\"bar-chart\\\",\\n    composeChart,\\n    responsiveContainer,\\n    cartesianGrid,\\n    xAxis,\\n    yAxis,\\n    tooltip,\\n    legend,\\n    brush,\\n    labels: labelsBarChart,\\n    series: [barChartFirst, barChartSecond, lineChart]\\n  };\\n  return <div style={{\\n    display: \\\"flex\\\"\\n  }}>\\n                <div style={{\\n      marginBottom: \\\"20px\\\",\\n      top: 25,\\n      width: \\\"1050px\\\",\\n      height: \\\"600px\\\"\\n    }}>\\n                    <Chart id=\\\"bar-chart\\\" composeChart={composeChart} responsiveContainer={responsiveContainer} cartesianGrid={cartesianGrid} xAxis={xAxis} yAxis={yAxis} tooltip={tooltip} legend={legend} brush={brush} labels={labelsBarChart} series={[barChartFirst, barChartSecond, lineChart]} />\\n                </div>\\n                <div style={{\\n      width: \\\"500px\\\",\\n      height: \\\"600px\\\",\\n      overflow: \\\"auto\\\"\\n    }}>\\n                    <pre>{JSON.stringify(clearData(barChartOptions), null, 2)}</pre>\\n                </div>\\n            </div>;\\n})'\n  }\n};\nexport const chartLine = () => React.createElement(() => {\n  const clearData = obj => {\n    const copy = JSON.parse(JSON.stringify(obj));\n    const labels = [\"label\", \"label\", \"...\"];\n    const series = copy.series.map(item => {\n      item.data = [{\n        label: \"label\",\n        value: \"value\"\n      }, \"...\"];\n      return item;\n    });\n    return {\n      ...obj,\n      labels,\n      series\n    };\n  };\n  const formatXAxis = time => format(time, \"dd LLL\");\n  const orientationVertical = {\n    bottom: \"bottom\",\n    top: \"top\"\n  };\n  const orientationHorizontal = {\n    left: \"left\",\n    right: \"right\"\n  };\n  const alignHorizontal = {\n    left: \"left\",\n    center: \"center\",\n    right: \"right\"\n  };\n  const alignVertical = {\n    bottom: \"bottom\",\n    middle: \"middle\",\n    top: \"top\"\n  };\n  const linesType = {\n    linear: \"linear\",\n    monotone: \"monotone\",\n    step: \"step\"\n  };\n  const animationType = {\n    ease: \"ease\",\n    \"ease-in\": \"ease-in\",\n    \"ease-out\": \"ease-out\",\n    \"ease-in-out\": \"ease-in-out\",\n    linear: \"linear\"\n  };\n  const iconTypes = {\n    circleLine: \"circleLine\",\n    filledCircle: \"filledCircle\",\n    strokeCircle: \"strokeCircle\",\n    circle: \"circle\"\n  };\n  const responsiveContainerId = \"responsiveContainerId\";\n  const cartesianGridId = \"cartesianGridId\";\n  const composeChartId = \"composeChartId\";\n  const xAxisId = \"xAxisId\";\n  const yAxisId = \"yAxisId\";\n  const legendId = \"legendId\";\n  const tooltipId = \"tooltipId\";\n  const brushId = \"brushId\";\n  const lineId = \"lineId\";\n  const areaId = \"areaId\";\n  const debounce = number(\"debounce\", 0, {}, responsiveContainerId);\n  const vertical = boolean(\"vertical\", true, cartesianGridId);\n  const horizontal = boolean(\"horizontal\", true, cartesianGridId);\n  const strokeDasharray = number(\"strokeDasharray\", 0, {}, cartesianGridId);\n  const stroke = text(\"stroke\", \"var(--color-light-border-primary)\", cartesianGridId);\n  const fill = text(\"fill\", \"var(--color-light-bg-primary)\", cartesianGridId);\n  const initMarginTop = number(\"initMargin.top\", 40, {}, composeChartId);\n  const initMarginBottom = number(\"initMargin.bottom\", 20, {}, composeChartId);\n  const marginLeft = number(\"initMargin.left\", 20, {}, composeChartId);\n  const marginRight = number(\"initMargin.right\", 70, {}, composeChartId);\n  const barCategoryGap = text(\"barCategoryGap\", \"30%\", composeChartId);\n  const barGap = number(\"barGap\", 4, {}, composeChartId);\n  const barSize = number(\"barSize\", 24, {}, composeChartId);\n  const maxBarSize = number(\"maxBarSize\", 24, {}, composeChartId);\n  const xAxisHide = boolean(\"hide\", false, xAxisId);\n  const xAxisOrientation = select(\"orientation\", orientationVertical, \"bottom\", xAxisId);\n  const xAxisAngle = number(\"angle\", 0, {}, xAxisId);\n  const xAxisTickLine = boolean(\"tickLine\", false, xAxisId);\n  const xAxisTickSize = number(\"tickSize\", 6, {}, xAxisId);\n  const xAxisMirror = boolean(\"mirror\", false, xAxisId);\n  const xAxisReversed = boolean(\"reversed\", false, xAxisId);\n  const xAxisTickMargin = number(\"tickMargin\", 2, {}, xAxisId);\n  const xAxisMinTickGap = number(\"minTickGap\", 20, {}, xAxisId);\n  const xAxisLine = boolean(\"axisLine\", false, xAxisId);\n  const yAxisHide = boolean(\"hide\", false, yAxisId);\n  const yAxisOrientation = select(\"orientation\", orientationHorizontal, \"left\", yAxisId);\n  const yAxisAngle = number(\"angle\", 0, {}, yAxisId);\n  const yAxisTickLine = boolean(\"tickLine\", false, yAxisId);\n  const yAxisTickSize = number(\"tickSize\", 6, {}, yAxisId);\n  const yAxisMirror = boolean(\"mirror\", false, yAxisId);\n  const yAxisReversed = boolean(\"reversed\", false, yAxisId);\n  const yAxisTickCoiunt = number(\"tickCount\", 6, {}, yAxisId);\n  const yAxisMinTickGap = number(\"minTickGap\", 5, {}, yAxisId);\n  const yAxisTickMargin = number(\"tickMargin\", 0, {}, yAxisId);\n  const yAxisLine = boolean(\"axisLine\", false, yAxisId);\n  const yAxisLabel = text(\"label\", \"\", yAxisId);\n  const legendAlign = select(\"align\", alignHorizontal, \"right\", legendId);\n  const legendVerticalAlign = select(\"verticalAlign\", alignVertical, \"top\", legendId);\n  const legendMarginTop = number(\"marginTop\", 20, {}, legendId);\n  const legendIconHeight = number(\"iconHeight\", 20, {}, legendId);\n  const tooltipArrow = boolean(\"arrow\", true, tooltipId);\n  const tooltipIsAnimationActive = boolean(\"isAnimationActive\", true, tooltipId);\n  const tooltipSeparator = text(\"separator\", \" \", tooltipId);\n  const tooltipOffset = number(\"offset\", 20, {}, tooltipId);\n  const cursorStroke = text(\"cursor.stroke\", \"var(--color-light-border-primary)\", tooltipId);\n  const cursorStrokeWidth = number(\"cursor.strokeWidth\", 1, {}, tooltipId);\n  const tooltipFilterNull = boolean(\"filterNull\", true, tooltipId);\n  const tooltipAnimationBegin = number(\"animationBegin\", 0, {}, tooltipId);\n  const tooltipAnimationDuration = number(\"animationDuration\", 500, {}, tooltipId);\n  const tooltipAnimationEasing = select(\"animationEasing\", animationType, \"ease\", tooltipId);\n  const travellerWidth = number(\"travellerWidth\", 20, {}, brushId);\n  const brushHeight = number(\"height\", 20, {}, brushId);\n  const brushStartIndex = number(\"startIndex\", 0, {\n    min: 0,\n    max: 47\n  }, brushId);\n  const brushEndIndex = number(\"endIndex\", 47, {\n    min: 0,\n    max: 47\n  }, brushId);\n  const brushStroke = text(\"stroke\", \"var(--color-static-status-blue)\", brushId);\n  const brushMargin = number(\"brushMargin\", 10, {\n    min: 0,\n    max: 100\n  }, brushId);\n  const brushHeightAlwaysShowText = boolean(\"alwaysShowText\", true, brushId);\n  const lineHide = boolean(\"hide\", false, lineId);\n  const lineHideLegend = boolean(\"hideLegend\", false, lineId);\n  const lineHideTooltip = boolean(\"hideTooltip\", false, lineId);\n  const lineZIndex = number(\"zIndex\", 50, {}, lineId);\n  const lineIcon = select(\"icon\", iconTypes, \"strokeCircle\", lineId);\n  const lineName = text(\"properties.name\", \"\\u0442\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\", lineId);\n  const lineStroke = text(\"properties.stroke\", \"var(--color-static-status-blue)\", lineId);\n  const lineDot = boolean(\"properties.dot\", true, lineId);\n  const lineScale = number(\"properties.dotSettings.scale\", 1.5, {}, lineId);\n  const lineInitScale = number(\"properties.dotSettings.initScale\", 0, {}, lineId);\n  const lineStrokeWidth = number(\"properties.strokeWidth\", 2, {}, lineId);\n  const lineInheritStroke = boolean(\"properties.inheritStroke\", true, lineId);\n  const lineType = select(\"properties.type\", linesType, \"monotone\", lineId);\n  const lineWidth = number(\"properties.dotSettings.width\", 18, {}, lineId);\n  const lineStrokeDasharray = text(\"properties.strokeDasharray\", \"10 10\", lineId);\n  const areaHide = boolean(\"hide\", false, areaId);\n  const areaHideLegend = boolean(\"hideLegend\", false, areaId);\n  const areaHideTooltip = boolean(\"hideTooltip\", false, areaId);\n  const areaZIndex = number(\"zIndex\", 100, {}, areaId);\n  const areaIcon = select(\"icon\", iconTypes, \"filledCircle\", areaId);\n  const areaOffset = number(\"offset\", 0.1, {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, areaId);\n  const areaColor_1 = text(\"gradient.points.color above\", \"rgba(0, 112, 224, 0.2)\", areaId);\n  const areaColorOpacity_1 = number(\"gradient.points.opacity of color above\", 1, {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, areaId);\n  const areaColor_2 = text(\"gradient.points.color below\", \"rgba(0, 128, 255, 0)\", areaId);\n  const areaColorOpacity_2 = number(\"gradient opacity of color below\", 1, {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, areaId);\n  const areaName = text(\"properties.name\", \"\\u043F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\", areaId);\n  const areaType = select(\"properties.type\", linesType, \"monotone\", areaId);\n  const areaStroke = text(\"properties.stroke\", \"var(--color-static-status-blue)\", areaId);\n  const areaScale = number(\"properties.dotSettings.scale\", 1.5, {}, areaId);\n  const areaInitScale = number(\"properties.dotSettings.initScale\", 0, {}, areaId);\n  const areaWidth = number(\"properties.dotSettings.width\", 18, {}, areaId);\n  const areaStrokeWidth = number(\"properties.strokeWidth\", 2, {}, areaId);\n  const areaDot = boolean(\"properties.dot\", true, areaId);\n  const areaStrokeDasharray = text(\"properties.strokeDasharray\", \"10 10\", areaId);\n  const responsiveContainer = {\n    debounce\n  };\n  const cartesianGrid = {\n    vertical,\n    horizontal,\n    strokeDasharray,\n    stroke,\n    fill\n  };\n  const composeChart = {\n    initMargin: {\n      top: initMarginTop,\n      bottom: initMarginBottom,\n      left: marginLeft,\n      right: marginRight\n    },\n    barCategoryGap,\n    barSize,\n    maxBarSize\n  };\n  const xAxis = {\n    hide: xAxisHide,\n    axisLine: xAxisLine,\n    type: \"category\",\n    allowDecimals: true,\n    allowDuplicatedCategory: true,\n    angle: xAxisAngle,\n    tickCount: 5,\n    interval: \"preserveStartEnd\",\n    minTickGap: xAxisMinTickGap,\n    tickLine: xAxisTickLine,\n    tickSize: xAxisTickSize,\n    mirror: xAxisMirror,\n    reversed: xAxisReversed,\n    dataKey: \"label\",\n    tickMargin: xAxisTickMargin,\n    orientation: xAxisOrientation,\n    tickFormatter: formatXAxis,\n    tickType: \"point\"\n  };\n  const yAxis = {\n    hide: yAxisHide,\n    axisLine: yAxisLine,\n    type: \"number\",\n    allowDecimals: true,\n    allowDuplicatedCategory: true,\n    angle: yAxisAngle,\n    tickCount: yAxisTickCoiunt,\n    interval: \"preserveStartEnd\",\n    minTickGap: yAxisMinTickGap,\n    tickLine: yAxisTickLine,\n    tickSize: yAxisTickSize,\n    mirror: yAxisMirror,\n    reversed: yAxisReversed,\n    tickFormatter: decimal => `${decimal}\\xa0${yAxisLabel}`,\n    orientation: yAxisOrientation,\n    tickMargin: yAxisTickMargin\n  };\n  const legend = {\n    verticalAlign: legendVerticalAlign,\n    align: legendAlign,\n    marginTop: legendMarginTop,\n    iconHeight: legendIconHeight\n  };\n  const tooltip = {\n    separator: tooltipSeparator,\n    offset: tooltipOffset,\n    filterNull: tooltipFilterNull,\n    cursor: {\n      stroke: cursorStroke,\n      strokeWidth: cursorStrokeWidth\n    },\n    isAnimationActive: tooltipIsAnimationActive,\n    animationBegin: tooltipAnimationBegin,\n    animationDuration: tooltipAnimationDuration,\n    animationEasing: tooltipAnimationEasing,\n    arrow: tooltipArrow,\n    labelFormatter: formatXAxis\n  };\n  const brush = {\n    dataKey: \"label\",\n    travellerWidth,\n    startIndex: brushStartIndex,\n    endIndex: brushEndIndex,\n    brushMargin: brushMargin,\n    height: brushHeight,\n    stroke: brushStroke,\n    alwaysShowText: brushHeightAlwaysShowText,\n    tickFormatter: formatXAxis\n  };\n  const labelsLineChart = [1608242400000, 1608328800000, 1608415200000, 1608501600000, 1608588000000, 1608674400000, 1608760800000, 1608847200000, 1608933600000, 1609020000000, 1609106400000, 1609192800000, 1609279200000, 1609365600000, 1609452000000, 1609538400000, 1609624800000, 1609711200000, 1609797600000, 1609884000000, 1609970400000, 1610056800000, 1610143200000, 1610229600000, 1610316000000, 1610402400000, 1610488800000, 1610575200000, 1610661600000, 1610748000000, 1610834400000, 1610920800000, 1611007200000, 1611093600000, 1611180000000, 1611266400000, 1611352800000, 1611439200000, 1611525600000, 1611612000000, 1611698400000, 1611784800000, 1611871200000, 1611957600000, 1612044000000, 1612130400000, 1612216800000, 1612303200000];\n  const lineChart = {\n    hide: lineHide,\n    hideLegend: lineHideLegend,\n    hideTooltip: lineHideTooltip,\n    zIndex: 200,\n    chart: \"line\",\n    icon: lineIcon,\n    properties: {\n      name: lineName,\n      dataKey: \"b\",\n      stroke: lineStroke,\n      dot: lineDot,\n      dotSettings: {\n        scale: lineScale,\n        initScale: lineInitScale,\n        width: lineWidth,\n        height: lineWidth\n      },\n      inheritStroke: lineInheritStroke,\n      type: lineType,\n      strokeWidth: lineStrokeWidth,\n      strokeDasharray: lineStrokeDasharray\n    },\n    data: [{\n      label: 1608242400000,\n      value: 35\n    }, {\n      label: 1608328800000,\n      value: 20\n    }, {\n      label: 1608415200000,\n      value: 34\n    }, {\n      label: 1608501600000,\n      value: 42\n    }, {\n      label: 1608588000000,\n      value: 14\n    }, {\n      label: 1608674400000,\n      value: 37\n    }, {\n      label: 1608760800000,\n      value: 19\n    }, {\n      label: 1608847200000,\n      value: 37\n    }, {\n      label: 1608933600000,\n      value: 22\n    }, {\n      label: 1609020000000,\n      value: 21\n    }, {\n      label: 1609106400000,\n      value: 28\n    }, {\n      label: 1609192800000,\n      value: 26\n    }, {\n      label: 1609279200000,\n      value: 31\n    }, {\n      label: 1609365600000,\n      value: 37\n    }, {\n      label: 1609452000000,\n      value: 40\n    }, {\n      label: 1609538400000,\n      value: 39\n    }, {\n      label: 1609624800000,\n      value: 45\n    }, {\n      label: 1609711200000,\n      value: 40\n    }, {\n      label: 1609797600000,\n      value: 45\n    }, {\n      label: 1609884000000,\n      value: 40\n    }, {\n      label: 1609970400000,\n      value: 45\n    }, {\n      label: 1610056800000,\n      value: 46\n    }, {\n      label: 1610143200000,\n      value: 36\n    }, {\n      label: 1610229600000,\n      value: 50\n    }, {\n      label: 1610316000000,\n      value: 44\n    }, {\n      label: 1610402400000,\n      value: 55\n    }, {\n      label: 1610488800000,\n      value: 59\n    }, {\n      label: 1610575200000,\n      value: 65\n    }, {\n      label: 1610661600000,\n      value: 49\n    }, {\n      label: 1610748000000,\n      value: 51\n    }, {\n      label: 1610834400000,\n      value: 69\n    }, {\n      label: 1610920800000,\n      value: 61\n    }, {\n      label: 1611007200000,\n      value: 63\n    }, {\n      label: 1611093600000,\n      value: 57\n    }, {\n      label: 1611180000000,\n      value: 61\n    }, {\n      label: 1611266400000,\n      value: 43\n    }, {\n      label: 1611352800000,\n      value: 68\n    }, {\n      label: 1611439200000,\n      value: 69\n    }, {\n      label: 1611525600000,\n      value: 69\n    }, {\n      label: 1611612000000,\n      value: 76\n    }, {\n      label: 1611698400000,\n      value: 61\n    }, {\n      label: 1611784800000,\n      value: 84\n    }, {\n      label: 1611871200000,\n      value: 96\n    }, {\n      label: 1611957600000,\n      value: 97\n    }, {\n      label: 1612044000000,\n      value: 72\n    }, {\n      label: 1612130400000,\n      value: 71\n    }, {\n      label: 1612216800000,\n      value: 88\n    }, {\n      label: 1612303200000,\n      value: 87\n    }]\n  };\n  const areaChart = {\n    hide: areaHide,\n    hideLegend: areaHideLegend,\n    hideTooltip: areaHideTooltip,\n    zIndex: areaZIndex,\n    chart: \"area\",\n    icon: areaIcon,\n    offset: areaOffset,\n    gradient: {\n      gid: \"ar-grad\",\n      points: [{\n        offset: 0,\n        stopColor: areaColor_1,\n        stopOpacity: areaColorOpacity_1\n      }, {\n        offset: 95,\n        stopColor: areaColor_2,\n        stopOpacity: areaColorOpacity_2\n      }]\n    },\n    properties: {\n      name: areaName,\n      dataKey: \"a\",\n      type: areaType,\n      stroke: areaStroke,\n      dotSettings: {\n        scale: areaScale,\n        initScale: areaInitScale,\n        width: areaWidth,\n        height: areaWidth\n      },\n      dot: areaDot,\n      strokeWidth: areaStrokeWidth\n    },\n    data: [{\n      label: 1608242400000,\n      value: 70\n    }, {\n      label: 1608328800000,\n      value: 40\n    }, {\n      label: 1608415200000,\n      value: 69\n    }, {\n      label: 1608501600000,\n      value: 84\n    }, {\n      label: 1608588000000,\n      value: 29\n    }, {\n      label: 1608674400000,\n      value: 74\n    }, {\n      label: 1608760800000,\n      value: 39\n    }, {\n      label: 1608847200000,\n      value: 74\n    }, {\n      label: 1608933600000,\n      value: 44\n    }, {\n      label: 1609020000000,\n      value: 43\n    }, {\n      label: 1609106400000,\n      value: 57\n    }, {\n      label: 1609192800000,\n      value: 52\n    }, {\n      label: 1609279200000,\n      value: 62\n    }, {\n      label: 1609365600000,\n      value: 74\n    }, {\n      label: 1609452000000,\n      value: 81\n    }, {\n      label: 1609538400000,\n      value: 78\n    }, {\n      label: 1609624800000,\n      value: 91\n    }, {\n      label: 1609711200000,\n      value: 80\n    }, {\n      label: 1609797600000,\n      value: 90\n    }, {\n      label: 1609884000000,\n      value: 80\n    }, {\n      label: 1609970400000,\n      value: 91\n    }, {\n      label: 1610056800000,\n      value: 93\n    }, {\n      label: 1610143200000,\n      value: 72\n    }, {\n      label: 1610229600000,\n      value: 101\n    }, {\n      label: 1610316000000,\n      value: 88\n    }, {\n      label: 1610402400000,\n      value: 110\n    }, {\n      label: 1610488800000,\n      value: 119\n    }, {\n      label: 1610575200000,\n      value: 130\n    }, {\n      label: 1610661600000,\n      value: 98\n    }, {\n      label: 1610748000000,\n      value: 102\n    }, {\n      label: 1610834400000,\n      value: 139\n    }, {\n      label: 1610920800000,\n      value: 123\n    }, {\n      label: 1611007200000,\n      value: 127\n    }, {\n      label: 1611093600000,\n      value: 114\n    }, {\n      label: 1611180000000,\n      value: 123\n    }, {\n      label: 1611266400000,\n      value: 86\n    }, {\n      label: 1611352800000,\n      value: 136\n    }, {\n      label: 1611439200000,\n      value: 139\n    }, {\n      label: 1611525600000,\n      value: 138\n    }, {\n      label: 1611612000000,\n      value: 153\n    }, {\n      label: 1611698400000,\n      value: 122\n    }, {\n      label: 1611784800000,\n      value: 169\n    }, {\n      label: 1611871200000,\n      value: 192\n    }, {\n      label: 1611957600000,\n      value: 195\n    }, {\n      label: 1612044000000,\n      value: 144\n    }, {\n      label: 1612130400000,\n      value: 142\n    }, {\n      label: 1612216800000,\n      value: 176\n    }, {\n      label: 1612303200000,\n      value: 174\n    }]\n  };\n  const lineChartOptions = {\n    id: \"line-chart\",\n    composeChart,\n    responsiveContainer,\n    cartesianGrid,\n    xAxis,\n    yAxis,\n    tooltip,\n    legend,\n    brush,\n    labels: labelsLineChart,\n    series: [areaChart]\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        top: 25,\n        width: \"1050px\",\n        height: \"600px\"\n      },\n      children: /*#__PURE__*/_jsx(Chart, {\n        id: \"line-chart\",\n        composeChart: composeChart,\n        responsiveContainer: responsiveContainer,\n        cartesianGrid: cartesianGrid,\n        xAxis: xAxis,\n        yAxis: yAxis,\n        tooltip: tooltip,\n        legend: legend,\n        brush: brush,\n        labels: labelsLineChart,\n        series: [lineChart, areaChart]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        width: \"500px\",\n        height: \"600px\",\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsx(\"pre\", {\n        children: JSON.stringify(clearData(lineChartOptions), null, 2)\n      })\n    })]\n  });\n});\nchartLine.storyName = 'Chart.Line';\nchartLine.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const clearData = obj => {\\n    const copy = JSON.parse(JSON.stringify(obj));\\n    const labels = [\\\"label\\\", \\\"label\\\", \\\"...\\\"];\\n    const series = copy.series.map(item => {\\n      item.data = [{\\n        label: \\\"label\\\",\\n        value: \\\"value\\\"\\n      }, \\\"...\\\"];\\n      return item;\\n    });\\n    return {\\n      ...obj,\\n      labels,\\n      series\\n    };\\n  };\\n  const formatXAxis = time => format(time, \\\"dd LLL\\\");\\n  const orientationVertical = {\\n    bottom: \\\"bottom\\\",\\n    top: \\\"top\\\"\\n  };\\n  const orientationHorizontal = {\\n    left: \\\"left\\\",\\n    right: \\\"right\\\"\\n  };\\n  const alignHorizontal = {\\n    left: \\\"left\\\",\\n    center: \\\"center\\\",\\n    right: \\\"right\\\"\\n  };\\n  const alignVertical = {\\n    bottom: \\\"bottom\\\",\\n    middle: \\\"middle\\\",\\n    top: \\\"top\\\"\\n  };\\n  const linesType = {\\n    linear: \\\"linear\\\",\\n    monotone: \\\"monotone\\\",\\n    step: \\\"step\\\"\\n  };\\n  const animationType = {\\n    ease: \\\"ease\\\",\\n    \\\"ease-in\\\": \\\"ease-in\\\",\\n    \\\"ease-out\\\": \\\"ease-out\\\",\\n    \\\"ease-in-out\\\": \\\"ease-in-out\\\",\\n    linear: \\\"linear\\\"\\n  };\\n  const iconTypes = {\\n    circleLine: \\\"circleLine\\\",\\n    filledCircle: \\\"filledCircle\\\",\\n    strokeCircle: \\\"strokeCircle\\\",\\n    circle: \\\"circle\\\"\\n  };\\n  const responsiveContainerId = \\\"responsiveContainerId\\\";\\n  const cartesianGridId = \\\"cartesianGridId\\\";\\n  const composeChartId = \\\"composeChartId\\\";\\n  const xAxisId = \\\"xAxisId\\\";\\n  const yAxisId = \\\"yAxisId\\\";\\n  const legendId = \\\"legendId\\\";\\n  const tooltipId = \\\"tooltipId\\\";\\n  const brushId = \\\"brushId\\\";\\n  const lineId = \\\"lineId\\\";\\n  const areaId = \\\"areaId\\\";\\n  const debounce = number(\\\"debounce\\\", 0, {}, responsiveContainerId);\\n  const vertical = boolean(\\\"vertical\\\", true, cartesianGridId);\\n  const horizontal = boolean(\\\"horizontal\\\", true, cartesianGridId);\\n  const strokeDasharray = number(\\\"strokeDasharray\\\", 0, {}, cartesianGridId);\\n  const stroke = text(\\\"stroke\\\", \\\"var(--color-light-border-primary)\\\", cartesianGridId);\\n  const fill = text(\\\"fill\\\", \\\"var(--color-light-bg-primary)\\\", cartesianGridId);\\n  const initMarginTop = number(\\\"initMargin.top\\\", 40, {}, composeChartId);\\n  const initMarginBottom = number(\\\"initMargin.bottom\\\", 20, {}, composeChartId);\\n  const marginLeft = number(\\\"initMargin.left\\\", 20, {}, composeChartId);\\n  const marginRight = number(\\\"initMargin.right\\\", 70, {}, composeChartId);\\n  const barCategoryGap = text(\\\"barCategoryGap\\\", \\\"30%\\\", composeChartId);\\n  const barGap = number(\\\"barGap\\\", 4, {}, composeChartId);\\n  const barSize = number(\\\"barSize\\\", 24, {}, composeChartId);\\n  const maxBarSize = number(\\\"maxBarSize\\\", 24, {}, composeChartId);\\n  const xAxisHide = boolean(\\\"hide\\\", false, xAxisId);\\n  const xAxisOrientation = select(\\\"orientation\\\", orientationVertical, \\\"bottom\\\", xAxisId);\\n  const xAxisAngle = number(\\\"angle\\\", 0, {}, xAxisId);\\n  const xAxisTickLine = boolean(\\\"tickLine\\\", false, xAxisId);\\n  const xAxisTickSize = number(\\\"tickSize\\\", 6, {}, xAxisId);\\n  const xAxisMirror = boolean(\\\"mirror\\\", false, xAxisId);\\n  const xAxisReversed = boolean(\\\"reversed\\\", false, xAxisId);\\n  const xAxisTickMargin = number(\\\"tickMargin\\\", 2, {}, xAxisId);\\n  const xAxisMinTickGap = number(\\\"minTickGap\\\", 20, {}, xAxisId);\\n  const xAxisLine = boolean(\\\"axisLine\\\", false, xAxisId);\\n  const yAxisHide = boolean(\\\"hide\\\", false, yAxisId);\\n  const yAxisOrientation = select(\\\"orientation\\\", orientationHorizontal, \\\"left\\\", yAxisId);\\n  const yAxisAngle = number(\\\"angle\\\", 0, {}, yAxisId);\\n  const yAxisTickLine = boolean(\\\"tickLine\\\", false, yAxisId);\\n  const yAxisTickSize = number(\\\"tickSize\\\", 6, {}, yAxisId);\\n  const yAxisMirror = boolean(\\\"mirror\\\", false, yAxisId);\\n  const yAxisReversed = boolean(\\\"reversed\\\", false, yAxisId);\\n  const yAxisTickCoiunt = number(\\\"tickCount\\\", 6, {}, yAxisId);\\n  const yAxisMinTickGap = number(\\\"minTickGap\\\", 5, {}, yAxisId);\\n  const yAxisTickMargin = number(\\\"tickMargin\\\", 0, {}, yAxisId);\\n  const yAxisLine = boolean(\\\"axisLine\\\", false, yAxisId);\\n  const yAxisLabel = text(\\\"label\\\", \\\"\\\", yAxisId);\\n  const legendAlign = select(\\\"align\\\", alignHorizontal, \\\"right\\\", legendId);\\n  const legendVerticalAlign = select(\\\"verticalAlign\\\", alignVertical, \\\"top\\\", legendId);\\n  const legendMarginTop = number(\\\"marginTop\\\", 20, {}, legendId);\\n  const legendIconHeight = number(\\\"iconHeight\\\", 20, {}, legendId);\\n  const tooltipArrow = boolean(\\\"arrow\\\", true, tooltipId);\\n  const tooltipIsAnimationActive = boolean(\\\"isAnimationActive\\\", true, tooltipId);\\n  const tooltipSeparator = text(\\\"separator\\\", \\\" \\\", tooltipId);\\n  const tooltipOffset = number(\\\"offset\\\", 20, {}, tooltipId);\\n  const cursorStroke = text(\\\"cursor.stroke\\\", \\\"var(--color-light-border-primary)\\\", tooltipId);\\n  const cursorStrokeWidth = number(\\\"cursor.strokeWidth\\\", 1, {}, tooltipId);\\n  const tooltipFilterNull = boolean(\\\"filterNull\\\", true, tooltipId);\\n  const tooltipAnimationBegin = number(\\\"animationBegin\\\", 0, {}, tooltipId);\\n  const tooltipAnimationDuration = number(\\\"animationDuration\\\", 500, {}, tooltipId);\\n  const tooltipAnimationEasing = select(\\\"animationEasing\\\", animationType, \\\"ease\\\", tooltipId);\\n  const travellerWidth = number(\\\"travellerWidth\\\", 20, {}, brushId);\\n  const brushHeight = number(\\\"height\\\", 20, {}, brushId);\\n  const brushStartIndex = number(\\\"startIndex\\\", 0, {\\n    min: 0,\\n    max: 47\\n  }, brushId);\\n  const brushEndIndex = number(\\\"endIndex\\\", 47, {\\n    min: 0,\\n    max: 47\\n  }, brushId);\\n  const brushStroke = text(\\\"stroke\\\", \\\"var(--color-static-status-blue)\\\", brushId);\\n  const brushMargin = number(\\\"brushMargin\\\", 10, {\\n    min: 0,\\n    max: 100\\n  }, brushId);\\n  const brushHeightAlwaysShowText = boolean(\\\"alwaysShowText\\\", true, brushId);\\n  const lineHide = boolean(\\\"hide\\\", false, lineId);\\n  const lineHideLegend = boolean(\\\"hideLegend\\\", false, lineId);\\n  const lineHideTooltip = boolean(\\\"hideTooltip\\\", false, lineId);\\n  const lineZIndex = number(\\\"zIndex\\\", 50, {}, lineId);\\n  const lineIcon = select(\\\"icon\\\", iconTypes, \\\"strokeCircle\\\", lineId);\\n  const lineName = text(\\\"properties.name\\\", \\\"\\\\u0442\\\\u0435\\\\u043A\\\\u0443\\\\u0449\\\\u0438\\\\u0439 \\\\u043F\\\\u0435\\\\u0440\\\\u0438\\\\u043E\\\\u0434\\\", lineId);\\n  const lineStroke = text(\\\"properties.stroke\\\", \\\"var(--color-static-status-blue)\\\", lineId);\\n  const lineDot = boolean(\\\"properties.dot\\\", true, lineId);\\n  const lineScale = number(\\\"properties.dotSettings.scale\\\", 1.5, {}, lineId);\\n  const lineInitScale = number(\\\"properties.dotSettings.initScale\\\", 0, {}, lineId);\\n  const lineStrokeWidth = number(\\\"properties.strokeWidth\\\", 2, {}, lineId);\\n  const lineInheritStroke = boolean(\\\"properties.inheritStroke\\\", true, lineId);\\n  const lineType = select(\\\"properties.type\\\", linesType, \\\"monotone\\\", lineId);\\n  const lineWidth = number(\\\"properties.dotSettings.width\\\", 18, {}, lineId);\\n  const lineStrokeDasharray = text(\\\"properties.strokeDasharray\\\", \\\"10 10\\\", lineId);\\n  const areaHide = boolean(\\\"hide\\\", false, areaId);\\n  const areaHideLegend = boolean(\\\"hideLegend\\\", false, areaId);\\n  const areaHideTooltip = boolean(\\\"hideTooltip\\\", false, areaId);\\n  const areaZIndex = number(\\\"zIndex\\\", 100, {}, areaId);\\n  const areaIcon = select(\\\"icon\\\", iconTypes, \\\"filledCircle\\\", areaId);\\n  const areaOffset = number(\\\"offset\\\", 0.1, {\\n    min: 0,\\n    max: 1,\\n    step: 0.1\\n  }, areaId);\\n  const areaColor_1 = text(\\\"gradient.points.color above\\\", \\\"rgba(0, 112, 224, 0.2)\\\", areaId);\\n  const areaColorOpacity_1 = number(\\\"gradient.points.opacity of color above\\\", 1, {\\n    min: 0,\\n    max: 1,\\n    step: 0.1\\n  }, areaId);\\n  const areaColor_2 = text(\\\"gradient.points.color below\\\", \\\"rgba(0, 128, 255, 0)\\\", areaId);\\n  const areaColorOpacity_2 = number(\\\"gradient opacity of color below\\\", 1, {\\n    min: 0,\\n    max: 1,\\n    step: 0.1\\n  }, areaId);\\n  const areaName = text(\\\"properties.name\\\", \\\"\\\\u043F\\\\u0440\\\\u0435\\\\u0434\\\\u044B\\\\u0434\\\\u0443\\\\u0449\\\\u0438\\\\u0439 \\\\u043F\\\\u0435\\\\u0440\\\\u0438\\\\u043E\\\\u0434\\\", areaId);\\n  const areaType = select(\\\"properties.type\\\", linesType, \\\"monotone\\\", areaId);\\n  const areaStroke = text(\\\"properties.stroke\\\", \\\"var(--color-static-status-blue)\\\", areaId);\\n  const areaScale = number(\\\"properties.dotSettings.scale\\\", 1.5, {}, areaId);\\n  const areaInitScale = number(\\\"properties.dotSettings.initScale\\\", 0, {}, areaId);\\n  const areaWidth = number(\\\"properties.dotSettings.width\\\", 18, {}, areaId);\\n  const areaStrokeWidth = number(\\\"properties.strokeWidth\\\", 2, {}, areaId);\\n  const areaDot = boolean(\\\"properties.dot\\\", true, areaId);\\n  const areaStrokeDasharray = text(\\\"properties.strokeDasharray\\\", \\\"10 10\\\", areaId);\\n  const responsiveContainer = {\\n    debounce\\n  };\\n  const cartesianGrid = {\\n    vertical,\\n    horizontal,\\n    strokeDasharray,\\n    stroke,\\n    fill\\n  };\\n  const composeChart = {\\n    initMargin: {\\n      top: initMarginTop,\\n      bottom: initMarginBottom,\\n      left: marginLeft,\\n      right: marginRight\\n    },\\n    barCategoryGap,\\n    barSize,\\n    maxBarSize\\n  };\\n  const xAxis = {\\n    hide: xAxisHide,\\n    axisLine: xAxisLine,\\n    type: \\\"category\\\",\\n    allowDecimals: true,\\n    allowDuplicatedCategory: true,\\n    angle: xAxisAngle,\\n    tickCount: 5,\\n    interval: \\\"preserveStartEnd\\\",\\n    minTickGap: xAxisMinTickGap,\\n    tickLine: xAxisTickLine,\\n    tickSize: xAxisTickSize,\\n    mirror: xAxisMirror,\\n    reversed: xAxisReversed,\\n    dataKey: \\\"label\\\",\\n    tickMargin: xAxisTickMargin,\\n    orientation: xAxisOrientation,\\n    tickFormatter: formatXAxis,\\n    tickType: \\\"point\\\"\\n  };\\n  const yAxis = {\\n    hide: yAxisHide,\\n    axisLine: yAxisLine,\\n    type: \\\"number\\\",\\n    allowDecimals: true,\\n    allowDuplicatedCategory: true,\\n    angle: yAxisAngle,\\n    tickCount: yAxisTickCoiunt,\\n    interval: \\\"preserveStartEnd\\\",\\n    minTickGap: yAxisMinTickGap,\\n    tickLine: yAxisTickLine,\\n    tickSize: yAxisTickSize,\\n    mirror: yAxisMirror,\\n    reversed: yAxisReversed,\\n    tickFormatter: decimal => `${decimal}\\\\xa0${yAxisLabel}`,\\n    orientation: yAxisOrientation,\\n    tickMargin: yAxisTickMargin\\n  };\\n  const legend = {\\n    verticalAlign: legendVerticalAlign,\\n    align: legendAlign,\\n    marginTop: legendMarginTop,\\n    iconHeight: legendIconHeight\\n  };\\n  const tooltip = {\\n    separator: tooltipSeparator,\\n    offset: tooltipOffset,\\n    filterNull: tooltipFilterNull,\\n    cursor: {\\n      stroke: cursorStroke,\\n      strokeWidth: cursorStrokeWidth\\n    },\\n    isAnimationActive: tooltipIsAnimationActive,\\n    animationBegin: tooltipAnimationBegin,\\n    animationDuration: tooltipAnimationDuration,\\n    animationEasing: tooltipAnimationEasing,\\n    arrow: tooltipArrow,\\n    labelFormatter: formatXAxis\\n  };\\n  const brush = {\\n    dataKey: \\\"label\\\",\\n    travellerWidth,\\n    startIndex: brushStartIndex,\\n    endIndex: brushEndIndex,\\n    brushMargin: brushMargin,\\n    height: brushHeight,\\n    stroke: brushStroke,\\n    alwaysShowText: brushHeightAlwaysShowText,\\n    tickFormatter: formatXAxis\\n  };\\n  const labelsLineChart = [1608242400000, 1608328800000, 1608415200000, 1608501600000, 1608588000000, 1608674400000, 1608760800000, 1608847200000, 1608933600000, 1609020000000, 1609106400000, 1609192800000, 1609279200000, 1609365600000, 1609452000000, 1609538400000, 1609624800000, 1609711200000, 1609797600000, 1609884000000, 1609970400000, 1610056800000, 1610143200000, 1610229600000, 1610316000000, 1610402400000, 1610488800000, 1610575200000, 1610661600000, 1610748000000, 1610834400000, 1610920800000, 1611007200000, 1611093600000, 1611180000000, 1611266400000, 1611352800000, 1611439200000, 1611525600000, 1611612000000, 1611698400000, 1611784800000, 1611871200000, 1611957600000, 1612044000000, 1612130400000, 1612216800000, 1612303200000];\\n  const lineChart = {\\n    hide: lineHide,\\n    hideLegend: lineHideLegend,\\n    hideTooltip: lineHideTooltip,\\n    zIndex: 200,\\n    chart: \\\"line\\\",\\n    icon: lineIcon,\\n    properties: {\\n      name: lineName,\\n      dataKey: \\\"b\\\",\\n      stroke: lineStroke,\\n      dot: lineDot,\\n      dotSettings: {\\n        scale: lineScale,\\n        initScale: lineInitScale,\\n        width: lineWidth,\\n        height: lineWidth\\n      },\\n      inheritStroke: lineInheritStroke,\\n      type: lineType,\\n      strokeWidth: lineStrokeWidth,\\n      strokeDasharray: lineStrokeDasharray\\n    },\\n    data: [{\\n      label: 1608242400000,\\n      value: 35\\n    }, {\\n      label: 1608328800000,\\n      value: 20\\n    }, {\\n      label: 1608415200000,\\n      value: 34\\n    }, {\\n      label: 1608501600000,\\n      value: 42\\n    }, {\\n      label: 1608588000000,\\n      value: 14\\n    }, {\\n      label: 1608674400000,\\n      value: 37\\n    }, {\\n      label: 1608760800000,\\n      value: 19\\n    }, {\\n      label: 1608847200000,\\n      value: 37\\n    }, {\\n      label: 1608933600000,\\n      value: 22\\n    }, {\\n      label: 1609020000000,\\n      value: 21\\n    }, {\\n      label: 1609106400000,\\n      value: 28\\n    }, {\\n      label: 1609192800000,\\n      value: 26\\n    }, {\\n      label: 1609279200000,\\n      value: 31\\n    }, {\\n      label: 1609365600000,\\n      value: 37\\n    }, {\\n      label: 1609452000000,\\n      value: 40\\n    }, {\\n      label: 1609538400000,\\n      value: 39\\n    }, {\\n      label: 1609624800000,\\n      value: 45\\n    }, {\\n      label: 1609711200000,\\n      value: 40\\n    }, {\\n      label: 1609797600000,\\n      value: 45\\n    }, {\\n      label: 1609884000000,\\n      value: 40\\n    }, {\\n      label: 1609970400000,\\n      value: 45\\n    }, {\\n      label: 1610056800000,\\n      value: 46\\n    }, {\\n      label: 1610143200000,\\n      value: 36\\n    }, {\\n      label: 1610229600000,\\n      value: 50\\n    }, {\\n      label: 1610316000000,\\n      value: 44\\n    }, {\\n      label: 1610402400000,\\n      value: 55\\n    }, {\\n      label: 1610488800000,\\n      value: 59\\n    }, {\\n      label: 1610575200000,\\n      value: 65\\n    }, {\\n      label: 1610661600000,\\n      value: 49\\n    }, {\\n      label: 1610748000000,\\n      value: 51\\n    }, {\\n      label: 1610834400000,\\n      value: 69\\n    }, {\\n      label: 1610920800000,\\n      value: 61\\n    }, {\\n      label: 1611007200000,\\n      value: 63\\n    }, {\\n      label: 1611093600000,\\n      value: 57\\n    }, {\\n      label: 1611180000000,\\n      value: 61\\n    }, {\\n      label: 1611266400000,\\n      value: 43\\n    }, {\\n      label: 1611352800000,\\n      value: 68\\n    }, {\\n      label: 1611439200000,\\n      value: 69\\n    }, {\\n      label: 1611525600000,\\n      value: 69\\n    }, {\\n      label: 1611612000000,\\n      value: 76\\n    }, {\\n      label: 1611698400000,\\n      value: 61\\n    }, {\\n      label: 1611784800000,\\n      value: 84\\n    }, {\\n      label: 1611871200000,\\n      value: 96\\n    }, {\\n      label: 1611957600000,\\n      value: 97\\n    }, {\\n      label: 1612044000000,\\n      value: 72\\n    }, {\\n      label: 1612130400000,\\n      value: 71\\n    }, {\\n      label: 1612216800000,\\n      value: 88\\n    }, {\\n      label: 1612303200000,\\n      value: 87\\n    }]\\n  };\\n  const areaChart = {\\n    hide: areaHide,\\n    hideLegend: areaHideLegend,\\n    hideTooltip: areaHideTooltip,\\n    zIndex: areaZIndex,\\n    chart: \\\"area\\\",\\n    icon: areaIcon,\\n    offset: areaOffset,\\n    gradient: {\\n      gid: \\\"ar-grad\\\",\\n      points: [{\\n        offset: 0,\\n        stopColor: areaColor_1,\\n        stopOpacity: areaColorOpacity_1\\n      }, {\\n        offset: 95,\\n        stopColor: areaColor_2,\\n        stopOpacity: areaColorOpacity_2\\n      }]\\n    },\\n    properties: {\\n      name: areaName,\\n      dataKey: \\\"a\\\",\\n      type: areaType,\\n      stroke: areaStroke,\\n      dotSettings: {\\n        scale: areaScale,\\n        initScale: areaInitScale,\\n        width: areaWidth,\\n        height: areaWidth\\n      },\\n      dot: areaDot,\\n      strokeWidth: areaStrokeWidth\\n    },\\n    data: [{\\n      label: 1608242400000,\\n      value: 70\\n    }, {\\n      label: 1608328800000,\\n      value: 40\\n    }, {\\n      label: 1608415200000,\\n      value: 69\\n    }, {\\n      label: 1608501600000,\\n      value: 84\\n    }, {\\n      label: 1608588000000,\\n      value: 29\\n    }, {\\n      label: 1608674400000,\\n      value: 74\\n    }, {\\n      label: 1608760800000,\\n      value: 39\\n    }, {\\n      label: 1608847200000,\\n      value: 74\\n    }, {\\n      label: 1608933600000,\\n      value: 44\\n    }, {\\n      label: 1609020000000,\\n      value: 43\\n    }, {\\n      label: 1609106400000,\\n      value: 57\\n    }, {\\n      label: 1609192800000,\\n      value: 52\\n    }, {\\n      label: 1609279200000,\\n      value: 62\\n    }, {\\n      label: 1609365600000,\\n      value: 74\\n    }, {\\n      label: 1609452000000,\\n      value: 81\\n    }, {\\n      label: 1609538400000,\\n      value: 78\\n    }, {\\n      label: 1609624800000,\\n      value: 91\\n    }, {\\n      label: 1609711200000,\\n      value: 80\\n    }, {\\n      label: 1609797600000,\\n      value: 90\\n    }, {\\n      label: 1609884000000,\\n      value: 80\\n    }, {\\n      label: 1609970400000,\\n      value: 91\\n    }, {\\n      label: 1610056800000,\\n      value: 93\\n    }, {\\n      label: 1610143200000,\\n      value: 72\\n    }, {\\n      label: 1610229600000,\\n      value: 101\\n    }, {\\n      label: 1610316000000,\\n      value: 88\\n    }, {\\n      label: 1610402400000,\\n      value: 110\\n    }, {\\n      label: 1610488800000,\\n      value: 119\\n    }, {\\n      label: 1610575200000,\\n      value: 130\\n    }, {\\n      label: 1610661600000,\\n      value: 98\\n    }, {\\n      label: 1610748000000,\\n      value: 102\\n    }, {\\n      label: 1610834400000,\\n      value: 139\\n    }, {\\n      label: 1610920800000,\\n      value: 123\\n    }, {\\n      label: 1611007200000,\\n      value: 127\\n    }, {\\n      label: 1611093600000,\\n      value: 114\\n    }, {\\n      label: 1611180000000,\\n      value: 123\\n    }, {\\n      label: 1611266400000,\\n      value: 86\\n    }, {\\n      label: 1611352800000,\\n      value: 136\\n    }, {\\n      label: 1611439200000,\\n      value: 139\\n    }, {\\n      label: 1611525600000,\\n      value: 138\\n    }, {\\n      label: 1611612000000,\\n      value: 153\\n    }, {\\n      label: 1611698400000,\\n      value: 122\\n    }, {\\n      label: 1611784800000,\\n      value: 169\\n    }, {\\n      label: 1611871200000,\\n      value: 192\\n    }, {\\n      label: 1611957600000,\\n      value: 195\\n    }, {\\n      label: 1612044000000,\\n      value: 144\\n    }, {\\n      label: 1612130400000,\\n      value: 142\\n    }, {\\n      label: 1612216800000,\\n      value: 176\\n    }, {\\n      label: 1612303200000,\\n      value: 174\\n    }]\\n  };\\n  const lineChartOptions = {\\n    id: \\\"line-chart\\\",\\n    composeChart,\\n    responsiveContainer,\\n    cartesianGrid,\\n    xAxis,\\n    yAxis,\\n    tooltip,\\n    legend,\\n    brush,\\n    labels: labelsLineChart,\\n    series: [areaChart]\\n  };\\n  return <div style={{\\n    display: \\\"flex\\\"\\n  }}>\\n                <div style={{\\n      marginBottom: \\\"20px\\\",\\n      top: 25,\\n      width: \\\"1050px\\\",\\n      height: \\\"600px\\\"\\n    }}>\\n                    <Chart id={\\\"line-chart\\\"} composeChart={composeChart} responsiveContainer={responsiveContainer} cartesianGrid={cartesianGrid} xAxis={xAxis} yAxis={yAxis} tooltip={tooltip} legend={legend} brush={brush} labels={labelsLineChart} series={[lineChart, areaChart]} />\\n                </div>\\n                <div style={{\\n      width: \\\"500px\\\",\\n      height: \\\"600px\\\",\\n      overflow: \\\"auto\\\"\\n    }}>\\n                    <pre>{JSON.stringify(clearData(lineChartOptions), null, 2)}</pre>\\n                </div>\\n            </div>;\\n})'\n  }\n};\nexport const chartHistogram = () => React.createElement(() => {\n  const clearData = obj => {\n    const copy = JSON.parse(JSON.stringify(obj));\n    const labels = [\"label\", \"label\", \"...\"];\n    const series = copy.series.map(item => {\n      item.data = [{\n        label: \"label\",\n        value: \"value\"\n      }, \"...\"];\n      return item;\n    });\n    return {\n      ...obj,\n      labels,\n      series\n    };\n  };\n  const orientationVertical = {\n    bottom: \"bottom\",\n    top: \"top\"\n  };\n  const orientationHorizontal = {\n    left: \"left\",\n    right: \"right\"\n  };\n  const alignHorizontal = {\n    left: \"left\",\n    center: \"center\",\n    right: \"right\"\n  };\n  const alignVertical = {\n    bottom: \"bottom\",\n    middle: \"middle\",\n    top: \"top\"\n  };\n  const linesType = {\n    linear: \"linear\",\n    monotone: \"monotone\",\n    step: \"step\"\n  };\n  const animationType = {\n    ease: \"ease\",\n    \"ease-in\": \"ease-in\",\n    \"ease-out\": \"ease-out\",\n    \"ease-in-out\": \"ease-in-out\",\n    linear: \"linear\"\n  };\n  const iconTypes = {\n    circleLine: \"circleLine\",\n    filledCircle: \"filledCircle\",\n    strokeCircle: \"strokeCircle\",\n    circle: \"circle\"\n  };\n  const responsiveContainerId = \"responsiveContainer\";\n  const cartesianGridId = \"cartesianGrid\";\n  const composeChartId = \"composeChart\";\n  const xAxisId = \"xAxis\";\n  const yAxisId = \"yAxis\";\n  const barId = \"bar\";\n  const debounce = number(\"debounce\", 0, {}, responsiveContainerId);\n  const vertical = boolean(\"vertical\", false, cartesianGridId);\n  const horizontal = boolean(\"horizontal\", false, cartesianGridId);\n  const initMarginTop = number(\"initMargin.top\", 40, {}, composeChartId);\n  const initMarginBottom = number(\"initMargin.bottom\", 20, {}, composeChartId);\n  const marginLeft = number(\"initMargin.left\", 20, {}, composeChartId);\n  const marginRight = number(\"initMargin.right\", 50, {}, composeChartId);\n  const barCategoryGap = text(\"barCategoryGap\", \"10%\", composeChartId);\n  const barGap = number(\"barGap\", 4, {}, composeChartId);\n  const maxBarSize = number(\"maxBarSize\", 64, {}, composeChartId);\n  const xAxisHide = boolean(\"hide\", false, xAxisId);\n  const xAxisOrientation = select(\"orientation\", orientationVertical, \"bottom\", xAxisId);\n  const xAxisTickLine = boolean(\"tickLine\", false, xAxisId);\n  const xAxisTickSize = number(\"tickSize\", 6, {}, xAxisId);\n  const xAxisTickMargin = number(\"tickMargin\", 10, {}, xAxisId);\n  const xAxisMinTickGap = number(\"minTickGap\", 5, {}, xAxisId);\n  const xAxisLine = boolean(\"axisLine\", false, xAxisId);\n  const yAxisHide = boolean(\"hide\", true, yAxisId);\n  const barHide = boolean(\"hide\", false, barId);\n  const barHideLegend = boolean(\"hideLegend\", false, barId);\n  const barHideTooltip = boolean(\"hideTooltip\", false, barId);\n  const barZIndex = number(\"zIndex\", 10, {}, barId);\n  const barIcon = select(\"icon\", iconTypes, \"circle\", barId);\n  const barRadius = object(\"radius\", {\n    top: 10,\n    bottom: 10\n  }, barId);\n  const barFormatter = text(\"labelList.formatter\", \"\", barId);\n  const barLabelListOffset = number(\"labelList.offset\", 10, {}, barId);\n  const barFill = text(\"properties.fill\", \"var(--color-static-graphic-green-jungle)\", barId);\n  const barName = text(\"properties.name\", \"\\u043F\\u0440\\u0438\\u0445\\u043E\\u0434\", barId);\n  const responsiveContainer = {\n    debounce\n  };\n  const cartesianGrid = {\n    vertical,\n    horizontal\n  };\n  const composeChart = {\n    initMargin: {\n      top: initMarginTop,\n      bottom: initMarginBottom,\n      left: marginLeft,\n      right: marginRight\n    },\n    barGap,\n    maxBarSize,\n    barCategoryGap\n  };\n  const xAxis = {\n    hide: xAxisHide,\n    axisLine: xAxisLine,\n    type: \"category\",\n    allowDecimals: true,\n    allowDuplicatedCategory: true,\n    interval: \"preserveStartEnd\",\n    minTickGap: xAxisMinTickGap,\n    tickLine: xAxisTickLine,\n    tickSize: xAxisTickSize,\n    tickMargin: xAxisTickMargin,\n    dataKey: \"label\",\n    orientation: xAxisOrientation\n  };\n  const yAxis = {\n    hide: yAxisHide\n  };\n  const labelsBarChart = [\"Long label\", \"Label1\", \"Label2\", \"Label3\", \"Label4\", \"Label5\", \"Label6\", \"Label7\"];\n  const barChart = {\n    hide: barHideLegend,\n    hideLegend: barHideLegend,\n    hideTooltip: barHideTooltip,\n    zIndex: barZIndex,\n    chart: \"bar\",\n    icon: barIcon,\n    radius: barRadius || 0,\n    labelList: {\n      formatter: decimal => `${decimal}${barFormatter}`,\n      offset: barLabelListOffset\n    },\n    properties: {\n      name: barName,\n      dataKey: \"cm\",\n      formatter: decimal => `${decimal * 1000}`,\n      fill: barFill\n    },\n    data: [{\n      label: \"Long label\",\n      value: 5000\n    }, {\n      label: \"Label1\",\n      value: 650\n    }, {\n      label: \"Label2\",\n      value: 3522\n    }, {\n      label: \"Label3\",\n      value: 0\n    }, {\n      label: \"Label4\",\n      value: 2000\n    }, {\n      label: \"Label5\",\n      value: 1043\n    }, {\n      label: \"Label6\",\n      value: 600\n    }, {\n      label: \"Label7\",\n      value: 1\n    }]\n  };\n  const barChartOptions = {\n    id: \"bar-chart\",\n    composeChart,\n    responsiveContainer,\n    cartesianGrid,\n    xAxis,\n    yAxis,\n    labels: labelsBarChart,\n    series: [barChart]\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        top: 25,\n        width: \"1050px\",\n        height: \"600px\"\n      },\n      children: /*#__PURE__*/_jsx(Chart, {\n        id: \"bar-chart\",\n        composeChart: composeChart,\n        responsiveContainer: responsiveContainer,\n        cartesianGrid: cartesianGrid,\n        xAxis: xAxis,\n        yAxis: yAxis,\n        labels: labelsBarChart,\n        series: [barChart]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        width: \"500px\",\n        height: \"600px\",\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsx(\"pre\", {\n        children: JSON.stringify(clearData(barChartOptions), null, 2)\n      })\n    })]\n  });\n});\nchartHistogram.storyName = 'Chart.Histogram';\nchartHistogram.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const clearData = obj => {\\n    const copy = JSON.parse(JSON.stringify(obj));\\n    const labels = [\\\"label\\\", \\\"label\\\", \\\"...\\\"];\\n    const series = copy.series.map(item => {\\n      item.data = [{\\n        label: \\\"label\\\",\\n        value: \\\"value\\\"\\n      }, \\\"...\\\"];\\n      return item;\\n    });\\n    return {\\n      ...obj,\\n      labels,\\n      series\\n    };\\n  };\\n  const orientationVertical = {\\n    bottom: \\\"bottom\\\",\\n    top: \\\"top\\\"\\n  };\\n  const orientationHorizontal = {\\n    left: \\\"left\\\",\\n    right: \\\"right\\\"\\n  };\\n  const alignHorizontal = {\\n    left: \\\"left\\\",\\n    center: \\\"center\\\",\\n    right: \\\"right\\\"\\n  };\\n  const alignVertical = {\\n    bottom: \\\"bottom\\\",\\n    middle: \\\"middle\\\",\\n    top: \\\"top\\\"\\n  };\\n  const linesType = {\\n    linear: \\\"linear\\\",\\n    monotone: \\\"monotone\\\",\\n    step: \\\"step\\\"\\n  };\\n  const animationType = {\\n    ease: \\\"ease\\\",\\n    \\\"ease-in\\\": \\\"ease-in\\\",\\n    \\\"ease-out\\\": \\\"ease-out\\\",\\n    \\\"ease-in-out\\\": \\\"ease-in-out\\\",\\n    linear: \\\"linear\\\"\\n  };\\n  const iconTypes = {\\n    circleLine: \\\"circleLine\\\",\\n    filledCircle: \\\"filledCircle\\\",\\n    strokeCircle: \\\"strokeCircle\\\",\\n    circle: \\\"circle\\\"\\n  };\\n  const responsiveContainerId = \\\"responsiveContainer\\\";\\n  const cartesianGridId = \\\"cartesianGrid\\\";\\n  const composeChartId = \\\"composeChart\\\";\\n  const xAxisId = \\\"xAxis\\\";\\n  const yAxisId = \\\"yAxis\\\";\\n  const barId = \\\"bar\\\";\\n  const debounce = number(\\\"debounce\\\", 0, {}, responsiveContainerId);\\n  const vertical = boolean(\\\"vertical\\\", false, cartesianGridId);\\n  const horizontal = boolean(\\\"horizontal\\\", false, cartesianGridId);\\n  const initMarginTop = number(\\\"initMargin.top\\\", 40, {}, composeChartId);\\n  const initMarginBottom = number(\\\"initMargin.bottom\\\", 20, {}, composeChartId);\\n  const marginLeft = number(\\\"initMargin.left\\\", 20, {}, composeChartId);\\n  const marginRight = number(\\\"initMargin.right\\\", 50, {}, composeChartId);\\n  const barCategoryGap = text(\\\"barCategoryGap\\\", \\\"10%\\\", composeChartId);\\n  const barGap = number(\\\"barGap\\\", 4, {}, composeChartId);\\n  const maxBarSize = number(\\\"maxBarSize\\\", 64, {}, composeChartId);\\n  const xAxisHide = boolean(\\\"hide\\\", false, xAxisId);\\n  const xAxisOrientation = select(\\\"orientation\\\", orientationVertical, \\\"bottom\\\", xAxisId);\\n  const xAxisTickLine = boolean(\\\"tickLine\\\", false, xAxisId);\\n  const xAxisTickSize = number(\\\"tickSize\\\", 6, {}, xAxisId);\\n  const xAxisTickMargin = number(\\\"tickMargin\\\", 10, {}, xAxisId);\\n  const xAxisMinTickGap = number(\\\"minTickGap\\\", 5, {}, xAxisId);\\n  const xAxisLine = boolean(\\\"axisLine\\\", false, xAxisId);\\n  const yAxisHide = boolean(\\\"hide\\\", true, yAxisId);\\n  const barHide = boolean(\\\"hide\\\", false, barId);\\n  const barHideLegend = boolean(\\\"hideLegend\\\", false, barId);\\n  const barHideTooltip = boolean(\\\"hideTooltip\\\", false, barId);\\n  const barZIndex = number(\\\"zIndex\\\", 10, {}, barId);\\n  const barIcon = select(\\\"icon\\\", iconTypes, \\\"circle\\\", barId);\\n  const barRadius = object(\\\"radius\\\", {\\n    top: 10,\\n    bottom: 10\\n  }, barId);\\n  const barFormatter = text(\\\"labelList.formatter\\\", \\\"\\\", barId);\\n  const barLabelListOffset = number(\\\"labelList.offset\\\", 10, {}, barId);\\n  const barFill = text(\\\"properties.fill\\\", \\\"var(--color-static-graphic-green-jungle)\\\", barId);\\n  const barName = text(\\\"properties.name\\\", \\\"\\\\u043F\\\\u0440\\\\u0438\\\\u0445\\\\u043E\\\\u0434\\\", barId);\\n  const responsiveContainer = {\\n    debounce\\n  };\\n  const cartesianGrid = {\\n    vertical,\\n    horizontal\\n  };\\n  const composeChart = {\\n    initMargin: {\\n      top: initMarginTop,\\n      bottom: initMarginBottom,\\n      left: marginLeft,\\n      right: marginRight\\n    },\\n    barGap,\\n    maxBarSize,\\n    barCategoryGap\\n  };\\n  const xAxis = {\\n    hide: xAxisHide,\\n    axisLine: xAxisLine,\\n    type: \\\"category\\\",\\n    allowDecimals: true,\\n    allowDuplicatedCategory: true,\\n    interval: \\\"preserveStartEnd\\\",\\n    minTickGap: xAxisMinTickGap,\\n    tickLine: xAxisTickLine,\\n    tickSize: xAxisTickSize,\\n    tickMargin: xAxisTickMargin,\\n    dataKey: \\\"label\\\",\\n    orientation: xAxisOrientation\\n  };\\n  const yAxis = {\\n    hide: yAxisHide\\n  };\\n  const labelsBarChart = [\\\"Long label\\\", \\\"Label1\\\", \\\"Label2\\\", \\\"Label3\\\", \\\"Label4\\\", \\\"Label5\\\", \\\"Label6\\\", \\\"Label7\\\"];\\n  const barChart = {\\n    hide: barHideLegend,\\n    hideLegend: barHideLegend,\\n    hideTooltip: barHideTooltip,\\n    zIndex: barZIndex,\\n    chart: \\\"bar\\\",\\n    icon: barIcon,\\n    radius: barRadius || 0,\\n    labelList: {\\n      formatter: decimal => `${decimal}${barFormatter}`,\\n      offset: barLabelListOffset\\n    },\\n    properties: {\\n      name: barName,\\n      dataKey: \\\"cm\\\",\\n      formatter: decimal => `${decimal * 1000}`,\\n      fill: barFill\\n    },\\n    data: [{\\n      label: \\\"Long label\\\",\\n      value: 5000\\n    }, {\\n      label: \\\"Label1\\\",\\n      value: 650\\n    }, {\\n      label: \\\"Label2\\\",\\n      value: 3522\\n    }, {\\n      label: \\\"Label3\\\",\\n      value: 0\\n    }, {\\n      label: \\\"Label4\\\",\\n      value: 2000\\n    }, {\\n      label: \\\"Label5\\\",\\n      value: 1043\\n    }, {\\n      label: \\\"Label6\\\",\\n      value: 600\\n    }, {\\n      label: \\\"Label7\\\",\\n      value: 1\\n    }]\\n  };\\n  const barChartOptions = {\\n    id: \\\"bar-chart\\\",\\n    composeChart,\\n    responsiveContainer,\\n    cartesianGrid,\\n    xAxis,\\n    yAxis,\\n    labels: labelsBarChart,\\n    series: [barChart]\\n  };\\n  return <div style={{\\n    display: \\\"flex\\\"\\n  }}>\\n                <div style={{\\n      marginBottom: \\\"20px\\\",\\n      top: 25,\\n      width: \\\"1050px\\\",\\n      height: \\\"600px\\\"\\n    }}>\\n                    <Chart id=\\\"bar-chart\\\" composeChart={composeChart} responsiveContainer={responsiveContainer} cartesianGrid={cartesianGrid} xAxis={xAxis} yAxis={yAxis} labels={labelsBarChart} series={[barChart]} />\\n                </div>\\n                <div style={{\\n      width: \\\"500px\\\",\\n      height: \\\"600px\\\",\\n      overflow: \\\"auto\\\"\\n    }}>\\n                    <pre>{JSON.stringify(clearData(barChartOptions), null, 2)}</pre>\\n                </div>\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Chart',\n  id: 'Chart',\n  tags: ['stories-mdx'],\n  includeStories: [\"chartBar\", \"chartLine\", \"chartHistogram\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","h2","ul","li","pre","id","className","MDXContent","wrapper","MDXLayout","div","title","name","iconTypes","circleLine","filledCircle","strokeCircle","circle","debounce","number","vertical","boolean","horizontal","strokeDasharray","stroke","text","fill","initMarginTop","initMarginBottom","marginLeft","marginRight","barCategoryGap","barGap","maxBarSize","xAxisHide","xAxisOrientation","select","bottom","top","xAxisAngle","xAxisTickLine","xAxisTickSize","xAxisMirror","xAxisReversed","xAxisTickMargin","xAxisMinTickGap","xAxisLine","yAxisHide","yAxisOrientation","left","right","yAxisAngle","yAxisTickLine","yAxisTickSize","yAxisMirror","yAxisReversed","yAxisTickCoiunt","yAxisTickMargin","yAxisMinTickGap","yAxisLine","yAxisLabel","legendAlign","center","legendVerticalAlign","middle","legendMarginTop","legendIconHeight","tooltipArrow","tooltipIsAnimationActive","tooltipSeparator","tooltipOffset","cursorStroke","cursorStrokeWidth","tooltipFilterNull","tooltipAnimationBegin","tooltipAnimationDuration","tooltipAnimationEasing","ease","linear","travellerWidth","brushHeight","brushStartIndex","min","max","brushEndIndex","brushStroke","brushMargin","brushHeightAlwaysShowText","lineHide","lineHideLegend","lineHideTooltip","lineZIndex","lineIcon","lineName","lineStroke","lineDot","lineScale","lineInitScale","lineWidth","lineType","monotone","step","lineInheritStroke","lineStrokeWidth","lineStrokeDasharray","barHideLegendFirst","barHideTooltipFirst","barZIndexFirst","barIconFirst","barFillFirst","barNameFirst","barHideLegendSecond","barHideTooltipSecond","barZIndexSecond","barIconSecond","barFillSecond","responsiveContainer","cartesianGrid","composeChart","initMargin","xAxis","hide","axisLine","type","allowDecimals","allowDuplicatedCategory","angle","tickCount","interval","minTickGap","tickLine","tickSize","mirror","reversed","tickMargin","dataKey","orientation","yAxis","tickFormatter","decimal","legend","verticalAlign","align","marginTop","iconHeight","tooltip","separator","offset","filterNull","cursor","strokeWidth","isAnimationActive","animationBegin","animationDuration","animationEasing","arrow","brush","startIndex","endIndex","height","alwaysShowText","labelsBarChart","barChartFirst","hideLegend","hideTooltip","zIndex","chart","icon","properties","formatter","data","label","barChartSecond","lineChart","dot","dotSettings","scale","initScale","width","inheritStroke","barChartOptions","labels","series","style","display","marginBottom","Chart","overflow","JSON","stringify","obj","parse","map","item","clearData","formatXAxis","time","format","linesType","xAxisId","yAxisId","lineId","areaId","barSize","areaHide","areaHideLegend","areaHideTooltip","areaZIndex","areaIcon","areaOffset","areaColor_1","areaColorOpacity_1","areaColor_2","areaColorOpacity_2","areaName","areaType","areaStroke","areaScale","areaInitScale","areaWidth","areaStrokeWidth","areaDot","tickType","labelFormatter","labelsLineChart","areaChart","gradient","gid","points","stopColor","stopOpacity","lineChartOptions","barHideLegend","barHideTooltip","barZIndex","barIcon","barRadius","object","barFormatter","barLabelListOffset","barFill","barChart","radius","labelList","version","package","description","changelog","of","chartBar","storyName","parameters","storySource","source","chartLine","chartHistogram","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","live","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","Space","direction","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","_ref$height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo"],"sourceRoot":""}