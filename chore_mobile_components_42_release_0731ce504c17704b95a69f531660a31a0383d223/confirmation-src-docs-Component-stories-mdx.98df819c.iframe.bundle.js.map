{"version":3,"file":"confirmation-src-docs-Component-stories-mdx.98df819c.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/confirmation/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/confirmation/src/vars.css?9485","webpack://@alfalab/core-components/./packages/confirmation/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/confirmation/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/screenshot-utils/screenshots-story/utils.ts","webpack://@alfalab/core-components/./node_modules/querystring/decode.js","webpack://@alfalab/core-components/./node_modules/querystring/encode.js","webpack://@alfalab/core-components/./node_modules/querystring/index.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"примеры\",\n      children: \"Примеры\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Корректный код: любой введеный код будет корректным.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Некорректный код: любой введеный код будет некорректным.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Закончились попытки ввода кода: после ввода кода пользователю будет сообщено, что у него закончились попытки.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Закончились попытки запроса кода: после запроса следующего кода запрос нового будет заблокирован.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Временная блокировка формы: после ввода кода форма будет заблокирована на 24 часа.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const isMobileFrame = document.body.clientWidth < 450;\\n    const variants = [\\n        { key: 'success', content: 'Корректный код' },\\n        { key: 'error', content: 'Некорректный код' },\\n        { key: 'fatal', content: 'Закончились попытки ввода кода' },\\n        { key: 'sms-requests-ended', content: 'Закончились попытки запроса кода' },\\n        { key: 'temp-block', content: 'Сценарий, когда форма временно заблокирована' },\\n    ];\\n\\n    const [variant, setVariant] = React.useState(variants[0]);\\n    const [shownSuccessScreen, setShownSuccessScreen] = React.useState(false);\\n\\n    const {\\n        confirmationState,\\n        confirmationScreen,\\n        confirmationBlockSmsRetry,\\n        setConfirmationState,\\n        setConfirmationScreen,\\n        setConfirmationBlockSmsRetry,\\n    } = useConfirmation();\\n\\n    const handleInputFinished = () => {\\n        setTimeout(() => {\\n            switch (variant.key) {\\n                case 'success':\\n                    setShownSuccessScreen(true);\\n                    setConfirmationState('INITIAL');\\n                    break;\\n                case 'error':\\n                    setConfirmationState('CODE_ERROR');\\n                    break;\\n                case 'fatal':\\n                    setConfirmationScreen('FATAL_ERROR');\\n                    break;\\n                case 'sms-requests-ended':\\n                    setConfirmationState('CODE_ERROR');\\n                    break;\\n                case 'temp-block':\\n                    setConfirmationScreen('TEMP_BLOCK');\\n                    break;\\n                default:\\n                    break;\\n            }\\n        }, 1000);\\n    };\\n\\n    const handleSmsRetryClick = () => {\\n        setTimeout(() => {\\n            if (variant.key === 'sms-requests-ended') {\\n                setConfirmationBlockSmsRetry(true);\\n            }\\n            setConfirmationState('INITIAL');\\n        }, 1000);\\n    };\\n\\n    const handleTempBlockFinished = () => {\\n        setConfirmationScreen('INITIAL');\\n        setConfirmationState('CODE_SENDING');\\n    };\\n\\n    const Component = isMobileFrame ? ConfirmationMobile : Confirmation;\\n\\n    return (\\n        <div style={{ margin: '0 auto', width: isMobileFrame ? '100%' : 388 }}>\\n            <SelectDesktop\\n                block={true}\\n                options={variants}\\n                onChange={({ selected }) => {\\n                    setShownSuccessScreen(false);\\n                    setConfirmationState('INITIAL');\\n                    setConfirmationScreen('INITIAL');\\n                    setConfirmationBlockSmsRetry(false);\\n                    setVariant(selected);\\n                }}\\n                selected={variant.key}\\n                Option={BaseOption}\\n                optionsListWidth='field'\\n            />\\n            <div\\n                key={variant.key}\\n                style={{\\n                    margin: '16px 0 0',\\n                    padding: '16px',\\n                    boxShadow: '0 0 0 1px #eeeff1',\\n                    boxSizing: 'border-box',\\n                }}\\n            >\\n                {shownSuccessScreen ? (\\n                    <div style={{ display: 'flex', flexFlow: 'column nowrap', height: 266 }}>\\n                        <Gap size='2xl' />\\n                        <div\\n                            style={{\\n                                display: 'flex',\\n                                flexFlow: 'column nowrap',\\n                                alignItems: 'center',\\n                                flex: 1,\\n                            }}\\n                        >\\n                            <div style={{ textAlign: 'center' }}>\\n                                <SuperEllipse\\n                                    size={80}\\n                                    backgroundColor='var(--color-light-graphic-positive)'\\n                                >\\n                                    <CheckmarkMIcon style={{ fill: '#fff' }} />\\n                                </SuperEllipse>\\n\\n                                <Gap size='m' />\\n\\n                                <Typography.Text view='primary-medium' weight='bold'>\\n                                    Введён корректный код\\n                                </Typography.Text>\\n                            </div>\\n\\n                            <Gap size={isMobileFrame ? '2xl' : '4xl'} />\\n\\n                            <Button onClick={() => setShownSuccessScreen(false)} size='xs'>\\n                                Попробовать ещё раз\\n                            </Button>\\n                        </div>\\n                    </div>\\n                ) : (\\n                    <Component\\n                        screen={confirmationScreen}\\n                        state={confirmationState}\\n                        alignContent='center'\\n                        blockSmsRetry={confirmationBlockSmsRetry}\\n                        countdownDuration={10000}\\n                        onChangeState={setConfirmationState}\\n                        onChangeScreen={setConfirmationScreen}\\n                        onInputFinished={handleInputFinished}\\n                        onSmsRetryClick={handleSmsRetryClick}\\n                        onTempBlockFinished={handleTempBlockFinished}\\n                        phone='+7 ··· ··· 07-24'\\n                    />\\n                )}\\n            </div>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"использование-компонента\",\n      children: \"Использование компонента\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Компонент встраивается в необходимый контекст, например в модальное окно или сайд-панель.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    /* desktop */\\n    --confirmation-header-desktop-font-size: 22px;\\n    --confirmation-header-desktop-line-height: 26px;\\n    --confirmation-header-desktop-font-weight: bold;\\n    --confirmation-header-desktop-font-family: var(--font-family-system);\\n\\n    /* mobile */\\n    --confirmation-header-mobile-font-size: 18px;\\n    --confirmation-header-mobile-line-height: 22px;\\n    --confirmation-header-mobile-font-weight: bold;\\n    --confirmation-header-mobile-font-family: var(--font-family-system);\\n\\n    /* text */\\n    --confirmation-text-font-size: 16px;\\n    --confirmation-text-line-height: 24px;\\n    --confirmation-text-font-weight: 400;\\n    --confirmation-text-font-family: var(--font-family-system);\\n    --confirmation-text-color: var(--color-light-text-primary);\\n\\n    /* header */\\n    --confirmation-header-font-feature-settings: normal;\\n\\n    @define-mixin _confirmation-text {\\n        font-size: var(--confirmation-text-font-size);\\n        line-height: var(--confirmation-text-line-height);\\n        font-weight: var(--confirmation-text-font-weight);\\n        font-family: var(--confirmation-text-font-family);\\n        color: var(--confirmation-text-color);\\n    }\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {ConfirmationMobile} from '../component.mobile';\nimport {ConfirmationDesktop} from '../component.desktop';\nimport {ConfirmationResponsive} from '../component.responsive';\nimport vars from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Confirmation } from '@alfalab/core-components/confirmation';\\nimport { ConfirmationDesktop } from '@alfalab/core-components/confirmation/desktop';\\nimport { ConfirmationMobile } from '@alfalab/core-components/confirmation/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"как-пользоваться\",\n      children: \"Как пользоваться\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Компонент содержит в себе несколько экранов и может быть в нескольких состояниях:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-typescript\",\n        children: \"export type ConfirmationScreen =\\n    | 'INITIAL' // начальный экран\\n    | 'HINT' // экран \\\"Не приходит смс?\\\"\\n    | 'FATAL_ERROR' // экран критической ошибки\\n    | 'TEMP_BLOCK'; // экран временной блокировки\\n\\nexport type ConfirmationState =\\n    | 'INITIAL' // начальное состояние\\n    | 'CODE_CHECKING' // проверка кода\\n    | 'CODE_SENDING' // повторная отправка кода\\n    | 'CODE_ERROR'; // ошибка, когда ввели неверный код\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Для управления экранами и состояниями можно воспользоваться хуком:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Confirmation, useConfirmation } from '@alfalab/core-components/confirmation';\\n\\nconst Example = () => {\\n    const { confirmationState, confirmationScreen, setConfirmationState, setConfirmationScreen } =\\n        useConfirmation();\\n\\n    const handleInputFinished = async (code) => {\\n        const res = await checkCode(code);\\n\\n        if (!res.ok) {\\n            setConfirmationState('CODE_ERROR');\\n        }\\n    };\\n\\n    const handleSmsRetryClick = () => {\\n        resendCode();\\n\\n        setConfirmationState('INITIAL');\\n    };\\n\\n    return (\\n        <ConfirmationDesktop\\n            screen={confirmationScreen}\\n            state={confirmationState}\\n            onChangeState={setConfirmationState}\\n            onChangeScreen={setConfirmationScreen}\\n            onInputFinished={handleInputFinished}\\n            onSmsRetryClick={handleSmsRetryClick}\\n        />\\n    );\\n};\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"На каждом экране можно кастомизировать тексты. Для этого есть специальное свойство \", _jsx(_components.code, {\n        children: \"texts\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-typescript\",\n        children: \"export type ConfirmationTexts = {\\n    /**\\n     * Экран INITIAL\\n     */\\n    title?: ReactNode; // заголовок\\n    codeError?: string; // ошибка проверки кода\\n    codeChecking?: string; // код проверяется\\n    codeSending?: string; // код отправляется\\n    codeSended?: string; // код отправлен\\n    buttonRetry?: string; // кнопка повторной отправки кода\\n    linkToHint?: string; // ссылка на экран HINT\\n    noAttemptsLeft?: string; // не осталось попыток запроса кода\\n    countdown?: string; // 'запросить повторно можно через'\\n\\n    /**\\n     * Экран HINT\\n     */\\n    hintButton?: string; // кнопка 'Вернуться'\\n\\n    /**\\n     * Экран FATAL_ERROR\\n     */\\n    fatalErrorTitle?: ReactNode; // заголовок\\n    fatalErrorDescription?: ReactNode; // описание\\n    fatalErrorButton?: string; // кнопка\\n\\n    /**\\n     * Экран TEMP_BLOCK\\n     */\\n    tempBlockTitle?: ReactNode; // заголовок\\n    tempBlockDescription?: ReactNode; // описание\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Также есть возможность добавить кастомные экраны:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const Example = () => {\\n    const { confirmationState, confirmationScreen, setConfirmationState, setConfirmationScreen } =\\n        useConfirmation();\\n\\n    return (\\n        <Confirmation\\n            screen={confirmationScreen}\\n            state={confirmationState}\\n            onChangeState={setConfirmationState}\\n            onChangeScreen={setConfirmationScreen}\\n            getScreensMap={(screensMap) => ({\\n                ...screensMap,\\n                HINT: () => <>Custom hint screen</>,\\n                CUSTOM_SCREEN: () => <>Custom screen</>,\\n            })}\\n        />\\n    );\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        ConfirmationDesktop,\n        ConfirmationMobile,\n        ConfirmationResponsive\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: vars\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { select, number, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { SelectDesktop } from '@alfalab/core-components-select/desktop';\nimport { useConfirmation } from '@alfalab/core-components-confirmation';\nimport { ConfirmationMobile } from '@alfalab/core-components-confirmation/mobile';\nimport { ConfirmationDesktop } from '@alfalab/core-components-confirmation/desktop';\nimport { Confirmation } from '@alfalab/core-components-confirmation';\nimport packageJson from '../../package.json';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport { stylesStringToObj, getQueryParam } from '../../../screenshot-utils/screenshots-story/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Confirmation\",\n      id: \"Confirmation\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Confirmation\",\n      children: React.createElement(() => {\n        const component = select('ConfirmationComponent', ['ConfirmationResponsive', 'ConfirmationDesktop', 'ConfirmationMobile'], 'ConfirmationResponsive');\n        const variants = [{\n          key: 'success',\n          content: 'Успешный сценарий'\n        }, {\n          key: 'error',\n          content: 'Сценарий с ошибкой'\n        }, {\n          key: 'fatal',\n          content: 'Сценарий с критичной ошибкой'\n        }, {\n          key: 'attempts-left',\n          content: 'Сценарий, когда кончились попытки запроса смс'\n        }, {\n          key: 'temp-block',\n          content: 'Сценарий, когда форма временно заблокирована'\n        }];\n        const [variant, setVariant] = React.useState({\n          key: 'success',\n          content: 'Успешный сценарий'\n        });\n        const {\n          confirmationState,\n          confirmationScreen,\n          confirmationBlockSmsRetry,\n          setConfirmationState,\n          setConfirmationScreen,\n          setConfirmationBlockSmsRetry\n        } = useConfirmation();\n        const handleInputFinished = () => {\n          setTimeout(() => {\n            switch (variant.key) {\n              case 'success':\n                setConfirmationState('INITIAL');\n                break;\n              case 'error':\n                setConfirmationState('CODE_ERROR');\n                break;\n              case 'fatal':\n                setConfirmationScreen('FATAL_ERROR');\n                break;\n              case 'attempts-left':\n                setConfirmationState('CODE_ERROR');\n                break;\n              case 'temp-block':\n                setConfirmationScreen('TEMP_BLOCK');\n                break;\n              default:\n                break;\n            }\n          }, 1000);\n        };\n        const handleSmsRetryClick = () => {\n          setTimeout(() => {\n            if (variant.key === 'attempts-left') {\n              setConfirmationBlockSmsRetry(true);\n            }\n            setConfirmationState('INITIAL');\n          }, 1000);\n        };\n        const handleTempBlockFinished = () => {\n          setConfirmationScreen('INITIAL');\n          setConfirmationState('CODE_SENDING');\n        };\n        const ConfirmationComponent = React.useMemo(() => {\n          return {\n            ConfirmationResponsive: Confirmation,\n            ConfirmationDesktop,\n            ConfirmationMobile\n          }[component];\n        }, [component]);\n        const previewStyles = stylesStringToObj(getQueryParam('wrapperStyles'));\n        const isPreview = Object.keys(previewStyles).length > 0;\n        return /*#__PURE__*/_jsxs(_components.div, {\n          style: previewStyles,\n          children: [!isPreview && /*#__PURE__*/_jsx(SelectDesktop, {\n            options: variants,\n            onChange: ({\n              selected\n            }) => {\n              setConfirmationState('INITIAL');\n              setConfirmationScreen('INITIAL');\n              setConfirmationBlockSmsRetry(false);\n              setVariant(selected);\n            },\n            selected: variant.key\n          }), /*#__PURE__*/_jsx(_components.div, {\n            style: {\n              boxSizing: 'border-box',\n              borderRadius: 12,\n              width: 500,\n              height: 380,\n              paddingTop: 48,\n              ...(isPreview ? {\n                background: 'var(--color-light-bg-primary)'\n              } : null)\n            },\n            children: /*#__PURE__*/_jsx(ConfirmationComponent, {\n              hideCountdownSection: boolean('hideCountdownSection', false),\n              screen: confirmationScreen,\n              state: confirmationState,\n              alignContent: select('alignContent', ['left', 'center'], 'center'),\n              blockSmsRetry: confirmationBlockSmsRetry,\n              countdownDuration: 10000,\n              requiredCharAmount: number('requiredCharAmount', 5),\n              onChangeState: setConfirmationState,\n              onChangeScreen: setConfirmationScreen,\n              onInputFinished: handleInputFinished,\n              onSmsRetryClick: handleSmsRetryClick,\n              onTempBlockFinished: handleTempBlockFinished,\n              phone: '+7 ··· ··· 07-24'\n            })\n          }, variant.key)]\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Confirmation\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/confirmation\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=8514%3A52278\",\n      children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F \\u0434\\u043B\\u044F \\u0432\\u0432\\u043E\\u0434\\u0430 \\u043A\\u043E\\u0434\\u0430 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const confirmation = () => React.createElement(() => {\n  const component = select(\"ConfirmationComponent\", [\"ConfirmationResponsive\", \"ConfirmationDesktop\", \"ConfirmationMobile\"], \"ConfirmationResponsive\");\n  const variants = [{\n    key: \"success\",\n    content: \"\\u0423\\u0441\\u043F\\u0435\\u0448\\u043D\\u044B\\u0439 \\u0441\\u0446\\u0435\\u043D\\u0430\\u0440\\u0438\\u0439\"\n  }, {\n    key: \"error\",\n    content: \"\\u0421\\u0446\\u0435\\u043D\\u0430\\u0440\\u0438\\u0439 \\u0441 \\u043E\\u0448\\u0438\\u0431\\u043A\\u043E\\u0439\"\n  }, {\n    key: \"fatal\",\n    content: \"\\u0421\\u0446\\u0435\\u043D\\u0430\\u0440\\u0438\\u0439 \\u0441 \\u043A\\u0440\\u0438\\u0442\\u0438\\u0447\\u043D\\u043E\\u0439 \\u043E\\u0448\\u0438\\u0431\\u043A\\u043E\\u0439\"\n  }, {\n    key: \"attempts-left\",\n    content: \"\\u0421\\u0446\\u0435\\u043D\\u0430\\u0440\\u0438\\u0439, \\u043A\\u043E\\u0433\\u0434\\u0430 \\u043A\\u043E\\u043D\\u0447\\u0438\\u043B\\u0438\\u0441\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0438 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0430 \\u0441\\u043C\\u0441\"\n  }, {\n    key: \"temp-block\",\n    content: \"\\u0421\\u0446\\u0435\\u043D\\u0430\\u0440\\u0438\\u0439, \\u043A\\u043E\\u0433\\u0434\\u0430 \\u0444\\u043E\\u0440\\u043C\\u0430 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E \\u0437\\u0430\\u0431\\u043B\\u043E\\u043A\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\"\n  }];\n  const [variant, setVariant] = React.useState({\n    key: \"success\",\n    content: \"\\u0423\\u0441\\u043F\\u0435\\u0448\\u043D\\u044B\\u0439 \\u0441\\u0446\\u0435\\u043D\\u0430\\u0440\\u0438\\u0439\"\n  });\n  const {\n    confirmationState,\n    confirmationScreen,\n    confirmationBlockSmsRetry,\n    setConfirmationState,\n    setConfirmationScreen,\n    setConfirmationBlockSmsRetry\n  } = useConfirmation();\n  const handleInputFinished = () => {\n    setTimeout(() => {\n      switch (variant.key) {\n        case \"success\":\n          setConfirmationState(\"INITIAL\");\n          break;\n        case \"error\":\n          setConfirmationState(\"CODE_ERROR\");\n          break;\n        case \"fatal\":\n          setConfirmationScreen(\"FATAL_ERROR\");\n          break;\n        case \"attempts-left\":\n          setConfirmationState(\"CODE_ERROR\");\n          break;\n        case \"temp-block\":\n          setConfirmationScreen(\"TEMP_BLOCK\");\n          break;\n        default:\n          break;\n      }\n    }, 1000);\n  };\n  const handleSmsRetryClick = () => {\n    setTimeout(() => {\n      if (variant.key === \"attempts-left\") {\n        setConfirmationBlockSmsRetry(true);\n      }\n      setConfirmationState(\"INITIAL\");\n    }, 1000);\n  };\n  const handleTempBlockFinished = () => {\n    setConfirmationScreen(\"INITIAL\");\n    setConfirmationState(\"CODE_SENDING\");\n  };\n  const ConfirmationComponent = React.useMemo(() => {\n    return {\n      ConfirmationResponsive: Confirmation,\n      ConfirmationDesktop,\n      ConfirmationMobile\n    }[component];\n  }, [component]);\n  const previewStyles = stylesStringToObj(getQueryParam(\"wrapperStyles\"));\n  const isPreview = Object.keys(previewStyles).length > 0;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: previewStyles,\n    children: [!isPreview && /*#__PURE__*/_jsx(SelectDesktop, {\n      options: variants,\n      onChange: ({\n        selected\n      }) => {\n        setConfirmationState(\"INITIAL\");\n        setConfirmationScreen(\"INITIAL\");\n        setConfirmationBlockSmsRetry(false);\n        setVariant(selected);\n      },\n      selected: variant.key\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        boxSizing: \"border-box\",\n        borderRadius: 12,\n        width: 500,\n        height: 380,\n        paddingTop: 48,\n        ...(isPreview ? {\n          background: \"var(--color-light-bg-primary)\"\n        } : null)\n      },\n      children: /*#__PURE__*/_jsx(ConfirmationComponent, {\n        hideCountdownSection: boolean(\"hideCountdownSection\", false),\n        screen: confirmationScreen,\n        state: confirmationState,\n        alignContent: select(\"alignContent\", [\"left\", \"center\"], \"center\"),\n        blockSmsRetry: confirmationBlockSmsRetry,\n        countdownDuration: 10000,\n        requiredCharAmount: number(\"requiredCharAmount\", 5),\n        onChangeState: setConfirmationState,\n        onChangeScreen: setConfirmationScreen,\n        onInputFinished: handleInputFinished,\n        onSmsRetryClick: handleSmsRetryClick,\n        onTempBlockFinished: handleTempBlockFinished,\n        phone: \"+7 \\xB7\\xB7\\xB7 \\xB7\\xB7\\xB7 07-24\"\n      })\n    }, variant.key)]\n  });\n});\nconfirmation.storyName = 'Confirmation';\nconfirmation.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const component = select(\\\"ConfirmationComponent\\\", [\\\"ConfirmationResponsive\\\", \\\"ConfirmationDesktop\\\", \\\"ConfirmationMobile\\\"], \\\"ConfirmationResponsive\\\");\\n  const variants = [{\\n    key: \\\"success\\\",\\n    content: \\\"\\\\u0423\\\\u0441\\\\u043F\\\\u0435\\\\u0448\\\\u043D\\\\u044B\\\\u0439 \\\\u0441\\\\u0446\\\\u0435\\\\u043D\\\\u0430\\\\u0440\\\\u0438\\\\u0439\\\"\\n  }, {\\n    key: \\\"error\\\",\\n    content: \\\"\\\\u0421\\\\u0446\\\\u0435\\\\u043D\\\\u0430\\\\u0440\\\\u0438\\\\u0439 \\\\u0441 \\\\u043E\\\\u0448\\\\u0438\\\\u0431\\\\u043A\\\\u043E\\\\u0439\\\"\\n  }, {\\n    key: \\\"fatal\\\",\\n    content: \\\"\\\\u0421\\\\u0446\\\\u0435\\\\u043D\\\\u0430\\\\u0440\\\\u0438\\\\u0439 \\\\u0441 \\\\u043A\\\\u0440\\\\u0438\\\\u0442\\\\u0438\\\\u0447\\\\u043D\\\\u043E\\\\u0439 \\\\u043E\\\\u0448\\\\u0438\\\\u0431\\\\u043A\\\\u043E\\\\u0439\\\"\\n  }, {\\n    key: \\\"attempts-left\\\",\\n    content: \\\"\\\\u0421\\\\u0446\\\\u0435\\\\u043D\\\\u0430\\\\u0440\\\\u0438\\\\u0439, \\\\u043A\\\\u043E\\\\u0433\\\\u0434\\\\u0430 \\\\u043A\\\\u043E\\\\u043D\\\\u0447\\\\u0438\\\\u043B\\\\u0438\\\\u0441\\\\u044C \\\\u043F\\\\u043E\\\\u043F\\\\u044B\\\\u0442\\\\u043A\\\\u0438 \\\\u0437\\\\u0430\\\\u043F\\\\u0440\\\\u043E\\\\u0441\\\\u0430 \\\\u0441\\\\u043C\\\\u0441\\\"\\n  }, {\\n    key: \\\"temp-block\\\",\\n    content: \\\"\\\\u0421\\\\u0446\\\\u0435\\\\u043D\\\\u0430\\\\u0440\\\\u0438\\\\u0439, \\\\u043A\\\\u043E\\\\u0433\\\\u0434\\\\u0430 \\\\u0444\\\\u043E\\\\u0440\\\\u043C\\\\u0430 \\\\u0432\\\\u0440\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u043D\\\\u043E \\\\u0437\\\\u0430\\\\u0431\\\\u043B\\\\u043E\\\\u043A\\\\u0438\\\\u0440\\\\u043E\\\\u0432\\\\u0430\\\\u043D\\\\u0430\\\"\\n  }];\\n  const [variant, setVariant] = React.useState({\\n    key: \\\"success\\\",\\n    content: \\\"\\\\u0423\\\\u0441\\\\u043F\\\\u0435\\\\u0448\\\\u043D\\\\u044B\\\\u0439 \\\\u0441\\\\u0446\\\\u0435\\\\u043D\\\\u0430\\\\u0440\\\\u0438\\\\u0439\\\"\\n  });\\n  const {\\n    confirmationState,\\n    confirmationScreen,\\n    confirmationBlockSmsRetry,\\n    setConfirmationState,\\n    setConfirmationScreen,\\n    setConfirmationBlockSmsRetry\\n  } = useConfirmation();\\n  const handleInputFinished = () => {\\n    setTimeout(() => {\\n      switch (variant.key) {\\n        case \\\"success\\\":\\n          setConfirmationState(\\\"INITIAL\\\");\\n          break;\\n        case \\\"error\\\":\\n          setConfirmationState(\\\"CODE_ERROR\\\");\\n          break;\\n        case \\\"fatal\\\":\\n          setConfirmationScreen(\\\"FATAL_ERROR\\\");\\n          break;\\n        case \\\"attempts-left\\\":\\n          setConfirmationState(\\\"CODE_ERROR\\\");\\n          break;\\n        case \\\"temp-block\\\":\\n          setConfirmationScreen(\\\"TEMP_BLOCK\\\");\\n          break;\\n        default:\\n          break;\\n      }\\n    }, 1000);\\n  };\\n  const handleSmsRetryClick = () => {\\n    setTimeout(() => {\\n      if (variant.key === \\\"attempts-left\\\") {\\n        setConfirmationBlockSmsRetry(true);\\n      }\\n      setConfirmationState(\\\"INITIAL\\\");\\n    }, 1000);\\n  };\\n  const handleTempBlockFinished = () => {\\n    setConfirmationScreen(\\\"INITIAL\\\");\\n    setConfirmationState(\\\"CODE_SENDING\\\");\\n  };\\n  const ConfirmationComponent = React.useMemo(() => {\\n    return {\\n      ConfirmationResponsive: Confirmation,\\n      ConfirmationDesktop,\\n      ConfirmationMobile\\n    }[component];\\n  }, [component]);\\n  const previewStyles = stylesStringToObj(getQueryParam(\\\"wrapperStyles\\\"));\\n  const isPreview = Object.keys(previewStyles).length > 0;\\n  return <div style={previewStyles}>\\n                {!isPreview && <SelectDesktop options={variants} onChange={({\\n      selected\\n    }) => {\\n      setConfirmationState(\\\"INITIAL\\\");\\n      setConfirmationScreen(\\\"INITIAL\\\");\\n      setConfirmationBlockSmsRetry(false);\\n      setVariant(selected);\\n    }} selected={variant.key} />}\\n                <div key={variant.key} style={{\\n      boxSizing: \\\"border-box\\\",\\n      borderRadius: 12,\\n      width: 500,\\n      height: 380,\\n      paddingTop: 48,\\n      ...(isPreview ? {\\n        background: \\\"var(--color-light-bg-primary)\\\"\\n      } : null)\\n    }}>\\n                    <ConfirmationComponent hideCountdownSection={boolean(\\\"hideCountdownSection\\\", false)} screen={confirmationScreen} state={confirmationState} alignContent={select(\\\"alignContent\\\", [\\\"left\\\", \\\"center\\\"], \\\"center\\\")} blockSmsRetry={confirmationBlockSmsRetry} countdownDuration={10000} requiredCharAmount={number(\\\"requiredCharAmount\\\", 5)} onChangeState={setConfirmationState} onChangeScreen={setConfirmationScreen} onInputFinished={handleInputFinished} onSmsRetryClick={handleSmsRetryClick} onTempBlockFinished={handleTempBlockFinished} phone={\\\"+7 \\\\xB7\\\\xB7\\\\xB7 \\\\xB7\\\\xB7\\\\xB7 07-24\\\"} />\\n                </div>\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Confirmation',\n  id: 'Confirmation',\n  tags: ['stories-mdx'],\n  includeStories: [\"confirmation\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import qs from 'querystring';\n\nimport { CSSProperties } from 'react';\n\nexport const queryParams = qs.parse(document.location.search);\n\nexport const getQueryParam = (param: string, parse = false) => {\n    const value = queryParams[param] as string;\n\n    return parse ? parseValue(value) : value;\n};\n\nexport const parseKnobs = () =>\n    Object.entries(queryParams).reduce((acc, [k, v]) => {\n        if (k.startsWith('knob-')) {\n            acc[k.replace('knob-', '')] = parseValue(v as string);\n        }\n\n        return acc;\n        // eslint-disable-next-line\n    }, {} as Record<string, any>);\n\nexport function parseValue(value: string) {\n    const isBoolean = () => ['true', 'false'].includes(value);\n    const isNumeric = () => !Number.isNaN(+value) && !Number.isNaN(parseFloat(value));\n\n    if (!value) return undefined;\n\n    if (isBoolean()) return value === 'true';\n\n    if (isNumeric()) return parseFloat(value);\n\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n}\n\nexport function stylesStringToObj(str = ''): CSSProperties {\n    if (!str) return {};\n\n    const properties = str.split(';').map((v) => v.trim());\n    const obj: Record<string, unknown> = {};\n\n    properties.forEach((property) => {\n        const [name, val] = property.split(':').map((v) => v.trim());\n\n        obj[name] = val;\n    });\n\n    return obj as CSSProperties;\n}\n\nexport function isJsonObj(str: unknown) {\n    try {\n        const ret = JSON.parse(str as string);\n\n        return typeof ret === 'object';\n    } catch (e) {\n        return false;\n    }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","ol","li","pre","p","id","live","className","MDXContent","wrapper","MDXLayout","ConfirmationDesktop","ConfirmationMobile","ConfirmationResponsive","css","vars","div","title","name","component","select","variant","setVariant","content","confirmationState","confirmationScreen","confirmationBlockSmsRetry","setConfirmationState","setConfirmationScreen","setConfirmationBlockSmsRetry","useConfirmation","ConfirmationComponent","Confirmation","previewStyles","isPreview","keys","length","style","SelectDesktop","options","onChange","selected","boxSizing","borderRadius","width","height","paddingTop","background","hideCountdownSection","boolean","screen","alignContent","blockSmsRetry","countdownDuration","requiredCharAmount","number","onChangeState","onChangeScreen","onInputFinished","setTimeout","onSmsRetryClick","onTempBlockFinished","phone","version","package","design","description","changelog","development","confirmation","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","_ref$height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","queryParams","qs","document","location","getQueryParam","param","parse","undefined","parseValue","parseKnobs","entries","k","v","startsWith","isBoolean","includes","isNumeric","Number","isNaN","parseFloat","JSON","e","stylesStringToObj","str","properties","split","map","trim","obj","forEach","property","_property$split$map","_property$split$map2","val","isJsonObj","hasOwnProperty","prop","prototype","call","module","exports","sep","eq","maxKeys","len","i","kstr","vstr","x","idx","indexOf","substr","decodeURIComponent","Array","isArray","stringifyPrimitive","isFinite","ks","encodeURIComponent","join","decode","encode","stringify"],"sourceRoot":""}