{"version":3,"file":"indicator-src-docs-Component-docs-mdx.e6c84a11.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/indicator/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/indicator/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/indicator/src/docs/Component.docs.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/indicator/src/index.module.css?e045","webpack://@alfalab/core-components/./packages/indicator/src/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"размер\",\n      children: \"Размер\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Компонент занимает заданную высоту, подстраивая под неё свои отступы и стиль текста.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const styles = {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    gap: '20px',\\n    width: 260,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-secondary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n\\nrender(\\n    <Container>\\n        <div style={styles}>\\n            <Indicator height={48} value={1} view='red' />\\n            <Indicator height={40} value={1} view='red' />\\n            <Indicator height={24} value={1} view='red' />\\n            <Indicator height={20} value={1} view='red' />\\n            <Indicator view='red' />\\n        </div>\\n    </Container>\\n);\\n//MOBILE\\nconst styles = {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    gap: '20px',\\n    width: 320,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-secondary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n\\nrender(\\n    <Container>\\n        <div style={styles}>\\n            <Indicator height={48} value={1} view='red' />\\n            <Indicator height={40} value={1} view='red' />\\n            <Indicator height={24} value={1} view='red' />\\n            <Indicator height={20} value={1} view='red' />\\n            <Indicator view='red' />\\n        </div>\\n    </Container>\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"виды-индикатора\",\n      children: \"Виды индикатора\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Индикатор имеет три преднастроенных вида.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\nconst [border, setBorder] = React.useState(false);\\n\\nconst styles = {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    gap: '20px',\\n    width: 169,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-secondary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n    return (\\n        <Container>\\n\\n            <div style={styles}>\\n                <Indicator height={24} value={1} view='red' border={border} />\\n                <Indicator height={24} value={99} view='red' border={border} />\\n                <Indicator height={24} value={100} view='red' border={border} />\\n            </div>\\n            <Gap size='xs' />\\n            <div style={styles}>\\n                <Indicator height={24} value={1} view='grey' border={border} />\\n                <Indicator height={24} value={99} view='grey' border={border} />\\n                <Indicator height={24} value={100} view='grey' border={border} />\\n            </div>\\n            <Gap size='xs' />\\n            <div style={styles}>\\n                <Indicator height={24} value={1} view='white' border={border} />\\n                <Indicator height={24} value={99} view='white' border={border} />\\n                <Indicator height={24} value={100} view='white' border={border} />\\n            </div>\\n            <Gap size='xl' />\\n            <Switch\\n                block={true}\\n                checked={border}\\n                label='Обводка'\\n                onChange={() => setBorder(!border)}\\n            />\\n        </Container>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\nconst [border, setBorder] = React.useState(false);\\n\\nconst styles = {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    gap: '20px',\\n    width: 320,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-secondary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n\\n    return (\\n        <Container>\\n\\n            <div style={styles}>\\n                <Indicator height={24} value={1} view='red' border={border} />\\n                <Indicator height={24} value={99} view='red' border={border} />\\n                <Indicator height={24} value={100} view='red' border={border} />\\n            </div>\\n            <Gap size='xs' />\\n            <div style={styles}>\\n                <Indicator height={24} value={1} view='grey' border={border} />\\n                <Indicator height={24} value={99} view='grey' border={border} />\\n                <Indicator height={24} value={100} view='grey' border={border} />\\n            </div>\\n            <Gap size='xs' />\\n            <div style={styles}>\\n                <Indicator height={24} value={1} view='white' border={border} />\\n                <Indicator height={24} value={99} view='white' border={border} />\\n                <Indicator height={24} value={100} view='white' border={border} />\\n            </div>\\n            <Gap size='l' />\\n            <Switch\\n                block={true}\\n                checked={border}\\n                label='Обводка'\\n                onChange={() => setBorder(!border)}\\n            />\\n        </Container>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"кастомизация\",\n      children: \"Кастомизация\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"При необходимости, можно задать индикатору кастомный фон, цвет текста, цвет и толщину обводки.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const styles = {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    gap: '20px',\\n    width: 108,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-secondary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n\\nrender(\\n    <Container>\\n        <div style={styles}>\\n            <Indicator\\n                value={1}\\n                height={24}\\n                backgroundColor='var(--color-light-graphic-attention)'\\n                color='var(--color-light-graphic-negative)'\\n                border={{\\n                    width: 4,\\n                    color: 'var(--color-light-graphic-negative)',\\n                }}\\n            />\\n            <Indicator\\n                value={1}\\n                height={24}\\n                backgroundColor='var(--color-light-graphic-primary-inverted)'\\n                color='var(--color-light-graphic-link)'\\n                border={{\\n                    width: 2,\\n                    color: 'var(--color-light-graphic-link)',\\n                }}\\n            />\\n        </div>\\n    </Container>\\n);\\n//MOBILE\\nconst styles = {\\n    display: 'flex',\\n    justifyContent: 'center',\\n    gap: '20px',\\n    width: 320,\\n    padding: 20,\\n    backgroundColor: 'var(--color-light-bg-secondary)',\\n    borderRadius: '12px',\\n    boxSizing: 'border-box',\\n    alignItems: 'center',\\n};\\n\\nrender(\\n    <Container>\\n        <div style={styles}>\\n            <Indicator\\n                value={1}\\n                height={24}\\n                backgroundColor='var(--color-light-graphic-attention)'\\n                color='var(--color-light-graphic-negative)'\\n                border={{\\n                    width: 4,\\n                    color: 'var(--color-light-graphic-negative)',\\n                }}\\n            />\\n            <Indicator\\n                value={1}\\n                height={24}\\n                backgroundColor='var(--color-light-graphic-primary-inverted)'\\n                color='var(--color-light-graphic-link)'\\n                border={{\\n                    width: 2,\\n                    color: 'var(--color-light-graphic-link)',\\n                }}\\n            />\\n        </div>\\n    </Container>\\n);\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {Indicator as TSIndicator} from '../Component';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Indicator } from '@alfalab/core-components/indicator';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: TSIndicator\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Meta, Markdown} from '@storybook/addon-docs';\nimport {ComponentHeader, Tabs} from 'storybook/blocks';\nimport * as Stories from './Component.stories';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport packageJson from '../../package.json';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: Stories\n    }), \"\\n\", _jsx(ComponentHeader, {\n      name: \"Indicator\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/indicator\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?type=design&node-id=87344%3A115239&t=CXazzkYWpueZquEy-1\",\n      children: \"Используется для визаулизации количества уведомлений, сообщений и т. д.\"\n    }), \"\\n\", _jsx(Tabs, {\n      description: _jsx(Description, {}),\n      changelog: _jsx(Markdown, {\n        children: Changelog\n      }),\n      development: _jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dps9B\",\"red\":\"red_aXXvQ\",\"border\":\"border_Cmy4J\",\"white\":\"white_K_qSw\",\"grey\":\"grey_rYijs\",\"xs\":\"xs_EpLNh\",\"s\":\"s_iVuD8\",\"content\":\"content_KtxO2\",\"m\":\"m_nROyp\",\"l\":\"l_yhn3E\",\"xl\":\"xl_K6gcc\",\"xxl\":\"xxl_RO3RL\"};","import React, { CSSProperties, forwardRef, ReactElement } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\n// TODO: вынести в общие типы\ntype Border = {\n    width?: number;\n    color?: string;\n    style?: 'solid' | 'dashed' | 'dotted';\n};\n\nexport type IndicatorProps = React.HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Значение индикатора\n     */\n    value?: number | ReactElement;\n\n    /**\n     * Цвет значения\n     */\n    color?: string;\n\n    /**\n     * Цвет заливки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Высота компонента, min = 16; max = 48\n     */\n    height?: number;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 's' | 'm' | 'l';\n\n    /**\n     * Настройки обводки\n     */\n    border?: boolean | Border;\n\n    /**\n     * Пресет компонента\n     */\n    view?: 'red' | 'grey' | 'white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nfunction getSize(height?: number, value?: IndicatorProps['value']) {\n    if (!height) {\n        return typeof value === 'undefined' ? 'xs' : 's';\n    }\n\n    if (height <= 8) return 'xs';\n    if (height <= 18) return 's';\n    if (height <= 24) return 'm';\n    if (height <= 32) return 'l';\n    if (height <= 40) return 'xl';\n\n    return 'xxl';\n}\n\nfunction formatValue(rawValue: IndicatorProps['value']) {\n    if (typeof rawValue === 'number' && rawValue >= 100) return '99+';\n\n    return rawValue;\n}\n\nfunction borderStyles(\n    border: IndicatorProps['border'],\n    view?: IndicatorProps['view'],\n): CSSProperties {\n    if (!border) return {};\n\n    if (typeof border === 'object') {\n        return {\n            outlineColor: border.color,\n            outlineWidth: border.width,\n            outlineStyle: border.style || 'solid',\n        };\n    }\n\n    if (view) return {};\n\n    return {\n        outlineWidth: 2,\n        outlineColor: 'var(--color-light-graphic-primary)',\n        outlineStyle: 'solid',\n    };\n}\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>(\n    (\n        {\n            value,\n            view,\n            color,\n            backgroundColor,\n            height,\n            border,\n            className,\n            dataTestId,\n            style,\n            size = getSize(height, value),\n            ...restProps\n        },\n        ref,\n    ) => {\n        const showContent = typeof value !== 'undefined' && size !== 'xs';\n\n        return (\n            <div\n                ref={ref}\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    view && styles[view],\n                    border === true && styles.border,\n                    className,\n                )}\n                style={{\n                    ...style,\n                    ...(!view && {\n                        backgroundColor,\n                        color,\n                    }),\n                    height,\n                    minWidth: height,\n                    ...borderStyles(border, view),\n                }}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                {showContent && <span className={styles.content}>{formatValue(value)}</span>}\n            </div>\n        );\n    },\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","id","live","className","MDXContent","wrapper","MDXLayout","of","name","version","package","design","description","changelog","development","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","title","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","borderStyles","border","outlineColor","outlineWidth","outlineStyle","Indicator","forwardRef","ref","rawValue","backgroundColor","dataTestId","_ref$size","size","getSize","restProps","_objectWithoutProperties","_excluded","showContent","_objectSpread","minWidth"],"sourceRoot":""}