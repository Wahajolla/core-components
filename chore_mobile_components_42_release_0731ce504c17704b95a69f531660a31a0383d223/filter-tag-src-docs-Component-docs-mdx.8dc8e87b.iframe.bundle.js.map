{"version":3,"file":"filter-tag-src-docs-Component-docs-mdx.8dc8e87b.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/filter-tag/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/filter-tag/src/components/base-filter-tag/index.module.css?f5f2","webpack://@alfalab/core-components/./packages/filter-tag/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/filter-tag/src/docs/Component.docs.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/filter-tag/src/desktop.module.css?c650","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/mobile.module.css?68c9","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/components/base-filter-tag/index.module.css?594a","webpack://@alfalab/core-components/./packages/filter-tag/src/components/base-filter-tag/Component.tsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"группа-фильтров\",\n      children: \"Группа фильтров\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Обычно фильтры объединяются в группу, в рамках группы используется один паттерн отображения лейбла.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"// Одиночный выбор\\nconst CustomField = ({\\n    label,\\n    selected,\\n    setSelectedItems,\\n    innerProps: { ref, ...restInnerProps },\\n    ...restProps\\n}) => {\\n    const checkedContent = (\\n        <span>\\n            {!label && 'Одиночный выбор:'}\\n            <b> {selected && selected.content}</b>\\n        </span>\\n    );\\n\\n    const contentLabel = <span>Одиночный выбор</span>;\\n\\n    return (\\n        <div ref={ref}>\\n            <FilterTag\\n                onClear={() => setSelectedItems([])}\\n                checked={selected}\\n                {...restInnerProps}\\n                {...restProps}\\n            >\\n                {selected ? checkedContent : contentLabel}\\n            </FilterTag>\\n        </div>\\n    );\\n};\\n\\n// Множественный выбор\\nconst CustomFieldMultiple = ({\\n    label,\\n    selected,\\n    setSelectedItems,\\n    selectedMultiple,\\n    innerProps: { ref, ...restInnerProps },\\n    ...restProps\\n}) => {\\n    const content = selected && selected.content;\\n\\n    const checkedContent = (\\n        <span>\\n            {!label && 'Множественный выбор:'}\\n            <b>\\n                {' '}\\n                {selectedMultiple.length !== 1 ? `Выбрано: ${selectedMultiple.length}` : content}\\n            </b>\\n        </span>\\n    );\\n\\n    const contentLabel = <span>Множественный выбор</span>;\\n\\n    return (\\n        <div ref={ref}>\\n            <FilterTag\\n                onClear={() => setSelectedItems([])}\\n                checked={selected}\\n                {...restInnerProps}\\n                {...restProps}\\n            >\\n                {selected ? checkedContent : contentLabel}\\n            </FilterTag>\\n        </div>\\n    );\\n};\\n\\nrender(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'Auurum' },\\n            { key: '2', content: 'Bercelium' },\\n            { key: '3', content: 'Curium' },\\n            { key: '4', content: 'Neptunium' },\\n            { key: '5', content: 'Plutonuim' },\\n        ],\\n        [],\\n    );\\n\\n    const [label, setLabel] = React.useState(false);\\n\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const handleChangeSelected = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple);\\n    };\\n\\n    const [selectedMultiple, setSelectedMultiple] = React.useState([]);\\n    const handleChangeMultiple = ({ selectedMultiple }) => {\\n        setSelectedMultiple(selectedMultiple.map((option) => option.key));\\n    };\\n\\n    // Диапазон значений\\n    const [filterTag, setFilterTag] = React.useState(null);\\n    const [open, setOpen] = React.useState(false);\\n    const [value, setValue] = React.useState();\\n    const { selectedFrom, selectedTo, updatePeriod } = usePeriod();\\n\\n    const handleOpen = () => {\\n        setOpen(!open);\\n    };\\n\\n    const handleClear = () => {\\n        setOpen(false);\\n        updatePeriod(null, null);\\n    };\\n\\n    const handleUpdatePeriodr = (date) => {\\n        updatePeriod(date);\\n\\n        if (selectedFrom) {\\n            setOpen(false);\\n        }\\n    };\\n\\n    const handleFilterTagRef = (node) => {\\n        setFilterTag(node);\\n    };\\n\\n    const handleBlur = (ref, handleClick) => {\\n        React.useEffect(() => {\\n            const listener = (event) => {\\n                if (ref.current && !ref.current.contains(event.target)) {\\n                    handleClick(event);\\n                }\\n            };\\n\\n            document.addEventListener('mousedown', listener);\\n            document.addEventListener('touchstart', listener);\\n\\n            return () => {\\n                document.removeEventListener('mousedown', listener);\\n                document.removeEventListener('touchstart', listener);\\n            };\\n        }, [ref, handleClick]);\\n    };\\n    const calendarRef = React.useRef(null);\\n\\n    handleBlur(calendarRef, (event) => {\\n        if (filterTag && !filterTag.contains(event.target)) {\\n            handleOpen();\\n        }\\n    });\\n\\n    const getDateString = React.useCallback((date) => {\\n        const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\\n        const month = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\\n        const year = date.getFullYear();\\n\\n        return `${day}.${month}.${year}`;\\n    }, []);\\n\\n    const selectedRange = React.useMemo(() => {\\n        if (selectedFrom && selectedTo) {\\n            const selectedFromDate = new Date(selectedFrom);\\n            const selectedToDate = new Date(selectedTo);\\n            return `${getDateString(selectedFromDate)} - ${getDateString(selectedToDate)}`;\\n        }\\n        return '';\\n    }, [selectedFrom, selectedTo]);\\n\\n    const checkedContent = (\\n        <span>\\n            {!label && 'Диапазон значений:'}\\n            <b> {selectedRange && selectedRange}</b>\\n        </span>\\n    );\\n    const content = <span>Диапазон значений</span>;\\n\\n    const css = `\\n        div {\\n            border-radius: 8px;\\n        }\\n    `;\\n\\n    return (\\n        <>\\n            <SelectDesktop\\n                allowUnselect={true}\\n                popoverPosition='bottom-start'\\n                options={options}\\n                Field={CustomField}\\n                onChange={handleChangeSelected}\\n                selected={selected}\\n                Option={BaseOption}\\n                label={label}\\n                fieldProps={{ size: 'xxs' }}\\n            />\\n            <Gap size='m' />\\n            <SelectDesktop\\n                allowUnselect={true}\\n                popoverPosition='bottom-start'\\n                options={options}\\n                Field={CustomFieldMultiple}\\n                onChange={handleChangeMultiple}\\n                selected={selectedMultiple}\\n                multiple={true}\\n                label={label}\\n                fieldProps={{ size: 'xxs' }}\\n            />\\n            <Gap size='m' />\\n            <Popover\\n                anchorElement={filterTag}\\n                offset={[0, 4]}\\n                open={open}\\n                preventFlip={true}\\n                position='bottom-start'\\n            >\\n                <style>{css}</style>\\n                <div style={{ width: 344, padding: '0 16px' }}>\\n                    <Calendar\\n                        ref={calendarRef}\\n                        responsive={true}\\n                        value={value}\\n                        selectedFrom={selectedFrom}\\n                        selectedTo={selectedTo}\\n                        onChange={handleUpdatePeriodr}\\n                        selectorView='month-only'\\n                    />\\n                </div>\\n            </Popover>\\n\\n            <FilterTag\\n                ref={handleFilterTagRef}\\n                size='xxs'\\n                onClick={handleOpen}\\n                onClear={handleClear}\\n                checked={selectedRange}\\n                open={open}\\n            >\\n                {selectedRange ? checkedContent : content}\\n            </FilterTag>\\n            <Gap size='m' />\\n            <Switch\\n                block={true}\\n                checked={label}\\n                label='Скрывать лейбл после выбора'\\n                onChange={() => setLabel(!label)}\\n            />\\n        </>\\n    );\\n});\\n//MOBILE\\n// Одиночный выбор\\nconst CustomField = ({\\n    label,\\n    selected,\\n    setSelectedItems,\\n    innerProps: { ref, ...restInnerProps },\\n    ...restProps\\n}) => {\\n    const checkedContent = (\\n        <span>\\n            {!label && 'Одиночный выбор:'}\\n            <b> {selected && selected.content}</b>\\n        </span>\\n    );\\n\\n    const contentLabel = <span>Одиночный выбор</span>;\\n\\n    return (\\n        <div ref={ref}>\\n            <FilterTag\\n                onClear={() => setSelectedItems([])}\\n                checked={selected}\\n                {...restInnerProps}\\n                {...restProps}\\n            >\\n                {selected ? checkedContent : contentLabel}\\n            </FilterTag>\\n        </div>\\n    );\\n};\\n\\n// Множественный выбор\\nconst CustomFieldMultiple = ({\\n    label,\\n    selected,\\n    setSelectedItems,\\n    selectedMultiple,\\n    innerProps: { ref, ...restInnerProps },\\n    ...restProps\\n}) => {\\n    const content = selected && selected.content;\\n\\n    const checkedContent = (\\n        <span>\\n            {!label && 'Множественный выбор:'}\\n            <b>\\n                {' '}\\n                {selectedMultiple.length !== 1 ? `Выбрано: ${selectedMultiple.length}` : content}\\n            </b>\\n        </span>\\n    );\\n\\n    const contentLabel = <span>Множественный выбор</span>;\\n\\n    return (\\n        <div ref={ref}>\\n            <FilterTag\\n                onClear={() => setSelectedItems([])}\\n                checked={selected}\\n                {...restInnerProps}\\n                {...restProps}\\n            >\\n                {selected ? checkedContent : contentLabel}\\n            </FilterTag>\\n        </div>\\n    );\\n};\\n\\nrender(() => {\\n    const options = [\\n        { key: '1', content: 'Auurum' },\\n        { key: '2', content: 'Bercelium' },\\n        { key: '3', content: 'Curium' },\\n        { key: '4', content: 'Neptunium' },\\n        { key: '5', content: 'Plutonuim' },\\n    ];\\n\\n    const [label, setLabel] = React.useState(false);\\n\\n    const [selected, setSelected] = React.useState([]);\\n\\n    const handleChangeSelected = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple);\\n    };\\n\\n    const [selectedMultiple, setSelectedMultiple] = React.useState([]);\\n    const handleChangeMultiple = ({ selectedMultiple }) => {\\n        setSelectedMultiple(selectedMultiple.map((option) => option.key));\\n    };\\n\\n    // Диапазон значений\\n    const [open, setOpen] = React.useState(false);\\n    const [value, setValue] = React.useState();\\n    const { selectedFrom, selectedTo, updatePeriod } = usePeriod();\\n\\n    const handleOpen = () => {\\n        setOpen(!open);\\n    };\\n\\n    const handleClear = () => {\\n        setOpen(false);\\n        updatePeriod(null, null);\\n    };\\n\\n    const handleUpdatePeriodr = (date) => {\\n        updatePeriod(date);\\n\\n        if (selectedFrom) {\\n            setOpen(false);\\n        }\\n    };\\n\\n    const getDateString = React.useCallback((date) => {\\n        const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\\n        const month = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\\n        const year = date.getFullYear();\\n\\n        return `${day}.${month}.${year}`;\\n    }, []);\\n\\n    const selectedRange = React.useMemo(() => {\\n        if (selectedFrom && selectedTo) {\\n            const selectedFromDate = new Date(selectedFrom);\\n            const selectedToDate = new Date(selectedTo);\\n            return `${getDateString(selectedFromDate)} - ${getDateString(selectedToDate)}`;\\n        }\\n        return '';\\n    }, [selectedFrom, selectedTo]);\\n\\n    const checkedContent = (\\n        <span>\\n            {!label && 'Диапазон значений:'}\\n            <b> {selectedRange && selectedRange}</b>\\n        </span>\\n    );\\n    const content = <span>Диапазон значений</span>;\\n\\n    return (\\n        <>\\n            <SelectMobile\\n                placeholder='Одиночный выбор'\\n                allowUnselect={true}\\n                popoverPosition='bottom-start'\\n                options={options}\\n                Field={CustomField}\\n                onChange={handleChangeSelected}\\n                selected={selected}\\n                label={label}\\n                fieldProps={{ size: 'xxs' }}\\n            />\\n            <Gap size='m' />\\n            <SelectMobile\\n                placeholder='Множественный выбор'\\n                allowUnselect={true}\\n                popoverPosition='bottom-start'\\n                options={options}\\n                Field={CustomFieldMultiple}\\n                onChange={handleChangeMultiple}\\n                selected={selectedMultiple}\\n                multiple={true}\\n                label={label}\\n                fieldProps={{ size: 'xxs' }}\\n            />\\n            <Gap size='m' />\\n            <CalendarMobile\\n                open={open}\\n                onClose={() => setOpen(false)}\\n                value={value}\\n                selectedFrom={selectedFrom}\\n                selectedTo={selectedTo}\\n                onChange={handleUpdatePeriodr}\\n                selectorView='month-only'\\n            />\\n            <FilterTag\\n                size='xxs'\\n                onClick={handleOpen}\\n                onClear={handleClear}\\n                checked={selectedRange}\\n                open={open}\\n            >\\n                {selectedRange ? checkedContent : content}\\n            </FilterTag>\\n            <Gap size='m' />\\n            <Switch\\n                block={true}\\n                checked={label}\\n                label='Скрывать лейбл после выбора'\\n                onChange={() => setLabel(!label)}\\n            />\\n        </>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"предзаполненное-значение-фильтра\",\n      children: \"Предзаполненное значение фильтра\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Компонент может иметь предзаполненное значение, в таком случае в заполненном состоянии у него не может быть крестика очистки.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const CustomField = ({\\n    label,\\n    selected,\\n    setSelectedItems,\\n    innerProps: { ref, ...restInnerProps },\\n    ...restProps\\n}) => (\\n    <div ref={ref}>\\n        <FilterTag checked={selected} showClear={false} {...restInnerProps} {...restProps}>\\n            <b>{selected.content}</b>\\n        </FilterTag>\\n    </div>\\n);\\nrender(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'По возрастанию' },\\n            { key: '2', content: 'По убыванию' },\\n        ],\\n        [],\\n    );\\n\\n    const [selected, setSelected] = React.useState([options[0]]);\\n\\n    const handleChangeSelected = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple);\\n    };\\n\\n    return (\\n        <SelectDesktop\\n            popoverPosition='bottom-start'\\n            options={options}\\n            Field={CustomField}\\n            onChange={handleChangeSelected}\\n            selected={selected}\\n            fieldProps={{ size: 'xxs' }}\\n        />\\n    );\\n});\\n//MOBILE\\nconst CustomField = ({\\n    label,\\n    selected,\\n    setSelectedItems,\\n    innerProps: { ref, ...restInnerProps },\\n    ...restProps\\n}) => (\\n    <div ref={ref}>\\n        <FilterTag checked={selected} showClear={false} {...restInnerProps} {...restProps}>\\n            {selected.content}\\n        </FilterTag>\\n    </div>\\n);\\nrender(() => {\\n    const options = React.useMemo(\\n        () => [\\n            { key: '1', content: 'По возрастанию' },\\n            { key: '2', content: 'По убыванию' },\\n        ],\\n        [],\\n    );\\n\\n    const [selected, setSelected] = React.useState([options[0]]);\\n\\n    const handleChangeSelected = ({ selectedMultiple }) => {\\n        setSelected(selectedMultiple);\\n    };\\n\\n    return (\\n        <SelectMobile\\n            popoverPosition='bottom-start'\\n            options={options}\\n            Field={CustomField}\\n            onChange={handleChangeSelected}\\n            selected={selected}\\n            fieldProps={{ size: 'xxs' }}\\n        />\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"состояния\",\n      children: \"Состояния\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Таб может находиться в активном и неактивном состоянии. Взаимодействие может быть ограничено с помощью свойства \", _jsx(_components.code, {\n        children: \"disabled\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const checkedContent = (\\n        <span>\\n            Label:<b> Value</b>\\n        </span>\\n    );\\n    const content = <span>Label</span>;\\n    const [checkedFilterTag, setCheckedFilterTag] = React.useState([]);\\n\\n    return (\\n        <Container>\\n            <Row align='middle'>\\n                <div style={{ marginRight: 12 }}>\\n                    <FilterTag size='xxs' checked={false}>\\n                        {content}\\n                    </FilterTag>\\n                </div>\\n                <div>\\n                    <FilterTag size='xxs' checked={false} disabled={true}>\\n                        {content}\\n                    </FilterTag>\\n                </div>\\n            </Row>\\n            <div style={{ display: 'flex', marginTop: 12 }}>\\n                <div style={{ marginRight: 12 }}>\\n                    <FilterTag size='xxs' checked={true}>\\n                        {checkedContent}\\n                    </FilterTag>\\n                </div>\\n                <div>\\n                    <FilterTag size='xxs' checked={true} disabled={true}>\\n                        {checkedContent}\\n                    </FilterTag>\\n                </div>\\n            </div>\\n        </Container>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"стиль\",\n      children: \"Стиль\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент наследует опции компонента \", _jsx(_components.a, {\n        href: \"?path=/docs/components-tag--docs\",\n        children: \"Tag\"\n      }), \", отвечающие за внешний вид:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"shape (форма) — овальные или прямоугольные.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"view (стиль) — залитые или бордерные.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../../../themes/src/default.css';\\n@import '../../../../tag/src/vars.css';\\n\\n:root {\\n    --filter-tag-separator-background-color-hover: transparent;\\n}\\n\\n.component {\\n    display: flex;\\n    width: max-content;\\n    box-sizing: border-box;\\n\\n    &.disabled {\\n        background-color: var(--tag-outlined-background-color-disabled);\\n    }\\n\\n    &.rounded {\\n        &.xxs {\\n            border-radius: var(--tag-rounded-xxs-border-radius);\\n        }\\n\\n        &.xs {\\n            border-radius: var(--tag-rounded-xs-border-radius);\\n        }\\n\\n        &.s {\\n            border-radius: var(--tag-rounded-s-border-radius);\\n        }\\n    }\\n\\n    &.checked {\\n        &:not(.disabled).xxs {\\n            min-width: 84px;\\n        }\\n\\n        &:not(.disabled).xs {\\n            min-width: 104px;\\n        }\\n\\n        &:not(.disabled).s {\\n            min-width: 116px;\\n        }\\n    }\\n}\\n\\n.focused {\\n    @mixin focus-outline;\\n}\\n\\n.chevron {\\n    position: relative;\\n    transition: transform 0.2s ease;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    color: var(--color-light-graphic-primary);\\n}\\n\\n.valueButton {\\n    display: flex;\\n    align-items: center;\\n    box-shadow: none;\\n    user-select: none;\\n    cursor: pointer;\\n    outline: none;\\n    white-space: nowrap;\\n    font-family: var(--font-family);\\n    color: var(--tag-text-color);\\n    background-color: var(--tag-outlined-background-color);\\n    border-width: var(--tag-border-width);\\n    border-color: var(--tag-border-color);\\n    border-style: solid;\\n    transition: border-color 0.2s ease, background-color 0.2s ease, color 0.2s ease;\\n    margin: 0;\\n\\n    &:disabled {\\n        cursor: var(--disabled-cursor);\\n\\n        & > .chevron {\\n            color: var(--color-light-graphic-primary-alpha-30);\\n        }\\n    }\\n\\n    &.rounded {\\n        &.xxs {\\n            border-radius: var(--tag-rounded-xxs-border-radius);\\n        }\\n\\n        &.xs {\\n            border-radius: var(--tag-rounded-xs-border-radius);\\n        }\\n\\n        &.s {\\n            border-radius: var(--tag-rounded-s-border-radius);\\n        }\\n    }\\n\\n    &.xxs {\\n        min-width: 60px;\\n        min-height: var(--size-xxs-height);\\n\\n        @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n            /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height\\n            Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */\\n            height: 32px;\\n        }\\n    }\\n\\n    &.xs {\\n        min-width: 72px;\\n        min-height: var(--size-xs-height);\\n\\n        @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n            /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height\\n            Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */\\n            height: 40px;\\n        }\\n    }\\n\\n    &.s {\\n        min-width: 80px;\\n        min-height: var(--size-s-height);\\n\\n        @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\\n            /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height\\n            Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */\\n            height: 48px;\\n        }\\n    }\\n\\n    &.outlined {\\n        color: var(--tag-text-color);\\n        border-color: var(--tag-border-color);\\n        background-color: var(--tag-outlined-background-color);\\n\\n        &:disabled {\\n            border-color: var(--tag-border-color-disabled);\\n            color: var(--tag-text-color-disabled);\\n            background-color: var(--tag-outlined-background-color-disabled);\\n        }\\n        @media (hover: hover) {\\n            &:not(:disabled):hover {\\n                border-color: var(--tag-border-color-hover);\\n                background-color: var(--tag-outlined-background-color-hover);\\n            }\\n        }\\n        &:not(:disabled):active {\\n            border-color: var(--tag-border-color-active);\\n            background-color: var(--tag-outlined-background-color-active);\\n        }\\n    }\\n\\n    &.filled {\\n        color: var(--tag-text-color);\\n        border-color: var(--tag-filled-border-color);\\n\\n        &:disabled {\\n            color: var(--tag-text-color-disabled);\\n        }\\n    }\\n\\n    &.s {\\n        @mixin paragraph_primary_medium;\\n        padding-right: var(--gap-s);\\n        padding-left: var(--gap-xl);\\n\\n        & .chevron {\\n            margin: 0 var(--gap-xs);\\n        }\\n    }\\n\\n    &.xs {\\n        @mixin paragraph_primary_small;\\n        padding-right: var(--gap-xs);\\n        padding-left: var(--gap-l);\\n\\n        & .chevron {\\n            margin: 0 var(--gap-xs) 0 var(--gap-2xs);\\n        }\\n    }\\n\\n    &.xxs {\\n        @mixin paragraph_primary_small;\\n        padding-right: var(--gap-2xs);\\n        padding-left: var(--gap-m);\\n\\n        & .chevron {\\n            margin: 0 var(--gap-xs) 0 var(--gap-2xs);\\n        }\\n    }\\n\\n    &.open .chevron {\\n        transform: rotateZ(180deg);\\n    }\\n\\n    &.checked {\\n        border-width: 0;\\n        color: var(--tag-text-color-checked);\\n\\n        & > .chevron {\\n            color: var(--color-light-graphic-primary-inverted);\\n        }\\n\\n        &.rounded {\\n            &.xxs {\\n                border-radius: var(--tag-rounded-xxs-border-radius) 0 0\\n                    var(--tag-rounded-xxs-border-radius);\\n            }\\n\\n            &.xs {\\n                border-radius: var(--tag-rounded-xs-border-radius) 0 0\\n                    var(--tag-rounded-xs-border-radius);\\n            }\\n\\n            &.s {\\n                border-radius: var(--tag-rounded-s-border-radius) 0 0\\n                    var(--tag-rounded-s-border-radius);\\n            }\\n\\n            &:disabled,\\n            &.close {\\n                border-radius: var(--tag-border-radius);\\n            }\\n        }\\n\\n        &:not(:disabled) {\\n            padding-right: 0;\\n            border-right-width: 0;\\n        }\\n\\n        @media (hover: hover) {\\n            &:not(:disabled):hover + .clear:before {\\n                background-color: var(--filter-tag-separator-background-color-hover);\\n            }\\n        }\\n\\n        &:not(:disabled):active + .clear:before {\\n            background-color: transparent;\\n        }\\n\\n        &:disabled {\\n            color: var(--tag-text-color-checked-disabled);\\n        }\\n    }\\n}\\n\\n.clear {\\n    position: relative;\\n    cursor: pointer;\\n    display: flex;\\n    align-items: center;\\n    color: var(--color-light-graphic-tertiary);\\n\\n    &.rounded {\\n        &.xxs {\\n            border-radius: 0 var(--tag-rounded-xxs-border-radius)\\n                var(--tag-rounded-xxs-border-radius) 0;\\n        }\\n\\n        &.xs {\\n            border-radius: 0 var(--tag-rounded-xs-border-radius) var(--tag-rounded-xs-border-radius)\\n                0;\\n        }\\n\\n        &.s {\\n            border-radius: 0 var(--tag-rounded-s-border-radius) var(--tag-rounded-s-border-radius) 0;\\n        }\\n    }\\n\\n    &:before {\\n        content: '';\\n        position: absolute;\\n        left: 0;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        display: block;\\n        background-color: var(--color-light-border-underline-inverted);\\n        width: 1px;\\n        transition: background-color 0.2s ease;\\n    }\\n\\n    @media (hover: hover) {\\n        &:hover:before {\\n            background-color: var(--filter-tag-separator-background-color-hover);\\n        }\\n    }\\n\\n    &:active:before {\\n        background-color: transparent;\\n    }\\n\\n    @media (hover: hover) {\\n        &:hover {\\n            color: var(--color-light-graphic-primary-inverted);\\n        }\\n    }\\n\\n    &:active {\\n        color: var(--color-light-graphic-primary-inverted);\\n    }\\n\\n    &.s {\\n        padding: 0 var(--gap-s) 0 var(--gap-xs);\\n\\n        &:before {\\n            height: 24px;\\n        }\\n    }\\n\\n    &.xs {\\n        padding: 0 var(--gap-xs);\\n\\n        &:before {\\n            height: 24px;\\n        }\\n    }\\n\\n    &.xxs {\\n        padding: 0 3px 0 var(--gap-2xs);\\n\\n        &:before {\\n            height: 20px;\\n        }\\n    }\\n}\\n\\n.iconWrapper {\\n    width: 24px;\\n    height: 24px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {FilterTagDesktop} from '../Component.desktop';\nimport {FilterTagMobile} from '../Component.mobile';\nimport {FilterTag} from '../Component.responsive';\nimport styles from '!!raw-loader!../components/base-filter-tag/index.module.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { FilterTag } from '@alfalab/core-components/filter-tag';\\nimport { FilterTagMobile } from '@alfalab/core-components/filter-tag/mobile';\\nimport { FilterTagDesktop } from '@alfalab/core-components/filter-tag/desktop';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Из индекса импортируется responsive версия компонента.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        FilterTagDesktop,\n        FilterTagMobile,\n        FilterTag\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: styles\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Meta, Markdown} from '@storybook/addon-docs';\nimport {ComponentHeader, Tabs} from 'storybook/blocks';\nimport * as Stories from './Component.stories.tsx';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport packageJson from '../../package.json';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: Stories\n    }), \"\\n\", _jsx(ComponentHeader, {\n      name: \"FilterTag\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/filter-tag\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=7300%3A40133\",\n      children: \"Используется чтобы вывести параметры фильтрации и отобразить примененное значение.\"\n    }), \"\\n\", _jsx(Tabs, {\n      description: _jsx(Description, {}),\n      development: _jsx(Development, {}),\n      changelog: _jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_hafUw\",\"rectangular\":\"rectangular_fKMik\",\"xxs\":\"xxs_haxXH\",\"xs\":\"xs__u9RT\",\"s\":\"s_C9knK\",\"checked\":\"checked_TDOr3\",\"disabled\":\"disabled_rDSBM\",\"valueButton\":\"valueButton_RHyrG\",\"filled\":\"filled_E0fxA\",\"close\":\"close_NsDJN\",\"clear\":\"clear_rNb9t\"};","import React, { forwardRef } from 'react';\n\nimport { BaseFilterTag, BaseFilterTagProps } from './components/base-filter-tag';\n\nimport styles from './desktop.module.css';\n\nexport type FilterTagDesktopProps = Omit<BaseFilterTagProps, 'styles'>;\n\nexport const FilterTagDesktop = forwardRef<HTMLDivElement, FilterTagDesktopProps>(\n    (restProps, ref) => <BaseFilterTag {...restProps} ref={ref} styles={styles} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Hj4KB\",\"rectangular\":\"rectangular_ix0V6\",\"xxs\":\"xxs_BNqqF\",\"xs\":\"xs_i_xgr\",\"s\":\"s_hSF3d\",\"checked\":\"checked_twVvB\",\"disabled\":\"disabled_xx6WO\",\"valueButton\":\"valueButton_KVBSg\",\"filled\":\"filled_ZQkVB\",\"close\":\"close_DGuHX\",\"clear\":\"clear_iHlEC\"};","import React, { forwardRef } from 'react';\n\nimport { BaseFilterTag, BaseFilterTagProps } from './components/base-filter-tag';\n\nimport styles from './mobile.module.css';\n\nexport type FilterTagMobileProps = Omit<BaseFilterTagProps, 'styles'>;\n\nexport const FilterTagMobile = forwardRef<HTMLDivElement, FilterTagMobileProps>(\n    (restProps, ref) => <BaseFilterTag {...restProps} ref={ref} styles={styles} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseFilterTagProps } from './components/base-filter-tag';\nimport { FilterTagDesktop } from './Component.desktop';\nimport { FilterTagMobile } from './Component.mobile';\n\nexport type FilterTagProps = Omit<BaseFilterTagProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const FilterTag = forwardRef<HTMLDivElement, FilterTagProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? FilterTagDesktop : FilterTagMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_DIoeq\",\"disabled\":\"disabled_czMWG\",\"rounded\":\"rounded_zBuYW\",\"xxs\":\"xxs_dNX_6\",\"xs\":\"xs_gry_n\",\"s\":\"s_yNyG4\",\"checked\":\"checked_f8Ar7\",\"focused\":\"focused_TiKkL\",\"chevron\":\"chevron_jjPn_\",\"valueButton\":\"valueButton_qrxaV\",\"outlined\":\"outlined_FHpeK\",\"filled\":\"filled_t6TNq\",\"open\":\"open_fl6jy\",\"close\":\"close_WwwW0\",\"clear\":\"clear_xzlTi\",\"iconWrapper\":\"iconWrapper_rvc8l\"};","import React, { forwardRef, KeyboardEvent, MouseEvent, ReactNode, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { ChevronDownCompactSIcon } from '@alfalab/icons-glyph/ChevronDownCompactSIcon';\nimport { ChevronDownMIcon } from '@alfalab/icons-glyph/ChevronDownMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossCircleSIcon } from '@alfalab/icons-glyph/CrossCircleSIcon';\n\nimport commonStyles from './index.module.css';\n\nexport type BaseFilterTagProps = {\n    /**\n     * Состояние выбора\n     */\n    checked?: boolean;\n\n    /**\n     * Состояние открытия\n     */\n    open?: boolean;\n\n    /**\n     * Состояние блокировки\n     */\n    disabled?: boolean;\n\n    /**\n     * Обработчик клика\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик очистки\n     */\n    onClear?: () => void;\n\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Показывать крестик для очистки выбора\n     */\n    showClear?: boolean;\n\n    /**\n     * @deprecated данный проп больше не используется, временно оставлен для обратной совместимости\n     * Используйте props shape и view\n     * Вариант тега\n     */\n    variant?: 'default' | 'alt';\n\n    /**\n     * Форма тега\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Стиль тега\n     */\n    view?: 'outlined' | 'filled';\n\n    /**\n     * Основные стили компонента.\n     */\n    styles?: { [key: string]: string };\n};\n\nconst isKeyBoardEvent = (\n    event: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>,\n): event is KeyboardEvent<HTMLDivElement> =>\n    (event as KeyboardEvent<HTMLDivElement>).key !== undefined;\n\nexport const BaseFilterTag = forwardRef<HTMLDivElement, BaseFilterTagProps>(\n    (\n        {\n            children,\n            checked,\n            disabled,\n            open,\n            onClick,\n            size = 's',\n            variant = 'default',\n            shape,\n            view = 'outlined',\n            onClear = () => null,\n            showClear = true,\n            className,\n            dataTestId,\n            styles = {},\n        },\n        ref,\n    ) => {\n        const valueRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(valueRef, 'keyboard');\n\n        const handleClear = (event: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>) => {\n            event.stopPropagation();\n\n            if (isKeyBoardEvent(event)) {\n                const clickSimilarKeys = ['Enter'].includes(event.key);\n\n                if (clickSimilarKeys) onClear();\n\n                return;\n            }\n\n            onClear();\n        };\n\n        const variantClassName = variant === 'default' ? 'rounded' : 'rectangular';\n\n        const shapeClassName = shape || variantClassName;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n            <div\n                className={cn(\n                    className,\n                    commonStyles.component,\n                    commonStyles[shapeClassName],\n                    commonStyles[size],\n                    styles.component,\n                    styles[shapeClassName],\n                    styles[size],\n                    {\n                        [commonStyles.checked]: checked,\n                        [styles.checked]: checked,\n                        [commonStyles.disabled]: disabled,\n                        [styles.disabled]: disabled,\n                        [commonStyles.focused]: focused,\n                        [commonStyles.open]: open,\n                    },\n                )}\n                ref={ref}\n                data-test-id={dataTestId}\n                onClick={disabled ? undefined : onClick}\n            >\n                <button\n                    type='button'\n                    ref={valueRef}\n                    disabled={disabled}\n                    className={cn(\n                        commonStyles.valueButton,\n                        styles.valueButton,\n                        commonStyles[size],\n                        styles[size],\n                        commonStyles[shapeClassName],\n                        styles[shapeClassName],\n                        commonStyles[view],\n                        {\n                            [styles[view]]: Boolean(styles[view]),\n                            [commonStyles.checked]: checked,\n                            [styles.checked]: checked,\n                            [commonStyles.open]: open,\n                            [commonStyles.close]: !showClear,\n                            [styles.close]: !showClear,\n                        },\n                    )}\n                >\n                    <span>{children}</span>\n                    <span className={commonStyles.chevron}>\n                        {size === 'xxs' ? <ChevronDownCompactSIcon /> : <ChevronDownMIcon />}\n                    </span>\n                </button>\n\n                {checked && !disabled && showClear && (\n                    <div\n                        role='button'\n                        className={cn(\n                            commonStyles.clear,\n                            styles.clear,\n                            commonStyles[size],\n                            styles[size],\n                            styles[shapeClassName],\n                            commonStyles[shapeClassName],\n                        )}\n                        onClick={handleClear}\n                        onKeyDown={handleClear}\n                        tabIndex={0}\n                    >\n                        <span className={commonStyles.iconWrapper}>\n                            {size === 'xxs' ? <CrossCircleSIcon /> : <CrossCircleMIcon />}\n                        </span>\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","ul","li","id","live","className","href","MDXContent","wrapper","MDXLayout","FilterTagDesktop","FilterTagMobile","FilterTag","css","of","name","version","package","design","description","development","changelog","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","title","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","forwardRef","restProps","ref","BaseFilterTag","_objectSpread","_ref$breakpoint","breakpoint","_objectWithoutProperties","_excluded","query","_cn","_cn2","checked","disabled","_ref$size","size","_ref$variant","variant","shape","_ref$view","_ref$onClear","onClear","_ref$showClear","showClear","dataTestId","_ref$styles","valueRef","useRef","_useFocus","useFocus","focused","handleClear","event","stopPropagation","isKeyBoardEvent","undefined","includes","shapeClassName","commonStyles","component","valueButton","Boolean","close","ChevronDownCompactSIcon","ChevronDownMIcon","role","clear","onKeyDown","tabIndex","CrossCircleSIcon","CrossCircleMIcon"],"sourceRoot":""}