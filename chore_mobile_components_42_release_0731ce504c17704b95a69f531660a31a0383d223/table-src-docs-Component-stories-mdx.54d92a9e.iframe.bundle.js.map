{"version":3,"file":"table-src-docs-Component-stories-mdx.54d92a9e.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/table/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/table/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/screenshot-utils/screenshots-story/utils.ts","webpack://@alfalab/core-components/./node_modules/querystring/decode.js","webpack://@alfalab/core-components/./node_modules/querystring/encode.js","webpack://@alfalab/core-components/./node_modules/querystring/index.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Набор компонентов для построения таблиц.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Набор представляет из себя стилизованные компоненты, которые открыты к расширению и содержат лишь минимальный набор параметров.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компоненты не содержат почти никакой логики и могут использоваться совместно с другими библиотеками для таблиц, например с \", _jsx(_components.a, {\n        href: \"https://react-table.tanstack.com/\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"react-table\"\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"пример-простой-таблицы\",\n      children: \"Пример простой таблицы\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 28,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 12,\\n        date: '30.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 5,\\n        date: '30.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 3000069,\\n    },\\n];\\n\\nrender(() => {\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table>\\n                <Table.THead>\\n                    <Table.THeadCell title='Дата'>Дата</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {data.map(row => (\\n                        <Table.TRow key={row.id}>\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2}>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"настройка-колонок\",\n      children: \"Настройка колонок\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Задавая настройки для \", _jsx(_components.code, {\n        children: \"THeadCell\"\n      }), \" можно контролировать отображение колонки целиком:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"hidden\"\n        }), \" — позволяет скрыть колонку\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"width\"\n        }), \" — задает ширину колонки\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"textAlign\"\n        }), \" — задает выравнивание контента\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 28,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 12,\\n        date: '30.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 5,\\n        date: '30.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 3000069,\\n    },\\n];\\n\\nrender(() => {\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table>\\n                <Table.THead>\\n                    <Table.THeadCell title='Id' hidden={true}>\\n                        Id\\n                    </Table.THeadCell>\\n\\n                    <Table.THeadCell title='Дата' width={120}>\\n                        Дата\\n                    </Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент' textAlign='center'>\\n                        Контрагент\\n                    </Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {data.map(row => (\\n                        <Table.TRow key={row.id}>\\n                            <Table.TCell>{row.id}</Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2} align='center'>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"сортировка\",\n      children: \"Сортировка\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Реализация сортировки лежит на разработчике, пакет предоставляет только компоненты для сборки UI.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TSortableHeadCell\"\n      }), \" позволяет отобразить индикатор сортировки и вызвать обработчик сортировки при клике.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Если \", _jsx(_components.code, {\n          children: \"isSortedDesc=true\"\n        }), \" — показывается индиктор сортировки по убыванию (desc)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Если \", _jsx(_components.code, {\n          children: \"isSortedDesc=false\"\n        }), \" — показывается индиктор по возрастанию (asc)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Если \", _jsx(_components.code, {\n          children: \"isSortedDesc=undefined\"\n        }), \" — показывается индиктор, что данные не отсортированы (unset)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.em, {\n        children: [\"Если нужно показать, что данные отсортированы заранее, то можно использовать \", _jsx(_components.code, {\n          children: \"defaultIsSortedDesc\"\n        }), \", тогда иконка индикатора будет серой, а не синей.\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"Код сортировки указан только в качестве примера. В реальном приложении следует реализовать более универсальный подход\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 1,\\n        date: '27.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 2,\\n        date: '28.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 3,\\n        date: '29.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 3000069,\\n    },\\n    {\\n        id: 4,\\n        date: '30.06.2022',\\n        title: 'MasterBrok',\\n        sum: 42130000,\\n    },\\n];\\n\\nrender(() => {\\n    const [sortKey, setSortKey] = React.useState(undefined);\\n    const [isSortedDesc, setIsSortedDesc] = React.useState(undefined);\\n\\n    const defaultIsSortedDesc = false;\\n\\n    const handleSort = key => {\\n        setSortKey(key);\\n\\n        if (isSortedDesc !== undefined) {\\n            setIsSortedDesc(!isSortedDesc ? undefined : defaultIsSortedDesc);\\n        } else {\\n            setIsSortedDesc(!defaultIsSortedDesc);\\n        }\\n    };\\n\\n    const sortedData = React.useMemo(() => {\\n        if (!sortKey || isSortedDesc === undefined) return data;\\n\\n        return [...data].sort((a, b) => {\\n            if (sortKey === 'sum') {\\n                return isSortedDesc ? b.sum - a.sum : a.sum - b.sum;\\n            }\\n\\n            if (sortKey === 'date') {\\n                return isSortedDesc ? b.date.localeCompare(a.date) : a.date.localeCompare(b.date);\\n            }\\n        });\\n    }, [data, isSortedDesc, sortKey]);\\n\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table>\\n                <Table.THead>\\n                    <Table.TSortableHeadCell\\n                        title='Дата'\\n                        defaultIsSortedDesc={defaultIsSortedDesc}\\n                        isSortedDesc={sortKey === 'date' ? isSortedDesc : undefined}\\n                        onSort={() => handleSort('date')}\\n                    >\\n                        Дата\\n                    </Table.TSortableHeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.TSortableHeadCell\\n                        title='Сумма'\\n                        isSortedDesc={sortKey === 'sum' ? isSortedDesc : undefined}\\n                        onSort={() => handleSort('sum')}\\n                    >\\n                        Сумма\\n                    </Table.TSortableHeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {sortedData.map(row => (\\n                        <Table.TRow key={row.id}>\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2}>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"пагинация\",\n      children: \"Пагинация\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Для реализации пагинации следует использовать компонент \", _jsx(_components.code, {\n        children: \"Pagination\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Как и в случае с сортировкой, контроль над данными лежит на разработчике.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 28,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 12,\\n        date: '30.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 5,\\n        date: '30.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 3000069,\\n    },\\n    {\\n        id: 4,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"Берест\\\"',\\n        sum: 84300,\\n    },\\n    {\\n        id: 1,\\n        date: '30.06.2022',\\n        title:\\n            'УФК по Свердловской области (Государственное учреждение - Свердловское региональное отделение Фонда социального страхования Российской Федерации)',\\n        sum: 15900,\\n    },\\n    {\\n        id: 27,\\n        date: '21.10.2021',\\n        title: 'MasterBrok',\\n        sum: 106000,\\n    },\\n    {\\n        id: 26,\\n        date: '20.10.2021',\\n        title: 'MR ANTON TAGUNOV',\\n        sum: 189800,\\n    },\\n];\\n\\nArray(100)\\n    .fill('')\\n    .forEach((_, i) =>\\n        data.push({\\n            id: (i + 1) * 100,\\n            date: '20.10.2021',\\n            title: `Контрагент #${i + 1}`,\\n            sum: 1000000 + (i + 1) * 10000,\\n        }),\\n    );\\n\\nrender(() => {\\n    const [perPage, setPerPage] = React.useState(5);\\n    const [page, setPage] = React.useState(0);\\n\\n    const handlePerPageChange = value => {\\n        setPage(0);\\n        setPerPage(value);\\n    };\\n\\n    const handlePageChange = pageIndex => setPage(pageIndex);\\n\\n    const pagesCount = Math.ceil(data.length / perPage);\\n\\n    const currentPageData = React.useMemo(() => {\\n        return data.slice(page * perPage).slice(0, perPage);\\n    }, [data, page, perPage]);\\n\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table\\n                pagination={\\n                    <Table.Pagination\\n                        perPage={perPage}\\n                        currentPageIndex={page}\\n                        pagesCount={pagesCount}\\n                        onPageChange={handlePageChange}\\n                        onPerPageChange={handlePerPageChange}\\n                    />\\n                }\\n            >\\n                <Table.THead>\\n                    <Table.THeadCell title='Дата' width='120px'>\\n                        Дата\\n                    </Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {currentPageData.map(row => (\\n                        <Table.TRow key={row.id}>\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.title}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"раскрывающаяся-строка\",\n      children: \"Раскрывающаяся строка\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TExpandableRow\"\n      }), \" позволяет реализовывать раскрывающиеся строки.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Скрытый контент отрисовывается с помощью рендер-пропса \", _jsx(_components.code, {\n        children: \"renderContent\"\n      }), \", в который передается состояние \", _jsx(_components.code, {\n        children: \"expanded\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Это позволяет более гибко управлять рендером и, например, использовать \", _jsx(_components.code, {\n        children: \"Collapse\"\n      }), \" для плавного раскрытия.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 5,\\n        date: '30.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 12,\\n        date: '30.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 28,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 3000069,\\n    },\\n];\\n\\nrender(() => {\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table>\\n                <Table.THead>\\n                    <Table.THeadCell title='Дата'>Дата</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {data.map(row => (\\n                        <Table.TExpandableRow\\n                            key={row.id}\\n                            defaultExpanded={row.id === 5}\\n                            renderContent={expanded => (\\n                                <>\\n                                    <Table.TCell colSpan={1} />\\n                                    <Table.TCell colSpan={2}>\\n                                        <Collapse expanded={expanded}>\\n                                            <div style={{ paddingBottom: '16px' }}>\\n                                                <div\\n                                                    style={{\\n                                                        border: '1px dashed #007AFF',\\n                                                        height: '200px',\\n                                                    }}\\n                                                />\\n                                            </div>\\n                                        </Collapse>\\n                                    </Table.TCell>\\n                                </>\\n                            )}\\n                        >\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2}>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TExpandableRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"внешний-контроль-над-раскрытием-строк\",\n      children: \"Внешний контроль над раскрытием строк\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"TExpandableRow\"\n      }), \" может использоваться как в uncontrolled, так и controlled режиме, когда нужно самостоятельно управлять раскрытием.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 5,\\n        date: '30.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 12,\\n        date: '30.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 28,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 3000069,\\n    },\\n];\\n\\nrender(() => {\\n    const [expandedRow, setExpandedRow] = React.useState();\\n\\n    const handleExpand = (rowId, expanded) => {\\n        if (expanded) {\\n            setExpandedRow(undefined);\\n        } else {\\n            setExpandedRow(rowId);\\n        }\\n    };\\n\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table>\\n                <Table.THead>\\n                    <Table.THeadCell title='Дата'>Дата</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {data.map(row => (\\n                        <Table.TExpandableRow\\n                            key={row.id}\\n                            expanded={expandedRow === row.id}\\n                            onToggle={expanded => handleExpand(row.id, expanded)}\\n                            renderContent={expanded => (\\n                                <Table.TCell colSpan={3}>\\n                                    <Collapse expanded={expanded}>\\n                                        <div style={{ paddingBottom: '16px' }}>\\n                                            <div\\n                                                style={{\\n                                                    border: '1px dashed #007AFF',\\n                                                    height: '200px',\\n                                                }}\\n                                            />\\n                                        </div>\\n                                    </Collapse>\\n                                </Table.TCell>\\n                            )}\\n                        >\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2}>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TExpandableRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"выбор-строк\",\n      children: \"Выбор строк\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const data = [\\n    {\\n        id: 28,\\n        date: '30.06.2022',\\n        title: 'ООО \\\"КОРПУС-ИТ\\\"',\\n        sum: 21000000,\\n    },\\n    {\\n        id: 12,\\n        date: '30.06.2022',\\n        title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \\\"МОБИЛСТИЛ\\\"',\\n        subtitle:\\n            'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\\n        sum: 10002030,\\n    },\\n    {\\n        id: 5,\\n        date: '30.06.2022',\\n        title: 'ИП Жуков Валерий Сергеевич',\\n        subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\\n        sum: 3000069,\\n    },\\n];\\n\\nrender(() => {\\n    const [selectedRows, setSelectedRows] = React.useState(new Set());\\n\\n    const handleRowSelect = rowId => {\\n        const nextSelected = new Set(selectedRows);\\n\\n        if (rowId === 'all') {\\n            setSelectedRows(\\n                new Set(selectedRows.size === data.length ? [] : data.map(row => row.id)),\\n            );\\n\\n            return;\\n        }\\n\\n        if (nextSelected.has(rowId)) {\\n            nextSelected.delete(rowId);\\n        } else {\\n            nextSelected.add(rowId);\\n        }\\n\\n        setSelectedRows(nextSelected);\\n    };\\n\\n    return (\\n        <div style={{ margin: '24px 0 40px' }}>\\n            <Table>\\n                <Table.THead>\\n                    <Table.THeadCell width='48px'>\\n                        <Tooltip\\n                            view='hint'\\n                            position='top'\\n                            content={\\n                                <React.Fragment>\\n                                    Выбрать все\\n                                    <br />\\n                                    на странице\\n                                </React.Fragment>\\n                            }\\n                        >\\n                            <Checkbox\\n                                size='m'\\n                                onClick={() => handleRowSelect('all')}\\n                                checked={\\n                                    data.length > 0 && data.every(row => selectedRows.has(row.id))\\n                                }\\n                                indeterminate={\\n                                    data.length > 0 && data.some(row => selectedRows.has(row.id))\\n                                }\\n                            />\\n                        </Tooltip>\\n                    </Table.THeadCell>\\n\\n                    <Table.THeadCell title='Дата'>Дата</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {data.map(row => (\\n                        <Table.TExpandableRow\\n                            key={row.id}\\n                            selected={selectedRows.has(row.id)}\\n                            renderContent={expanded => (\\n                                <>\\n                                    <Table.TCell colSpan={1} />\\n                                    <Table.TCell colSpan={3}>\\n                                        <Collapse expanded={expanded}>\\n                                            <div style={{ paddingBottom: '16px' }}>\\n                                                <div\\n                                                    style={{\\n                                                        border: '1px dashed #007AFF',\\n                                                        height: '200px',\\n                                                    }}\\n                                                />\\n                                            </div>\\n                                        </Collapse>\\n                                    </Table.TCell>\\n                                </>\\n                            )}\\n                        >\\n                            <Table.TCell>\\n                                <Checkbox\\n                                    size='m'\\n                                    onClick={() => handleRowSelect(row.id)}\\n                                    checked={selectedRows.has(row.id)}\\n                                />\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2}>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TExpandableRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"фиксация-заголовка\",\n      children: \"Фиксация заголовка\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const getCurrentDay = function(addDays) {\\n    var date = new Date();\\n    date.setDate(date.getDate() + addDays);\\n    return date;\\n}\\nconst data = Array\\n    .from({length: 10}, (_, i) => i + 1)\\n    .map((idx)=>({\\n        id: idx,\\n        date: getCurrentDay(idx),\\n        title: `ООО \\\"Company Name ${idx}\\\"`,\\n        sum: Math.floor(Math.random()*1000000),\\n    }));\\n\\nrender(() => {\\n    return (\\n        <div style={{ margin: '0 0 40px', height: '300px' }}>\\n            <Table stickyHeader>\\n                <Table.THead>\\n                    <Table.THeadCell title='Дата'>Дата</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Контрагент'>Контрагент</Table.THeadCell>\\n\\n                    <Table.THeadCell title='Сумма' textAlign='right' width={268}>\\n                        Сумма\\n                    </Table.THeadCell>\\n                </Table.THead>\\n                <Table.TBody>\\n                    {data.map(row => (\\n                        <Table.TRow key={row.id}>\\n                            <Table.TCell>\\n                                <Typography.Text view='primary-small' tag='div'>\\n                                    {row.date.toLocaleDateString()}\\n                                </Typography.Text>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Space size={2}>\\n                                    <Typography.Text view='primary-small' tag='div'>\\n                                        {row.title}\\n                                    </Typography.Text>\\n                                    <Typography.Text view='primary-small' color='secondary'>\\n                                        {row.subtitle}\\n                                    </Typography.Text>\\n                                </Space>\\n                            </Table.TCell>\\n\\n                            <Table.TCell>\\n                                <Amount\\n                                    value={row.sum}\\n                                    currency='RUR'\\n                                    minority={100}\\n                                    view='withZeroMinorPart'\\n                                    bold='full'\\n                                    transparentMinor={true}\\n                                />\\n                            </Table.TCell>\\n                        </Table.TRow>\\n                    ))}\\n                </Table.TBody>\\n            </Table>\\n        </div>\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Amount } from '@alfalab/core-components-amount';\nimport { Space } from '@alfalab/core-components-space';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Table } from '@alfalab/core-components-table';\nimport { Table as TableTS } from '../component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { stylesStringToObj, getQueryParam } from '../../../screenshot-utils/screenshots-story/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const DATA = [{\n  id: 28,\n  date: '30.06.2022',\n  title: 'ООО \"КОРПУС-ИТ\"',\n  sum: 21000000\n}, {\n  id: 12,\n  date: '30.06.2022',\n  title: 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ \"МОБИЛСТИЛ\"',\n  subtitle: 'Оказание услуг по договору № 26/09 на основании акта № 1450 от 30 июня 2020 года, в т.ч. НДС 18%',\n  sum: 10002030\n}, {\n  id: 5,\n  date: '30.06.2022',\n  title: 'ИП Жуков Валерий Сергеевич',\n  subtitle: 'Услуги по ремонту за июнь, НДС не облагается',\n  sum: 3000069\n}];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Table\",\n      component: Table,\n      id: \"Table\"\n    }), \"\\n\", \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Table\",\n      children: React.createElement(() => {\n        const previewStyles = stylesStringToObj(getQueryParam('wrapperStyles'));\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: previewStyles.backgroundColor\n          },\n          children: /*#__PURE__*/_jsx(_components.div, {\n            style: previewStyles,\n            children: /*#__PURE__*/_jsxs(Table, {\n              compactHorizontal: boolean('compact horizontal'),\n              children: [/*#__PURE__*/_jsxs(Table.THead, {\n                children: [/*#__PURE__*/_jsx(Table.THeadCell, {\n                  width: \"122px\",\n                  id: \"date\",\n                  title: \"\\u0414\\u0430\\u0442\\u0430\",\n                  children: \"\\u0414\\u0430\\u0442\\u0430\"\n                }), /*#__PURE__*/_jsx(Table.THeadCell, {\n                  id: \"title\",\n                  title: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\",\n                  children: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\"\n                }), /*#__PURE__*/_jsx(Table.THeadCell, {\n                  width: \"186px\",\n                  id: \"sum\",\n                  title: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n                  textAlign: \"right\",\n                  children: \"\\u0421\\u0443\\u043C\\u043C\\u0430\"\n                })]\n              }), /*#__PURE__*/_jsx(Table.TBody, {\n                children: DATA.map(row => /*#__PURE__*/_jsxs(Table.TRow, {\n                  children: [/*#__PURE__*/_jsx(Table.TCell, {\n                    children: /*#__PURE__*/_jsx(Typography.Text, {\n                      view: \"primary-small\",\n                      tag: \"div\",\n                      children: row.date\n                    })\n                  }), /*#__PURE__*/_jsx(Table.TCell, {\n                    children: /*#__PURE__*/_jsxs(Space, {\n                      size: 2,\n                      children: [/*#__PURE__*/_jsx(Typography.Text, {\n                        view: \"primary-small\",\n                        tag: \"div\",\n                        children: row.title\n                      }), /*#__PURE__*/_jsx(Typography.Text, {\n                        view: \"primary-small\",\n                        color: \"secondary\",\n                        children: row.subtitle\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(Table.TCell, {\n                    children: /*#__PURE__*/_jsx(Amount, {\n                      value: row.sum,\n                      currency: \"RUR\",\n                      minority: 100,\n                      view: \"withZeroMinorPart\",\n                      bold: \"full\",\n                      transparentMinor: true\n                    })\n                  })]\n                }, row.id))\n              })]\n            })\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Table\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/table\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Table } from '@alfalab/core-components/table';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        components: {\n          Table: TableTS,\n          Wrapper: TableTS.Wrapper,\n          Pagination: TableTS.Pagination,\n          TCell: TableTS.TCell,\n          THead: TableTS.THead,\n          THeadCell: TableTS.THeadCell,\n          TSortableHeadCell: TableTS.TSortableHeadCell,\n          TRow: TableTS.TRow\n        }\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const table = () => React.createElement(() => {\n  const previewStyles = stylesStringToObj(getQueryParam(\"wrapperStyles\"));\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: previewStyles.backgroundColor\n    },\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: previewStyles,\n      children: /*#__PURE__*/_jsxs(Table, {\n        compactHorizontal: boolean(\"compact horizontal\"),\n        children: [/*#__PURE__*/_jsxs(Table.THead, {\n          children: [/*#__PURE__*/_jsx(Table.THeadCell, {\n            width: \"122px\",\n            id: \"date\",\n            title: \"\\\\u0414\\\\u0430\\\\u0442\\\\u0430\",\n            children: \"\\u0414\\u0430\\u0442\\u0430\"\n          }), /*#__PURE__*/_jsx(Table.THeadCell, {\n            id: \"title\",\n            title: \"\\\\u041A\\\\u043E\\\\u043D\\\\u0442\\\\u0440\\\\u0430\\\\u0433\\\\u0435\\\\u043D\\\\u0442\",\n            children: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u0430\\u0433\\u0435\\u043D\\u0442\"\n          }), /*#__PURE__*/_jsx(Table.THeadCell, {\n            width: \"186px\",\n            id: \"sum\",\n            title: \"\\\\u0421\\\\u0443\\\\u043C\\\\u043C\\\\u0430\",\n            textAlign: \"right\",\n            children: \"\\u0421\\u0443\\u043C\\u043C\\u0430\"\n          })]\n        }), /*#__PURE__*/_jsx(Table.TBody, {\n          children: DATA.map(row => /*#__PURE__*/_jsxs(Table.TRow, {\n            children: [/*#__PURE__*/_jsx(Table.TCell, {\n              children: /*#__PURE__*/_jsx(Typography.Text, {\n                view: \"primary-small\",\n                tag: \"div\",\n                children: row.date\n              })\n            }), /*#__PURE__*/_jsx(Table.TCell, {\n              children: /*#__PURE__*/_jsxs(Space, {\n                size: 2,\n                children: [/*#__PURE__*/_jsx(Typography.Text, {\n                  view: \"primary-small\",\n                  tag: \"div\",\n                  children: row.title\n                }), /*#__PURE__*/_jsx(Typography.Text, {\n                  view: \"primary-small\",\n                  color: \"secondary\",\n                  children: row.subtitle\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Table.TCell, {\n              children: /*#__PURE__*/_jsx(Amount, {\n                value: row.sum,\n                currency: \"RUR\",\n                minority: 100,\n                view: \"withZeroMinorPart\",\n                bold: \"full\",\n                transparentMinor: true\n              })\n            })]\n          }, row.id))\n        })]\n      })\n    })\n  });\n});\ntable.storyName = 'Table';\ntable.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const previewStyles = stylesStringToObj(getQueryParam(\\\"wrapperStyles\\\"));\\n  return <div style={{\\n    backgroundColor: previewStyles.backgroundColor\\n  }}>\\n                <div style={previewStyles}>\\n                    <Table compactHorizontal={boolean(\\\"compact horizontal\\\")}>\\n                        <Table.THead>\\n                            <Table.THeadCell width=\\\"122px\\\" id=\\\"date\\\" title=\\\"\\\\u0414\\\\u0430\\\\u0442\\\\u0430\\\">\\n                                Дата\\n                            </Table.THeadCell>\\n                            <Table.THeadCell id=\\\"title\\\" title=\\\"\\\\u041A\\\\u043E\\\\u043D\\\\u0442\\\\u0440\\\\u0430\\\\u0433\\\\u0435\\\\u043D\\\\u0442\\\">\\n                                Контрагент\\n                            </Table.THeadCell>\\n                            <Table.THeadCell width=\\\"186px\\\" id=\\\"sum\\\" title=\\\"\\\\u0421\\\\u0443\\\\u043C\\\\u043C\\\\u0430\\\" textAlign=\\\"right\\\">\\n                                Сумма\\n                            </Table.THeadCell>\\n                        </Table.THead>\\n                        <Table.TBody>\\n                            {DATA.map(row => <Table.TRow key={row.id}>\\n                                    <Table.TCell>\\n                                        <Typography.Text view=\\\"primary-small\\\" tag=\\\"div\\\">\\n                                            {row.date}\\n                                        </Typography.Text>\\n                                    </Table.TCell>\\n                                    <Table.TCell>\\n                                        <Space size={2}>\\n                                            <Typography.Text view=\\\"primary-small\\\" tag=\\\"div\\\">\\n                                                {row.title}\\n                                            </Typography.Text>\\n                                            <Typography.Text view=\\\"primary-small\\\" color=\\\"secondary\\\">\\n                                                {row.subtitle}\\n                                            </Typography.Text>\\n                                        </Space>\\n                                    </Table.TCell>\\n                                    <Table.TCell>\\n                                        <Amount value={row.sum} currency=\\\"RUR\\\" minority={100} view=\\\"withZeroMinorPart\\\" bold=\\\"full\\\" transparentMinor={true} />\\n                                    </Table.TCell>\\n                                </Table.TRow>)}\\n                        </Table.TBody>\\n                    </Table>\\n                </div>\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Table',\n  id: 'Table',\n  component: Table,\n  tags: ['stories-mdx'],\n  includeStories: [\"table\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import qs from 'querystring';\n\nimport { CSSProperties } from 'react';\n\nexport const queryParams = qs.parse(document.location.search);\n\nexport const getQueryParam = (param: string, parse = false) => {\n    const value = queryParams[param] as string;\n\n    return parse ? parseValue(value) : value;\n};\n\nexport const parseKnobs = () =>\n    Object.entries(queryParams).reduce((acc, [k, v]) => {\n        if (k.startsWith('knob-')) {\n            acc[k.replace('knob-', '')] = parseValue(v as string);\n        }\n\n        return acc;\n        // eslint-disable-next-line\n    }, {} as Record<string, any>);\n\nexport function parseValue(value: string) {\n    const isBoolean = () => ['true', 'false'].includes(value);\n    const isNumeric = () => !Number.isNaN(+value) && !Number.isNaN(parseFloat(value));\n\n    if (!value) return undefined;\n\n    if (isBoolean()) return value === 'true';\n\n    if (isNumeric()) return parseFloat(value);\n\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n}\n\nexport function stylesStringToObj(str = ''): CSSProperties {\n    if (!str) return {};\n\n    const properties = str.split(';').map((v) => v.trim());\n    const obj: Record<string, unknown> = {};\n\n    properties.forEach((property) => {\n        const [name, val] = property.split(':').map((v) => v.trim());\n\n        obj[name] = val;\n    });\n\n    return obj as CSSProperties;\n}\n\nexport function isJsonObj(str: unknown) {\n    try {\n        const ret = JSON.parse(str as string);\n\n        return typeof ret === 'object';\n    } catch (e) {\n        return false;\n    }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","h2","pre","ul","li","em","h3","href","target","rel","id","live","className","MDXContent","wrapper","MDXLayout","DATA","date","title","sum","subtitle","div","component","Table","name","previewStyles","style","backgroundColor","compactHorizontal","boolean","width","textAlign","map","row","Typography","view","tag","Space","size","color","Amount","currency","minority","bold","transparentMinor","version","package","description","changelog","Wrapper","Pagination","TCell","THead","THeadCell","TSortableHeadCell","TRow","table","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","_defineProperty","GithubIcon","fill","direction","align","usages","projects","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","queryParams","qs","document","location","getQueryParam","param","parse","undefined","parseValue","parseKnobs","entries","k","v","startsWith","isBoolean","includes","isNumeric","Number","isNaN","parseFloat","JSON","e","stylesStringToObj","str","properties","split","trim","obj","forEach","property","_property$split$map","_property$split$map2","val","isJsonObj","hasOwnProperty","prop","prototype","call","module","exports","sep","eq","options","maxKeys","len","i","kstr","vstr","x","idx","indexOf","substr","decodeURIComponent","Array","isArray","stringifyPrimitive","isFinite","keys","ks","encodeURIComponent","join","decode","encode","stringify"],"sourceRoot":""}