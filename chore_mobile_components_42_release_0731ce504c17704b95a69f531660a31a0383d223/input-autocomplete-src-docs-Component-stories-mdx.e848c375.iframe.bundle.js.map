{"version":3,"file":"input-autocomplete-src-docs-Component-stories-mdx.e848c375.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/input-autocomplete/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"шеврон\",\n      children: \"Шеврон\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Добавляйте шеврон, если пользователю будет удобней выбирать значение, просматривая список, не вводя первые символы.\\nЕсли список длинный и вы предполагаете, что пользователь будет вводить значение с клавиатуры, шеврон можно скрыть.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [shownChevron, setShownChevron] = React.useState(false);\\n    const [multiple, setMultiple] = React.useState(false);\\n    const [value, setValue] = React.useState('');\\n\\n    const options = [\\n        { key: 'Neptunium' },\\n        { key: 'Plutonium' },\\n        { key: 'Americium' },\\n        { key: 'Curium' },\\n        { key: 'Berkelium' },\\n        { key: 'Californium' },\\n        { key: 'Einsteinium' },\\n        { key: 'Fermium' },\\n        { key: 'Mendelevium' },\\n        { key: 'Nobelium' },\\n        { key: 'Lawrencium' },\\n        { key: 'Rutherfordium' },\\n        { key: 'Dubnium' },\\n        { key: 'Seaborgium' },\\n        { key: 'Bohrium' },\\n    ];\\n\\n    const matchOption = (option, inputValue) =>\\n        option.key.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const handleInput = (event) => {\\n        setValue(event.target.value);\\n    };\\n\\n    const handleChange = ({ selected, selectedMultiple }) => {\\n        if (multiple) {\\n            const value = selectedMultiple.length\\n                ? selectedMultiple.map((option) => option.key).join(', ') + ', '\\n                : '';\\n            setValue(value);\\n\\n            return;\\n        }\\n\\n        setValue(selected ? selected.key : '');\\n    };\\n\\n    const inputValues = value.replace(/ /g, '').split(',');\\n\\n    const selectedOptions = options.filter((option) => inputValues.includes(option.key.trim()));\\n\\n    const selected = selectedOptions.map((option) => option.key);\\n\\n    const getFilteredOptions = () => {\\n        if (multiple) {\\n            return inputValues.length === selected.length\\n                ? options\\n                : options.filter((option) => {\\n                      return (\\n                          selectedOptions.includes(option) ||\\n                          matchOption(option, inputValues[inputValues.length - 1])\\n                      );\\n                  });\\n        }\\n\\n        return options.filter((option) => matchOption(option, value));\\n    };\\n\\n    return (\\n        <div style={{ width: '100%' }}>\\n            <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n                <InputAutocompleteDesktop\\n                    size='m'\\n                    selected={multiple ? selected : undefined}\\n                    block={true}\\n                    options={getFilteredOptions()}\\n                    label='Инпут с автокомплитом'\\n                    onChange={handleChange}\\n                    onInput={handleInput}\\n                    value={value}\\n                    Arrow={shownChevron ? Arrow : undefined}\\n                    multiple={multiple}\\n                    allowUnselect={true}\\n                    Option={BaseOption}\\n                    {...(shownChevron\\n                        ? {\\n                              showEmptyOptionsList: true,\\n                              optionsListProps: {\\n                                  emptyPlaceholder: (\\n                                      <div style={{ display: 'flex', justifyContent: 'center' }}>\\n                                          <Typography.Text view='component'>\\n                                              Ничего не нашлось\\n                                          </Typography.Text>\\n                                      </div>\\n                                  ),\\n                              },\\n                          }\\n                        : null)}\\n                />\\n            </div>\\n            <Gap size='xl' />\\n\\n            <Switch\\n                checked={shownChevron}\\n                label='Шеврон'\\n                onChange={() => setShownChevron((prevState) => !prevState)}\\n            />\\n            <Gap size='m' />\\n            <Switch\\n                checked={multiple}\\n                label='Мультивыбор'\\n                onChange={() => {\\n                    setMultiple((prevState) => !prevState);\\n                    setValue('');\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [shownChevron, setShownChevron] = React.useState(false);\\n    const [multiple, setMultiple] = React.useState(false);\\n    const [value, setValue] = React.useState('');\\n    const [filter, setFilter] = React.useState('');\\n\\n    const options = [\\n        { key: 'Neptunium' },\\n        { key: 'Plutonium' },\\n        { key: 'Americium' },\\n        { key: 'Curium' },\\n        { key: 'Berkelium' },\\n        { key: 'Californium' },\\n        { key: 'Einsteinium' },\\n        { key: 'Fermium' },\\n        { key: 'Mendelevium' },\\n        { key: 'Nobelium' },\\n        { key: 'Lawrencium' },\\n        { key: 'Rutherfordium' },\\n        { key: 'Dubnium' },\\n        { key: 'Seaborgium' },\\n        { key: 'Bohrium' },\\n    ];\\n\\n    const matchOption = (option, inputValue) =>\\n        option.key.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const handleFilter = (event) => {\\n        setFilter(event.target.value);\\n    };\\n\\n    const filterValues = filter\\n        .split(',')\\n        .map((v) => v.trim())\\n        .filter((v) => v);\\n\\n    const selectedOptions = options.filter((option) => filterValues.includes(option.key.trim()));\\n\\n    const selected = selectedOptions.map((option) => option.key);\\n\\n    const handleChange = (payload) => {\\n        let newValue = '';\\n\\n        if (payload && payload.selectedMultiple) {\\n            newValue = payload.selectedMultiple.length\\n                ? payload.selectedMultiple.map((option) => option.key).join(', ') +\\n                  `${multiple ? `,` : ''}`\\n                : '';\\n        } else {\\n            newValue = payload || '';\\n        }\\n\\n        setValue(newValue);\\n        setFilter(newValue);\\n    };\\n\\n    const filteredOptions =\\n        filterValues.length === selected.length\\n            ? options\\n            : options.filter((option) => {\\n                  return (\\n                      selectedOptions.includes(option) ||\\n                      matchOption(option, filterValues[filterValues.length - 1])\\n                  );\\n              });\\n\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <InputAutocompleteMobile\\n                size='m'\\n                block={true}\\n                value={value}\\n                Arrow={shownChevron ? Arrow : undefined}\\n                filter={filter}\\n                options={filteredOptions}\\n                label='Инпут с автокомплитом'\\n                placeholder='Начните вводить название'\\n                multiple={multiple}\\n                selected={selected}\\n                closeOnSelect={!multiple}\\n                allowUnselect={true}\\n                onChange={handleChange}\\n                onFilter={handleFilter}\\n                onClearFilter={() => setFilter('')}\\n                onCancel={() => setFilter(value)}\\n            />\\n            <Gap size='m' />\\n            <InputAutocompleteModalMobile\\n                size='m'\\n                block={true}\\n                value={value}\\n                Arrow={shownChevron ? Arrow : undefined}\\n                filter={filter}\\n                options={filteredOptions}\\n                label='Инпут с автокомплитом'\\n                placeholder='Начните вводить название'\\n                multiple={multiple}\\n                selected={selected}\\n                closeOnSelect={!multiple}\\n                allowUnselect={true}\\n                onChange={handleChange}\\n                onFilter={handleFilter}\\n                onClearFilter={() => setFilter('')}\\n                onCancel={() => setFilter(value)}\\n            />\\n            <Gap size='xl' />\\n\\n            <Switch\\n                checked={shownChevron}\\n                label='Шеврон'\\n                onChange={() => setShownChevron((prevState) => !prevState)}\\n            />\\n            <Gap size='m' />\\n            <Switch\\n                checked={multiple}\\n                label='Мультивыбор'\\n                onChange={() => {\\n                    setMultiple((prevState) => !prevState);\\n                    setValue('');\\n                }}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"пустой-список\",\n      children: \"Пустой список\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Когда по запросу пользователя не находится соответствия в списке, рекомендуется использовать такой шаблон.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <InputAutocompleteDesktop\\n                size='m'\\n                block={true}\\n                options={[]}\\n                label='Пустой список'\\n                showEmptyOptionsList={true}\\n                optionsListProps={{\\n                    emptyPlaceholder: (\\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\\n                            <Typography.Text view='component'>Ничего не нашлось</Typography.Text>\\n                        </div>\\n                    ),\\n                }}\\n                Option={BaseOption}\\n            />\\n        </div>\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    return (\\n        <div style={{ width: document.body.clientWidth < 450 ? '100%' : 320 }}>\\n            <InputAutocompleteMobile\\n                size='m'\\n                block={true}\\n                options={[]}\\n                onChange={() => {}}\\n                label='Инпут с автокомплитом'\\n                placeholder='Начните вводить название'\\n                showEmptyOptionsList={true}\\n                optionsListProps={{\\n                    emptyPlaceholder: (\\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\\n                            <Typography.Text view='component'>Ничего не нашлось</Typography.Text>\\n                        </div>\\n                    ),\\n                }}\\n                Option={BaseOption}\\n            />\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"кастомизация-инпута\",\n      children: \"Кастомизация инпута\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"При необходимости можно кастомизировать инпут и выпадающий список.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const matchOption = (option, inputValue) =>\\n        option.content.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const mask = [\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n    ];\\n\\n    const cards = [\\n        {\\n            key: 'Карта 1',\\n            content: '4035 5010 0000 0008',\\n        },\\n        {\\n            key: 'Карта 2',\\n            content: '4360 0000 0100 0005',\\n        },\\n        {\\n            key: 'Карта 3',\\n            content: '8171 9999 2766 0000',\\n        },\\n        {\\n            key: 'Карта 4',\\n            content: '5204 2477 5000 1471',\\n        },\\n        {\\n            key: 'Карта 5',\\n            content: '4111 1111 1111 1111',\\n        },\\n    ];\\n\\n    const CardOption = (props) => (\\n        <BaseOption {...props}>\\n            <div style={{ padding: 'var(--gap-s)' }}>\\n                {props.option.key}\\n                <br />\\n                <sub>{props.option.content}</sub>\\n            </div>\\n        </BaseOption>\\n    );\\n\\n    const [value, setValue] = React.useState('');\\n    const inputRef = React.useRef();\\n\\n    const handleInput = (event) => {\\n        setValue(event.target.value);\\n    };\\n\\n    const handleChange = ({ selected }) => {\\n        const value = selected ? selected.content : null;\\n        setValue(value);\\n        if (value && inputRef.current) {\\n            requestAnimationFrame(() =>\\n                inputRef.current.setSelectionRange(value.length, value.length),\\n            );\\n        }\\n    };\\n\\n    const filteredOptions = cards.filter((option) => matchOption(option, value));\\n\\n    return (\\n        <InputAutocompleteDesktop\\n            size='m'\\n            options={filteredOptions}\\n            selected={[]}\\n            label='Маскированный ввод счёта'\\n            onInput={handleInput}\\n            onChange={handleChange}\\n            value={value}\\n            Option={CardOption}\\n            Input={MaskedInput}\\n            inputProps={{\\n                ref: inputRef,\\n                mask,\\n            }}\\n        />\\n    );\\n});\\n//MOBILE\\nrender(() => {\\n    const [value, setValue] = React.useState('');\\n    const [filter, setFilter] = React.useState('');\\n\\n    const matchOption = (option, inputValue) =>\\n        option.content.toLowerCase().includes((inputValue || '').toLowerCase());\\n\\n    const mask = [\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        ' ',\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n        /\\\\d/,\\n    ];\\n\\n    const cards = [\\n        {\\n            key: 'Карта 1',\\n            content: '4035 5010 0000 0008',\\n        },\\n        {\\n            key: 'Карта 2',\\n            content: '4360 0000 0100 0005',\\n        },\\n        {\\n            key: 'Карта 3',\\n            content: '8171 9999 2766 0000',\\n        },\\n        {\\n            key: 'Карта 4',\\n            content: '5204 2477 5000 1471',\\n        },\\n        {\\n            key: 'Карта 5',\\n            content: '4111 1111 1111 1111',\\n        },\\n    ];\\n\\n    const CardOption = (props) => (\\n        <BaseOption {...props}>\\n            <div style={{ padding: 'var(--gap-s) var(--gap-m)' }}>\\n                {props.option.key}\\n                <br />\\n                <sub>{props.option.content}</sub>\\n            </div>\\n        </BaseOption>\\n    );\\n\\n    const handleFilter = (event) => {\\n        setFilter(event.target.value);\\n    };\\n\\n    const handleChange = (payload) => {\\n        const newValue = payload\\n            ? isOptionShape(payload.selected)\\n                ? payload.selected.content\\n                : payload\\n            : '';\\n\\n        setValue(newValue);\\n        setFilter(newValue);\\n    };\\n\\n    const filteredOptions = cards.filter((option) => matchOption(option, filter));\\n\\n    return (\\n        <InputAutocompleteMobile\\n            size='m'\\n            block={true}\\n            value={value}\\n            filter={filter}\\n            options={filteredOptions}\\n            label='Счёт'\\n            placeholder='Маскированный ввод счёта'\\n            onChange={handleChange}\\n            onClearFilter={() => setFilter('')}\\n            bottomSheetProps={{\\n                transitionProps: {\\n                    onEnter: () => setFilter(value),\\n                },\\n            }}\\n            Option={CardOption}\\n            Input={MaskedInput}\\n            bottomSheetHeaderAddonsProps={{ mask, onChange: handleFilter }}\\n        />\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"морфология\",\n      children: \"Морфология\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компонент является оберткой над \", _jsx(_components.a, {\n        href: \"?path=/docs/components-formcontrol--docs\",\n        children: \"FormControl\"\n      }), \",\\nпоэтому наследует все доступные для него настройки.\\nСписок это кастомизируемый \", _jsx(_components.a, {\n        href: \"?path=/docs/components-popover--docs\",\n        children: \"Popover\"\n      }), \"\\nв десктопной версии и \", _jsx(_components.a, {\n        href: \"?path=/docs/components-bottomsheet--docs\",\n        children: \"Bottomsheet\"\n      }), \"\\nили \", _jsx(_components.a, {\n        href: \"?path=/docs/components-modal--docs\",\n        children: \"Modal\"\n      }), \"\\nв мобильной.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {InputAutocomplete} from '..';\nimport {InputAutocompleteMobile} from '../mobile';\nimport {InputAutocompleteDesktop} from '../desktop';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { InputAutocomplete } from '@alfalab/core-components/input-autocomplete';\\nimport { InputAutocompleteDesktop } from '@alfalab/core-components/input-autocomplete/desktop';\\nimport { InputAutocompleteMobile } from '@alfalab/core-components/input-autocomplete/mobile';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        InputAutocomplete,\n        InputAutocompleteDesktop,\n        InputAutocompleteMobile\n      }\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { text, select, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Arrow, isOptionShape } from '@alfalab/core-components-select/shared';\nimport { InputAutocompleteDesktop as InputAutocomplete } from '@alfalab/core-components-input-autocomplete/desktop';\nimport { InputAutocompleteMobile, InputAutocompleteModalMobile } from '@alfalab/core-components-input-autocomplete/mobile';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const options = [{\n  key: 'Neptunium'\n}, {\n  key: 'Plutonium'\n}, {\n  key: 'Americium'\n}, {\n  key: 'Curium'\n}, {\n  key: 'Berkelium'\n}, {\n  key: 'Californium'\n}, {\n  key: 'Einsteinium'\n}, {\n  key: 'Fermium'\n}, {\n  key: 'Mendelevium'\n}, {\n  key: 'Nobelium'\n}, {\n  key: 'Lawrencium'\n}, {\n  key: 'Rutherfordium'\n}, {\n  key: 'Dubnium'\n}, {\n  key: 'Seaborgium'\n}, {\n  key: 'Bohrium'\n}];\nexport const matchOption = (option, inputValue) => option.key.toLowerCase().includes((inputValue || '').toLowerCase());\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/InputAutocomplete\",\n      component: InputAutocomplete,\n      id: \"InputAutocomplete\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"InputAutocomplete\",\n      children: React.createElement(() => {\n        const [value, setValue] = React.useState('');\n        const handleInput = event => {\n          setValue(event.target.value);\n        };\n        const handleChange = ({\n          selected\n        }) => {\n          setValue(selected ? selected.key : '');\n        };\n        const filteredOptions = options.filter(option => matchOption(option, value));\n        return /*#__PURE__*/_jsx(InputAutocomplete, {\n          options: filteredOptions,\n          selected: boolean('prevent select', true) ? [] : undefined,\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          error: text('error', ''),\n          success: boolean('success', false),\n          hint: text('hint', ''),\n          allowUnselect: boolean('allowUnselect', true),\n          closeOnSelect: boolean('closeOnSelect', false),\n          Arrow: boolean('Arrow', false) ? Arrow : undefined,\n          circularNavigation: boolean('circularNavigation', false),\n          placeholder: text('placeholder', 'Введите элемент'),\n          label: text('label', 'Элемент'),\n          labelView: select('labelView', ['inner', 'outer'], 'inner'),\n          onChange: handleChange,\n          onInput: handleInput,\n          value: value\n        });\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"InputAutocompleteMobile\",\n      children: React.createElement(() => {\n        const options = [{\n          key: '1',\n          content: 'Neptunium'\n        }, {\n          key: '2',\n          content: 'Plutonium'\n        }, {\n          key: '3',\n          content: 'Americium'\n        }, {\n          key: '4',\n          content: 'Curium'\n        }, {\n          key: '5',\n          content: 'Berkelium'\n        }, {\n          key: '6',\n          content: 'Californium'\n        }, {\n          key: '7',\n          content: 'Einsteinium'\n        }, {\n          key: '8',\n          content: 'Fermium'\n        }, {\n          key: '9',\n          content: 'Hydrogenium'\n        }, {\n          key: '10',\n          content: 'Helium'\n        }, {\n          key: '11',\n          content: 'Lithium'\n        }, {\n          key: '12',\n          content: 'Beryllium'\n        }, {\n          key: '13',\n          content: 'Borum'\n        }, {\n          key: '14',\n          content: 'Carboneum'\n        }, {\n          key: '15',\n          content: 'Nitrogenium'\n        }, {\n          key: '16',\n          content: 'Oxygenium'\n        }];\n        const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || '').toLowerCase());\n        const [value, setValue] = React.useState('');\n        const [filter, setFilter] = React.useState('');\n        const handleFilter = event => {\n          setFilter(event.target.value);\n        };\n        const handleChange = payload => {\n          const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : '';\n          setValue(newValue);\n          setFilter(newValue);\n        };\n        const filteredOptions = options.filter(option => matchOption(option, filter));\n        return /*#__PURE__*/_jsx(InputAutocompleteMobile, {\n          dataTestId: 'asfa fs asf afa',\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          error: text('error', ''),\n          hint: text('hint', ''),\n          closeOnSelect: boolean('closeOnSelect', true),\n          value: value,\n          filter: filter,\n          options: filteredOptions,\n          placeholder: text('placeholder', 'Выберите элемент'),\n          label: text('label', 'Элемент'),\n          labelView: select('labelView', ['inner', 'outer'], 'inner'),\n          onChange: handleChange,\n          onFilter: handleFilter,\n          onClearFilter: () => setFilter(''),\n          continueButtonProps: {\n            dataTestId: 'continue'\n          },\n          cancelButtonProps: {\n            dataTestId: 'cancel'\n          },\n          bottomSheetProps: {\n            transitionProps: {\n              onEnter: () => setFilter(value)\n            }\n          }\n        });\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"InputAutocompleteModalMobile\",\n      children: React.createElement(() => {\n        const options = [{\n          key: '1',\n          content: 'Neptunium'\n        }, {\n          key: '2',\n          content: 'Plutonium'\n        }, {\n          key: '3',\n          content: 'Americium'\n        }, {\n          key: '4',\n          content: 'Curium'\n        }, {\n          key: '5',\n          content: 'Berkelium'\n        }, {\n          key: '6',\n          content: 'Californium'\n        }, {\n          key: '7',\n          content: 'Einsteinium'\n        }, {\n          key: '8',\n          content: 'Fermium'\n        }, {\n          key: '9',\n          content: 'Hydrogenium'\n        }, {\n          key: '10',\n          content: 'Helium'\n        }, {\n          key: '11',\n          content: 'Lithium'\n        }, {\n          key: '12',\n          content: 'Beryllium'\n        }, {\n          key: '13',\n          content: 'Borum'\n        }, {\n          key: '14',\n          content: 'Carboneum'\n        }, {\n          key: '15',\n          content: 'Nitrogenium'\n        }, {\n          key: '16',\n          content: 'Oxygenium'\n        }];\n        const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || '').toLowerCase());\n        const [value, setValue] = React.useState('');\n        const [filter, setFilter] = React.useState('');\n        const handleFilter = event => {\n          setFilter(event.target.value);\n        };\n        const handleChange = payload => {\n          const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : '';\n          setValue(newValue);\n          setFilter(newValue);\n        };\n        const filteredOptions = options.filter(option => matchOption(option, filter));\n        return /*#__PURE__*/_jsx(InputAutocompleteModalMobile, {\n          dataTestId: \"iamm\",\n          block: boolean('block', false),\n          size: select('size', ['s', 'm', 'l', 'xl'], 's'),\n          disabled: boolean('disabled', false),\n          error: text('error', ''),\n          hint: text('hint', ''),\n          closeOnSelect: boolean('closeOnSelect', true),\n          value: value,\n          filter: filter,\n          options: filteredOptions,\n          placeholder: text('placeholder', 'Выберите элемент'),\n          label: text('label', 'Элемент'),\n          labelView: select('labelView', ['inner', 'outer'], 'inner'),\n          onChange: handleChange,\n          onFilter: handleFilter,\n          onClearFilter: () => setFilter(''),\n          continueButtonProps: {\n            dataTestId: 'continue'\n          },\n          cancelButtonProps: {\n            dataTestId: 'cancel'\n          }\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"InputAutocomplete\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/input-autocomplete\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=58839%3A63017\",\n      children: \"\\u0414\\u0430\\u0435\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445, \\u043B\\u0438\\u0431\\u043E \\u0432\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0441\\u0432\\u043E\\u0451 \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u043A\\u043B\\u0430\\u0432\\u0438\\u0430\\u0442\\u0443\\u0440\\u044B.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const inputAutocomplete = () => React.createElement(() => {\n  const [value, setValue] = React.useState(\"\");\n  const handleInput = event => {\n    setValue(event.target.value);\n  };\n  const handleChange = ({\n    selected\n  }) => {\n    setValue(selected ? selected.key : \"\");\n  };\n  const filteredOptions = options.filter(option => matchOption(option, value));\n  return /*#__PURE__*/_jsx(InputAutocomplete, {\n    options: filteredOptions,\n    selected: boolean(\"prevent select\", true) ? [] : undefined,\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    error: text(\"error\", \"\"),\n    success: boolean(\"success\", false),\n    hint: text(\"hint\", \"\"),\n    allowUnselect: boolean(\"allowUnselect\", true),\n    closeOnSelect: boolean(\"closeOnSelect\", false),\n    Arrow: boolean(\"Arrow\", false) ? Arrow : undefined,\n    circularNavigation: boolean(\"circularNavigation\", false),\n    placeholder: text(\"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    label: text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n    onChange: handleChange,\n    onInput: handleInput,\n    value: value\n  });\n});\ninputAutocomplete.storyName = 'InputAutocomplete';\ninputAutocomplete.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const [value, setValue] = React.useState(\\\"\\\");\\n  const handleInput = event => {\\n    setValue(event.target.value);\\n  };\\n  const handleChange = ({\\n    selected\\n  }) => {\\n    setValue(selected ? selected.key : \\\"\\\");\\n  };\\n  const filteredOptions = options.filter(option => matchOption(option, value));\\n  return <InputAutocomplete options={filteredOptions} selected={boolean(\\\"prevent select\\\", true) ? [] : undefined} block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} error={text(\\\"error\\\", \\\"\\\")} success={boolean(\\\"success\\\", false)} hint={text(\\\"hint\\\", \\\"\\\")} allowUnselect={boolean(\\\"allowUnselect\\\", true)} closeOnSelect={boolean(\\\"closeOnSelect\\\", false)} Arrow={boolean(\\\"Arrow\\\", false) ? Arrow : undefined} circularNavigation={boolean(\\\"circularNavigation\\\", false)} placeholder={text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u0432\\\\u0435\\\\u0434\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} label={text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} onChange={handleChange} onInput={handleInput} value={value} />;\\n})'\n  }\n};\nexport const inputAutocompleteMobile = () => React.createElement(() => {\n  const options = [{\n    key: \"1\",\n    content: \"Neptunium\"\n  }, {\n    key: \"2\",\n    content: \"Plutonium\"\n  }, {\n    key: \"3\",\n    content: \"Americium\"\n  }, {\n    key: \"4\",\n    content: \"Curium\"\n  }, {\n    key: \"5\",\n    content: \"Berkelium\"\n  }, {\n    key: \"6\",\n    content: \"Californium\"\n  }, {\n    key: \"7\",\n    content: \"Einsteinium\"\n  }, {\n    key: \"8\",\n    content: \"Fermium\"\n  }, {\n    key: \"9\",\n    content: \"Hydrogenium\"\n  }, {\n    key: \"10\",\n    content: \"Helium\"\n  }, {\n    key: \"11\",\n    content: \"Lithium\"\n  }, {\n    key: \"12\",\n    content: \"Beryllium\"\n  }, {\n    key: \"13\",\n    content: \"Borum\"\n  }, {\n    key: \"14\",\n    content: \"Carboneum\"\n  }, {\n    key: \"15\",\n    content: \"Nitrogenium\"\n  }, {\n    key: \"16\",\n    content: \"Oxygenium\"\n  }];\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || \"\").toLowerCase());\n  const [value, setValue] = React.useState(\"\");\n  const [filter, setFilter] = React.useState(\"\");\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n  const handleChange = payload => {\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : \"\";\n    setValue(newValue);\n    setFilter(newValue);\n  };\n  const filteredOptions = options.filter(option => matchOption(option, filter));\n  return /*#__PURE__*/_jsx(InputAutocompleteMobile, {\n    dataTestId: \"asfa fs asf afa\",\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    error: text(\"error\", \"\"),\n    hint: text(\"hint\", \"\"),\n    closeOnSelect: boolean(\"closeOnSelect\", true),\n    value: value,\n    filter: filter,\n    options: filteredOptions,\n    placeholder: text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    label: text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n    onChange: handleChange,\n    onFilter: handleFilter,\n    onClearFilter: () => setFilter(\"\"),\n    continueButtonProps: {\n      dataTestId: \"continue\"\n    },\n    cancelButtonProps: {\n      dataTestId: \"cancel\"\n    },\n    bottomSheetProps: {\n      transitionProps: {\n        onEnter: () => setFilter(value)\n      }\n    }\n  });\n});\ninputAutocompleteMobile.storyName = 'InputAutocompleteMobile';\ninputAutocompleteMobile.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const options = [{\\n    key: \\\"1\\\",\\n    content: \\\"Neptunium\\\"\\n  }, {\\n    key: \\\"2\\\",\\n    content: \\\"Plutonium\\\"\\n  }, {\\n    key: \\\"3\\\",\\n    content: \\\"Americium\\\"\\n  }, {\\n    key: \\\"4\\\",\\n    content: \\\"Curium\\\"\\n  }, {\\n    key: \\\"5\\\",\\n    content: \\\"Berkelium\\\"\\n  }, {\\n    key: \\\"6\\\",\\n    content: \\\"Californium\\\"\\n  }, {\\n    key: \\\"7\\\",\\n    content: \\\"Einsteinium\\\"\\n  }, {\\n    key: \\\"8\\\",\\n    content: \\\"Fermium\\\"\\n  }, {\\n    key: \\\"9\\\",\\n    content: \\\"Hydrogenium\\\"\\n  }, {\\n    key: \\\"10\\\",\\n    content: \\\"Helium\\\"\\n  }, {\\n    key: \\\"11\\\",\\n    content: \\\"Lithium\\\"\\n  }, {\\n    key: \\\"12\\\",\\n    content: \\\"Beryllium\\\"\\n  }, {\\n    key: \\\"13\\\",\\n    content: \\\"Borum\\\"\\n  }, {\\n    key: \\\"14\\\",\\n    content: \\\"Carboneum\\\"\\n  }, {\\n    key: \\\"15\\\",\\n    content: \\\"Nitrogenium\\\"\\n  }, {\\n    key: \\\"16\\\",\\n    content: \\\"Oxygenium\\\"\\n  }];\\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || \\\"\\\").toLowerCase());\\n  const [value, setValue] = React.useState(\\\"\\\");\\n  const [filter, setFilter] = React.useState(\\\"\\\");\\n  const handleFilter = event => {\\n    setFilter(event.target.value);\\n  };\\n  const handleChange = payload => {\\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : \\\"\\\";\\n    setValue(newValue);\\n    setFilter(newValue);\\n  };\\n  const filteredOptions = options.filter(option => matchOption(option, filter));\\n  return <InputAutocompleteMobile dataTestId={\\\"asfa fs asf afa\\\"} block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} error={text(\\\"error\\\", \\\"\\\")} hint={text(\\\"hint\\\", \\\"\\\")} closeOnSelect={boolean(\\\"closeOnSelect\\\", true)} value={value} filter={filter} options={filteredOptions} placeholder={text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} label={text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} onChange={handleChange} onFilter={handleFilter} onClearFilter={() => setFilter(\\\"\\\")} continueButtonProps={{\\n    dataTestId: \\\"continue\\\"\\n  }} cancelButtonProps={{\\n    dataTestId: \\\"cancel\\\"\\n  }} bottomSheetProps={{\\n    transitionProps: {\\n      onEnter: () => setFilter(value)\\n    }\\n  }} />;\\n})'\n  }\n};\nexport const inputAutocompleteModalMobile = () => React.createElement(() => {\n  const options = [{\n    key: \"1\",\n    content: \"Neptunium\"\n  }, {\n    key: \"2\",\n    content: \"Plutonium\"\n  }, {\n    key: \"3\",\n    content: \"Americium\"\n  }, {\n    key: \"4\",\n    content: \"Curium\"\n  }, {\n    key: \"5\",\n    content: \"Berkelium\"\n  }, {\n    key: \"6\",\n    content: \"Californium\"\n  }, {\n    key: \"7\",\n    content: \"Einsteinium\"\n  }, {\n    key: \"8\",\n    content: \"Fermium\"\n  }, {\n    key: \"9\",\n    content: \"Hydrogenium\"\n  }, {\n    key: \"10\",\n    content: \"Helium\"\n  }, {\n    key: \"11\",\n    content: \"Lithium\"\n  }, {\n    key: \"12\",\n    content: \"Beryllium\"\n  }, {\n    key: \"13\",\n    content: \"Borum\"\n  }, {\n    key: \"14\",\n    content: \"Carboneum\"\n  }, {\n    key: \"15\",\n    content: \"Nitrogenium\"\n  }, {\n    key: \"16\",\n    content: \"Oxygenium\"\n  }];\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || \"\").toLowerCase());\n  const [value, setValue] = React.useState(\"\");\n  const [filter, setFilter] = React.useState(\"\");\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n  const handleChange = payload => {\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : \"\";\n    setValue(newValue);\n    setFilter(newValue);\n  };\n  const filteredOptions = options.filter(option => matchOption(option, filter));\n  return /*#__PURE__*/_jsx(InputAutocompleteModalMobile, {\n    dataTestId: \"iamm\",\n    block: boolean(\"block\", false),\n    size: select(\"size\", [\"s\", \"m\", \"l\", \"xl\"], \"s\"),\n    disabled: boolean(\"disabled\", false),\n    error: text(\"error\", \"\"),\n    hint: text(\"hint\", \"\"),\n    closeOnSelect: boolean(\"closeOnSelect\", true),\n    value: value,\n    filter: filter,\n    options: filteredOptions,\n    placeholder: text(\"placeholder\", \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    label: text(\"label\", \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"),\n    labelView: select(\"labelView\", [\"inner\", \"outer\"], \"inner\"),\n    onChange: handleChange,\n    onFilter: handleFilter,\n    onClearFilter: () => setFilter(\"\"),\n    continueButtonProps: {\n      dataTestId: \"continue\"\n    },\n    cancelButtonProps: {\n      dataTestId: \"cancel\"\n    }\n  });\n});\ninputAutocompleteModalMobile.storyName = 'InputAutocompleteModalMobile';\ninputAutocompleteModalMobile.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const options = [{\\n    key: \\\"1\\\",\\n    content: \\\"Neptunium\\\"\\n  }, {\\n    key: \\\"2\\\",\\n    content: \\\"Plutonium\\\"\\n  }, {\\n    key: \\\"3\\\",\\n    content: \\\"Americium\\\"\\n  }, {\\n    key: \\\"4\\\",\\n    content: \\\"Curium\\\"\\n  }, {\\n    key: \\\"5\\\",\\n    content: \\\"Berkelium\\\"\\n  }, {\\n    key: \\\"6\\\",\\n    content: \\\"Californium\\\"\\n  }, {\\n    key: \\\"7\\\",\\n    content: \\\"Einsteinium\\\"\\n  }, {\\n    key: \\\"8\\\",\\n    content: \\\"Fermium\\\"\\n  }, {\\n    key: \\\"9\\\",\\n    content: \\\"Hydrogenium\\\"\\n  }, {\\n    key: \\\"10\\\",\\n    content: \\\"Helium\\\"\\n  }, {\\n    key: \\\"11\\\",\\n    content: \\\"Lithium\\\"\\n  }, {\\n    key: \\\"12\\\",\\n    content: \\\"Beryllium\\\"\\n  }, {\\n    key: \\\"13\\\",\\n    content: \\\"Borum\\\"\\n  }, {\\n    key: \\\"14\\\",\\n    content: \\\"Carboneum\\\"\\n  }, {\\n    key: \\\"15\\\",\\n    content: \\\"Nitrogenium\\\"\\n  }, {\\n    key: \\\"16\\\",\\n    content: \\\"Oxygenium\\\"\\n  }];\\n  const matchOption = (option, inputValue) => option.content.toLowerCase().includes((inputValue || \\\"\\\").toLowerCase());\\n  const [value, setValue] = React.useState(\\\"\\\");\\n  const [filter, setFilter] = React.useState(\\\"\\\");\\n  const handleFilter = event => {\\n    setFilter(event.target.value);\\n  };\\n  const handleChange = payload => {\\n    const newValue = payload ? isOptionShape(payload.selected) ? payload.selected.content : payload : \\\"\\\";\\n    setValue(newValue);\\n    setFilter(newValue);\\n  };\\n  const filteredOptions = options.filter(option => matchOption(option, filter));\\n  return <InputAutocompleteModalMobile dataTestId=\\\"iamm\\\" block={boolean(\\\"block\\\", false)} size={select(\\\"size\\\", [\\\"s\\\", \\\"m\\\", \\\"l\\\", \\\"xl\\\"], \\\"s\\\")} disabled={boolean(\\\"disabled\\\", false)} error={text(\\\"error\\\", \\\"\\\")} hint={text(\\\"hint\\\", \\\"\\\")} closeOnSelect={boolean(\\\"closeOnSelect\\\", true)} value={value} filter={filter} options={filteredOptions} placeholder={text(\\\"placeholder\\\", \\\"\\\\u0412\\\\u044B\\\\u0431\\\\u0435\\\\u0440\\\\u0438\\\\u0442\\\\u0435 \\\\u044D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} label={text(\\\"label\\\", \\\"\\\\u042D\\\\u043B\\\\u0435\\\\u043C\\\\u0435\\\\u043D\\\\u0442\\\")} labelView={select(\\\"labelView\\\", [\\\"inner\\\", \\\"outer\\\"], \\\"inner\\\")} onChange={handleChange} onFilter={handleFilter} onClearFilter={() => setFilter(\\\"\\\")} continueButtonProps={{\\n    dataTestId: \\\"continue\\\"\\n  }} cancelButtonProps={{\\n    dataTestId: \\\"cancel\\\"\\n  }} />;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/InputAutocomplete',\n  id: 'InputAutocomplete',\n  component: InputAutocomplete,\n  tags: ['stories-mdx'],\n  includeStories: [\"inputAutocomplete\", \"inputAutocompleteMobile\", \"inputAutocompleteModalMobile\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { Tabs as TabsResponsive, Tab, TabsProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsProps>['onChange']>((_, { selectedId }) => {\n        setSelected(selectedId as TabName);\n    }, []);\n\n    const renderTabs = (): TabsProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","id","live","className","href","MDXContent","wrapper","MDXLayout","InputAutocomplete","InputAutocompleteDesktop","InputAutocompleteMobile","options","matchOption","option","inputValue","toLowerCase","includes","title","component","name","setValue","filteredOptions","filter","selected","boolean","undefined","block","size","select","disabled","error","text","success","hint","allowUnselect","closeOnSelect","Arrow","circularNavigation","placeholder","label","labelView","onChange","onInput","event","target","setFilter","content","dataTestId","payload","newValue","isOptionShape","onFilter","onClearFilter","continueButtonProps","cancelButtonProps","bottomSheetProps","transitionProps","onEnter","InputAutocompleteModalMobile","version","package","design","description","changelog","development","inputAutocomplete","storyName","parameters","storySource","source","inputAutocompleteMobile","inputAutocompleteModalMobile","componentMeta","tags","includeStories","docs","page","Changelog","_ref","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","githubLink","Title","Typography","tag","_defineProperty","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo"],"sourceRoot":""}