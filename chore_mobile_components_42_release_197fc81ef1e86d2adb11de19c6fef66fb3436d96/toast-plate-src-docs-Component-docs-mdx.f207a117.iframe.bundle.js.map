{"version":3,"file":"toast-plate-src-docs-Component-docs-mdx.f207a117.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/toast-plate/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/toast-plate/src/vars.css?f201","webpack://@alfalab/core-components/./packages/toast-plate/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/toast-plate/src/docs/Component.docs.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/toast-plate/src/desktop.module.css?e1d9","webpack://@alfalab/core-components/./packages/toast-plate/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/mobile.module.css?121d","webpack://@alfalab/core-components/./packages/toast-plate/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/index.module.css?0b87","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/component.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/default.module.css?f3bc","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/inverted.module.css?5463"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Плашка для компонента \", _jsx(_components.code, {\n        children: \"Toast\"\n      }), \". Также используется в компоненте \", _jsx(_components.code, {\n        children: \"Notification\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const isMobile = document.body.clientWidth < 450;\\n    return (\\n        <ToastPlate\\n            badge='positive'\\n            title='Поздравляем, полный успех'\\n            hasCloser={true}\\n            block={true}\\n            bottomButtonPosition={isMobile}\\n            onClose={Function.prototype}\\n            actionButton={\\n                <Button colors='inverted' view='ghost' size={isMobile ? 'xs' : 's'}>\\n                    Восстановить\\n                </Button>\\n            }\\n        />\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    /* default */\\n    --toast-plate-bg-color: var(--color-light-bg-primary-inverted);\\n    --toast-plate-color: var(--color-light-text-primary-inverted);\\n    --toast-plate-border-radius: var(--border-radius-l);\\n    --toast-plate-title-font-weight: 700;\\n    --toast-plate-action-align: flex-start;\\n    --toast-plate-action-margin: var(--gap-3xs);\\n    --toast-plate-action-padding: 0 var(--gap-2xl);\\n    --toast-plate-action-bottom-padding: var(--gap-2xs) 0 0;\\n    --toast-plate-action-divider-display: block;\\n    --toast-plate-content-with-closer-right-padding: var(--gap-m);\\n    --toast-plate-close-button-align: flex-start;\\n\\n    /* inverted */\\n    --toast-plate-inverted-color: var(--color-light-text-primary);\\n    --toast-plate-inverted-bg-color: var(--color-light-bg-primary);\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {CssVars} from 'storybook/blocks';\nimport {ToastPlateDesktop} from '../Component.desktop';\nimport {ToastPlateMobile} from '../Component.mobile';\nimport {ToastPlate} from '../Component.responsive';\nimport styles from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { ToastPlate } from '@alfalab/core-components/toast-plate';\\nimport { ToastPlateMobile } from '@alfalab/core-components/toast-plate/mobile';\\nimport { ToastPlateDesktop } from '@alfalab/core-components/toast-plate/desktop';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Из индекса импортируется responsive версия компонента.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      components: {\n        ToastPlateDesktop,\n        ToastPlateMobile,\n        ToastPlate\n      }\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: styles\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Meta, Markdown} from '@storybook/addon-docs';\nimport {ComponentHeader, Tabs} from 'storybook/blocks';\nimport * as Stories from './Component.stories';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport packageJson from '../../package.json';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: Stories\n    }), \"\\n\", _jsx(ComponentHeader, {\n      name: \"ToastPlate\",\n      version: packageJson.version\n    }), \"\\n\", _jsx(Tabs, {\n      description: _jsx(Description, {}),\n      changelog: _jsx(Markdown, {\n        children: Changelog\n      }),\n      development: _jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeButtonWrapper\":\"closeButtonWrapper_FOSph\"};","import React, { forwardRef } from 'react';\n\nimport { BaseToastPlate, BaseToastPlateProps } from './components/base-toast-plate';\n\nimport styles from './desktop.module.css';\n\nexport type ToastPlateDesktopProps = Omit<BaseToastPlateProps, 'styles' | 'bottomButtonPosition'>;\n\nexport const ToastPlateDesktop = forwardRef<HTMLDivElement, ToastPlateDesktopProps>(\n    (restProps, ref) => <BaseToastPlate {...restProps} styles={styles} ref={ref} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeButtonWrapper\":\"closeButtonWrapper_B_Ym_\"};","import React, { forwardRef } from 'react';\n\nimport { BaseToastPlate, BaseToastPlateProps } from './components/base-toast-plate';\n\nimport styles from './mobile.module.css';\n\nexport type ToastPlateMobileProps = Omit<BaseToastPlateProps, 'styles'>;\n\nexport const ToastPlateMobile = forwardRef<HTMLDivElement, ToastPlateMobileProps>(\n    (restProps, ref) => <BaseToastPlate {...restProps} styles={styles} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseToastPlateProps } from './components/base-toast-plate';\nimport { ToastPlateDesktop } from './Component.desktop';\nimport { ToastPlateMobile } from './Component.mobile';\n\nexport type ToastPlateProps = Omit<BaseToastPlateProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const ToastPlate = forwardRef<HTMLDivElement, ToastPlateProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? ToastPlateDesktop : ToastPlateMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_OFU35\",\"hasCloser\":\"hasCloser_wiRYY\",\"wrapper\":\"wrapper_xnEQR\",\"contentWrapper\":\"contentWrapper_acsOw\",\"block\":\"block_c2VjK\",\"content\":\"content_L0uPS\",\"direction\":\"direction_v_wLO\",\"hasActionButton\":\"hasActionButton_WSoRZ\",\"actionSection\":\"actionSection_ORVLW\",\"bottomButton\":\"bottomButton_lmSW5\",\"leftAddons\":\"leftAddons_Gix4I\",\"contentTitle\":\"contentTitle_cmY2f\",\"title\":\"title_w8_cn\",\"children\":\"children_zMPlO\",\"closeButtonWrapper\":\"closeButtonWrapper_cmDnw\",\"closeButton\":\"closeButton_MVASk\"};","import React, { forwardRef, HTMLAttributes, MouseEvent, ReactNode, useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { AlertCircleMIcon } from '@alfalab/icons-glyph/AlertCircleMIcon';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\n\nimport defaultColors from './default.module.css';\nimport commonStyles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type BadgeIcons = {\n    negative: JSX.Element;\n    positive: JSX.Element;\n    attention: JSX.Element;\n};\n\nexport type BaseToastPlateProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для заголовка\n     */\n    titleClassName?: string;\n\n    /**\n     * Дополнительный класс для контентной области\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для области с кнопкой действия\n     */\n    actionSectionClassName?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: ReactNode;\n\n    /**\n     * Заголовок компонента\n     */\n    title?: ReactNode;\n\n    /**\n     * Вид бэйджа\n     */\n    badge?: 'negative' | 'positive' | 'attention';\n\n    /**\n     * Слот слева, заменяет стандартную иконку\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Кнопка действия\n     */\n    actionButton?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Управляет отображением кнопки закрытия уведомления\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Доп. класс враппера кнопки \"закрыть\".\n     */\n    closerWrapperClassName?: string;\n\n    /**\n     * Доп. класс кнопки \"закрыть\".\n     */\n    closerClassName?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Обработчик клика по крестику\n     */\n    onClose?: (event?: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Функция, с помощью которой можно переопределить иконки в Badge\n     */\n    getBadgeIcons?: (icons: BadgeIcons) => BadgeIcons;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Положение кнопки под заголовком компонента\n     */\n    bottomButtonPosition?: boolean;\n\n    /**\n     * Основные стили компонента.\n     */\n    styles?: { [key: string]: string };\n};\n\nconst iconDefaultComponents = {\n    negative: <CrossCircleMIcon className={commonStyles.badgeIcon} />,\n    positive: <CheckmarkCircleMIcon className={commonStyles.badgeIcon} />,\n    attention: <AlertCircleMIcon className={commonStyles.badgeIcon} />,\n};\n\nexport const BaseToastPlate = forwardRef<HTMLDivElement, BaseToastPlateProps>(\n    (\n        {\n            dataTestId,\n            className,\n            titleClassName,\n            contentClassName,\n            actionSectionClassName,\n            hasCloser,\n            leftAddons,\n            badge,\n            title,\n            children,\n            actionButton,\n            block,\n            onClose,\n            getBadgeIcons,\n            colors = 'default',\n            closerWrapperClassName,\n            closerClassName,\n            bottomButtonPosition = false,\n            styles = {},\n            ...restProps\n        },\n        ref,\n    ) => {\n        const needRenderLeftAddons = Boolean(leftAddons || badge);\n\n        const iconComponents = getBadgeIcons\n            ? getBadgeIcons(iconDefaultComponents)\n            : iconDefaultComponents;\n\n        const handleClose = useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (onClose) {\n                    onClose(event);\n                }\n            },\n            [onClose],\n        );\n\n        return (\n            <div\n                className={cn(\n                    commonStyles.component,\n                    colorStyles[colors].component,\n                    { [commonStyles.block]: block, [commonStyles.hasCloser]: hasCloser },\n                    className,\n                )}\n                ref={ref}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                <div className={commonStyles.wrapper}>\n                    <div className={commonStyles.contentWrapper}>\n                        {needRenderLeftAddons && (\n                            <div className={commonStyles.leftAddons}>\n                                {leftAddons || (\n                                    <Badge\n                                        view='icon'\n                                        content={badge && iconComponents[badge]}\n                                        iconColor={badge}\n                                        className={commonStyles.badge}\n                                        dataTestId='badge'\n                                        visibleColorOutline={true}\n                                    />\n                                )}\n                            </div>\n                        )}\n                        <div\n                            className={cn(contentClassName, commonStyles.content, {\n                                [commonStyles.hasCloser]: hasCloser,\n                                [commonStyles.hasActionButton]: !!actionButton,\n                                [commonStyles.direction]: bottomButtonPosition,\n                            })}\n                        >\n                            <div className={commonStyles.contentTitle}>\n                                {title && (\n                                    <div className={cn(titleClassName, commonStyles.title)}>\n                                        {title}\n                                    </div>\n                                )}\n                                {children && (\n                                    <div className={commonStyles.children}>{children}</div>\n                                )}\n                            </div>\n\n                            {actionButton && (\n                                <div\n                                    className={cn(\n                                        actionSectionClassName,\n                                        commonStyles.actionSection,\n                                        {\n                                            [commonStyles.hasCloser]: hasCloser,\n                                            [commonStyles.bottomButton]: bottomButtonPosition,\n                                        },\n                                    )}\n                                >\n                                    {actionButton}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    {hasCloser && (\n                        <div\n                            className={cn(\n                                commonStyles.closeButtonWrapper,\n                                styles.closeButtonWrapper,\n                                colorStyles[colors].closeButtonWrapper,\n                                closerWrapperClassName,\n                            )}\n                        >\n                            <IconButton\n                                icon={CrossMIcon}\n                                colors={colors === 'default' ? 'inverted' : 'default'}\n                                className={cn(commonStyles.closeButton, closerClassName)}\n                                onClick={handleClose}\n                                aria-label='закрыть'\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_c9EeK\",\"closeButtonWrapper\":\"closeButtonWrapper_R5nSG\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_iHqVF\",\"closeButtonWrapper\":\"closeButtonWrapper_Y8Fc_\"};"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","pre","live","className","MDXContent","wrapper","MDXLayout","h2","id","ToastPlateDesktop","ToastPlateMobile","ToastPlate","css","of","name","version","description","changelog","development","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","title","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","forwardRef","restProps","ref","BaseToastPlate","_objectSpread","_ref$breakpoint","breakpoint","_objectWithoutProperties","_excluded","query","colorStyles","default","inverted","iconDefaultComponents","negative","CrossCircleMIcon","commonStyles","positive","CheckmarkCircleMIcon","attention","AlertCircleMIcon","_cn","_cn2","_cn3","dataTestId","titleClassName","contentClassName","actionSectionClassName","hasCloser","leftAddons","badge","actionButton","block","onClose","getBadgeIcons","_ref$colors","colors","closerWrapperClassName","closerClassName","_ref$bottomButtonPosi","bottomButtonPosition","_ref$styles","needRenderLeftAddons","Boolean","iconComponents","handleClose","event","component","Badge","iconColor","visibleColorOutline","closeButtonWrapper","IconButton","icon","CrossMIcon"],"sourceRoot":""}