{"version":3,"file":"pass-code-src-docs-Component-stories-mdx.6715b589.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/pass-code/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/pass-code/src/vars.css?31b1","webpack://@alfalab/core-components/./packages/pass-code/src/docs/development.mdx","webpack://@alfalab/core-components/./packages/pass-code/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/index.module.css?efe2","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/transitions.module.css?bf10","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPad/index.module.css?9bf8","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPad/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/index.module.css?a665","webpack://@alfalab/core-components/./packages/pass-code/src/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPadButton/index.module.css?21e1","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPadButton/Component.tsx","webpack://@alfalab/core-components/./packages/utils/getDataTestId.ts"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"пример\",\n      children: \"Пример\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Компоненту можно передать длину кода, в этом случае он сразу отобразит нужное количество точек над пин-падом.\\nЕсли длина неизвестна, после каждого нажатия на пин-пад будет добавляться новая точка.\\nКнопка удаления появляется после ввода первого символа.\\nПосле валидации компонент может отобразить состоянии ошибки и вывести сообщение.\\nСостояния успеха для цифрового кода не предусмотренно, пользователь просто пойдёт дальше по сценарию.\\nКорректная комбинация для примера \", _jsx(_components.code, {\n        children: \"0451\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      mobileHeight: 640,\n      mobileOnly: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"const VALID_CODE = '0451';\\nconst MAX_LENGTH = VALID_CODE.length;\\nconst SCREENS = {\\n    INITIAL: 'initial',\\n    ENTER_CODE: 'ENTER_CODE',\\n    SUCCESS: 'success',\\n};\\n\\nrender(() => {\\n    const [screen, setScreen] = React.useState(SCREENS.INITIAL);\\n    const [error, setError] = React.useState(false);\\n    const [code, setCode] = React.useState('');\\n    const [passCodeParams, setPassCodeParams] = React.useState();\\n\\n    const validate = (codeToValidate) => {\\n        if (codeToValidate !== VALID_CODE) {\\n            setTimeout(() => setError('Error message'), 300);\\n            setTimeout(() => {\\n                setError((prev) => {\\n                    if (prev) {\\n                        setCode('');\\n                        return false;\\n                    }\\n\\n                    return prev;\\n                });\\n            }, 1300);\\n\\n            return;\\n        }\\n\\n        setTimeout(() => setScreen(SCREENS.SUCCESS), 300);\\n    };\\n\\n    const handleChange = (value) => {\\n        setCode(value);\\n        setError(false);\\n\\n        if (passCodeParams.codeLength > 0 && value.length === MAX_LENGTH) {\\n            validate(value);\\n        }\\n    };\\n\\n    if (screen === SCREENS.INITIAL) {\\n        return (\\n            <>\\n                <Button\\n                    block\\n                    onClick={() => {\\n                        setPassCodeParams({ codeLength: MAX_LENGTH });\\n                        setScreen(SCREENS.ENTER_CODE);\\n                    }}\\n                >\\n                    Код из четырех цифр\\n                </Button>\\n                <Gap size='m' />\\n                <Button\\n                    block\\n                    onClick={() => {\\n                        setPassCodeParams({ maxCodeLength: 12 });\\n                        setScreen(SCREENS.ENTER_CODE);\\n                    }}\\n                >\\n                    Длина кода неизвестна заранее\\n                </Button>\\n            </>\\n        );\\n    }\\n\\n    if (screen === SCREENS.SUCCESS) {\\n        return (\\n            <div style={{ display: 'flex', flexFlow: 'column nowrap', height: 600 }}>\\n                <Gap size='xl' />\\n                <Gap size='8xl' />\\n                <div\\n                    style={{\\n                        display: 'flex',\\n                        flexFlow: 'column nowrap',\\n                        alignItems: 'center',\\n                        justifyContent: 'space-between',\\n                        flex: 1,\\n                    }}\\n                >\\n                    <div style={{ textAlign: 'center' }}>\\n                        <SuperEllipse\\n                            size={80}\\n                            backgroundColor='var(--color-light-graphic-positive)'\\n                        >\\n                            <CheckmarkMIcon style={{ fill: '#fff' }} />\\n                        </SuperEllipse>\\n\\n                        <Gap size='m' />\\n\\n                        <Typography.Text view='primary-medium' weight='bold'>\\n                            Введён корректный код\\n                        </Typography.Text>\\n                    </div>\\n\\n                    <Button\\n                        block\\n                        onClick={() => {\\n                            setScreen(SCREENS.INITIAL);\\n                            setError(false);\\n                            setCode('');\\n                        }}\\n                    >\\n                        Попробовать ещё раз\\n                    </Button>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div\\n            style={{\\n                display: 'flex',\\n                flexFlow: 'column nowrap',\\n                justifyContent: 'space-between',\\n                height: 600,\\n            }}\\n        >\\n            <PassCode {...passCodeParams} value={code} onChange={handleChange} error={error} />\\n\\n            {passCodeParams.maxCodeLength > 0 && (\\n                <Button block view='primary' onClick={() => validate(code)}>\\n                    Продолжить\\n                </Button>\\n            )}\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"адаптивность\",\n      children: \"Адаптивность\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Размер контролов компонента подстраивается под ширину мобильного экрана.\\nКомпонент не предназначен для использования на десктопных устройствах и не имеет соответствующих состояний.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \":root {\\n    --pass-code-max-width: 500px;\\n    --button-bg-color: var(--color-light-specialbg-secondary-transparent);\\n    --button-bg-color-active: var(--color-light-specialbg-tertiary-transparent);\\n}\\n\";","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {CssVars} from 'storybook/blocks';\nimport {ArgsTable} from '@storybook/addon-docs';\nimport {PassCode} from '../Component';\nimport vars from '!!raw-loader!../vars.css';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"подключение\",\n      children: \"Подключение\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { PassCode } from '@alfalab/core-components/pass-code';\\n\\n// Если добавляете аддон, то можно обернуть его в KeyPadButton. Так не понадобится подгонять стили под другие кнопки.\\nimport { KeyPadButton } from '@alfalab/core-components/pass-code';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"свойства\",\n      children: \"Свойства\"\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: PassCode\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"переменные\",\n      children: \"Переменные\"\n    }), \"\\n\", _jsx(CssVars, {\n      css: vars\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, Markdown } from '@storybook/addon-docs';\nimport { number, text, boolean } from '@storybook/addon-knobs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { PassCode, KeyPadButton } from '@alfalab/core-components-pass-code';\nimport { SfFaceIdXxlIcon } from '@alfalab/icons-glyph/SfFaceIdXxlIcon';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Development from './development.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/PassCode\",\n      component: PassCode,\n      id: \"PassCode\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"PassCode\",\n      children: React.createElement(() => {\n        return /*#__PURE__*/_jsx(PassCode, {\n          value: text('value', ''),\n          onChange: () => {},\n          maxLenght: number('maxLength', 8),\n          codeLength: number('codeLength', undefined),\n          error: text('error', ''),\n          leftAddons: boolean('leftAddons', false) && /*#__PURE__*/_jsx(KeyPadButton, {\n            view: \"ghost\",\n            children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043A\\u043E\\u0434?\"\n          }, \"left-addon\"),\n          rightAddons: boolean('rightAddons', false) && /*#__PURE__*/_jsx(KeyPadButton, {\n            view: \"ghost\",\n            children: /*#__PURE__*/_jsx(SfFaceIdXxlIcon, {})\n          }, \"right-addon\")\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"PassCode\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/pass-code\",\n      children: \"\\u041A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0434\\u043B\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043B\\u044E\\u0447\\u0430.\"\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      }),\n      development: /*#__PURE__*/_jsx(Development, {})\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const passCode = () => React.createElement(() => {\n  return /*#__PURE__*/_jsx(PassCode, {\n    value: text(\"value\", \"\"),\n    onChange: () => {},\n    maxLenght: number(\"maxLength\", 8),\n    codeLength: number(\"codeLength\", undefined),\n    error: text(\"error\", \"\"),\n    leftAddons: boolean(\"leftAddons\", false) && /*#__PURE__*/_jsx(KeyPadButton, {\n      view: \"ghost\",\n      children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043A\\u043E\\u0434?\"\n    }, \"left-addon\"),\n    rightAddons: boolean(\"rightAddons\", false) && /*#__PURE__*/_jsx(KeyPadButton, {\n      view: \"ghost\",\n      children: /*#__PURE__*/_jsx(SfFaceIdXxlIcon, {})\n    }, \"right-addon\")\n  });\n});\npassCode.storyName = 'PassCode';\npassCode.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  return <PassCode value={text(\\\"value\\\", \\\"\\\")} onChange={() => {}} maxLenght={number(\\\"maxLength\\\", 8)} codeLength={number(\\\"codeLength\\\", undefined)} error={text(\\\"error\\\", \\\"\\\")} leftAddons={boolean(\\\"leftAddons\\\", false) && <KeyPadButton view=\\\"ghost\\\" key=\\\"left-addon\\\">\\n                            Забыли код?\\n                        </KeyPadButton>} rightAddons={boolean(\\\"rightAddons\\\", false) && <KeyPadButton view=\\\"ghost\\\" key=\\\"right-addon\\\">\\n                            <SfFaceIdXxlIcon />\\n                        </KeyPadButton>} />;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/PassCode',\n  id: 'PassCode',\n  component: PassCode,\n  tags: ['stories-mdx'],\n  includeStories: [\"passCode\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Xynz_\",\"dot\":\"dot_q9_sK\",\"error\":\"error__Hxqe\",\"filled\":\"filled_PSH3n\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"enter_sncMw\",\"enterActive\":\"enterActive_opHHL\",\"exit\":\"exit_qKSS2\",\"exitActive\":\"exitActive_BVFXm\",\"shake\":\"shake_BlLy2\"};","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\n\nimport styles from './index.module.css';\nimport transitions from './transitions.module.css';\n\nexport type InputProgressProps = {\n    maxCodeLength: number;\n    codeLength?: number;\n    error: boolean;\n    value?: string;\n    dataTestId?: string;\n};\n\nconst TRANSITION_DURATION = 150;\n\nexport const InputProgress: React.FC<InputProgressProps> = ({\n    value = '',\n    maxCodeLength,\n    codeLength,\n    error,\n    dataTestId,\n}) => (\n    <div\n        className={cn(styles.component, { [transitions.shake]: error })}\n        data-test-id={getDataTestId(dataTestId, 'input-progress')}\n    >\n        {codeLength\n            ? new Array(codeLength).fill(null).map((_, i) => {\n                  const filled = Boolean(value[i]);\n\n                  return (\n                      <div\n                          key={i}\n                          className={cn(styles.dot, {\n                              [styles.error]: filled && error,\n                              [styles.filled]: filled,\n                          })}\n                      />\n                  );\n              })\n            : new Array(maxCodeLength).fill(null).map((_, i) => (\n                  <CSSTransition\n                      key={i}\n                      in={Boolean(value[i])}\n                      timeout={TRANSITION_DURATION}\n                      classNames={transitions}\n                      unmountOnExit={true}\n                  >\n                      <div className={cn(styles.dot, styles.filled, { [styles.error]: error })} />\n                  </CSSTransition>\n              ))}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ct2WI\",\"digit\":\"digit_b1jTn\"};","import React, { ReactNode } from 'react';\n\nimport { BackspaceXxlIcon } from '@alfalab/icons-glyph/BackspaceXxlIcon';\n\nimport { getDataTestId } from '../../../../utils';\nimport { KeyPadButton } from '../KeyPadButton';\n\nimport styles from './index.module.css';\n\nexport type KeyPadProps = {\n    /**\n     * Показать кнопку \"очистить\".\n     */\n    showClear: boolean;\n\n    /**\n     * Слот слева.\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа.\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для автоматизированного тестирования.\n     */\n    dataTestId?: string;\n\n    /**\n     * Коллбэк нажатия на кнопку.\n     */\n    onClick: (digit: number) => void;\n\n    /**\n     * Коллбэк очистки кода.\n     */\n    onClear: () => void;\n};\n\nconst CELL_COUNT = 12;\nconst CELLS = new Array(CELL_COUNT).fill(null).map((_, i) => {\n    if (i === 10) return 0;\n\n    return i + 1;\n});\n\nexport const KeyPad: React.FC<KeyPadProps> = ({\n    leftAddons,\n    rightAddons,\n    onClick,\n    onClear,\n    showClear,\n    dataTestId,\n}) => (\n    <div className={styles.component} data-test-id={getDataTestId(dataTestId, 'keypad')}>\n        {CELLS.map((digit, i) => {\n            if (i === 9) {\n                if (leftAddons) return leftAddons;\n\n                return <div key='left-addons-empty' />;\n            }\n\n            if (i === 11) {\n                if (showClear) {\n                    return (\n                        <KeyPadButton key='clear-btn' onClick={onClear} view='ghost'>\n                            <BackspaceXxlIcon />\n                        </KeyPadButton>\n                    );\n                }\n\n                if (rightAddons) return rightAddons;\n\n                return <div key='right-addon-empty' />;\n            }\n\n            return (\n                <KeyPadButton\n                    key={digit}\n                    onClick={onClick}\n                    view='secondary'\n                    buttonClassName={styles.digit}\n                >\n                    {digit}\n                </KeyPadButton>\n            );\n        })}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Je1G5\",\"error\":\"error_MEBxn\"};","import React, { forwardRef, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Gap } from '@alfalab/core-components-gap';\n\nimport { getDataTestId } from '../../utils';\n\nimport { InputProgress } from './components/InputProgress';\nimport { KeyPad } from './components/KeyPad';\n\nimport styles from './index.module.css';\n\nexport type BasePassCodeProps = {\n    /**\n     * Код.\n     */\n    value: string;\n\n    /**\n     * Обработчик изменения кода.\n     */\n    onChange: (code: string) => void;\n\n    /**\n     * Дополнительный класс.\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Слот слева.\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа.\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования.\n     */\n    dataTestId?: string;\n};\n\ntype PropsWithUnknownLen = {\n    codeLength?: never;\n\n    /**\n     * Максимально возможная длина кода.\n     * @default 10\n     */\n    maxCodeLength?: number;\n};\n\ntype PropsWithLen = {\n    maxCodeLength?: never;\n\n    /**\n     * Длина кода.\n     */\n    codeLength?: number;\n};\n\ntype PassCodeProps = BasePassCodeProps & (PropsWithLen | PropsWithUnknownLen);\n\nexport const PassCode = forwardRef<HTMLDivElement, PassCodeProps>(\n    (\n        {\n            value = '',\n            dataTestId,\n            className,\n            leftAddons,\n            rightAddons,\n            error,\n            onChange,\n            maxCodeLength = 10,\n            codeLength,\n        },\n        ref,\n    ) => {\n        const passwordLen = codeLength || maxCodeLength;\n\n        const handleChange = (digit: number) => {\n            const newValue = value.concat(digit.toString());\n\n            if (newValue.length <= passwordLen) {\n                onChange?.(newValue);\n            }\n        };\n\n        const handleClear = () => {\n            if (value.length > 0) {\n                onChange?.(value?.slice(0, -1));\n            }\n        };\n\n        return (\n            <div\n                className={cn(styles.component, className)}\n                ref={ref}\n                data-test-id={getDataTestId(dataTestId, 'wrapper')}\n            >\n                <div className={styles.error} data-test-id={getDataTestId(dataTestId, 'error')}>\n                    {error}\n                </div>\n\n                <Gap size='m' />\n\n                <InputProgress\n                    dataTestId={dataTestId}\n                    value={value}\n                    maxCodeLength={maxCodeLength}\n                    codeLength={codeLength}\n                    error={Boolean(error)}\n                />\n\n                <Gap size='4xl' />\n\n                <KeyPad\n                    dataTestId={dataTestId}\n                    leftAddons={leftAddons}\n                    rightAddons={rightAddons}\n                    onClick={handleChange}\n                    onClear={handleClear}\n                    showClear={Boolean(value)}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_vOeR7\",\"button\":\"button_n1HgJ\",\"secondary\":\"secondary_klg7r\",\"ghost\":\"ghost_vxRt8\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nexport type KeyPadButtonProps<T> = {\n    /**\n     * Вид кнопки.\n     */\n    view: ButtonProps['view'];\n\n    /**\n     * Значение.\n     */\n    children: T;\n\n    /**\n     * Дополнительный класс.\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс кнопки.\n     */\n    buttonClassName?: string;\n\n    /**\n     * Коллбэк нажатия на кнопку.\n     */\n    onClick?: (payload: T) => void;\n};\n\nexport function KeyPadButton<T extends ReactNode>({\n    children,\n    onClick,\n    className,\n    view = 'secondary',\n    buttonClassName,\n}: KeyPadButtonProps<T>) {\n    return (\n        <div className={cn(styles.component, className)}>\n            <Button\n                className={cn(styles.button, styles[view], buttonClassName)}\n                view={view}\n                onClick={() => onClick?.(children)}\n            >\n                {children}\n            </Button>\n        </div>\n    );\n}\n","export const getDataTestId = (dataTestId?: string, element?: string) => {\n    const elementPart = element ? `-${element.toLowerCase()}` : '';\n\n    return dataTestId ? `${dataTestId}${elementPart}` : undefined;\n};\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","h2","p","pre","id","live","mobileHeight","mobileOnly","className","MDXContent","wrapper","MDXLayout","of","css","vars","title","component","PassCode","name","text","onChange","maxLenght","number","codeLength","undefined","error","leftAddons","boolean","KeyPadButton","view","rightAddons","SfFaceIdXxlIcon","version","package","description","changelog","development","passCode","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","InputProgress","_ref$value","maxCodeLength","dataTestId","transitions","getDataTestId","Array","map","i","_cn2","filled","Boolean","CSSTransition","in","timeout","classNames","unmountOnExit","CELLS","KeyPad","onClear","showClear","digit","BackspaceXxlIcon","buttonClassName","forwardRef","ref","_ref$maxCodeLength","passwordLen","Gap","size","newValue","toString","handleClear","slice","_ref$view","Button","elementPart"],"sourceRoot":""}