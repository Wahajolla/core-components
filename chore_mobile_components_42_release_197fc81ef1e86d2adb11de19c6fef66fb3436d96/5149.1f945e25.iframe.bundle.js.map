{"version":3,"file":"5149.1f945e25.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./packages/action-button/src/index.module.css?7084","webpack://@alfalab/core-components/./packages/action-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/action-button/src/default.module.css?e1de","webpack://@alfalab/core-components/./packages/action-button/src/inverted.module.css?dea6","webpack://@alfalab/core-components/./packages/action-button/src/static.module.css?b7ac","webpack://@alfalab/core-components/./packages/action-button/src/hooks.ts","webpack://@alfalab/core-components/./packages/alert/src/index.module.css?c5c0","webpack://@alfalab/core-components/./packages/alert/src/Component.tsx","webpack://@alfalab/core-components/./packages/amount-input/src/utils/index.ts","webpack://@alfalab/core-components/./packages/amount-input/src/default.module.css?0a34","webpack://@alfalab/core-components/./packages/amount-input/src/index.module.css?f6ab","webpack://@alfalab/core-components/./packages/amount-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/amount-input/src/inverted.module.css?b68e","webpack://@alfalab/core-components/./packages/amount/src/index.module.css?2284","webpack://@alfalab/core-components/./packages/amount/src/component.tsx","webpack://@alfalab/core-components/./packages/amount/src/pure/index.module.css?b509","webpack://@alfalab/core-components/./packages/amount/src/pure/component.tsx","webpack://@alfalab/core-components/./packages/amount/src/index.ts","webpack://@alfalab/core-components/./packages/attach/src/index.module.css?ff0d","webpack://@alfalab/core-components/./packages/attach/src/Component.tsx","webpack://@alfalab/core-components/./packages/attach/src/utils/index.ts","webpack://@alfalab/core-components/./packages/backdrop/src/index.module.css?249a","webpack://@alfalab/core-components/./packages/backdrop/src/Component.tsx","webpack://@alfalab/core-components/./packages/bank-card/src/index.module.css?0d59","webpack://@alfalab/core-components/./packages/bank-card/src/Component.tsx","webpack://@alfalab/core-components/./packages/bank-card/src/utils.ts","webpack://@alfalab/core-components/./packages/base-modal/src/index.module.css?038f","webpack://@alfalab/core-components/./packages/base-modal/src/Component.tsx","webpack://@alfalab/core-components/./packages/base-modal/src/matches-polyfill.ts","webpack://@alfalab/core-components/./packages/base-modal/src/utils.ts","webpack://@alfalab/core-components/./packages/button/src/index.module.css?8d10","webpack://@alfalab/core-components/./packages/button/src/Component.tsx","webpack://@alfalab/core-components/./packages/button/src/default.module.css?5648","webpack://@alfalab/core-components/./packages/button/src/inverted.module.css?3c83","webpack://@alfalab/core-components/./packages/calendar-input/src/components/calendar-input/index.module.css?6768","webpack://@alfalab/core-components/./packages/calendar-input/src/components/calendar-input/Component.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/calendar-input/src/utils.ts","webpack://@alfalab/core-components/./packages/calendar-with-skeleton/src/index.module.css?1323","webpack://@alfalab/core-components/./packages/calendar-with-skeleton/src/Component.tsx","webpack://@alfalab/core-components/./packages/card-image/src/index.module.css?9a5d","webpack://@alfalab/core-components/./packages/card-image/src/Component.tsx","webpack://@alfalab/core-components/./packages/cdn-icon/src/index.module.css?fb96","webpack://@alfalab/core-components/./packages/cdn-icon/src/Component.tsx","webpack://@alfalab/core-components/./packages/checkbox-group/src/desktop.module.css?db53","webpack://@alfalab/core-components/./packages/checkbox-group/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/checkbox-group/src/mobile.module.css?caef","webpack://@alfalab/core-components/./packages/checkbox-group/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/checkbox-group/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/checkbox-group/src/components/base-checkbox-group/index.module.css?1bdc","webpack://@alfalab/core-components/./packages/checkbox-group/src/components/base-checkbox-group/Component.tsx","webpack://@alfalab/core-components/./packages/checkbox/src/index.module.css?747a","webpack://@alfalab/core-components/./packages/checkbox/src/Component.tsx","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/index.module.css?d691","webpack://@alfalab/core-components/./packages/circular-progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/code-input/src/desktop.module.css?5ca5","webpack://@alfalab/core-components/./packages/code-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/code-input/src/mobile.module.css?da36","webpack://@alfalab/core-components/./packages/code-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/code-input/src/components/input/index.module.css?0ea6","webpack://@alfalab/core-components/./packages/code-input/src/components/input/component.tsx","webpack://@alfalab/core-components/./packages/code-input/src/components/base-code-input/index.module.css?09de","webpack://@alfalab/core-components/./packages/code-input/src/components/base-code-input/component.tsx","webpack://@alfalab/core-components/./packages/code-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/collapse/src/index.module.css?f046","webpack://@alfalab/core-components/./packages/collapse/src/Component.tsx","webpack://@alfalab/core-components/./packages/comment/src/index.module.css?86d9","webpack://@alfalab/core-components/./packages/comment/src/Component.tsx","webpack://@alfalab/core-components/./packages/custom-button/src/index.module.css?0c1d","webpack://@alfalab/core-components/./packages/custom-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/custom-picker-button/src/field/index.module.css?c5db","webpack://@alfalab/core-components/./packages/custom-picker-button/src/field/Component.tsx","webpack://@alfalab/core-components/./packages/date-input/src/index.module.css?4373","webpack://@alfalab/core-components/./packages/date-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/date-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-input/src/utils/native-supports.ts","webpack://@alfalab/core-components/./packages/date-range-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-range-input/src/components/date-range-input/index.module.css?a053","webpack://@alfalab/core-components/./packages/date-range-input/src/components/date-range-input/Component.tsx","webpack://@alfalab/core-components/./packages/date-range-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/date-range-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/date-range-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/date-time-input/src/components/date-time-input/index.module.css?4eef","webpack://@alfalab/core-components/./packages/date-time-input/src/components/date-time-input/Component.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/date-time-input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/divider/src/index.module.css?c405","webpack://@alfalab/core-components/./packages/divider/src/Component.tsx","webpack://@alfalab/core-components/./packages/drawer/src/index.module.css?49e2","webpack://@alfalab/core-components/./packages/drawer/src/Component.tsx","webpack://@alfalab/core-components/./packages/dropzone/src/components/overlay/index.module.css?b956","webpack://@alfalab/core-components/./packages/dropzone/src/components/overlay/Component.tsx","webpack://@alfalab/core-components/./packages/dropzone/src/utils.ts","webpack://@alfalab/core-components/./packages/dropzone/src/index.module.css?7c11","webpack://@alfalab/core-components/./packages/dropzone/src/Component.tsx","webpack://@alfalab/core-components/./packages/file-upload-item/src/utils.ts","webpack://@alfalab/core-components/./packages/file-upload-item/src/index.module.css?1f1e","webpack://@alfalab/core-components/./packages/file-upload-item/src/Component.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/desktop.module.css?c650","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/mobile.module.css?68c9","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/filter-tag/src/components/base-filter-tag/index.module.css?594a","webpack://@alfalab/core-components/./packages/filter-tag/src/components/base-filter-tag/Component.tsx","webpack://@alfalab/core-components/./packages/form-control/src/desktop.module.css?a9ec","webpack://@alfalab/core-components/./packages/form-control/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/form-control/src/default.desktop.module.css?fa80","webpack://@alfalab/core-components/./packages/form-control/src/inverted.desktop.module.css?0563","webpack://@alfalab/core-components/./packages/form-control/src/mobile.module.css?9c58","webpack://@alfalab/core-components/./packages/form-control/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/form-control/src/default.mobile.module.css?a06e","webpack://@alfalab/core-components/./packages/form-control/src/inverted.mobile.module.css?87b6","webpack://@alfalab/core-components/./packages/form-control/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/form-control/src/components/base-form-control/index.module.css?1398","webpack://@alfalab/core-components/./packages/form-control/src/components/base-form-control/Component.tsx","webpack://@alfalab/core-components/./packages/form-control/src/components/base-form-control/default.module.css?40d9","webpack://@alfalab/core-components/./packages/form-control/src/components/base-form-control/inverted.module.css?d3ee","webpack://@alfalab/core-components/./packages/gap/src/index.module.css?33e3","webpack://@alfalab/core-components/./packages/gap/src/Component.tsx","webpack://@alfalab/core-components/./packages/generic-wrapper/src/index.module.css?131f","webpack://@alfalab/core-components/./packages/generic-wrapper/src/Component.tsx","webpack://@alfalab/core-components/./packages/global-store/src/ModalStore.ts","webpack://@alfalab/core-components/./packages/global-store/src/GlobalStore.ts","webpack://@alfalab/core-components/./packages/global-store/src/index.ts","webpack://@alfalab/core-components/./packages/hatching-progress-bar/src/index.module.css?99a5","webpack://@alfalab/core-components/./packages/hatching-progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/icon-button/src/index.module.css?7279","webpack://@alfalab/core-components/./packages/icon-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/icon-button/src/default.module.css?85a2","webpack://@alfalab/core-components/./packages/icon-button/src/inverted.module.css?e344","webpack://@alfalab/core-components/./packages/indicator/src/index.module.css?e045","webpack://@alfalab/core-components/./packages/indicator/src/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-field/index.module.css?87c8","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-field/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-mobile-field/index.module.css?29f1","webpack://@alfalab/core-components/./packages/input-autocomplete/src/autocomplete-mobile-field/Component.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/mobile.module.css?688a","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/input-autocomplete/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/input/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/input/src/default.desktop.module.css?9c38","webpack://@alfalab/core-components/./packages/input/src/inverted.desktop.module.css?fd77","webpack://@alfalab/core-components/./packages/input/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/input/src/default.mobile.module.css?d30b","webpack://@alfalab/core-components/./packages/input/src/inverted.mobile.module.css?160a","webpack://@alfalab/core-components/./packages/input/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/input/src/components/base-input/index.module.css?36f6","webpack://@alfalab/core-components/./packages/input/src/components/base-input/Component.tsx","webpack://@alfalab/core-components/./packages/input/src/components/base-input/default.module.css?d092","webpack://@alfalab/core-components/./packages/input/src/components/base-input/inverted.module.css?e8a9","webpack://@alfalab/core-components/./packages/keyboard-focusable/src/Component.tsx","webpack://@alfalab/core-components/./packages/link/src/index.module.css?6d86","webpack://@alfalab/core-components/./packages/link/src/Component.tsx","webpack://@alfalab/core-components/./packages/link/src/default.module.css?f933","webpack://@alfalab/core-components/./packages/link/src/inverted.module.css?fc64","webpack://@alfalab/core-components/./packages/list-header/src/index.module.css?89c8","webpack://@alfalab/core-components/./packages/list-header/src/Component.tsx","webpack://@alfalab/core-components/./packages/list/src/components/item/index.module.css?147e","webpack://@alfalab/core-components/./packages/list/src/components/item/Component.tsx","webpack://@alfalab/core-components/./packages/list/src/utils.ts","webpack://@alfalab/core-components/./packages/list/src/index.module.css?9713","webpack://@alfalab/core-components/./packages/list/src/Component.tsx","webpack://@alfalab/core-components/./packages/list/src/presets.ts","webpack://@alfalab/core-components/./packages/loader/src/index.module.css?40e8","webpack://@alfalab/core-components/./packages/loader/src/Component.tsx","webpack://@alfalab/core-components/./packages/masked-input/src/index.module.css?83b5","webpack://@alfalab/core-components/./packages/masked-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/modal/src/desktop.module.css?0b58","webpack://@alfalab/core-components/./packages/modal/src/mobile.module.css?97e9","webpack://@alfalab/core-components/./packages/modal/src/transitions.module.css?3dac","webpack://@alfalab/core-components/./packages/modal/src/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/Context.tsx","webpack://@alfalab/core-components/./packages/modal/src/ResponsiveContext.tsx","webpack://@alfalab/core-components/./packages/modal/src/components/content/desktop.module.css?4786","webpack://@alfalab/core-components/./packages/modal/src/components/content/index.module.css?9a9f","webpack://@alfalab/core-components/./packages/modal/src/components/content/mobile.module.css?fac7","webpack://@alfalab/core-components/./packages/modal/src/components/content/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/components/footer/desktop.module.css?8847","webpack://@alfalab/core-components/./packages/modal/src/components/footer/index.module.css?c2d2","webpack://@alfalab/core-components/./packages/modal/src/components/footer/layout.module.css?ba22","webpack://@alfalab/core-components/./packages/modal/src/components/footer/mobile.module.css?6a10","webpack://@alfalab/core-components/./packages/modal/src/components/footer/Component.tsx","webpack://@alfalab/core-components/./packages/modal/src/components/header/desktop.module.css?eebe","webpack://@alfalab/core-components/./packages/modal/src/components/header/index.module.css?6a04","webpack://@alfalab/core-components/./packages/modal/src/components/header/mobile.module.css?685c","webpack://@alfalab/core-components/./packages/modal/src/components/header/Component.tsx","webpack://@alfalab/core-components/./packages/mq/src/Component.tsx","webpack://@alfalab/core-components/./packages/mq/src/useMatchMedia.tsx","webpack://@alfalab/core-components/./packages/mq/src/utils.ts","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/back-arrow-addon/index.module.css?cdf1","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/back-arrow-addon/Component.tsx","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/closer/index.module.css?637b","webpack://@alfalab/core-components/./packages/navigation-bar/src/components/closer/Component.tsx","webpack://@alfalab/core-components/./packages/navigation-bar/src/index.module.css?372f","webpack://@alfalab/core-components/./packages/navigation-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/notification-manager/src/components/notification/component.tsx","webpack://@alfalab/core-components/./packages/notification-manager/src/index.module.css?0e4f","webpack://@alfalab/core-components/./packages/notification-manager/src/component.tsx","webpack://@alfalab/core-components/./packages/notification/src/index.module.css?9b03","webpack://@alfalab/core-components/./packages/notification/src/Component.tsx","webpack://@alfalab/core-components/./packages/notification/src/utils/index.ts","webpack://@alfalab/core-components/./packages/number-input/src/utils.ts","webpack://@alfalab/core-components/./packages/number-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/pagination/src/components/tag/index.module.css?c91e","webpack://@alfalab/core-components/./packages/pagination/src/components/tag/index.tsx","webpack://@alfalab/core-components/./packages/pagination/src/components/default-view/index.module.css?653e","webpack://@alfalab/core-components/./packages/pagination/src/components/default-view/index.tsx","webpack://@alfalab/core-components/./packages/pagination/src/components/per-page-view/index.module.css?f72e","webpack://@alfalab/core-components/./packages/pagination/src/components/per-page-view/index.tsx","webpack://@alfalab/core-components/./packages/pagination/src/index.module.css?5a09","webpack://@alfalab/core-components/./packages/pagination/src/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/index.module.css?efe2","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/transitions.module.css?bf10","webpack://@alfalab/core-components/./packages/pass-code/src/components/InputProgress/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPad/index.module.css?9bf8","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPad/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/index.module.css?a665","webpack://@alfalab/core-components/./packages/pass-code/src/Component.tsx","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPadButton/index.module.css?21e1","webpack://@alfalab/core-components/./packages/pass-code/src/components/KeyPadButton/Component.tsx","webpack://@alfalab/core-components/./packages/password-input/src/index.module.css?1dd8","webpack://@alfalab/core-components/./packages/password-input/src/component.tsx","webpack://@alfalab/core-components/./packages/pattern-lock/src/utils.ts","webpack://@alfalab/core-components/./packages/pattern-lock/src/index.module.css?19e5","webpack://@alfalab/core-components/./packages/pattern-lock/src/Component.tsx","webpack://@alfalab/core-components/./packages/pattern-lock/src/consts.ts","webpack://@alfalab/core-components/./packages/phone-input/src/utils/index.ts","webpack://@alfalab/core-components/./packages/phone-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/index.module.css?61cb","webpack://@alfalab/core-components/./packages/picker-button/src/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/field/index.module.css?e343","webpack://@alfalab/core-components/./packages/picker-button/src/field/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/option/index.module.css?4cf5","webpack://@alfalab/core-components/./packages/picker-button/src/option/Component.tsx","webpack://@alfalab/core-components/./packages/picker-button/src/utils/index.ts","webpack://@alfalab/core-components/./packages/popover/src/index.module.css?fd19","webpack://@alfalab/core-components/./packages/popover/src/Component.tsx","webpack://@alfalab/core-components/./packages/portal/src/utils.ts","webpack://@alfalab/core-components/./packages/portal/src/Component.tsx","webpack://@alfalab/core-components/./packages/progress-bar/src/index.module.css?6c8b","webpack://@alfalab/core-components/./packages/progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/addon/index.module.css?2261","webpack://@alfalab/core-components/./packages/pure-cell/src/components/addon/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount/index.module.css?6540","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount-title/index.module.css?5b83","webpack://@alfalab/core-components/./packages/pure-cell/src/components/amount-title/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/category/index.module.css?2699","webpack://@alfalab/core-components/./packages/pure-cell/src/components/category/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/content/index.module.css?f24e","webpack://@alfalab/core-components/./packages/pure-cell/src/components/content/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer/index.module.css?ff86","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer-button/index.module.css?913e","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer-button/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/footer-text/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/graphics/index.module.css?51be","webpack://@alfalab/core-components/./packages/pure-cell/src/components/graphics/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/main/index.module.css?162e","webpack://@alfalab/core-components/./packages/pure-cell/src/components/main/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/components/text/index.module.css?aff7","webpack://@alfalab/core-components/./packages/pure-cell/src/components/text/component.tsx","webpack://@alfalab/core-components/./packages/pure-cell/src/index.module.css?a419","webpack://@alfalab/core-components/./packages/pure-cell/src/component.tsx","webpack://@alfalab/core-components/./packages/pure-input/src/index.module.css?4403","webpack://@alfalab/core-components/./packages/pure-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/radio-group/src/desktop.module.css?81fc","webpack://@alfalab/core-components/./packages/radio-group/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/radio-group/src/mobile.module.css?f42b","webpack://@alfalab/core-components/./packages/radio-group/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/radio-group/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/radio-group/src/components/base-radio-group/index.module.css?78e8","webpack://@alfalab/core-components/./packages/radio-group/src/components/base-radio-group/Component.tsx","webpack://@alfalab/core-components/./packages/radio/src/index.module.css?d349","webpack://@alfalab/core-components/./packages/radio/src/Component.tsx","webpack://@alfalab/core-components/./packages/screenshot-utils/screenshots-story/components.ts","webpack://@alfalab/core-components/./packages/scrollbar/src/index.module.css?8f47","webpack://@alfalab/core-components/./packages/scrollbar/src/Component.tsx","webpack://@alfalab/core-components/./packages/scrollbar/src/default.module.css?d27d","webpack://@alfalab/core-components/./packages/scrollbar/src/inverted.module.css?ceb9","webpack://@alfalab/core-components/./packages/segmented-control/src/context.ts","webpack://@alfalab/core-components/./packages/segmented-control/src/index.module.css?fbc4","webpack://@alfalab/core-components/./packages/segmented-control/src/Component.tsx","webpack://@alfalab/core-components/./packages/segmented-control/src/components/segment/index.module.css?e8c2","webpack://@alfalab/core-components/./packages/segmented-control/src/components/segment/Component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/utils/calculate-collapse-size.ts","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag/index.module.css?e9f6","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag/component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag-list/index.module.css?5829","webpack://@alfalab/core-components/./packages/select-with-tags/src/components/tag-list/component.tsx","webpack://@alfalab/core-components/./packages/select-with-tags/src/utils/match.ts","webpack://@alfalab/core-components/./packages/select-with-tags/src/component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/footer/index.module.css?44c0","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/footer/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/header/index.module.css?11f8","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/header/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/options-list-with-apply/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithApply/hook.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/index.module.css?d71b","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/footer/index.module.css?36b8","webpack://@alfalab/core-components/./packages/select/src/components/base-select-mobile/footer/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/virtual-options-list/index.module.css?31c5","webpack://@alfalab/core-components/./packages/select/src/components/virtual-options-list/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/select-mobile/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/select-modal-mobile/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-checkmark/index.module.css?1a6e","webpack://@alfalab/core-components/./packages/select/src/components/base-checkmark/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/components/base-option/index.module.css?d6e4","webpack://@alfalab/core-components/./packages/select/src/components/base-option/Component.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithLoading/index.module.css","webpack://@alfalab/core-components/./packages/select/src/presets/useSelectWithLoading/hook.tsx","webpack://@alfalab/core-components/./packages/select/src/presets/useLazyLoading/index.module.css?b974","webpack://@alfalab/core-components/./packages/select/src/presets/useLazyLoading/hook.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/desktop.module.css?8aeb","webpack://@alfalab/core-components/./packages/side-panel/src/transitions.desktop.module.css?a8f7","webpack://@alfalab/core-components/./packages/side-panel/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/mobile.module.css?42e8","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/mobile.module.css?1871","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/mobile.module.css?a801","webpack://@alfalab/core-components/./packages/side-panel/src/transitions.mobile.module.css?e895","webpack://@alfalab/core-components/./packages/side-panel/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/Context.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/ResponsiveContext.ts","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/desktop.module.css?3a0a","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/index.module.css?3f90","webpack://@alfalab/core-components/./packages/side-panel/src/components/content/Component.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/desktop.module.css?61ce","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/index.module.css?a93d","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/layout.module.css?2484","webpack://@alfalab/core-components/./packages/side-panel/src/components/footer/Component.tsx","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/desktop.module.css?9fce","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/index.module.css?18af","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/mobile.module.css?bf28","webpack://@alfalab/core-components/./packages/side-panel/src/components/header/Component.tsx","webpack://@alfalab/core-components/./packages/skeleton/src/index.module.css?0c67","webpack://@alfalab/core-components/./packages/skeleton/src/Component.tsx","webpack://@alfalab/core-components/./packages/slider-input/src/index.module.css?cddf","webpack://@alfalab/core-components/./packages/slider-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/slider/src/index.module.css?06e8","webpack://@alfalab/core-components/./packages/slider/src/Component.tsx","webpack://@alfalab/core-components/./packages/sortable-list/src/components/item/index.module.css?da81","webpack://@alfalab/core-components/./packages/sortable-list/src/components/item/Components.tsx","webpack://@alfalab/core-components/./packages/sortable-list/src/utils.ts","webpack://@alfalab/core-components/./packages/sortable-list/src/index.module.css?4c33","webpack://@alfalab/core-components/./packages/sortable-list/src/Component.tsx","webpack://@alfalab/core-components/./packages/space/src/Item.tsx","webpack://@alfalab/core-components/./packages/space/src/index.module.css?8f6d","webpack://@alfalab/core-components/./packages/space/src/Component.tsx","webpack://@alfalab/core-components/./packages/spinner/src/index.module.css?a94c","webpack://@alfalab/core-components/./packages/spinner/src/Component.tsx","webpack://@alfalab/core-components/./packages/spinner/src/default.module.css?44e7","webpack://@alfalab/core-components/./packages/spinner/src/inverted.module.css?ee25","webpack://@alfalab/core-components/./packages/stack/src/component.tsx","webpack://@alfalab/core-components/./packages/stack/src/context.ts","webpack://@alfalab/core-components/./packages/status/src/index.module.css?46a6","webpack://@alfalab/core-components/./packages/status/src/Component.tsx","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/components/step-bar/index.module.css?6d30","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/components/step-bar/Component.tsx","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/default.module.css?f6ad","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/index.module.css?cb78","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/Component.tsx","webpack://@alfalab/core-components/./packages/stepped-progress-bar/src/inverted.module.css?1cb3","webpack://@alfalab/core-components/./packages/steps/src/components/step-indicator/index.module.css?3e41","webpack://@alfalab/core-components/./packages/steps/src/components/step-indicator/Component.tsx","webpack://@alfalab/core-components/./packages/steps/src/components/step/index.module.css?92b0","webpack://@alfalab/core-components/./packages/steps/src/components/step/Component.tsx","webpack://@alfalab/core-components/./packages/steps/src/index.module.css?b521","webpack://@alfalab/core-components/./packages/steps/src/Component.tsx","webpack://@alfalab/core-components/./packages/switch/src/index.module.css?0491","webpack://@alfalab/core-components/./packages/switch/src/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/Context.ts","webpack://@alfalab/core-components/./packages/system-message/src/desktop.module.css?ae9f","webpack://@alfalab/core-components/./packages/system-message/src/index.module.css?5e4f","webpack://@alfalab/core-components/./packages/system-message/src/mobile.module.css?d7f8","webpack://@alfalab/core-components/./packages/system-message/src/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/caption/index.module.css?289c","webpack://@alfalab/core-components/./packages/system-message/src/components/caption/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/desktop.module.css?5290","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/index.module.css?fc38","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/mobile.module.css?d969","webpack://@alfalab/core-components/./packages/system-message/src/components/controls/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/graphic/index.module.css?f210","webpack://@alfalab/core-components/./packages/system-message/src/components/graphic/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/subtitle/index.module.css?41b5","webpack://@alfalab/core-components/./packages/system-message/src/components/subtitle/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/components/title/desktop.module.css?be3f","webpack://@alfalab/core-components/./packages/system-message/src/components/title/index.module.css?ce06","webpack://@alfalab/core-components/./packages/system-message/src/components/title/mobile.module.css?69d7","webpack://@alfalab/core-components/./packages/system-message/src/components/title/Component.tsx","webpack://@alfalab/core-components/./packages/system-message/src/Components.responsive.tsx","webpack://@alfalab/core-components/./packages/system-message/src/utils.ts","webpack://@alfalab/core-components/./packages/tag/src/desktop.module.css?34a2","webpack://@alfalab/core-components/./packages/tag/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/tag/src/default.desktop.module.css?138f","webpack://@alfalab/core-components/./packages/tag/src/inverted.desktop.module.css?bc53","webpack://@alfalab/core-components/./packages/tag/src/mobile.module.css?3fb4","webpack://@alfalab/core-components/./packages/tag/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/tag/src/default.mobile.module.css?346e","webpack://@alfalab/core-components/./packages/tag/src/inverted.mobile.module.css?ca83","webpack://@alfalab/core-components/./packages/tag/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/tag/src/components/base-tag/index.module.css?88d0","webpack://@alfalab/core-components/./packages/tag/src/components/base-tag/Component.tsx","webpack://@alfalab/core-components/./packages/tag/src/components/base-tag/default.module.css?3703","webpack://@alfalab/core-components/./packages/tag/src/components/base-tag/inverted.module.css?81fe","webpack://@alfalab/core-components/./packages/textarea/src/index.module.css?3463","webpack://@alfalab/core-components/./packages/textarea/src/components/PseudoTextArea.tsx","webpack://@alfalab/core-components/./packages/textarea/src/default.module.css?83a0","webpack://@alfalab/core-components/./packages/textarea/src/Component.tsx","webpack://@alfalab/core-components/./packages/textarea/src/inverted.module.css?fb93","webpack://@alfalab/core-components/./packages/time-input/src/Component.tsx","webpack://@alfalab/core-components/./packages/time-input/src/utils/format.ts","webpack://@alfalab/core-components/./packages/toast-plate/src/desktop.module.css?e1d9","webpack://@alfalab/core-components/./packages/toast-plate/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/mobile.module.css?121d","webpack://@alfalab/core-components/./packages/toast-plate/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/index.module.css?0b87","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/component.tsx","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/default.module.css?f3bc","webpack://@alfalab/core-components/./packages/toast-plate/src/components/base-toast-plate/inverted.module.css?5463","webpack://@alfalab/core-components/./packages/toast/src/Component.desktop.tsx","webpack://@alfalab/core-components/./packages/toast/src/Component.mobile.tsx","webpack://@alfalab/core-components/./packages/toast/src/Component.responsive.tsx","webpack://@alfalab/core-components/./packages/toast/src/components/base-toast/index.module.css?39ca","webpack://@alfalab/core-components/./packages/toast/src/components/base-toast/component.tsx","webpack://@alfalab/core-components/./packages/tooltip/src/index.module.css?3655","webpack://@alfalab/core-components/./packages/tooltip/src/Component.tsx","webpack://@alfalab/core-components/./packages/tooltip/src/default.module.css?6c25","webpack://@alfalab/core-components/./packages/tooltip/src/inverted.module.css?8670","webpack://@alfalab/core-components/./packages/tooltip/src/responsive.module.css?dca3","webpack://@alfalab/core-components/./packages/tooltip/src/component.responsive.tsx","webpack://@alfalab/core-components/./packages/tooltip/src/utils.ts","webpack://@alfalab/core-components/./packages/underlay/src/index.module.css?8deb","webpack://@alfalab/core-components/./packages/underlay/src/utils/getBorderCorners.ts","webpack://@alfalab/core-components/./packages/underlay/src/utils/getClasses.ts","webpack://@alfalab/core-components/./packages/underlay/src/Component.tsx","webpack://@alfalab/core-components/./packages/underlay/src/constants.ts","webpack://@alfalab/core-components/./packages/utils/isClient.ts","webpack://@alfalab/core-components/./packages/with-suffix/src/index.module.css?e13b","webpack://@alfalab/core-components/./packages/with-suffix/src/Component.tsx","webpack://@alfalab/core-components/./packages/ sync ^\\.\\/(.*)\\/src\\/index.ts$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_v4bM2\",\"s\":\"s_ZhcKD\",\"disabled\":\"disabled_xdJ8j\",\"loading\":\"loading_nbY4J\",\"iconWrapper\":\"iconWrapper_F90SD\",\"label\":\"label_hb_Tg\",\"loader\":\"loader_nexXH\",\"focused\":\"focused_P4sbI\"};","import React, {\n    AnchorHTMLAttributes,\n    ButtonHTMLAttributes,\n    forwardRef,\n    Fragment,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Spinner } from '@alfalab/core-components-spinner';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { getDataTestId } from '../../utils';\n\nimport { useLoader } from './hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\nimport staticColors from './static.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n    static: staticColors,\n};\n\n/**\n * Минимальное время отображения лоадера - 500мс,\n * чтобы при быстрых ответах от сервера кнопка не «моргала».\n */\nconst LOADER_MIN_DISPLAY_INTERVAL = 500;\n\ntype Colors = 'default' | 'inverted' | 'static';\n\ntype ComponentProps = {\n    /**\n     * Иконка кнопки\n     */\n    icon: React.ReactNode;\n\n    /**\n     *  Размер кнопки\n     */\n    size?: 's';\n\n    /**\n     * Тип кнопки\n     */\n    view?: 'primary' | 'secondary';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для обертки иконки\n     */\n    iconWrapperClassName?: string;\n\n    /**\n     * Значение href для ссылки\n     */\n    href?: string;\n\n    /**\n     * Заблокировать кнопку\n     */\n    disabled?: boolean;\n\n    /**\n     * Показать лоадер\n     */\n    loading?: boolean;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Палитра, в контексте которой используется кнопка\n     */\n    colors?: Colors;\n};\n\ntype AnchorProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype ButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\nexport type ActionButtonProps = Partial<AnchorProps | ButtonProps>;\n\nexport const ActionButton = forwardRef<HTMLAnchorElement | HTMLButtonElement, ActionButtonProps>(\n    (\n        {\n            className,\n            icon,\n            children,\n            href,\n            size = 's',\n            view = 'primary',\n            type = 'button',\n            iconWrapperClassName,\n            disabled,\n            loading,\n            dataTestId,\n            colors = 'default',\n            ...rest\n        },\n        ref,\n    ) => {\n        const componentRef = useRef<HTMLElement>(null);\n\n        const [focused] = useFocus(componentRef, 'keyboard');\n\n        const { showLoader } = useLoader(!!loading, LOADER_MIN_DISPLAY_INTERVAL);\n\n        const componentProps = {\n            className: cn(\n                styles.component,\n                colorStyles[colors][view],\n                styles[size],\n                {\n                    [styles.focused]: focused,\n                    [styles.disabled]: disabled,\n                    [styles.loading]: showLoader,\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n        };\n\n        const buttonChildren = (\n            <Fragment>\n                <span\n                    role='img'\n                    className={cn(\n                        styles.iconWrapper,\n                        colorStyles[colors].iconWrapper,\n                        styles[size],\n                        iconWrapperClassName,\n                    )}\n                >\n                    {showLoader ? (\n                        <Spinner\n                            dataTestId={getDataTestId(dataTestId, 'loader')}\n                            visible={true}\n                            className={cn(styles.loader, colorStyles[colors].loader)}\n                        />\n                    ) : (\n                        icon\n                    )}\n                </span>\n                <span className={styles.label}>{children}</span>\n            </Fragment>\n        );\n\n        if (href) {\n            return (\n                <a\n                    role='button'\n                    ref={mergeRefs([componentRef, ref])}\n                    href={href}\n                    aria-disabled={disabled || loading}\n                    {...componentProps}\n                    {...(rest as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                >\n                    {buttonChildren}\n                </a>\n            );\n        }\n\n        return (\n            <button\n                ref={mergeRefs([componentRef, ref])}\n                // eslint-disable-next-line react/button-has-type\n                type={type as ButtonHTMLAttributes<HTMLButtonElement>['type']}\n                disabled={disabled || loading}\n                {...componentProps}\n                {...(rest as ButtonHTMLAttributes<HTMLButtonElement>)}\n            >\n                {buttonChildren}\n            </button>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_xjzHE\",\"iconWrapper\":\"iconWrapper_cThcS\",\"loader\":\"loader_jZjaj\",\"secondary\":\"secondary_CCKCs\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_NIflk\",\"iconWrapper\":\"iconWrapper_J6KRM\",\"loader\":\"loader_SeE9K\",\"secondary\":\"secondary_qHTA9\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_BA75F\",\"iconWrapper\":\"iconWrapper_LDHDj\",\"loader\":\"loader_mKVBI\",\"secondary\":\"secondary_P_g7p\"};","import { useEffect, useRef, useState } from 'react';\n\nexport const useLoader = (loading: boolean, timeout: number) => {\n    const timerId = useRef(0);\n\n    const [loaderTimePassed, setLoaderTimePassed] = useState(true);\n\n    const showLoader = loading || !loaderTimePassed;\n\n    useEffect(() => {\n        if (loading) {\n            setLoaderTimePassed(false);\n\n            if (timerId.current) {\n                window.clearTimeout(timerId.current);\n            }\n\n            timerId.current = window.setTimeout(() => {\n                setLoaderTimePassed(true);\n            }, timeout);\n        }\n    }, [loading, timeout]);\n\n    useEffect(() => {\n        if (timerId.current) {\n            window.clearTimeout(timerId.current);\n        }\n    }, []);\n\n    return { showLoader };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_aJ3S4\",\"title\":\"title_qFP8u\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Plate, PlateProps } from '@alfalab/core-components-plate';\n\nimport styles from './index.module.css';\n\nexport type AlertProps = Omit<PlateProps, 'foldable' | 'defaultFolded' | 'leftAddons'>;\n\nexport const Alert: FC<AlertProps> = ({ className, title, ...restProps }) => (\n    <Plate\n        className={cn(styles.component, className)}\n        title={title ? <span className={styles.title}>{title}</span> : null}\n        rounded={false}\n        limitContentWidth={false}\n        {...restProps}\n    />\n);\n","/**\n * https://github.com/core-ds/utils\n * TODO: нужно перенести утилиты в этот проект, когда он будет готов\n */\n\nimport { CurrencyCodes } from '@alfalab/data';\nimport { formatAmount } from '@alfalab/utils';\n\n/**\n * Форматирует введенное значение\n * @param enteredValue Значение введенное в инпут\n * @param currency валюта\n * @param minority количество минорных единиц\n */\nexport function getFormattedValue(enteredValue: string, currency: CurrencyCodes, minority: number) {\n    if (!enteredValue || enteredValue === '-') {\n        return enteredValue;\n    }\n\n    // eslint-disable-next-line prefer-const\n    let [head, tail] = enteredValue.split(',');\n\n    // При вводе \"-,\" указываем, что имеется в виду \"-0,\"\n    if (head === '-') {\n        head = '-0';\n    }\n\n    let { majorPart } = formatAmount({\n        value: Number(head) * minority,\n        currency,\n        minority,\n        negativeSymbol: 'hyphen-minus',\n    });\n\n    // Так как -0 === 0, formatAmount возвращает положительное значение. Исправляем это здесь\n    if (/^-(,|0),?/.test(enteredValue) && majorPart === '0') {\n        majorPart = `-${majorPart}`;\n    }\n\n    if (!tail && enteredValue.includes(',')) {\n        return majorPart.concat(',');\n    }\n\n    if (tail) {\n        return majorPart.concat(',', tail.slice(0, minority.toString().length - 1));\n    }\n\n    return majorPart;\n}\n\nexport function getAmountValueFromStr(str: string, minority: number) {\n    if (str === '' || str === '-') {\n        return null;\n    }\n\n    return Math.round(Number(str.replace(',', '.').replace(/[^0-9.-]/g, '')) * minority);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"minorPartAndCurrency\":\"minorPartAndCurrency_N7KPP\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_lBRr_\",\"bold\":\"bold_DQS_b\",\"input\":\"input_G8I9L\",\"suffixContainer\":\"suffixContainer_LcrIC\",\"filled\":\"filled_pcsxc\"};","import React, { forwardRef, Fragment, useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\nimport { withSuffix } from '@alfalab/core-components-with-suffix';\nimport { CurrencyCodes } from '@alfalab/data';\nimport { formatAmount, getCurrencySymbol, THINSP } from '@alfalab/utils';\n\nimport { getAmountValueFromStr, getFormattedValue } from './utils';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type AmountInputProps = Omit<InputProps, 'value' | 'onChange' | 'type'> & {\n    /**\n     * Денежное значение в минорных единицах\n     * Значение null - значит не установлено\n     */\n    value?: string | number | null;\n\n    /**\n     * Валюта\n     */\n    currency?: CurrencyCodes;\n\n    /**\n     * Дополнительный закрепленный текст справа от основного значения. (по умолчанию — символ валюты)\n     */\n    suffix?: string;\n\n    /**\n     * Максимальное число знаков до запятой\n     */\n    integerLength?: number;\n\n    /**\n     * Минорные единицы\n     */\n    minority?: number;\n\n    /**\n     * Позволяет вводить только целые значения\n     */\n    integersOnly?: boolean;\n\n    /**\n     * @default - true. Нельзя вводить отрицательные значения.\n     * Возможность вводить только положительные значения\n     */\n    positiveOnly?: boolean;\n\n    /**\n     * Жир\n     */\n    bold?: boolean;\n\n    /**\n     * Обработчик события изменения значения\n     */\n    onChange?: (\n        e: React.ChangeEvent<HTMLInputElement>,\n        payload: {\n            /**\n             * Денежное значение в минорных единицах\n             * Значение null - значит не установлено\n             */\n            value: number | null;\n            /**\n             * Значение инпута\n             */\n            valueString: string;\n        },\n    ) => void;\n};\n\n/**\n * Инпут, позволяющий закрепить значок валюты\n */\nconst SuffixInput = withSuffix(Input);\n\n/**\n * Компонент для ввода денежных значений\n */\nexport const AmountInput = forwardRef<HTMLInputElement, AmountInputProps>(\n    (\n        {\n            value = null,\n            integerLength = 9,\n            minority = 100,\n            currency = 'RUR',\n            suffix = currency,\n            placeholder = `0\\u2009${\n                suffix === currency ? getCurrencySymbol(currency) || '' : suffix\n            }`,\n            integersOnly = false,\n            positiveOnly = true,\n            bold = true,\n            colors = 'default',\n            className,\n            focusedClassName,\n            dataTestId,\n            clear = false,\n            onChange,\n            onClear,\n            breakpoint = 1024,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const getFormattedAmount = useCallback(() => {\n            if (value === '' || value === null || value === '-') return '';\n\n            return formatAmount({\n                value: +value,\n                currency,\n                minority,\n                view: 'default',\n                negativeSymbol: 'hyphen-minus',\n            }).formatted;\n        }, [currency, minority, value]);\n\n        const [inputValue, setInputValue] = useState<string>(getFormattedAmount());\n\n        const currencySymbol = getCurrencySymbol(currency);\n\n        useEffect(() => {\n            const currentAmountValue = getAmountValueFromStr(inputValue, minority);\n\n            if (currentAmountValue !== value) {\n                return setInputValue(getFormattedAmount());\n            }\n\n            return () => undefined;\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [getFormattedAmount]);\n\n        const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            const input = e.target;\n            let enteredValue = input.value.replace(/\\s/g, '').replace('.', ',');\n\n            if (integersOnly) {\n                [enteredValue] = enteredValue.split(',');\n            }\n            // Сокращение минимальной длины мажорной части числа до 0 позволяет ввести \",\" => \"0,\"\n            const isCorrectEnteredValue = RegExp(\n                `(^${positiveOnly ? '' : '-?'}[0-9]{0,${integerLength}}(,([0-9]+)?)?$|^\\\\s*$)`,\n            ).test(enteredValue);\n\n            if (isCorrectEnteredValue) {\n                const newFormattedValue = getFormattedValue(enteredValue, currency, minority);\n\n                if (newFormattedValue === inputValue) {\n                    const caret = input.selectionStart;\n\n                    window.requestAnimationFrame(() => {\n                        input.selectionStart = caret;\n                        input.selectionEnd = caret;\n                    });\n                } else {\n                    /**\n                     * Поддержка положения каретки\n                     * Поскольку при форматировании введенного значения могут появляться символы типа пробела\n                     * или запятая - каретка прыгает в конец и ее необходимо ставить в правильное место\n                     */\n\n                    // Узнаем длину оригинального инпута с условием обрезания лишних символов\n\n                    const [head, tail] = input.value.split(/\\.|,/);\n                    let notFormattedEnteredValueLength = head.length;\n\n                    if (tail) {\n                        notFormattedEnteredValueLength += 1; // запятая или точка\n                        notFormattedEnteredValueLength += tail.slice(\n                            0,\n                            minority.toString().length - 1,\n                        ).length; // символы в минорной части\n                    }\n\n                    const diff = newFormattedValue.length - notFormattedEnteredValueLength;\n                    const caret = (input.selectionStart as number) + diff;\n\n                    window.requestAnimationFrame(() => {\n                        input.selectionStart = caret;\n                        input.selectionEnd = caret;\n                    });\n                }\n\n                setInputValue(newFormattedValue);\n                if (onChange) {\n                    onChange(e, {\n                        value: getAmountValueFromStr(newFormattedValue, minority),\n                        valueString: newFormattedValue,\n                    });\n                }\n            } else {\n                // Не двигаем каретку когда вставляется невалидный символ\n                const caret = (input.selectionStart as number) - 1;\n\n                window.requestAnimationFrame(() => {\n                    input.selectionStart = caret;\n                    input.selectionEnd = caret;\n                });\n            }\n        };\n\n        const handleClear = useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                setInputValue('');\n\n                if (onClear) {\n                    onClear(event);\n                }\n            },\n            [onClear],\n        );\n\n        const [majorPart, minorPart] = inputValue.split(',');\n\n        return (\n            <div\n                className={cn(styles.container, {\n                    [styles.bold]: bold,\n                    [styles.filled]: Boolean(inputValue),\n                })}\n            >\n                <SuffixInput\n                    {...restProps}\n                    suffix={\n                        <Fragment>\n                            {majorPart}\n\n                            <span className={colorStyles[colors].minorPartAndCurrency}>\n                                {minorPart !== undefined && `,${minorPart}`}\n                                {THINSP}\n                                {suffix === currency ? currencySymbol : suffix}\n                            </span>\n                        </Fragment>\n                    }\n                    suffixContainerClassName={styles.suffixContainer}\n                    clear={clear}\n                    placeholder={placeholder}\n                    value={inputValue}\n                    colors={colors}\n                    className={cn(styles.component, className)}\n                    focusedClassName={focusedClassName}\n                    inputClassName={styles.input}\n                    onChange={handleChange}\n                    onClear={handleClear}\n                    inputMode='decimal'\n                    pattern={`[${positiveOnly ? '' : '-'}0-9\\\\s\\\\.,]*`}\n                    dataTestId={dataTestId}\n                    ref={ref}\n                    breakpoint={breakpoint}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"minorPartAndCurrency\":\"minorPartAndCurrency_MKlN9\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_lJAPI\",\"transparentMinor\":\"transparentMinor_sBFro\",\"bold\":\"bold_RYrp0\",\"normalMinor\":\"normalMinor_AQCFO\",\"defaultStyles\":\"defaultStyles_nFL6k\",\"defaultMinor\":\"defaultMinor_pFHQ4\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR, formatAmount } from '@alfalab/utils';\n\nimport { AmountProps } from './types';\n\nimport styles from './index.module.css';\n\n/**\n * Компонент для отображения суммы, согласно следующему гайдлайну:\n * https://design.alfabank.ru/patterns/amount\n */\nexport const Amount: React.FC<AmountProps> = ({\n    value,\n    minority,\n    currency,\n    codeFormat = 'symbolic',\n    view = 'default',\n    bold,\n    transparentMinor,\n    rightAddons,\n    showPlus = false,\n    className,\n    dataTestId,\n}) => {\n    const { majorPart, minorPart, currencySymbol, currencySeparator } = formatAmount({\n        value,\n        currency,\n        minority,\n        view,\n        codeFormat,\n    });\n\n    const defaultStyles = bold === undefined && transparentMinor === undefined;\n\n    return (\n        <span\n            className={cn(styles.component, className, {\n                [styles.bold]: bold === 'full' || bold === 'major',\n                [styles.defaultStyles]: defaultStyles,\n            })}\n            data-test-id={dataTestId}\n        >\n            {showPlus && value > 0 ? '+' : ''}\n            {majorPart}\n            <span\n                className={cn(styles.minorPartAndCurrency, {\n                    [styles.transparentMinor]: transparentMinor,\n                    [styles.normalMinor]: bold === 'major',\n                    [styles.defaultMinor]: defaultStyles,\n                })}\n            >\n                {minorPart && AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR}\n                {minorPart}\n                {currency ? `${currencySeparator}${currencySymbol ?? currency}` : null}\n                {rightAddons}\n            </span>\n        </span>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_aVHko\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { formatAmount, THINSP } from '@alfalab/utils';\n\nimport { AmountProps } from '../types';\n\nimport styles from './index.module.css';\n\n/**\n * Компонент для отображения суммы, согласно следующему гайдлайну:\n * https://design.alfabank.ru/patterns/amount\n * Не содержит стилей кроме неразрывности строки\n *\n * @deprecated Используйте основной компонент. Стилизацию можно настроить через пропсы\n */\nexport const PureAmount: React.FC<AmountProps> = ({\n    value,\n    minority,\n    currency,\n    rightAddons,\n    view = 'default',\n    showPlus = false,\n    className,\n    dataTestId,\n    codeFormat = 'symbolic',\n}) => {\n    const { formatted, currencySymbol } = formatAmount({\n        value,\n        currency,\n        minority,\n        view,\n        codeFormat,\n    });\n\n    return (\n        <span className={cn(styles.component, className)} data-test-id={dataTestId}>\n            {showPlus && value > 0 ? '+' : ''}\n            {formatted}\n            {currency ? `${THINSP}${currencySymbol}` : null}\n            {rightAddons}\n        </span>\n    );\n};\n","import { PureAmount } from './pure/component';\nimport { Amount as DefaultAmount } from './component';\n\ntype AmountType = typeof DefaultAmount & { Pure: typeof PureAmount };\nexport const Amount: AmountType = DefaultAmount as AmountType;\nAmount.Pure = PureAmount;\n\nexport * from './types';\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_bmgh9\",\"label\":\"label_ncC2g\",\"control\":\"control_QwVC6\",\"xxs\":\"xxs_oi_17\",\"file\":\"file_qEi9x\",\"noFile\":\"noFile_O5K0z\",\"xs\":\"xs_rWFfx\",\"s\":\"s_RGe0t\",\"m\":\"m_CizN2\",\"l\":\"l_B8iY9\",\"clear\":\"clear_g0aVv\",\"progressBar\":\"progressBar_aKDSz\",\"disabled\":\"disabled_gj6P1\",\"icon\":\"icon_YC2xP\",\"focused\":\"focused_n2YLe\"};","import React, {\n    ButtonHTMLAttributes,\n    ChangeEvent,\n    InputHTMLAttributes,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { KeyboardFocusable } from '@alfalab/core-components-keyboard-focusable';\nimport { ProgressBar } from '@alfalab/core-components-progress-bar';\nimport { PaperclipMIcon } from '@alfalab/icons-glyph/PaperclipMIcon';\nimport { PaperclipSIcon } from '@alfalab/icons-glyph/PaperclipSIcon';\nimport { pluralize } from '@alfalab/utils';\n\nimport { truncateFilename } from './utils';\n\nimport styles from './index.module.css';\n\nexport type AttachProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'size' | 'type' | 'value' | 'defaultValue' | 'onChange' | 'multiple' | 'enterKeyHint'\n> & {\n    /**\n     * Содержимое кнопки для выбора файла\n     */\n    buttonContent?: React.ReactNode;\n\n    /**\n     * Свойства для кнопки\n     */\n    buttonProps?: ButtonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для блока с файлами\n     */\n    fileClassName?: string;\n\n    /**\n     * Дополнительный класс для блока с подсказкой, когда файл не загружен\n     */\n    noFileClassName?: string;\n\n    /**\n     * Число символов, после которого имя файла будет обрезаться\n     */\n    maxFilenameLength?: number;\n\n    /**\n     * Текст для случая, когда файл не загружен\n     */\n    noFileText?: string;\n\n    /**\n     * Процент выполнения загрузки файла\n     */\n    progressBarPercent?: number;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l';\n\n    /**\n     * Возможность прикрепления нескольких файлов\n     */\n    multiple?: boolean;\n\n    /**\n     * Содержимое поля ввода. Принимает массив объектов типа File или null.\n     */\n    value?: File[] | null;\n\n    /**\n     * Содержимое поля ввода, указанное по умолчанию. Принимает массив объектов типа File или null.\n     */\n    defaultValue?: File[] | null;\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { files: File[] }) => void;\n\n    /**\n     * Обработчик нажатия на кнопку очистки\n     */\n    onClear?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nconst MULTIPLE_TEXTS: [string, string, string] = ['файл', 'файла', 'файлов'];\n\nexport const Attach = React.forwardRef<HTMLInputElement, AttachProps>(\n    (\n        {\n            size = 's',\n            accept,\n            buttonContent = 'Выберите файл',\n            buttonProps = {},\n            className,\n            fileClassName,\n            noFileClassName,\n            disabled,\n            dataTestId,\n            id,\n            maxFilenameLength,\n            multiple,\n            noFileText = 'Нет файла',\n            progressBarPercent,\n            defaultValue,\n            value,\n            onChange,\n            onClear,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const [files, setFiles] = useState(defaultValue || []);\n\n        const inputRef = useRef<HTMLInputElement>(null);\n        const labelRef = useRef<HTMLLabelElement>(null);\n        const buttonRef = useRef<HTMLButtonElement>(null);\n\n        const getDefaultLeftAddon = () => {\n            let IconComponent: React.FC<React.SVGProps<SVGSVGElement>>;\n\n            if (['xs', 'xxs'].includes(size)) {\n                IconComponent = PaperclipSIcon;\n            } else {\n                IconComponent = PaperclipMIcon;\n            }\n\n            return <IconComponent className={styles.icon} />;\n        };\n\n        const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n            const filesArray = event.target.files ? Array.from(event.target.files) : [];\n\n            if (onChange) {\n                onChange(event, { files: filesArray });\n            }\n\n            if (uncontrolled && event.target.files) {\n                setFiles(filesArray);\n            }\n\n            if (inputRef.current) {\n                inputRef.current.value = '';\n            }\n        };\n\n        const handleButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n            if (labelRef.current) {\n                labelRef.current.click();\n            }\n            if (buttonRef.current) {\n                buttonRef.current.focus();\n            }\n\n            if (buttonProps.onClick) {\n                buttonProps.onClick(event);\n            }\n        };\n\n        const handleClearClick = (ev: React.MouseEvent<HTMLButtonElement>) => {\n            if (uncontrolled) {\n                setFiles([]);\n            }\n\n            if (onClear) {\n                onClear(ev);\n            }\n        };\n\n        const statusTextContent =\n            files.length === 1 ? (\n                truncateFilename(files[0].name, maxFilenameLength)\n            ) : (\n                <abbr title={files.map((file) => file.name).join()}>\n                    {files.length} {pluralize(files.length, ...MULTIPLE_TEXTS)}\n                </abbr>\n            );\n\n        useEffect(() => {\n            if (!uncontrolled) {\n                setFiles(value || []);\n            }\n        }, [uncontrolled, value]);\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    {\n                        [styles.disabled]: disabled,\n                    },\n                    className,\n                )}\n            >\n                <Button\n                    {...buttonProps}\n                    size={size}\n                    disabled={disabled}\n                    view={buttonProps?.view || 'secondary'}\n                    leftAddons={buttonProps?.leftAddons || getDefaultLeftAddon()}\n                    onClick={handleButtonClick}\n                    ref={buttonRef}\n                >\n                    <span>{buttonContent}</span>\n                </Button>\n                <label className={styles.label} htmlFor={id} ref={labelRef}>\n                    <input\n                        {...restProps}\n                        className={styles.control}\n                        accept={accept}\n                        disabled={disabled}\n                        id={id}\n                        multiple={multiple}\n                        tabIndex={-1}\n                        type='file'\n                        onChange={handleInputChange}\n                        ref={mergeRefs([ref, inputRef])}\n                        data-test-id={dataTestId}\n                    />\n                </label>\n                {files && files.length > 0 ? (\n                    <div className={cn(styles.file, fileClassName)}>\n                        <span>{statusTextContent}</span>\n                        <KeyboardFocusable>\n                            {(targetRef, focused) => (\n                                <button\n                                    aria-label='очистить'\n                                    type='button'\n                                    className={cn(styles.clear, {\n                                        [styles.focused]: focused,\n                                    })}\n                                    onClick={handleClearClick}\n                                    ref={targetRef}\n                                />\n                            )}\n                        </KeyboardFocusable>\n                        {progressBarPercent && (\n                            <ProgressBar\n                                className={styles.progressBar}\n                                value={progressBarPercent}\n                                view='positive'\n                            />\n                        )}\n                    </div>\n                ) : (\n                    <div className={cn(styles.noFile, noFileClassName)}>{noFileText}</div>\n                )}\n            </div>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nAttach.defaultProps = {\n    size: 's',\n    buttonContent: 'Выберите файл',\n    noFileText: 'Нет файла',\n};\n","export function truncateFilename(filename: string, maxFilenameLength?: number): string {\n    if (maxFilenameLength && filename.length > maxFilenameLength) {\n        const lengthOfPart = Math.round(maxFilenameLength / 2) - 1;\n\n        return `${filename.substr(0, lengthOfPart)}…${filename.substr(\n            filename.length - lengthOfPart,\n        )}`;\n    }\n\n    return filename;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"backdrop_Qhs_t\",\"appear\":\"appear_SCr4Z\",\"enter\":\"enter_SsHt0\",\"appearActive\":\"appearActive_OtF38\",\"enterActive\":\"enterActive_Ge0VI\",\"appearDone\":\"appearDone_YEkLR\",\"enterDone\":\"enterDone_d2Cu_\",\"exit\":\"exit_Jy9n9\",\"exitActive\":\"exitActive_duZZz\",\"exitDone\":\"exitDone_PGkvT\"};","import React, { MouseEvent, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { CSSTransitionClassNames } from 'react-transition-group/CSSTransition';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type BackdropProps = Partial<TransitionProps> & {\n    /**\n     * Прозрачный бэкдроп\n     */\n    invisible?: boolean;\n\n    /**\n     * Управляет видимостью компонента\n     */\n    open: boolean;\n\n    /**\n     * Обработчик клика по бэкдропу\n     */\n    onClose?: (event: MouseEvent<HTMLElement>) => void;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Классы анимации\n     *\n     * http://reactcommunity.org/react-transition-group/css-transition#CSSTransition-prop-classNames\n     */\n    transitionClassNames?: string | CSSTransitionClassNames;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Backdrop: React.FC<BackdropProps> = ({\n    className,\n    open = false,\n    invisible = false,\n    timeout = 200,\n    children,\n    onClose,\n    dataTestId,\n    transitionClassNames = styles,\n    ...restProps\n}) => (\n    <CSSTransition\n        timeout={timeout}\n        unmountOnExit={true}\n        classNames={transitionClassNames}\n        in={!invisible && open}\n        appear={true}\n        {...restProps}\n    >\n        <div\n            aria-hidden={true}\n            onClick={onClose}\n            data-test-id={dataTestId}\n            className={cn(styles.backdrop, className)}\n        >\n            {children}\n        </div>\n    </CSSTransition>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_MwOS5\",\"aspectRatioContainer\":\"aspectRatioContainer_xDsU6\",\"content\":\"content_eYAmN\",\"label\":\"label_MDQRj\",\"focused\":\"focused_CFuH8\",\"filled\":\"filled_u7HnA\",\"input\":\"input_R0GHs\",\"bankLogo\":\"bankLogo_ezQgG\",\"brandLogo\":\"brandLogo_aQrzo\",\"usePhoto\":\"usePhoto_oxrXa\"};","import React, { ChangeEvent, MouseEvent, ReactNode, useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { MaskedInput } from '@alfalab/core-components-masked-input';\nimport { CameraMIcon } from '@alfalab/icons-glyph/CameraMIcon';\nimport { AlfaBankLIcon } from '@alfalab/icons-logotype/AlfaBankLIcon';\nimport { MastercardLIcon } from '@alfalab/icons-logotype/MastercardLIcon';\nimport { MirXxlIcon } from '@alfalab/icons-logotype/MirXxlIcon';\nimport { VisaXxlIcon } from '@alfalab/icons-logotype/VisaXxlIcon';\n\nimport { validateCardNumber } from './utils';\n\nimport styles from './index.module.css';\n\nexport type BankCardProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Цвет фона карты\n     */\n    backgroundColor?: string;\n\n    /**\n     * Иконка логотипа банка (размер L)\n     */\n    bankLogo?: ReactNode;\n\n    /**\n     * Лэйбл поля ввода\n     */\n    inputLabel?: string;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Обработчик ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => void;\n\n    /**\n     * Обработчик вызова камеры\n     */\n    onUsePhoto?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\n// prettier-ignore\nconst cardMask = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/];\n// prettier-ignore\nconst accountNumberMask = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/];\n\nconst getBrandIcon = (value = '') => {\n    // Показываем логотип только после ввода всех цифр карты\n    if (value.replace(/\\s/g, '').length === 16 && validateCardNumber(value)) {\n        if (value.startsWith('2')) return <MirXxlIcon />;\n        if (value.startsWith('4')) return <VisaXxlIcon />;\n        if (value.startsWith('5')) return <MastercardLIcon />;\n        if (value.startsWith('6')) return <MastercardLIcon />;\n    }\n\n    return null;\n};\n\nexport const BankCard = React.forwardRef<HTMLInputElement, BankCardProps>(\n    (\n        {\n            bankLogo = <AlfaBankLIcon />,\n            backgroundColor = '#EF3124',\n            inputLabel = 'Номер карты или счёта',\n            value,\n            className,\n            onUsePhoto,\n            onChange,\n            dataTestId,\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const [brandIcon, setBrandIcon] = useState<ReactNode>(getBrandIcon(value));\n\n        const getMask = useCallback(\n            (newValue: string) =>\n                newValue.length <= cardMask.length ? cardMask : accountNumberMask,\n            [],\n        );\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => {\n                if (uncontrolled) {\n                    setBrandIcon(getBrandIcon(event.target.value));\n                }\n\n                if (onChange) {\n                    onChange(event, payload);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const renderRightAddons = useCallback(\n            () => (\n                <button type='button' className={styles.usePhoto} onClick={onUsePhoto}>\n                    <CameraMIcon />\n                </button>\n            ),\n            [onUsePhoto],\n        );\n\n        useEffect(() => {\n            setBrandIcon(getBrandIcon(value));\n        }, [value]);\n\n        return (\n            <div className={cn(styles.component, className)}>\n                <div className={styles.aspectRatioContainer}>\n                    <div className={styles.content} style={{ backgroundColor }}>\n                        <div className={styles.bankLogo}>{bankLogo}</div>\n\n                        <MaskedInput\n                            ref={ref}\n                            value={value}\n                            mask={getMask}\n                            block={true}\n                            label={inputLabel}\n                            size='m'\n                            rightAddons={renderRightAddons()}\n                            inputClassName={styles.input}\n                            labelClassName={styles.label}\n                            filledClassName={styles.filled}\n                            focusedClassName={styles.focused}\n                            onChange={handleInputChange}\n                            dataTestId={dataTestId}\n                            inputMode='numeric'\n                            pattern='[0-9]*'\n                        />\n\n                        {brandIcon && <div className={styles.brandLogo}>{brandIcon}</div>}\n                    </div>\n                </div>\n            </div>\n        );\n    },\n);\n\nBankCard.defaultProps = {\n    bankLogo: <AlfaBankLIcon />,\n    backgroundColor: '#EF3124',\n    inputLabel: 'Номер карты или счёта',\n};\n","/**\n * Проверяет номер карты по алгоритму Луна\n *\n * @param cardNumber - номер карты\n *\n */\nexport function validateCardNumber(cardNumber: string) {\n    const digits = cardNumber.replace(/\\s+/g, '');\n    let sum = 0;\n\n    for (let i = 0; i < digits.length; i++) {\n        let cardNum = parseInt(digits[i], 10);\n\n        if (cardNum > 9) return false;\n\n        if ((digits.length - i) % 2 === 0) {\n            cardNum *= 2;\n\n            if (cardNum > 9) {\n                cardNum -= 9;\n            }\n        }\n\n        sum += cardNum;\n    }\n\n    return sum % 10 === 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_MPFYr\",\"wrapper\":\"wrapper_tX3kF\",\"content\":\"content_S55jh\",\"hidden\":\"hidden_SCxBA\",\"backdrop\":\"backdrop_sjc2f\",\"appear\":\"appear_CNM3a\",\"enter\":\"enter_NSupV\",\"appearActive\":\"appearActive_h8jdA\",\"enterActive\":\"enterActive_bH2oj\",\"exit\":\"exit_x7k7E\",\"exitActive\":\"exitActive_MVzIe\",\"exitDone\":\"exitDone_TeQGG\"};","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, {\n    FC,\n    forwardRef,\n    KeyboardEvent,\n    MouseEvent,\n    MutableRefObject,\n    ReactNode,\n    Ref,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport FocusLock from 'react-focus-lock';\nimport mergeRefs from 'react-merge-refs';\nimport { CSSTransition } from 'react-transition-group';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport cn from 'classnames';\n\nimport { Backdrop as DefaultBackdrop, BackdropProps } from '@alfalab/core-components-backdrop';\nimport { Portal, PortalProps } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\n\nimport {\n    getScrollbarSize,\n    handleContainer,\n    hasScrollbar,\n    isScrolledToBottom,\n    isScrolledToTop,\n    restoreContainerStyles,\n} from './utils';\n\nimport styles from './index.module.css';\n\n// TODO Без полифила крашится FocusLock в IE11. Выпилить в будущем!!!.\nimport './matches-polyfill';\n\nexport type BaseModalProps = {\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Компонент бэкдропа\n     */\n    Backdrop?: FC<BackdropProps>;\n\n    /**\n     * Свойства для Бэкдропа\n     */\n    backdropProps?: Partial<BackdropProps> & Record<string, unknown>;\n\n    /**\n     * Нода, компонент или функция возвращающая их\n     *\n     * Контейнер к которому будут добавляться порталы\n     */\n    container?: PortalProps['getPortalContainer'];\n\n    /**\n     * Отключает автоматический перевод фокуса на модалку при открытии\n     * @default false\n     */\n    disableAutoFocus?: boolean;\n\n    /**\n     * Отключает ловушку фокуса\n     * @default false\n     */\n    disableFocusLock?: boolean;\n\n    /**\n     * Отключает восстановление фокуса на предыдущем элементе после закрытия модалки\n     * @default false\n     */\n    disableRestoreFocus?: boolean;\n\n    /**\n     * Отключает вызов `callback` при нажатии Escape\n     * @default false\n     */\n    disableEscapeKeyDown?: boolean;\n\n    /**\n     * Отключает вызов `callback` при клике на бэкдроп\n     * @default false\n     */\n    disableBackdropClick?: boolean;\n\n    /**\n     * Отключает блокировку скролла при открытии модального окна\n     * @default false\n     */\n    disableBlockingScroll?: boolean;\n\n    /**\n     * Содержимое модалки всегда в DOM\n     * @default false\n     */\n    keepMounted?: boolean;\n\n    /**\n     * Управление видимостью модалки\n     */\n    open: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для обертки (Modal)\n     */\n    wrapperClassName?: string;\n\n    /**\n     * Обработчик скролла контента\n     */\n    scrollHandler?: 'wrapper' | 'content' | MutableRefObject<HTMLDivElement | null>;\n\n    /**\n     * Пропсы для анимации (CSSTransition)\n     */\n    transitionProps?: Partial<TransitionProps>;\n\n    /**\n     * Рендерить ли в контейнер через портал.\n     * @default true\n     */\n    usePortal?: boolean;\n\n    /**\n     * Обработчик события нажатия на бэкдроп\n     */\n    onBackdropClick?: (event: MouseEvent) => void;\n\n    /**\n     * Обработчик события нажатия на Escape\n     *\n     * Если `disableEscapeKeyDown` - false и модальное окно в фокусе\n     */\n    onEscapeKeyDown?: (event: KeyboardEvent) => void;\n\n    /**\n     * Обработчик закрытия\n     */\n    onClose?: (\n        event: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>,\n        reason?: 'backdropClick' | 'escapeKeyDown' | 'closerClick',\n    ) => void;\n\n    /**\n     * Обработчик события onEntered компонента Transition\n     */\n    onMount?: () => void;\n\n    /**\n     * Обработчик события onExited компонента Transition\n     */\n    onUnmount?: () => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Реф, который должен быть установлен компонентной области\n     */\n    componentRef?: MutableRefObject<HTMLDivElement | null>;\n};\n\nexport type BaseModalContext = {\n    parentRef: React.RefObject<HTMLDivElement>;\n    componentRef: React.RefObject<HTMLDivElement>;\n    hasFooter?: boolean;\n    hasHeader?: boolean;\n    hasScroll?: boolean;\n    headerHighlighted?: boolean;\n    footerHighlighted?: boolean;\n    headerOffset?: number;\n    setHeaderOffset: (offset: number) => void;\n    contentRef: Ref<HTMLElement>;\n    setHasHeader: (exists: boolean) => void;\n    setHasFooter: (exists: boolean) => void;\n    onClose: Required<BaseModalProps>['onClose'];\n};\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const BaseModalContext = React.createContext<BaseModalContext>({\n    parentRef: { current: null },\n    componentRef: { current: null },\n    hasFooter: false,\n    hasHeader: false,\n    hasScroll: false,\n    headerHighlighted: false,\n    footerHighlighted: false,\n    headerOffset: 0,\n    setHeaderOffset: () => null,\n    contentRef: () => null,\n    setHasHeader: () => null,\n    setHasFooter: () => null,\n    onClose: () => null,\n});\n\nexport const BaseModal = forwardRef<HTMLDivElement, BaseModalProps>(\n    (\n        {\n            open,\n            container,\n            children,\n            scrollHandler = 'wrapper',\n            Backdrop = DefaultBackdrop,\n            backdropProps = {},\n            transitionProps = {},\n            disableBackdropClick,\n            disableAutoFocus = false,\n            disableFocusLock = false,\n            disableEscapeKeyDown = false,\n            disableRestoreFocus = false,\n            disableBlockingScroll = false,\n            keepMounted = false,\n            className,\n            contentClassName,\n            wrapperClassName,\n            onBackdropClick,\n            onClose,\n            onEscapeKeyDown,\n            onMount,\n            onUnmount,\n            dataTestId,\n            zIndex = stackingOrder.MODAL,\n            componentRef = null,\n            usePortal = true,\n        },\n        ref,\n    ) => {\n        const [exited, setExited] = useState<boolean | null>(null);\n        const [hasScroll, setHasScroll] = useState(false);\n        const [hasHeader, setHasHeader] = useState(false);\n        const [hasFooter, setHasFooter] = useState(false);\n        const [headerHighlighted, setHeaderHighlighted] = useState(false);\n        const [footerHighlighted, setFooterHighlighted] = useState(false);\n        const [headerOffset, setHeaderOffset] = useState(0);\n\n        const componentNodeRef = useRef<HTMLDivElement>(null);\n        const wrapperRef = useRef<HTMLDivElement>(null);\n        const scrollableNodeRef = useRef<HTMLDivElement | null>(null);\n        const contentNodeRef = useRef<HTMLDivElement | null>(null);\n        const restoreContainerStylesRef = useRef<null | (() => void)>(null);\n        const mouseDownTarget = useRef<HTMLElement>();\n        const resizeObserverRef = useRef<ResizeObserver>();\n\n        const checkToHasScrollBar = () => {\n            if (scrollableNodeRef.current) {\n                const scrollExists = hasScrollbar(scrollableNodeRef.current);\n\n                setFooterHighlighted(scrollExists);\n                setHasScroll(scrollExists);\n            }\n        };\n\n        const isExited = exited || exited === null;\n        const shouldRender = keepMounted || open || !isExited;\n\n        const getContainer = useCallback(\n            () => (container ? container() : document.body) as HTMLElement,\n            [container],\n        );\n\n        const addResizeHandle = useCallback(() => {\n            if (!resizeObserverRef.current) return;\n\n            if (scrollableNodeRef.current) {\n                resizeObserverRef.current.observe(scrollableNodeRef.current);\n            }\n            if (contentNodeRef.current) {\n                resizeObserverRef.current.observe(contentNodeRef.current);\n            }\n        }, []);\n\n        const removeResizeHandle = useCallback(() => resizeObserverRef.current?.disconnect(), []);\n\n        const contentRef = useCallback((node: HTMLDivElement) => {\n            if (node !== null) {\n                contentNodeRef.current = node;\n                if (resizeObserverRef.current) {\n                    resizeObserverRef.current.observe(node);\n                }\n                checkToHasScrollBar();\n            }\n        }, []);\n\n        const handleScroll = useCallback(() => {\n            if (!scrollableNodeRef.current || !componentNodeRef.current) return;\n\n            if (hasHeader) {\n                setHeaderHighlighted(\n                    !isScrolledToTop(scrollableNodeRef.current) &&\n                        componentNodeRef.current.getBoundingClientRect().top - headerOffset <= 0,\n                );\n            }\n\n            if (hasFooter) {\n                setFooterHighlighted(\n                    !isScrolledToBottom(scrollableNodeRef.current) &&\n                        componentNodeRef.current.getBoundingClientRect().bottom >=\n                            window.innerHeight,\n                );\n            }\n        }, [hasFooter, hasHeader, headerOffset]);\n\n        const handleClose = useCallback<Required<BaseModalProps>['onClose']>(\n            (event, reason) => {\n                if (onClose) {\n                    onClose(event, reason);\n                }\n\n                if (reason === 'backdropClick' && onBackdropClick) {\n                    onBackdropClick(event as MouseEvent);\n                }\n\n                if (reason === 'escapeKeyDown' && onEscapeKeyDown) {\n                    onEscapeKeyDown(event as KeyboardEvent);\n                }\n\n                return null;\n            },\n            [onBackdropClick, onClose, onEscapeKeyDown],\n        );\n\n        const handleBackdropMouseDown = (event: MouseEvent<HTMLElement>) => {\n            let clickedOnScrollbar = false;\n            const clientWidth = (event.target as HTMLElement)?.clientWidth;\n\n            if (event.clientX && clientWidth) {\n                // Устанавливаем смещение для абсолютно спозиционированного скроллбара в OSX в 17px.\n                const offset = getScrollbarSize() === 0 ? 17 : 0;\n\n                clickedOnScrollbar = event.clientX + offset > clientWidth;\n            }\n\n            if (!disableBackdropClick && !clickedOnScrollbar) {\n                mouseDownTarget.current = event.target as HTMLElement;\n            }\n        };\n\n        const handleBackdropMouseUp = (event: MouseEvent<HTMLElement>) => {\n            if (\n                !disableBackdropClick &&\n                event.target === wrapperRef.current &&\n                mouseDownTarget.current === wrapperRef.current\n            ) {\n                handleClose(event, 'backdropClick');\n            }\n\n            mouseDownTarget.current = undefined;\n        };\n\n        const handleKeyDown = useCallback(\n            (event: KeyboardEvent<HTMLDivElement>) => {\n                /*\n                 * Чтобы сохранить дефолтное поведение элементов и событий форм,\n                 * обработчик не устанавливает event.preventDefault()\n                 */\n                if (event.key !== 'Escape') {\n                    return;\n                }\n\n                // Если есть обработчик escape на body\n                event.stopPropagation();\n\n                if (!disableEscapeKeyDown && handleClose) {\n                    handleClose(event, 'escapeKeyDown');\n                }\n            },\n            [disableEscapeKeyDown, handleClose],\n        );\n\n        const getScrollHandler = useCallback(() => {\n            if (scrollHandler === 'wrapper') return wrapperRef.current;\n            if (scrollHandler === 'content') return componentNodeRef.current;\n\n            return scrollHandler.current || wrapperRef.current;\n        }, [scrollHandler]);\n\n        const handleEntered: Required<TransitionProps>['onEntered'] = useCallback(\n            (node, isAppearing) => {\n                scrollableNodeRef.current = getScrollHandler();\n\n                addResizeHandle();\n\n                if (scrollableNodeRef.current) {\n                    scrollableNodeRef.current.addEventListener('scroll', handleScroll);\n                    handleScroll();\n                }\n\n                if (transitionProps.onEntered) {\n                    transitionProps.onEntered(node, isAppearing);\n                }\n\n                if (onMount) onMount();\n            },\n            [addResizeHandle, getScrollHandler, handleScroll, onMount, transitionProps],\n        );\n\n        const handleExited: Required<TransitionProps>['onExited'] = useCallback(\n            (node) => {\n                removeResizeHandle();\n\n                setExited(true);\n\n                if (scrollableNodeRef.current) {\n                    scrollableNodeRef.current.removeEventListener('scroll', handleScroll);\n                }\n\n                if (transitionProps.onExited) {\n                    transitionProps.onExited(node);\n                }\n\n                if (onUnmount) onUnmount();\n\n                if (restoreContainerStylesRef.current) {\n                    restoreContainerStylesRef.current();\n                }\n            },\n            [handleScroll, onUnmount, removeResizeHandle, transitionProps],\n        );\n\n        useEffect(() => {\n            if (open && isExited) {\n                if (!disableBlockingScroll) {\n                    const el = getContainer();\n\n                    handleContainer(el);\n\n                    restoreContainerStylesRef.current = () => {\n                        restoreContainerStylesRef.current = null;\n                        restoreContainerStyles(el);\n                    };\n                }\n\n                setExited(false);\n            }\n        }, [getContainer, open, disableBlockingScroll, isExited]);\n\n        useEffect(() => {\n            const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n\n            resizeObserverRef.current = new ResizeObserver(checkToHasScrollBar);\n\n            return () => {\n                if (restoreContainerStylesRef.current) {\n                    restoreContainerStylesRef.current();\n                }\n\n                if (resizeObserverRef.current) {\n                    resizeObserverRef.current.disconnect();\n                }\n            };\n        }, []);\n\n        const contextValue = useMemo<BaseModalContext>(\n            () => ({\n                parentRef: wrapperRef,\n                componentRef: componentNodeRef,\n                hasHeader,\n                hasFooter,\n                hasScroll,\n                headerHighlighted,\n                footerHighlighted,\n                headerOffset,\n                setHeaderOffset,\n                contentRef,\n                setHasHeader,\n                setHasFooter,\n                onClose: handleClose,\n            }),\n            [\n                contentRef,\n                hasHeader,\n                hasFooter,\n                hasScroll,\n                headerHighlighted,\n                footerHighlighted,\n                headerOffset,\n                setHeaderOffset,\n                handleClose,\n            ],\n        );\n\n        const renderContent = () => (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <BaseModalContext.Provider value={contextValue}>\n                        <FocusLock\n                            autoFocus={!disableAutoFocus}\n                            disabled={disableFocusLock || !open}\n                            returnFocus={!disableRestoreFocus}\n                        >\n                            {Backdrop && (\n                                <Backdrop\n                                    {...backdropProps}\n                                    className={cn(backdropProps.className, styles.backdrop)}\n                                    open={open}\n                                    style={{\n                                        zIndex: computedZIndex,\n                                    }}\n                                />\n                            )}\n                            <div\n                                role='dialog'\n                                className={cn(styles.wrapper, wrapperClassName, {\n                                    [styles.hidden]: !open && isExited,\n                                })}\n                                ref={mergeRefs([ref, wrapperRef])}\n                                onKeyDown={handleKeyDown}\n                                onMouseDown={handleBackdropMouseDown}\n                                onMouseUp={handleBackdropMouseUp}\n                                // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n                                tabIndex={0}\n                                data-test-id={dataTestId}\n                                style={{\n                                    zIndex: computedZIndex,\n                                }}\n                            >\n                                <CSSTransition\n                                    appear={true}\n                                    timeout={200}\n                                    classNames={styles}\n                                    {...transitionProps}\n                                    in={open}\n                                    onEntered={handleEntered}\n                                    onExited={handleExited}\n                                >\n                                    <div\n                                        className={cn(styles.component, className)}\n                                        ref={mergeRefs([componentRef, componentNodeRef])}\n                                    >\n                                        <div className={cn(styles.content, contentClassName)}>\n                                            {children}\n                                        </div>\n                                    </div>\n                                </CSSTransition>\n                            </div>\n                        </FocusLock>\n                    </BaseModalContext.Provider>\n                )}\n            </Stack>\n        );\n\n        if (!shouldRender) return null;\n\n        return usePortal ? (\n            <Portal getPortalContainer={container} immediateMount={true}>\n                {renderContent()}\n            </Portal>\n        ) : (\n            renderContent()\n        );\n    },\n);\n","/* eslint-disable */\n// @ts-nocheck\n\nif (typeof window !== 'undefined') {\n    if (Element && !Element.prototype.matches) {\n        Element.prototype.matches =\n            Element.prototype.matchesSelector ||\n            Element.prototype.mozMatchesSelector ||\n            Element.prototype.msMatchesSelector ||\n            Element.prototype.oMatchesSelector ||\n            Element.prototype.webkitMatchesSelector ||\n            function (s) {\n                const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n                let i = matches.length;\n                while (--i >= 0 && matches.item(i) !== this) {}\n                return i > -1;\n            };\n    }\n}\n","import { getModalStore, SavedStyle } from '@alfalab/core-components-global-store';\n\nexport function isScrolledToTop(target: HTMLElement) {\n    return target.scrollTop <= 0;\n}\n\nexport function isScrolledToBottom(target: HTMLElement) {\n    return target.scrollHeight - target.offsetHeight <= target.scrollTop;\n}\n\nexport function hasScrollbar(target: HTMLElement) {\n    return target.scrollHeight > target.clientHeight;\n}\n\nexport const getScrollbarSize = (() => {\n    let cachedSize: number;\n\n    return () => {\n        if (cachedSize !== undefined) return cachedSize;\n\n        const scrollDiv = document.createElement('div');\n\n        scrollDiv.style.width = '99px';\n        scrollDiv.style.height = '99px';\n        scrollDiv.style.position = 'absolute';\n        scrollDiv.style.top = '-9999px';\n        scrollDiv.style.overflow = 'scroll';\n\n        document.body.appendChild(scrollDiv);\n        const scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        document.body.removeChild(scrollDiv);\n\n        cachedSize = scrollbarSize;\n\n        return scrollbarSize;\n    };\n})();\n\nconst isOverflowing = (container: Element) => {\n    if (document.body === container) {\n        return window.innerWidth > document.documentElement.clientWidth;\n    }\n\n    return container.scrollHeight > container.clientHeight;\n};\n\nconst getPaddingRight = (node: Element) =>\n    parseInt(window.getComputedStyle(node).paddingRight, 10) || 0;\n\nexport const restoreContainerStyles = (container: HTMLElement) => {\n    const modalRestoreStyles = getModalStore().getRestoreStyles();\n\n    const index = modalRestoreStyles.findIndex((s) => s.container === container);\n    const existingStyles = modalRestoreStyles[index];\n\n    if (!existingStyles) return;\n\n    existingStyles.modals -= 1;\n\n    if (existingStyles.modals <= 0) {\n        modalRestoreStyles.splice(index, 1);\n\n        existingStyles.styles.forEach(({ value, el, key }) => {\n            if (value) {\n                el.style.setProperty(key, value);\n            } else {\n                el.style.removeProperty(key);\n            }\n        });\n    }\n};\n\nexport const handleContainer = (container?: HTMLElement) => {\n    if (!container) return;\n\n    const modalRestoreStyles = getModalStore().getRestoreStyles();\n\n    const existingStyles = modalRestoreStyles.find((s) => s.container === container);\n\n    if (existingStyles) {\n        existingStyles.modals += 1;\n\n        return;\n    }\n\n    const containerStyles: SavedStyle[] = [];\n\n    if (isOverflowing(container)) {\n        // Вычисляет размер до применения `overflow hidden` для избежания скачков\n        const scrollbarSize = getScrollbarSize();\n\n        containerStyles.push({\n            value: container.style.paddingRight,\n            key: 'padding-right',\n            el: container,\n        });\n        // Вычисляем стили, чтобы получить реальный `padding` c шириной сколлбара\n        // eslint-disable-next-line no-param-reassign\n        container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`;\n    }\n\n    const parent = container.parentElement;\n    const scrollContainer =\n        // TODO: заменить на optional chaining\n        parent &&\n        parent.nodeName === 'HTML' &&\n        window.getComputedStyle(parent).overflowY === 'scroll'\n            ? parent\n            : container;\n\n    // Блокируем скролл даже если отсутствует скроллбар\n    if (scrollContainer.style.overflow !== 'hidden') {\n        containerStyles.push({\n            value: scrollContainer.style.overflow,\n            key: 'overflow',\n            el: scrollContainer,\n        });\n    }\n\n    scrollContainer.style.overflow = 'hidden';\n\n    modalRestoreStyles.push({\n        container,\n        modals: 1,\n        styles: containerStyles,\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_DRN0s\",\"focused\":\"focused_IzCV8\",\"loading\":\"loading_dD7su\",\"text\":\"text_zF4xQ\",\"addons\":\"addons_zaLpw\",\"stretchText\":\"stretchText_eXgdn\",\"loader\":\"loader_tFrDH\",\"xxs\":\"xxs_NGKhJ\",\"iconOnly\":\"iconOnly_M1IjS\",\"xs\":\"xs_gtbZP\",\"s\":\"s_dWBS3\",\"m\":\"m_eEYTa\",\"l\":\"l_fmM1Y\",\"xl\":\"xl_UXn_u\",\"withRightAddons\":\"withRightAddons_TXVbA\",\"ghost\":\"ghost_rwSMW\",\"withLeftAddons\":\"withLeftAddons_cVgGy\",\"link\":\"link_YH7yC\",\"block\":\"block_IqJfV\",\"nowrap\":\"nowrap_hO90g\"};","// TODO Вид кнопок зависит от порядка импорта стилей. Исправить!!!.\n/* eslint-disable simple-import-sort/imports */\nimport React, {\n    AnchorHTMLAttributes,\n    ButtonHTMLAttributes,\n    ElementType,\n    ReactNode,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Spinner } from '@alfalab/core-components-spinner';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { getDataTestId } from '../../utils';\n\nimport styles from './index.module.css';\nimport defaultColors from './default.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type ComponentProps = {\n    /**\n     * Тип кнопки\n     */\n    view?:\n        | 'accent'\n        | 'primary'\n        | 'secondary'\n        | 'tertiary'\n        | 'outlined' // deprecated\n        | 'filled' // deprecated\n        | 'transparent' // deprecated\n        | 'link'\n        | 'ghost';\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для спиннера\n     */\n    spinnerClassName?: string;\n\n    /**\n     * Выводит ссылку в виде кнопки\n     */\n    href?: string;\n\n    /**\n     * Позволяет использовать кастомный компонент для кнопки (например Link из роутера)\n     */\n    Component?: ElementType;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Показать лоадер\n     */\n    loading?: boolean;\n\n    /**\n     * Не переносить текст кнопки на новую строку\n     */\n    nowrap?: boolean;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport type AnchorButtonProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\nexport type NativeButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type ButtonProps = Partial<AnchorButtonProps | NativeButtonProps>;\n\n/**\n * Минимальное время отображения лоадера - 500мс,\n * чтобы при быстрых ответах от сервера кнопка не «моргала».\n */\nexport const LOADER_MIN_DISPLAY_INTERVAL = 500;\n\nconst logWarning = (view: Required<ComponentProps>['view']) => {\n    if (process.env.NODE_ENV !== 'development') {\n        return;\n    }\n\n    const viewsMap: { [key: string]: string } = {\n        filled: 'secondary',\n        transparent: 'secondary',\n        outlined: 'tertiary',\n    };\n\n    // eslint-disable-next-line no-console\n    console.warn(\n        // eslint-disable-next-line prefer-template\n        `@alfalab/core-components/button: view='${view}' будет удален в следующих мажорных версиях. ` +\n            `Используйте view='${viewsMap[view]}'. Чтобы поменять все кнопки на проекте разом, можно воспользоваться codemod: ` +\n            'npx @alfalab/core-components-codemod --transformers=button-views src/**/*.tsx',\n    );\n};\n\nexport const Button = React.forwardRef<HTMLAnchorElement | HTMLButtonElement, ButtonProps>(\n    (\n        {\n            children,\n            view = 'secondary',\n            leftAddons,\n            rightAddons,\n            size = 'm',\n            block = false,\n            className,\n            spinnerClassName,\n            dataTestId,\n            href,\n            loading = false,\n            nowrap = false,\n            colors = 'default',\n            Component = href ? 'a' : 'button',\n            onClick,\n            ...restProps\n        },\n        ref,\n    ) => {\n        if (['outlined', 'filled', 'transparent'].includes(view)) {\n            logWarning(view);\n        }\n\n        const buttonRef = useRef<HTMLElement>(null);\n\n        const [focused] = useFocus(buttonRef, 'keyboard');\n\n        const [loaderTimePassed, setLoaderTimePassed] = useState(true);\n\n        const timerId = useRef(0);\n\n        const showLoader = loading || !loaderTimePassed;\n\n        const iconOnly = !children;\n\n        const componentProps = {\n            className: cn(\n                styles.component,\n                styles[view],\n                styles[size],\n                colorStyles[colors].component,\n                colorStyles[colors][view],\n                {\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                    [styles.iconOnly]: iconOnly,\n                    [styles.loading]: showLoader,\n                    [styles.withRightAddons]: Boolean(rightAddons) && !iconOnly,\n                    [styles.withLeftAddons]: Boolean(leftAddons) && !iconOnly,\n                    [colorStyles[colors].loading]: showLoader,\n                },\n                className,\n            ),\n            'data-test-id': dataTestId || null,\n        };\n\n        const {\n            disabled,\n            type = 'button',\n            ...restButtonProps\n        } = restProps as ButtonHTMLAttributes<HTMLButtonElement>;\n\n        const buttonChildren = (\n            <React.Fragment>\n                {leftAddons && <span className={styles.addons}>{leftAddons}</span>}\n                {children && (\n                    <span\n                        className={cn(styles.text, {\n                            [styles.nowrap]: nowrap,\n                            [styles.stretchText]: !(leftAddons || rightAddons),\n                        })}\n                    >\n                        {children}\n                    </span>\n                )}\n\n                {showLoader && (\n                    <Spinner\n                        dataTestId={getDataTestId(dataTestId, 'loader')}\n                        visible={true}\n                        className={cn(styles.loader, colorStyles[colors].loader, spinnerClassName)}\n                    />\n                )}\n\n                {rightAddons && <span className={styles.addons}>{rightAddons}</span>}\n            </React.Fragment>\n        );\n\n        useEffect(() => {\n            if (loading) {\n                setLoaderTimePassed(false);\n\n                timerId.current = window.setTimeout(() => {\n                    setLoaderTimePassed(true);\n                }, LOADER_MIN_DISPLAY_INTERVAL);\n            }\n        }, [loading]);\n\n        useEffect(\n            () => () => {\n                window.clearTimeout(timerId.current);\n            },\n            [],\n        );\n\n        const handleClick = (\n            e: React.MouseEvent<HTMLAnchorElement, MouseEvent> &\n                React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        ) => {\n            if (disabled || showLoader) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                return;\n            }\n            onClick?.(e);\n        };\n\n        if (href) {\n            const { target } = restProps as AnchorHTMLAttributes<HTMLAnchorElement>;\n\n            // Для совместимости с react-router-dom, меняем href на to\n            const hrefProps = { [typeof Component === 'string' ? 'href' : 'to']: href };\n\n            return (\n                <Component\n                    rel={target === '_blank' ? 'noreferrer noopener' : undefined}\n                    {...componentProps}\n                    {...(restProps as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                    {...hrefProps}\n                    onClick={handleClick}\n                    disabled={disabled || showLoader}\n                    ref={mergeRefs([buttonRef, ref])}\n                >\n                    {buttonChildren}\n                </Component>\n            );\n        }\n\n        return (\n            <Component\n                {...componentProps}\n                {...restButtonProps}\n                onClick={handleClick}\n                type={type}\n                disabled={disabled || showLoader}\n                ref={mergeRefs([buttonRef, ref])}\n            >\n                {buttonChildren}\n            </Component>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nButton.defaultProps = {\n    view: 'secondary',\n    size: 'm',\n    block: false,\n    loading: false,\n    nowrap: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"accent\":\"accent_HhA3Y\",\"loader\":\"loader_BQ0mp\",\"primary\":\"primary_WlL6L\",\"secondary\":\"secondary_qerr_\",\"outlined\":\"outlined__m2cx\",\"tertiary\":\"tertiary_yyazM\",\"filled\":\"filled__sZJb\",\"transparent\":\"transparent_nQPFp\",\"link\":\"link_EoIN5\",\"ghost\":\"ghost_LocVa\",\"component\":\"component_QHSq8\",\"loading\":\"loading_uQdwR\"};","// extracted by mini-css-extract-plugin\nexport default {\"accent\":\"accent_BeNHQ\",\"loader\":\"loader_mhss9\",\"primary\":\"primary_oLEFC\",\"secondary\":\"secondary_IUjpj\",\"outlined\":\"outlined_emhOx\",\"tertiary\":\"tertiary_qzr4s\",\"filled\":\"filled_XG2GI\",\"transparent\":\"transparent_OGmq2\",\"link\":\"link_DrTND\",\"ghost\":\"ghost_PqYP3\",\"component\":\"component_upu8c\",\"loading\":\"loading_Uzk6t\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_sdfKf\",\"block\":\"block_xTK2O\",\"calendarContainer\":\"calendarContainer_Y1sM0\",\"calendarResponsive\":\"calendarResponsive_EJmFv\",\"calendarIcon\":\"calendarIcon_INpWt\",\"nativeInput\":\"nativeInput_pOvMB\"};","import React, {\n    ChangeEvent,\n    ElementType,\n    FocusEvent,\n    forwardRef,\n    KeyboardEvent,\n    MouseEvent,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport {\n    Calendar as DefaultCalendar,\n    CalendarMobileProps,\n    CalendarProps,\n    dateInLimits,\n} from '@alfalab/core-components-calendar';\nimport {\n    DateInput,\n    DateInputProps,\n    formatDate,\n    isCompleteDateInput,\n    parseDateString,\n} from '@alfalab/core-components-date-input';\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { CalendarMIcon } from '@alfalab/icons-glyph/CalendarMIcon';\n\nimport { SUPPORTS_INPUT_TYPE_DATE } from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type CalendarInputProps = Omit<DateInputProps, 'onChange' | 'mobileMode'> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popoverClassName?: string;\n\n    /**\n     * Доп. пропсы для календаря\n     */\n    calendarProps?:\n        | (CalendarProps & Record<string, unknown>)\n        | (CalendarMobileProps & Record<string, unknown>);\n\n    /**\n     * Значение инпута (используется и для календаря)\n     */\n    value?: string;\n\n    /**\n     * Начальное значение инпута\n     */\n    defaultValue?: string;\n\n    /**\n     * Состояние открытия по умолчанию\n     */\n    defaultOpen?: boolean;\n\n    /**\n     * Месяц в календаре по умолчанию (timestamp)\n     */\n    defaultMonth?: number;\n\n    /**\n     * Минимальная дата, доступная для выбора (timestamp)\n     */\n    minDate?: number;\n\n    /**\n     * Максимальная дата, доступная для выбора (timestamp)\n     */\n    maxDate?: number;\n\n    /**\n     * Список событий\n     */\n    events?: Array<Date | number>;\n\n    /**\n     * Список выходных\n     */\n    offDays?: Array<Date | number>;\n\n    /**\n     * Определяет, как рендерить календарь — в поповере или снизу инпута\n     */\n    calendarPosition?: 'static' | 'popover';\n\n    /**\n     * Запрещает поповеру менять свою позицию.\n     * Например, если места снизу недостаточно,то он все равно будет показан снизу\n     */\n    preventFlip?: boolean;\n\n    /**\n     * Управление нативным режимом на мобильных устройствах\n     */\n    mobileMode?: 'native' | 'popover' | 'input';\n\n    /**\n     * Компонент календаря\n     */\n    Calendar?: ElementType;\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | MouseEvent<HTMLButtonElement> | null,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик ввода в инпут\n     */\n    onInputChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { value: string; date: Date },\n    ) => void;\n\n    /**\n     * Обработчик изменения календаря\n     */\n    onCalendarChange?: CalendarProps['onChange'];\n\n    /**\n     * Позиционирование поповера с календарем\n     */\n    popoverPosition?: PopoverProps['position'];\n\n    /**\n     * z-index Popover\n     */\n    zIndexPopover?: PopoverProps['zIndex'];\n\n    /**\n     * Календарь будет принимать ширину инпута\n     */\n    useAnchorWidth?: boolean;\n\n    /**\n     * Отображение компонента в мобильном или десктопном виде\n     */\n    view?: 'desktop' | 'mobile';\n};\n\nexport const CalendarInput = forwardRef<HTMLInputElement, CalendarInputProps>(\n    (\n        {\n            block = false,\n            className,\n            inputClassName,\n            popoverClassName,\n            defaultOpen = false,\n            defaultMonth,\n            defaultValue = '',\n            calendarPosition = 'popover',\n            value,\n            dataTestId,\n            calendarProps = {},\n            minDate = calendarProps.minDate,\n            maxDate = calendarProps.maxDate,\n            offDays = calendarProps.offDays || [],\n            events = calendarProps.events || [],\n            preventFlip,\n            mobileMode = 'popover',\n            wrapperRef = null,\n            disabled,\n            onChange = () => null,\n            onInputChange,\n            onCalendarChange,\n            onKeyDown,\n            readOnly,\n            Calendar = DefaultCalendar,\n            popoverPosition = 'bottom-start',\n            zIndexPopover,\n            useAnchorWidth,\n            rightAddons,\n            error,\n            view = 'desktop',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const calendarResponsive = calendarProps?.responsive ?? true;\n        const shouldRenderNative = SUPPORTS_INPUT_TYPE_DATE && mobileMode === 'native';\n        const shouldRenderOnlyInput = mobileMode === 'input';\n        const shouldRenderStatic = calendarPosition === 'static' && !shouldRenderOnlyInput;\n        const shouldRenderPopover =\n            calendarPosition === 'popover' && !shouldRenderNative && !shouldRenderOnlyInput;\n\n        const [open, setOpen] = useState(false);\n\n        const [inputValue, setInputValue] = useState(value || defaultValue);\n\n        const calendarValue = inputValue ? parseDateString(inputValue).getTime() : undefined;\n\n        const checkInputValueIsValid = useCallback(\n            (newInputValue?: string) => {\n                if (!newInputValue) return false;\n\n                const dateValue = parseDateString(newInputValue).getTime();\n\n                return !!(\n                    dateValue &&\n                    isCompleteDateInput(newInputValue) &&\n                    dateInLimits(dateValue, minDate, maxDate) &&\n                    !offDays.includes(dateValue)\n                );\n            },\n            [maxDate, minDate, offDays],\n        );\n\n        const inputDisabled = disabled || readOnly;\n\n        const inputWrapperRef = useRef<HTMLDivElement>(null);\n        const calendarRef = useRef<HTMLDivElement>(null);\n\n        const handleKeyDown = useCallback(\n            (event: KeyboardEvent<HTMLDivElement>) => {\n                if ((event.target as HTMLElement).tagName === 'INPUT' && event.key === 'Enter') {\n                    setOpen(!open);\n                }\n\n                if (event.key === 'Escape') {\n                    setOpen(false);\n                }\n            },\n            [open],\n        );\n\n        const handleClick = useCallback(() => {\n            if (!open) setOpen(true);\n        }, [open]);\n\n        const handleFocus = useCallback(\n            (event: FocusEvent<HTMLDivElement>) => {\n                if (view === 'desktop') {\n                    setOpen(true);\n\n                    if (!open && event.target.tagName !== 'INPUT' && calendarRef.current) {\n                        calendarRef.current.focus();\n                    }\n                }\n            },\n            [open, view],\n        );\n\n        const handleBlur = useCallback(\n            (event: FocusEvent<HTMLDivElement>) => {\n                if (view === 'desktop') {\n                    const target = (event.relatedTarget || document.activeElement) as HTMLElement;\n\n                    if (calendarRef.current && calendarRef.current.contains(target) === false) {\n                        setOpen(false);\n                    }\n                }\n            },\n            [view],\n        );\n\n        const handleInputKeyDown = useCallback(\n            (event: KeyboardEvent<HTMLInputElement>) => {\n                if (['ArrowDown', 'ArrowUp'].includes(event.key) && calendarRef.current) {\n                    event.preventDefault();\n                    calendarRef.current.focus();\n                }\n\n                if (onKeyDown) onKeyDown(event);\n            },\n            [onKeyDown],\n        );\n\n        const changeHandler = useCallback(\n            (\n                event: ChangeEvent<HTMLInputElement> | null,\n                newValue: string,\n                newDate: Date,\n                initiator: 'input' | 'calendar' = 'input',\n                shouldChange = true,\n            ) => {\n                if (initiator === 'input' && event && onInputChange) {\n                    onInputChange(event, { value: newValue, date: newDate });\n                }\n\n                if (initiator === 'calendar' && onCalendarChange) {\n                    onCalendarChange(newDate.getTime());\n                }\n\n                setInputValue(newValue);\n\n                if (shouldChange) {\n                    onChange(event, { date: newDate, value: newValue });\n                }\n            },\n            [onCalendarChange, onChange, onInputChange],\n        );\n\n        const handleInputChange = useCallback<Required<DateInputProps>['onChange']>(\n            (event, payload) => {\n                changeHandler(\n                    event,\n                    payload.value,\n                    payload.date,\n                    'input',\n                    !payload.value || checkInputValueIsValid(payload.value),\n                );\n            },\n            [changeHandler, checkInputValueIsValid],\n        );\n\n        const handleCalendarChange = useCallback<Required<CalendarProps>['onChange']>(\n            (date?: number) => {\n                if (date) {\n                    changeHandler(null, formatDate(date), new Date(date), 'calendar');\n                }\n\n                if (view === 'desktop') {\n                    setOpen(false);\n                }\n            },\n            [changeHandler, view],\n        );\n\n        const handleCalendarWrapperMouseDown = useCallback((event: MouseEvent<HTMLDivElement>) => {\n            // Не дает инпуту терять фокус при выборе даты\n            event.preventDefault();\n        }, []);\n\n        const handleCalendarClose = useCallback(() => {\n            setOpen(false);\n        }, []);\n\n        useEffect(() => {\n            setOpen(defaultOpen);\n        }, [defaultOpen]);\n\n        useEffect(() => {\n            if (typeof value !== 'undefined') {\n                setInputValue(value);\n            }\n        }, [value]);\n\n        const renderCalendar = () => (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div onMouseDown={handleCalendarWrapperMouseDown}>\n                <Calendar\n                    {...calendarProps}\n                    responsive={calendarResponsive}\n                    open={open}\n                    onClose={handleCalendarClose}\n                    ref={calendarRef}\n                    defaultMonth={defaultMonth}\n                    value={checkInputValueIsValid(inputValue) ? calendarValue : undefined}\n                    onChange={handleCalendarChange}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    offDays={offDays}\n                    events={events}\n                />\n            </div>\n        );\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                className={cn(styles.component, className, {\n                    [styles.block]: block,\n                })}\n                tabIndex={-1}\n                onKeyDown={inputDisabled ? undefined : handleKeyDown}\n                onClick={inputDisabled ? undefined : handleClick}\n                onFocus={inputDisabled ? undefined : handleFocus}\n                onBlur={handleBlur}\n                data-test-id={dataTestId}\n            >\n                <DateInput\n                    {...restProps}\n                    ref={ref}\n                    wrapperRef={mergeRefs([wrapperRef, inputWrapperRef])}\n                    value={inputValue}\n                    defaultValue={defaultValue}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    mobileMode={mobileMode === 'native' ? 'native' : 'input'}\n                    error={error}\n                    rightAddons={\n                        <React.Fragment>\n                            {rightAddons}\n                            {shouldRenderPopover && (\n                                <CalendarMIcon className={styles.calendarIcon} />\n                            )}\n                        </React.Fragment>\n                    }\n                    onKeyDown={handleInputKeyDown}\n                    onChange={handleInputChange}\n                    block={true}\n                />\n                {shouldRenderStatic && renderCalendar()}\n\n                {shouldRenderPopover && (\n                    <Popover\n                        open={open}\n                        useAnchorWidth={useAnchorWidth}\n                        anchorElement={inputWrapperRef.current as HTMLElement}\n                        popperClassName={cn(styles.calendarContainer, {\n                            [styles.calendarResponsive]: calendarResponsive,\n                        })}\n                        className={popoverClassName}\n                        position={popoverPosition}\n                        offset={[0, 4]}\n                        withTransition={false}\n                        preventFlip={preventFlip}\n                        zIndex={zIndexPopover}\n                    >\n                        {renderCalendar()}\n                    </Popover>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { DateInputProps } from '@alfalab/core-components-date-input';\n\nimport { CalendarInput, CalendarInputProps } from './components/calendar-input/Component';\n\nexport type CalendarInputDesktopProps = Omit<CalendarInputProps, 'view'>;\n\nexport const CalendarInputDesktop = forwardRef<HTMLInputElement, CalendarInputDesktopProps>(\n    (props, ref) => <CalendarInput {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { CalendarMobile } from '@alfalab/core-components-calendar';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { DateInputProps } from '@alfalab/core-components-date-input';\n\nimport { CalendarInput, CalendarInputProps } from './components/calendar-input/Component';\n\nexport type CalendarInputMobileProps = Omit<CalendarInputProps, 'view'>;\n\nexport const CalendarInputMobile = forwardRef<HTMLInputElement, CalendarInputMobileProps>(\n    (props, ref) => <CalendarInput Calendar={CalendarMobile} view='mobile' {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { DateInputProps } from '@alfalab/core-components-date-input';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { CalendarInputProps } from './components/calendar-input/Component';\nimport { CalendarInputDesktop } from './Component.desktop';\nimport { CalendarInputMobile } from './Component.mobile';\n\nexport type CalendarInputResponsiveProps = Omit<CalendarInputProps, 'view'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport type CalendarInputMedia = 'desktop' | 'mobile';\n\nexport const CalendarInputResponsive = forwardRef<HTMLInputElement, CalendarInputResponsiveProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<CalendarInputMedia>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <CalendarInputDesktop {...restProps} ref={ref} />\n        ) : (\n            <CalendarInputMobile {...restProps} ref={ref} />\n        );\n    },\n);\n","import format from 'date-fns/format';\nimport isSameDay from 'date-fns/isSameDay';\nimport parse from 'date-fns/parse';\n\nimport { dateInLimits } from '@alfalab/core-components-calendar';\nimport { isCompleteDateInput } from '@alfalab/core-components-date-input';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const NATIVE_DATE_FORMAT = 'yyyy-MM-dd';\nexport const DATE_MASK = [/\\d/, /\\d/, '.', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/];\nexport const IS_BROWSER = typeof window !== 'undefined';\nexport const SUPPORTS_INPUT_TYPE_DATE = IS_BROWSER && isInputDateSupported();\n\nexport const formatDate = (date: Date | number, dateFormat = DATE_FORMAT) =>\n    format(date, dateFormat);\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\n/**\n * Возвращает `true`, если поддерживается `input[type=\"date\"]`\n */\nexport function isInputDateSupported() {\n    const input = document.createElement('input');\n    const value = 'a';\n\n    input.setAttribute('type', 'date');\n    input.setAttribute('value', value);\n\n    return input.value !== value;\n}\n\nexport const isValidInputValue = (\n    newInputValue: string | undefined,\n    minDate: number | undefined,\n    maxDate: number | undefined,\n    offDays: Array<number | Date> = [],\n) => {\n    if (!newInputValue) return false;\n\n    const dateValue = parseDateString(newInputValue).getTime();\n\n    return Boolean(\n        dateValue &&\n            isCompleteDateInput(newInputValue) &&\n            dateInLimits(dateValue, minDate, maxDate) &&\n            !offDays.some((offDay) => isSameDay(offDay, dateValue)),\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_AMU09\",\"calendarVisible\":\"calendarVisible_ayhTw\",\"skeleton\":\"skeleton__Zuge\",\"header\":\"header_VXKce\",\"weekDays\":\"weekDays_vG9zt\",\"row\":\"row_CLZCs\",\"enter\":\"enter_HhDl8\",\"enterActive\":\"enterActive_FlNly\",\"exit\":\"exit_KNUF9\",\"exitActive\":\"exitActive_duNni\"};","import React, { forwardRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { Calendar, CalendarProps } from '@alfalab/core-components-calendar';\nimport { Skeleton } from '@alfalab/core-components-skeleton';\n\nimport styles from './index.module.css';\n\nexport type CalendarWithSkeletonProps = CalendarProps & {\n    /**\n     * Флаг включения анимации скелета\n     */\n    animate?: boolean;\n\n    /**\n     * Флаг управлением видимостью календаря\n     */\n    calendarVisible?: boolean;\n};\n\nexport const CalendarWithSkeleton = forwardRef<HTMLDivElement, CalendarWithSkeletonProps>(\n    ({ calendarVisible = true, animate = true, className, ...restProps }, ref) => {\n        const skeletonProps = { visible: true, animate };\n\n        return (\n            <div\n                className={cn(styles.component, className, {\n                    [styles.calendarVisible]: calendarVisible,\n                })}\n            >\n                {calendarVisible && <Calendar ref={ref} responsive={true} {...restProps} />}\n\n                <CSSTransition\n                    in={!calendarVisible}\n                    timeout={200}\n                    unmountOnExit={true}\n                    classNames={styles}\n                >\n                    <div className={styles.skeleton} ref={calendarVisible ? undefined : ref}>\n                        <Skeleton {...skeletonProps} className={styles.header} />\n\n                        <Skeleton {...skeletonProps} className={styles.weekDays} />\n\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                        <Skeleton {...skeletonProps} className={styles.row} />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"cardImage\":\"cardImage_ZY5gT\",\"rounded\":\"rounded_mEJub\",\"image\":\"image_Kyus_\",\"loaded\":\"loaded_X2PAN\"};","import React, { FC, useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport const ASPECT_RATIO = 0.63;\nexport const DEFAULT_WIDTH = 280;\nexport const DEFAULT_BASE_URL = 'https://online.alfabank.ru/cards-images/cards/';\n\nexport type CardImageProps = {\n    /**\n     * Идентификатор карты\n     * (например: ER, GQ, SU)\n     */\n    cardId?: string;\n\n    /**\n     * Какие слои показывать, через запятую без пробелов\n     * (полный набор: BACKGROUND,CARD_NUMBER,CARD_HOLDER,PAY_PASS,CHIP,LOGO,PAYMENT_SYSTEM,RESERVED_1,RESERVED_2,VALID_DATE)\n     */\n    layers?: string;\n\n    /**\n     * Ширина изображения\n     */\n    width?: number;\n\n    /**\n     * Скругление углов\n     */\n    rounded?: boolean;\n\n    /**\n     * Базовый URL сервиса с изображениями\n     */\n    baseUrl?: string;\n\n    /**\n     * Колбек, вызываемый при загрузке изображения\n     */\n    onLoad?: () => void;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    alt?: string;\n\n    /**\n     * Уникальный идентификатор блока\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const CardImage: FC<CardImageProps> = ({\n    cardId,\n    layers = 'BACKGROUND,CARD_NUMBER,CARD_HOLDER,PAY_PASS,CHIP,LOGO,PAYMENT_SYSTEM,RESERVED_1,RESERVED_2,VALID_DATE',\n    width = DEFAULT_WIDTH,\n    baseUrl = DEFAULT_BASE_URL,\n    rounded = true,\n    alt,\n    id,\n    dataTestId,\n    onLoad,\n    className,\n}) => {\n    const [loaded, setLoaded] = useState(false);\n    const image = useRef<HTMLImageElement>(null);\n    const height = width * ASPECT_RATIO;\n\n    useEffect(() => {\n        setLoaded((prevLoaded) => {\n            if (!prevLoaded && image.current?.complete) {\n                onLoad?.();\n\n                return true;\n            }\n\n            return prevLoaded;\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleLoadedImage = () => {\n        setLoaded((prevLoaded) => {\n            if (!prevLoaded) {\n                onLoad?.();\n\n                return true;\n            }\n\n            return prevLoaded;\n        });\n    };\n\n    const cardImageUrl = `${baseUrl}${cardId}/images?layers=${layers}&width=${width}`;\n    const cardImageUrl2x = `${baseUrl}${cardId}/images?layers=${layers}&width=${width * 2}`;\n\n    return (\n        <div\n            className={cn(\n                styles.cardImage,\n                rounded && styles.rounded,\n                loaded && styles.loaded,\n                className,\n            )}\n            style={{\n                width,\n                height,\n            }}\n            id={id}\n            data-test-id={dataTestId}\n        >\n            {cardId && (\n                <img\n                    ref={image}\n                    className={styles.image}\n                    width={width}\n                    height={height}\n                    src={cardImageUrl}\n                    srcSet={`${cardImageUrl2x} 2x`}\n                    alt={alt}\n                    role='presentation'\n                    onLoad={handleLoadedImage}\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_DyV9I\"};","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype CDNIconProps = {\n    /**\n     * Имя иконки\n     */\n    name: string;\n    /**\n     * Цвет иконки\n     */\n    color?: string;\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n    /**\n     * Базовый адрес cdn хранилища c иконками\n     * @default https://alfabank.servicecdn.ru/icons\n     */\n    baseUrl?: string;\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const CDNIcon: React.FC<CDNIconProps> = ({\n    name,\n    color,\n    dataTestId,\n    className,\n    baseUrl = 'https://alfabank.servicecdn.ru/icons',\n}) => {\n    const [icon, setIcon] = useState('');\n\n    useEffect(() => {\n        const xhr = new XMLHttpRequest();\n\n        xhr.open('GET', `${baseUrl}/${name}.svg`);\n        xhr.send();\n        xhr.onload = function onload() {\n            const svg = xhr.response;\n\n            if (svg.startsWith('<svg')) setIcon(svg);\n        };\n\n        return () => xhr.abort();\n    }, [name, baseUrl]);\n\n    return (\n        <span\n            style={{ color }}\n            className={cn(styles.component, className)}\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: icon }}\n            data-test-id={dataTestId}\n        />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"checkboxList\":\"checkboxList_fxm3X\",\"label\":\"label_eeG9n\",\"sub\":\"sub_COWP5\"};","import React, { FC } from 'react';\n\nimport { BaseCheckboxGroup, BaseCheckboxGroupProps } from './components/base-checkbox-group';\n\nimport styles from './desktop.module.css';\n\nexport type CheckboxGroupDesktopProps = Omit<BaseCheckboxGroupProps, 'styles'>;\n\nexport const CheckboxGroupDesktop: FC<CheckboxGroupDesktopProps> = (props) => (\n    <BaseCheckboxGroup {...props} styles={styles} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkboxList\":\"checkboxList_b49Tt\",\"label\":\"label_R1UJa\",\"sub\":\"sub_tN_GZ\"};","import React, { FC } from 'react';\n\nimport { BaseCheckboxGroup, BaseCheckboxGroupProps } from './components/base-checkbox-group';\n\nimport styles from './mobile.module.css';\n\nexport type CheckboxGroupMobileProps = Omit<BaseCheckboxGroupProps, 'styles'>;\n\nexport const CheckboxGroupMobile: FC<CheckboxGroupMobileProps> = (props) => (\n    <BaseCheckboxGroup {...props} styles={styles} />\n);\n","import React, { FC } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseCheckboxGroupProps } from './components/base-checkbox-group';\nimport { CheckboxGroupDesktop } from './Component.desktop';\nimport { CheckboxGroupMobile } from './Component.mobile';\n\nexport type CheckboxGroupProps = Omit<BaseCheckboxGroupProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const CheckboxGroup: FC<CheckboxGroupProps> = ({ breakpoint = 1024, ...restProps }) => {\n    const query = `(min-width: ${breakpoint}px)`;\n\n    const [isDesktop] = useMatchMedia(query);\n\n    const Component = isDesktop ? CheckboxGroupDesktop : CheckboxGroupMobile;\n\n    return <Component {...restProps} />;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dPOCR\",\"error\":\"error_lkUWj\",\"tag\":\"tag_nIu_4\",\"checkboxList\":\"checkboxList_Jtw2W\",\"vertical\":\"vertical_nNWh8\",\"checkbox\":\"checkbox_zvX9X\",\"horizontal\":\"horizontal_frOpu\",\"tagLabel\":\"tagLabel_IWNKJ\",\"label\":\"label_Yg5nq\",\"sub\":\"sub_dVPnd\",\"errorMessage\":\"errorMessage_vCHUM\",\"hint\":\"hint_R67WH\",\"hiddenInput\":\"hiddenInput_xOJuT\"};","import React, {\n    ChangeEvent,\n    Children,\n    cloneElement,\n    FC,\n    FocusEvent,\n    isValidElement,\n    MouseEvent,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport cn from 'classnames';\n\nimport commonStyles from './index.module.css';\n\nexport type Direction = 'horizontal' | 'vertical';\nexport type CheckboxGroupType = 'checkbox' | 'tag';\n\nexport type BaseCheckboxGroupProps = {\n    /**\n     * Заголовок группы\n     */\n    label?: ReactNode;\n\n    /**\n     * Направление\n     */\n    direction?: Direction;\n\n    /**\n     * Тип компонента\n     */\n    type?: CheckboxGroupType;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Дочерние элементы. Ожидаются компоненты `Checkbox` или `Tag`\n     */\n    children: ReactNode;\n\n    /**\n     * Обработчик изменения значения 'checked' одного из дочерних компонентов\n     */\n    onChange?: (\n        event: ChangeEvent | MouseEvent,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * Обработчик блюра.\n     */\n    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Обработчик фокуса.\n     */\n    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Управление возможностью изменения состояния 'checked' дочерних компонентов CheckBox\n     */\n    disabled?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Основные стили компонента.\n     */\n    styles: { [key: string]: string };\n};\n\nexport const BaseCheckboxGroup: FC<BaseCheckboxGroupProps> = ({\n    children,\n    className,\n    direction = 'vertical',\n    label,\n    error,\n    hint,\n    onChange,\n    onBlur,\n    onFocus,\n    type = 'checkbox',\n    dataTestId,\n    disabled = false,\n    styles,\n}) => {\n    const renderCheckbox = (child: ReactElement) => {\n        const { name, checked, className: childClassName } = child.props;\n\n        const handleChange = (event: ChangeEvent) => {\n            if (onChange) {\n                onChange(event, { name, checked: !checked });\n            }\n        };\n\n        return cloneElement(child, {\n            onChange: handleChange,\n            disabled,\n            ...child.props,\n            className: cn(childClassName, commonStyles.checkbox),\n        });\n    };\n\n    const renderTag = (child: ReactElement) => {\n        const { name, checked } = child.props;\n\n        const handleChange = (event: ChangeEvent | MouseEvent) => {\n            if (onChange) {\n                onChange(event, { name, checked: !checked });\n            }\n        };\n\n        const clone = cloneElement(child, { onClick: handleChange, disabled, ...child.props });\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label className={cn(commonStyles.checkbox, commonStyles.tagLabel)}>\n                {clone}\n                <input\n                    type='checkbox'\n                    autoComplete='off'\n                    onChange={handleChange}\n                    disabled={disabled || child.props.disabled}\n                    checked={checked}\n                    className={commonStyles.hiddenInput}\n                    tabIndex={-1}\n                />\n            </label>\n        );\n    };\n\n    const errorMessage = typeof error === 'boolean' ? '' : error;\n\n    return (\n        <div\n            className={cn(\n                commonStyles.component,\n                commonStyles[type],\n                commonStyles[direction],\n                { [commonStyles.error]: error },\n                className,\n            )}\n            data-test-id={dataTestId}\n        >\n            {label ? <span className={cn(commonStyles.label, styles.label)}>{label}</span> : null}\n\n            {children ? (\n                <div\n                    className={cn(commonStyles.checkboxList, {\n                        [styles.checkboxList]: type === 'checkbox',\n                    })}\n                    onBlur={onBlur}\n                    onFocus={onFocus}\n                >\n                    {Children.map(children, (child) => {\n                        if (isValidElement(child)) {\n                            return type === 'checkbox' ? renderCheckbox(child) : renderTag(child);\n                        }\n\n                        return null;\n                    })}\n                </div>\n            ) : null}\n\n            {errorMessage && (\n                <span\n                    className={cn(commonStyles.sub, styles.sub, commonStyles.errorMessage)}\n                    role='alert'\n                >\n                    {errorMessage}\n                </span>\n            )}\n\n            {hint && !errorMessage && (\n                <span className={cn(commonStyles.sub, styles.sub, commonStyles.hint)}>{hint}</span>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_wMAW6\",\"start\":\"start_pjU11\",\"center\":\"center_bKKBm\",\"addons\":\"addons_Iajre\",\"block\":\"block_xWByP\",\"box\":\"box_N1VWO\",\"checkedIcon\":\"checkedIcon_O4r_r\",\"s\":\"s_fgDUn\",\"disabled\":\"disabled_SV9zL\",\"inactive\":\"inactive_ibDB4\",\"checked\":\"checked_qCx69\",\"indeterminate\":\"indeterminate_vcJor\",\"label\":\"label_BzK_T\",\"hint\":\"hint_DZXO8\",\"focused\":\"focused_ii5aM\",\"content\":\"content_OWrSf\",\"errorMessage\":\"errorMessage_ScF7z\",\"indeterminateLine\":\"indeterminateLine_FVpJ1\"};","import React, { ChangeEvent, forwardRef, InputHTMLAttributes, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCompactMIcon } from '@alfalab/icons-glyph/CheckmarkCompactMIcon';\n\nimport styles from './index.module.css';\n\ntype NativeProps = InputHTMLAttributes<HTMLInputElement>;\ntype Align = 'start' | 'center';\n\nexport type CheckboxProps = Omit<NativeProps, 'size' | 'onChange' | 'enterKeyHint'> & {\n    /**\n     * Управление состоянием вкл/выкл чекбокса (native prop)\n     */\n    checked?: boolean;\n\n    /**\n     * Обработчик переключения чекбокса\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * Текст подписи к чекбоксу\n     */\n    label?: ReactNode;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Доп. класс чекбокса\n     */\n    boxClassName?: string;\n\n    /**\n     * Доп. класс контента\n     */\n    contentClassName?: string;\n\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Дополнительный слот\n     */\n    addons?: React.ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * Управление состоянием включен / выключен\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием активен / неактивен\n     */\n    inactive?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Управление неопределенным состоянием чекбокса\n     */\n    indeterminate?: boolean;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Флаг для скрытия нативного инпута.\n     * @default false\n     */\n    hiddenInput?: boolean;\n};\n\nexport const Checkbox = forwardRef<HTMLLabelElement, CheckboxProps>(\n    (\n        {\n            checked,\n            label,\n            hint,\n            size = 's',\n            boxClassName,\n            contentClassName,\n            align = 'start',\n            addons,\n            block,\n            onChange,\n            className,\n            name,\n            disabled,\n            inactive,\n            dataTestId,\n            indeterminate = false,\n            hiddenInput = false,\n            error,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const labelRef = useRef<HTMLLabelElement>(null);\n\n        const [focused] = useFocus(labelRef, 'keyboard');\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (onChange) {\n                onChange(event, { checked: event.target.checked, name });\n            }\n        };\n\n        const errorMessage = typeof error === 'boolean' ? '' : error;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label\n                className={cn(styles.component, styles[size], styles[align], className, {\n                    [styles.disabled]: disabled,\n                    [styles.inactive]: inactive,\n                    [styles.checked]: checked,\n                    [styles.indeterminate]: indeterminate,\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                })}\n                ref={mergeRefs([labelRef, ref])}\n            >\n                {!hiddenInput && (\n                    <input\n                        type='checkbox'\n                        onChange={handleChange}\n                        disabled={disabled || inactive}\n                        checked={checked}\n                        data-test-id={dataTestId}\n                        {...restProps}\n                    />\n                )}\n                <span className={cn(styles.box, boxClassName)}>\n                    {checked && <CheckmarkCompactMIcon className={styles.checkedIcon} />}\n\n                    {indeterminate && !checked && <span className={styles.indeterminateLine} />}\n                </span>\n\n                {(label || hint || errorMessage) && (\n                    <span className={cn(styles.content, contentClassName)}>\n                        {label && <span className={styles.label}>{label}</span>}\n\n                        {hint && !errorMessage && <span className={styles.hint}>{hint}</span>}\n\n                        {errorMessage && (\n                            <span className={styles.errorMessage} role='alert'>\n                                {errorMessage}\n                            </span>\n                        )}\n                    </span>\n                )}\n\n                {addons && <span className={styles.addons}>{addons}</span>}\n            </label>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nCheckbox.defaultProps = {\n    indeterminate: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_mbXGM\",\"svg\":\"svg_Q6o_a\",\"title\":\"title__0K22\",\"subtitle\":\"subtitle_QTDIy\",\"labelWrapper\":\"labelWrapper_MSMUW\",\"label\":\"label_MbLVo\",\"typography\":\"typography__g495\",\"xxl\":\"xxl_xI5gR\",\"xl\":\"xl_ShAjG\",\"l\":\"l_x88_E\",\"m\":\"m_rE7QR\",\"s\":\"s_zY6Wg\",\"xs\":\"xs_Hr0Fv\",\"backgroundCircle\":\"backgroundCircle_bw9BV\",\"progressCircle\":\"progressCircle_aaN_x\",\"positive\":\"positive_svuAY\",\"negative\":\"negative_wJJEv\",\"stroke\":\"stroke_CNdC4\",\"bg-positive\":\"bg-positive_dPwM5\",\"bg-negative\":\"bg-negative_hPAkk\",\"iconWrapper\":\"iconWrapper_ptUAN\",\"icon-tertiary\":\"icon-tertiary_h2i8M\",\"icon-positive\":\"icon-positive_tYq7P\",\"icon-negative\":\"icon-negative_WrMrV\",\"icon-primary-inverted\":\"icon-primary-inverted_coYra\",\"icon-primary\":\"icon-primary_CRcj6\",\"icon-secondary\":\"icon-secondary_tq_K6\",\"icon\":\"icon_jja1U\"};","import React, { ElementType, ReactNode, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nconst SIZES = {\n    xs: 24,\n    s: 48,\n    m: 64,\n    l: 80,\n    xl: 128,\n    xxl: 144,\n};\n\nconst STROKE = {\n    xs: 4,\n    s: 4,\n    m: 6,\n    l: 8,\n    xl: 10,\n    xxl: 12,\n};\n\nconst VIEW_TITLE = {\n    xs: 'small',\n    s: 'small',\n    m: 'small',\n    l: 'xsmall',\n    xl: 'medium',\n    xxl: 'medium',\n} as const;\n\nconst VIEW_TEXT = {\n    xs: 'secondary-small',\n    s: 'secondary-small',\n    m: 'secondary-large',\n    l: 'secondary-large',\n    xl: 'secondary-large',\n    xxl: 'secondary-large',\n} as const;\n\nexport type CircularProgressBarProps = {\n    /**\n     * Уровень прогресса, %\n     */\n    value: number;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Основной текст\n     */\n    title?: ReactNode;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'primary' | 'secondary' | 'tertiary' | 'positive' | 'negative';\n\n    /**\n     * Дополнительный текст\n     */\n    subtitle?: ReactNode;\n\n    /**\n     * Основной текст при 100%\n     */\n    titleComplete?: ReactNode;\n\n    /**\n     * Дополнительный текст при 100%\n     */\n    subtitleComplete?: ReactNode;\n\n    /**\n     * Цвет заполнения\n     */\n    view?: 'positive' | 'negative';\n\n    /**\n     * Размер (xxl — 144×144px, xl — 128×128px, l — 80×80px, m — 64×64px, s — 48×48px, xs — 24×24px)\n     */\n    size?: 'xxl' | 'xl' | 'l' | 'm' | 's' | 'xs';\n\n    /**\n     * Наличие желоба\n     */\n    stroke?: boolean;\n\n    /**\n     * Заливка при 100%\n     */\n    fillComplete?: boolean;\n\n    /**\n     * Цвет текста при 100%\n     */\n    completeTextColor?: 'primary' | 'primary-inverted' | 'positive' | 'negative';\n\n    /**\n     * Цвет иконки при 100%\n     */\n    completeIconColor?: 'primary-inverted' | 'positive' | 'negative' | 'tertiary';\n\n    /**\n     * Компонент иконки\n     */\n    icon?: ElementType<{ className?: string }>;\n\n    /**\n     * Компонент иконки при 100%\n     */\n    iconComplete?: ElementType<{ className?: string }>;\n\n    /**\n     * Направление прогресса (clockwise - по часовой стрелке, counter-clockwise - против часовой стрелки)\n     */\n    direction?: 'clockwise' | 'counter-clockwise';\n\n    /**\n     * Высота компонента, min = 24; max = 144\n     * использовать совместно с size :\n     * xxl от 144\n     * xl  от 128 до 143\n     * l   от 80 до 127\n     * m   от 64 до 79\n     * s   от 48 до 63\n     * xs  от 24 до 47\n     */\n    height?: number;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\n/**\n * Компонент круглого прогресс бара.\n */\nexport const CircularProgressBar: React.FC<CircularProgressBarProps> = ({\n    value,\n    view = 'positive',\n    size = 'm',\n    className,\n    dataTestId,\n    title = value ? value.toString() : '0',\n    titleComplete,\n    subtitle,\n    contentColor = 'secondary',\n    subtitleComplete,\n    stroke = true,\n    fillComplete,\n    icon: Icon,\n    iconComplete: IconComplete,\n    completeTextColor,\n    completeIconColor = 'tertiary',\n    direction = 'clockwise',\n    height,\n    children,\n}) => {\n    const memorized = useMemo(() => {\n        const strokeWidth = STROKE[size];\n        const maxProgress = 100;\n        const minProgress = 0;\n        const widthSVG = SIZES[size];\n        const heightSVG = SIZES[size];\n        const center = widthSVG / 2;\n        const radius = center - strokeWidth / 2;\n        const circumference = Math.PI * radius * 2;\n        const progress = Math.min(Math.max(value, minProgress), maxProgress);\n        const strokeDasharray = circumference.toFixed(3);\n        const strokeDashoffset = (((100 - progress) / 100) * circumference).toFixed(3);\n\n        return {\n            widthSVG,\n            heightSVG,\n            center,\n            radius,\n            strokeDasharray,\n            strokeDashoffset,\n        };\n    }, [value, size]);\n\n    const isComplete = value === 100;\n    const isCompleteTextColor = isComplete && completeTextColor;\n    const titleContent = titleComplete && isComplete ? titleComplete : title;\n    const subtitleContent = subtitleComplete && isComplete ? subtitleComplete : subtitle;\n    const IconComponent = IconComplete && isComplete ? IconComplete : Icon;\n\n    const renderTitleString = () =>\n        SIZES[size] > 64 ? (\n            <Typography.TitleMobile\n                className={cn(styles.typography, styles.title)}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                tag='div'\n                font='system'\n                view={VIEW_TITLE[size]}\n            >\n                {titleContent}\n            </Typography.TitleMobile>\n        ) : (\n            <Typography.Text\n                className={styles.title}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                tag='div'\n                weight='bold'\n                view={VIEW_TEXT[size]}\n            >\n                {titleContent}\n            </Typography.Text>\n        );\n\n    const renderTitle = () => (typeof title === 'string' ? renderTitleString() : titleContent);\n\n    const renderSubTitle = () =>\n        typeof subtitle === 'string' ? (\n            <Typography.Text\n                tag='div'\n                className={styles.subtitle}\n                color={isCompleteTextColor ? completeTextColor : contentColor}\n                view='primary-small'\n            >\n                {subtitleContent}\n            </Typography.Text>\n        ) : (\n            subtitleContent\n        );\n\n    const renderIcon = () => (\n        <span\n            className={cn(\n                styles.iconWrapper,\n                styles[size],\n                styles.tertiary,\n                styles[`icon-${contentColor}`],\n                {\n                    [styles[`icon-${completeIconColor}`]]: completeIconColor,\n                },\n            )}\n        >\n            {IconComponent && <IconComponent className={styles.icon} />}\n        </span>\n    );\n\n    const renderContent = () =>\n        Icon || (IconComplete && isComplete) ? (\n            renderIcon()\n        ) : (\n            <React.Fragment>\n                {SIZES[size] > 24 && renderTitle()}\n                {SIZES[size] > 64 && renderSubTitle()}\n            </React.Fragment>\n        );\n\n    return (\n        <div\n            className={cn(styles.component, styles[size], className)}\n            style={{\n                ...(height && { height, width: height }),\n            }}\n            data-test-id={dataTestId}\n        >\n            <svg\n                viewBox={`0 0 ${memorized.widthSVG} ${memorized.heightSVG}`}\n                className={styles.svg}\n                xmlns='http://www.w3.org/2000/svg'\n            >\n                <circle\n                    className={cn(styles.backgroundCircle, styles[size], {\n                        [styles.stroke]: !stroke,\n                    })}\n                    cx={memorized.center}\n                    cy={memorized.center}\n                    r={memorized.radius}\n                    strokeWidth={STROKE[size]}\n                />\n                <circle\n                    className={cn(styles.progressCircle, styles[view], styles[size], {\n                        [styles[`bg-${view}`]]: fillComplete && isComplete,\n                    })}\n                    cx={memorized.center}\n                    cy={memorized.center}\n                    r={memorized.radius}\n                    strokeWidth={STROKE[size]}\n                    strokeDasharray={memorized.strokeDasharray}\n                    strokeDashoffset={\n                        direction === 'counter-clockwise'\n                            ? -memorized.strokeDashoffset\n                            : memorized.strokeDashoffset\n                    }\n                    transform={`rotate(${-90} ${memorized.center} ${memorized.center})`}\n                />\n            </svg>\n            <div\n                className={cn(styles.labelWrapper, {\n                    [styles.label]: Icon || IconComplete,\n                })}\n            >\n                {children || renderContent()}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_N25du\"};","import React, { forwardRef } from 'react';\n\nimport { BaseCodeInput } from './components/base-code-input';\nimport { BaseCodeInputProps, CustomInputRef } from './typings';\n\nimport styles from './desktop.module.css';\n\nexport type CodeInputDesktopProps = Omit<BaseCodeInputProps, 'inputClassName'>;\n\nexport const CodeInputDesktop = forwardRef<CustomInputRef, CodeInputDesktopProps>(\n    (restProps, ref) => <BaseCodeInput {...restProps} ref={ref} stylesInput={styles} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_LmYvE\",\"compact\":\"compact_pNsLR\"};","import React, { forwardRef } from 'react';\n\nimport { BaseCodeInput } from './components/base-code-input';\nimport { BaseCodeInputProps, CustomInputRef } from './typings';\n\nimport styles from './mobile.module.css';\n\nexport type CodeInputMobileProps = Omit<BaseCodeInputProps, 'inputClassName'>;\n\nexport const CodeInputMobile = forwardRef<CustomInputRef, CodeInputMobileProps>(\n    (restProps, ref) => <BaseCodeInput {...restProps} ref={ref} stylesInput={styles} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UR_gn\",\"input\":\"input_MjxcO\",\"hasError\":\"hasError_LiYmj\",\"disabled\":\"disabled_t6dv0\",\"compact\":\"compact_VCCUd\"};","import React, {\n    ChangeEvent,\n    ChangeEventHandler,\n    forwardRef,\n    InputHTMLAttributes,\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n} from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type InputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'value' | 'onChange' | 'onKeyDown' | 'enterKeyHint'\n> & {\n    index: number;\n    value: string;\n    error: boolean;\n    compact?: boolean;\n    onChange: (event: ChangeEvent<HTMLInputElement>, payload: { index: number }) => void;\n    onKeyDown: (event: KeyboardEvent<HTMLInputElement>, payload: { index: number }) => void;\n    stylesInput?: { [key: string]: string };\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n    (\n        {\n            index,\n            error,\n            disabled,\n            value = '',\n            compact = false,\n            onChange,\n            onKeyDown,\n            onFocus,\n            stylesInput = {},\n        },\n        ref,\n    ) => {\n        const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n            onChange(event, { index });\n        };\n\n        const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n            onKeyDown(event, { index });\n        };\n\n        const handleClick: MouseEventHandler = (event) => {\n            const target = event.target as HTMLInputElement;\n\n            /**\n             * В сафари выделение корректно работает только с асинхронным вызовом\n             */\n            requestAnimationFrame(() => {\n                target.select();\n            });\n        };\n\n        return (\n            <input\n                ref={ref}\n                className={cn(styles.input, stylesInput.component, {\n                    [styles.hasError]: error,\n                    [styles.disabled]: disabled,\n                    [styles.compact]: compact,\n                    [stylesInput.compact]: Boolean(stylesInput.compact) && compact,\n                })}\n                disabled={disabled}\n                value={value}\n                autoComplete={index === 0 ? 'one-time-code' : ''}\n                inputMode='numeric'\n                pattern='[0-9]*'\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                onFocus={onFocus}\n                onClick={handleClick}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_bfI9b\",\"error\":\"error_TKRg0\",\"shake\":\"shake_y0yC8\"};","import React, {\n    createRef,\n    FocusEventHandler,\n    forwardRef,\n    RefObject,\n    useEffect,\n    useImperativeHandle,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport {\n    BaseCodeInputProps,\n    CredentialOtp,\n    CredentialRequestOtpOptions,\n    CustomInputRef,\n} from '../../typings';\nimport { Input, InputProps } from '..';\n\nimport styles from './index.module.css';\n\n/** После истечения этого времени код очищается */\nconst CODE_ERROR_HINT_VISIBLE_DURATION = 300;\n\nexport const BaseCodeInput = forwardRef<CustomInputRef, BaseCodeInputProps>(\n    (\n        {\n            className,\n            disabled,\n            error,\n            fields = 4,\n            initialValues = '',\n            dataTestId,\n            clearCodeOnError = true,\n            onErrorAnimationEnd,\n            onChange,\n            onComplete,\n            stylesInput = {},\n        },\n        ref,\n    ) => {\n        const inputRefs = useMemo(\n            () =>\n                Array(fields)\n                    .fill({})\n                    .map(() => createRef<HTMLInputElement>()),\n            [fields],\n        );\n\n        const [values, setValues] = useState(initialValues.split(''));\n\n        const clearErrorTimerId = useRef<ReturnType<typeof setTimeout>>();\n\n        const focusOnInput = (inputRef: RefObject<HTMLInputElement>) => {\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        };\n\n        const focus = (index = 0) => {\n            focusOnInput(inputRefs[index]);\n        };\n\n        const blur = () => {\n            const input = document.activeElement;\n\n            if (input?.tagName === 'INPUT') {\n                (input as HTMLInputElement).blur();\n            }\n        };\n\n        const unselect = () => {\n            const input = document.activeElement;\n\n            if (input?.tagName === 'INPUT') {\n                (input as HTMLInputElement).setSelectionRange(0, 0);\n            }\n        };\n\n        const reset = () => {\n            setValues([]);\n        };\n\n        useImperativeHandle(ref, () => ({ focus, blur, reset, unselect }));\n\n        const triggerChange = (argumentValues: string[]) => {\n            const newValue = (argumentValues || values).join('');\n\n            if (onChange) {\n                onChange(newValue);\n            }\n\n            if (onComplete && newValue.length >= fields) {\n                onComplete(newValue);\n            }\n        };\n\n        const handleChange = (value: string, index: number, valid: boolean) => {\n            const newValue = value.replace(/\\D/g, '');\n\n            if (newValue === '' || !valid) {\n                return;\n            }\n\n            let nextRef;\n\n            const newValues = [...values];\n\n            if (newValue.length > 1) {\n                let nextIndex = newValue.length + index - 1;\n\n                if (nextIndex >= fields) {\n                    nextIndex = fields - 1;\n                }\n\n                nextRef = inputRefs[nextIndex];\n\n                newValue.split('').forEach((item, i) => {\n                    const cursor = index + i;\n\n                    if (cursor < fields) {\n                        newValues[cursor] = item;\n                    }\n                });\n            } else {\n                nextRef = inputRefs[index + 1];\n\n                newValues[index] = newValue;\n            }\n\n            setValues(newValues);\n\n            if (nextRef && nextRef.current) {\n                nextRef.current.focus();\n\n                nextRef.current.select();\n            }\n\n            triggerChange(newValues);\n        };\n\n        const handleChangeFromEvent: InputProps['onChange'] = (event, { index }) => {\n            const {\n                target: {\n                    value,\n                    validity: { valid },\n                },\n            } = event;\n\n            handleChange(value, index, valid);\n        };\n\n        const handleKeyDown: InputProps['onKeyDown'] = (event, { index }) => {\n            const prevIndex = index - 1;\n            const nextIndex = index + 1;\n\n            const prevRef = inputRefs[prevIndex];\n            const nextRef = inputRefs[nextIndex];\n            const curtRef = inputRefs[index];\n\n            const newValues = [...values];\n\n            switch (event.key) {\n                case 'Backspace':\n                    event.preventDefault();\n\n                    if (values[index]) {\n                        newValues[index] = '';\n                    } else if (prevRef) {\n                        newValues[prevIndex] = '';\n\n                        focusOnInput(prevRef);\n                    }\n\n                    setValues(newValues);\n\n                    triggerChange(newValues);\n\n                    break;\n                case 'Delete':\n                    event.preventDefault();\n\n                    newValues[index] = '';\n\n                    if (!values[nextIndex]) {\n                        focusOnInput(curtRef);\n                    }\n\n                    if (nextRef) {\n                        focusOnInput(nextRef);\n                    }\n\n                    setValues(newValues);\n\n                    triggerChange(newValues);\n\n                    break;\n                case 'ArrowLeft':\n                    event.preventDefault();\n\n                    if (prevRef) {\n                        focusOnInput(prevRef);\n                    }\n\n                    break;\n                case 'ArrowRight':\n                    event.preventDefault();\n\n                    if (nextRef) {\n                        focusOnInput(nextRef);\n                    }\n\n                    break;\n                case 'ArrowUp':\n                case 'ArrowDown':\n                    event.preventDefault();\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        const handleFocus: FocusEventHandler<HTMLInputElement> = (event) => {\n            const target = event.target as HTMLInputElement;\n\n            /**\n             * В сафари выделение корректно работает только с асинхронным вызовом\n             */\n            requestAnimationFrame(() => {\n                target.select();\n            });\n        };\n\n        const handleErrorAnimationEnd = () => {\n            clearErrorTimerId.current = setTimeout(() => {\n                if (clearCodeOnError) {\n                    focus();\n                    /** Очищаем только в случае, если код не изменился */\n                    setValues((prevState) => (values === prevState ? [] : prevState));\n                }\n\n                onErrorAnimationEnd?.();\n            }, CODE_ERROR_HINT_VISIBLE_DURATION);\n        };\n\n        useEffect(\n            () => () => {\n                if (clearErrorTimerId.current) {\n                    clearTimeout(clearErrorTimerId.current);\n                    clearErrorTimerId.current = undefined;\n                }\n            },\n            [error],\n        );\n\n        useEffect(() => {\n            let ac: AbortController | null = null;\n            const unMountReason = 'component unMount';\n\n            if ('OTPCredential' in window && navigator?.credentials?.get) {\n                ac = new AbortController();\n                const options: CredentialRequestOtpOptions = {\n                    otp: { transport: ['sms'] },\n                    signal: ac.signal,\n                };\n\n                navigator.credentials\n                    .get(options)\n                    .then((res: CredentialOtp | null) => {\n                        if (res?.code) handleChange(res.code, 0, true);\n                    })\n                    .catch((err) => {\n                        if (err !== unMountReason) {\n                            // eslint-disable-next-line no-console\n                            console.error(err);\n                        }\n                    });\n            }\n\n            return () => {\n                if (ac) ac.abort(unMountReason);\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        return (\n            <div\n                className={cn(styles.component, className)}\n                data-test-id={dataTestId}\n                onAnimationEnd={handleErrorAnimationEnd}\n            >\n                <div className={cn({ [styles.shake]: Boolean(error) })}>\n                    {/* eslint-disable react/no-array-index-key */}\n                    {new Array(fields).fill('').map((_, index) => (\n                        <Input\n                            ref={inputRefs[index]}\n                            key={index.toString()}\n                            index={index}\n                            value={values[index]}\n                            disabled={disabled}\n                            error={!!error}\n                            onChange={handleChangeFromEvent}\n                            onFocus={handleFocus}\n                            onKeyDown={handleKeyDown}\n                            stylesInput={stylesInput}\n                            compact={fields > 6}\n                        />\n                    ))}\n                </div>\n\n                {error && (\n                    <div className={styles.error} role='alert'>\n                        {error}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { CodeInputDesktop } from './Component.desktop';\nimport { CodeInputMobile } from './Component.mobile';\nimport { BaseCodeInputProps, CustomInputRef } from './typings';\n\nexport type CodeInputProps = Omit<BaseCodeInputProps, 'inputClassName'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const CodeInput = forwardRef<CustomInputRef, CodeInputProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? CodeInputDesktop : CodeInputMobile;\n\n        return <Component ref={ref} {...restProps} />;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"collapse_P61MV\",\"content\":\"content_qoCdp\",\"expandedContent\":\"expandedContent_KIBur\",\"expandedLabel\":\"expandedLabel_hXOVi\"};","import React, { forwardRef, useCallback, useEffect, useRef, useState } from 'react';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport cn from 'classnames';\nimport debounce from 'lodash.debounce';\n\nimport { Link } from '@alfalab/core-components-link';\nimport { ArrowDownMBlackIcon } from '@alfalab/icons-classic/ArrowDownMBlackIcon';\nimport { ArrowUpMBlackIcon } from '@alfalab/icons-classic/ArrowUpMBlackIcon';\n\nimport styles from './index.module.css';\n\nexport type CollapseProps = {\n    /**\n     * Состояние компонента\n     *\n     */\n    expanded?: boolean;\n\n    /**\n     * Текст ссылки в `expanded` состоянии\n     *\n     */\n    collapsedLabel?: string;\n\n    /**\n     * Текст ссылки в `collapsed` состоянии\n     *\n     */\n    expandedLabel?: string;\n\n    /**\n     * Дочерние элементы `Collapse`\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс обертки\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для скрываемого контента\n     */\n    expandedContentClassName?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Начальное состояние uncontrolled компонента\n     * @default false\n     */\n    defaultExpanded?: boolean;\n\n    /**\n     * Обработчик смены состояний `expanded/collapsed`\n     */\n    onExpandedChange?: (expanded: boolean) => void;\n\n    /**\n     * Обработчик события завершения анимации\n     */\n    onTransitionEnd?: (expanded: boolean) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Collapse = forwardRef<HTMLDivElement, CollapseProps>(\n    (\n        {\n            expanded,\n            collapsedLabel,\n            expandedLabel,\n            children,\n            className,\n            expandedContentClassName,\n            id,\n            onTransitionEnd,\n            onExpandedChange,\n            defaultExpanded = false,\n            dataTestId,\n        },\n        ref,\n    ) => {\n        const uncontrolled = expanded === undefined;\n\n        const contentRef = useRef<HTMLDivElement>(null);\n        const contentCaseRef = useRef<HTMLDivElement>(null);\n        const [expandedState, setExpandedState] = useState(\n            uncontrolled ? defaultExpanded : expanded,\n        );\n\n        const isExpanded = uncontrolled ? expandedState : expanded;\n\n        const recalculate = useCallback(() => {\n            let contentHeight;\n\n            if (!contentCaseRef.current || !contentRef.current) {\n                return;\n            }\n\n            if (isExpanded) {\n                contentHeight = contentCaseRef.current.offsetHeight;\n            } else {\n                contentHeight = 0;\n            }\n\n            contentRef.current.style.height = `${contentHeight}px`;\n        }, [isExpanded]);\n\n        const handleTransitionEnd = useCallback(() => {\n            if (onTransitionEnd) onTransitionEnd(isExpanded);\n        }, [isExpanded, onTransitionEnd]);\n\n        const handleExpandedChange = useCallback(() => {\n            if (uncontrolled) {\n                setExpandedState(!isExpanded);\n            }\n\n            if (onExpandedChange) onExpandedChange(!isExpanded);\n        }, [isExpanded, onExpandedChange, uncontrolled]);\n\n        useEffect(() => {\n            const handleResize = debounce(() => recalculate(), 300);\n\n            window.addEventListener('resize', handleResize);\n\n            return () => window.removeEventListener('resize', handleResize);\n        }, [recalculate]);\n\n        useEffect(() => {\n            const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n            const observer = new ResizeObserver(recalculate);\n\n            if (contentCaseRef.current) {\n                observer.observe(contentCaseRef.current);\n            }\n\n            return () => {\n                observer.disconnect();\n            };\n        }, [recalculate]);\n\n        useEffect(() => recalculate(), [isExpanded, recalculate]);\n\n        const ToggledIcon = isExpanded ? ArrowUpMBlackIcon : ArrowDownMBlackIcon;\n\n        return (\n            <div\n                ref={ref}\n                className={cn(className, styles.collapse)}\n                id={id}\n                data-test-id={dataTestId}\n            >\n                <div\n                    ref={contentRef}\n                    className={cn(styles.content, expandedContentClassName, {\n                        [styles.expandedContent]: isExpanded,\n                    })}\n                    onTransitionEnd={handleTransitionEnd}\n                >\n                    <div ref={contentCaseRef}>{children}</div>\n                </div>\n                {(expandedLabel || collapsedLabel) && (\n                    <Link\n                        className={cn({ [styles.expandedLabel]: isExpanded })}\n                        pseudo={true}\n                        onClick={handleExpandedChange}\n                        rightAddons={<ToggledIcon />}\n                    >\n                        {isExpanded ? expandedLabel : collapsedLabel}\n                    </Link>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_oE5Op\",\"rowLimit2\":\"rowLimit2_P7xjW\",\"rowLimit5\":\"rowLimit5_YZGHs\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nexport type CommentProps = {\n    /**\n     * Количество строк\n     */\n    rowLimit?: 2 | 5;\n    /**\n     *  Сss класс для стилизации общей обёртки\n     */\n    className?: string;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Comment: React.FC<CommentProps> = ({ className, dataTestId, children, rowLimit }) => {\n    const textClassName = rowLimit && styles[`rowLimit${rowLimit}`];\n\n    return (\n        <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n            <Typography.Text tag='div' view='component' className={textClassName} color='primary'>\n                {children}\n            </Typography.Text>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"customButton\":\"customButton_PgaWT\",\"white\":\"white_dlAho\",\"black\":\"black_SkdGZ\",\"static-white\":\"static-white_axoSK\",\"static-black\":\"static-black_wW1fB\",\"darkening\":\"darkening_Y0jpS\",\"lightening\":\"lightening_uLTt0\",\"static-darkening\":\"static-darkening_J1KZr\",\"static-lightening\":\"static-lightening_qgqIs\",\"customLoading\":\"customLoading_Yjvef\"};","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ComponentProps as ButtonComponentProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type ComponentProps = Omit<ButtonComponentProps, 'view' | 'colors'> & {\n    /**\n     * Цвет кнопки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Цвет контента\n     */\n    contentColor?: 'black' | 'white' | 'static-black' | 'static-white';\n\n    /**\n     * Затемнение или осветление кнопки при hover и active\n     */\n    stateType?: 'darkening' | 'lightening' | 'static-darkening' | 'static-lightening';\n};\n\ntype AnchorButtonProps = ComponentProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype NativeButtonProps = ComponentProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type CustomButtonProps = Partial<AnchorButtonProps | NativeButtonProps>;\n\nexport const CustomButton = React.forwardRef<\n    HTMLAnchorElement | HTMLButtonElement,\n    CustomButtonProps\n>(\n    (\n        {\n            children,\n            className,\n            loading,\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const buttonProps = {\n            style: { background: backgroundColor },\n            ...restProps,\n        };\n\n        const buttonClassName = cn(\n            styles.customButton,\n            className,\n            styles[contentColor],\n            styles[stateType],\n            {\n                [styles.customLoading]: loading,\n            },\n        );\n\n        return (\n            <Button\n                {...buttonProps}\n                view='primary'\n                ref={ref}\n                className={buttonClassName}\n                loading={loading}\n            >\n                {children}\n            </Button>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nCustomButton.defaultProps = {\n    size: 'm',\n    block: false,\n    loading: false,\n    nowrap: false,\n};\n","import React, { forwardRef } from 'react';\n\nimport { CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport {\n    PickerButtonDesktop,\n    PickerButtonDesktopProps,\n} from '@alfalab/core-components-picker-button/desktop';\n\nimport { Field as DefaultField } from './field';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type CustomPickerButtonDesktopProps = Omit<PickerButtonDesktopProps, 'view' | 'colors'> &\n    Pick<CustomButtonProps, 'backgroundColor' | 'contentColor' | 'stateType'>;\n\nexport const CustomPickerButtonDesktop = forwardRef<\n    HTMLInputElement,\n    CustomPickerButtonDesktopProps\n>(\n    (\n        {\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => (\n        <PickerButtonDesktop\n            {...restProps}\n            fieldProps={{\n                backgroundColor,\n                contentColor,\n                stateType,\n            }}\n            Field={DefaultField}\n            ref={ref}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\nimport { CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport {\n    PickerButtonMobile,\n    PickerButtonMobileProps,\n} from '@alfalab/core-components-picker-button/mobile';\n\nimport { Field as DefaultField } from './field';\n\nconst DEFAULT_BUTTON_COLOR = '#FF45C3';\nconst DEFAULT_CONTENT_COLOR = 'white';\n\nexport type CustomPickerButtonMobileProps = Omit<PickerButtonMobileProps, 'view' | 'colors'> &\n    Pick<CustomButtonProps, 'backgroundColor' | 'contentColor' | 'stateType'>;\n\nexport const CustomPickerButtonMobile = forwardRef<HTMLInputElement, CustomPickerButtonMobileProps>(\n    (\n        {\n            backgroundColor = DEFAULT_BUTTON_COLOR,\n            contentColor = DEFAULT_CONTENT_COLOR,\n            stateType = 'darkening',\n            ...restProps\n        },\n        ref,\n    ) => (\n        <PickerButtonMobile\n            {...restProps}\n            fieldProps={{\n                backgroundColor,\n                contentColor,\n                stateType,\n            }}\n            Field={DefaultField}\n            ref={ref}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { PickerButtonDesktopProps } from '@alfalab/core-components-picker-button';\nimport { AdditionalMobileProps } from '@alfalab/core-components-select';\n\nimport { CustomPickerButtonDesktop, CustomPickerButtonDesktopProps } from './Component.desktop';\nimport { CustomPickerButtonMobile } from './Component.mobile';\n\nexport type PickerButtonMatchMedia = 'desktop' | 'mobile';\n\nexport type CustomPickerButtonResponsiveProps = CustomPickerButtonDesktopProps &\n    AdditionalMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport const CustomPickerButtonResponsive = forwardRef<\n    HTMLInputElement,\n    CustomPickerButtonResponsiveProps\n>(\n    (\n        {\n            OptionsList,\n            onScroll,\n            footer,\n            swipeable,\n            bottomSheetProps,\n            breakpoint = 1024,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const query = `(min-width: ${breakpoint}px)`;\n        const [isDesktop] = useMatchMedia(query);\n\n        return isDesktop ? (\n            <CustomPickerButtonDesktop\n                ref={ref}\n                OptionsList={OptionsList}\n                onScroll={onScroll}\n                {...restProps}\n            />\n        ) : (\n            <CustomPickerButtonMobile\n                ref={ref}\n                footer={footer}\n                swipeable={swipeable}\n                bottomSheetProps={bottomSheetProps}\n                {...restProps}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"iconContainer\":\"iconContainer_W__rv\",\"addonsContainer\":\"addonsContainer_htSPQ\",\"showControlIcon\":\"showControlIcon_GlNvQ\",\"open\":\"open_NAwCF\"};","import React, { ButtonHTMLAttributes, FC, Fragment, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { CustomButton, CustomButtonProps } from '@alfalab/core-components-custom-button';\nimport {\n    getIcon,\n    PickerButtonSize,\n    PickerButtonVariant,\n} from '@alfalab/core-components-picker-button';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select/src/typings';\n\nimport styles from './index.module.css';\n\ntype FieldProps = Pick<BaseFieldProps, 'open' | 'label' | 'innerProps'> &\n    CustomButtonProps & {\n        buttonSize?: PickerButtonSize;\n        buttonVariant?: PickerButtonVariant;\n        showArrow?: boolean;\n    };\n\nexport const Field = ({\n    buttonSize = 'm',\n    buttonVariant = 'default',\n    backgroundColor,\n    contentColor,\n    stateType,\n    label,\n    open,\n    rightAddons,\n    innerProps,\n    className,\n    showArrow = true,\n    ...restProps\n}: FieldProps) => {\n    const Icon: FC<SVGProps<SVGSVGElement>> = getIcon(buttonVariant, buttonSize);\n\n    const buttonProps = {\n        ...restProps,\n        ...innerProps,\n    } as ButtonHTMLAttributes<HTMLButtonElement>;\n\n    return (\n        <CustomButton\n            {...buttonProps}\n            rightAddons={\n                <Fragment>\n                    {rightAddons && (\n                        <span\n                            className={cn(styles.addonsContainer, {\n                                [styles.showControlIcon]: showArrow || buttonVariant === 'compact',\n                            })}\n                        >\n                            {rightAddons}\n                        </span>\n                    )}\n\n                    {(showArrow || buttonVariant === 'compact') && (\n                        <span\n                            className={cn(\n                                styles.iconContainer,\n                                buttonVariant !== 'compact' && open && styles.open,\n                            )}\n                        >\n                            <Icon data-test-id='custom-picker-button-icon' />\n                        </span>\n                    )}\n                </Fragment>\n            }\n            block={true}\n            size={buttonSize}\n            backgroundColor={backgroundColor}\n            contentColor={contentColor}\n            stateType={stateType}\n            className={className}\n        >\n            {buttonVariant !== 'compact' && label}\n        </CustomButton>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"nativeInput\":\"nativeInput_vCIEk\"};","import React, {\n    ChangeEvent,\n    FocusEvent,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport {\n    format,\n    formatDate,\n    isCompleteDateInput,\n    isInputDateSupported,\n    isValid,\n    NATIVE_DATE_FORMAT,\n    parseDateString,\n} from './utils';\n\nimport styles from './index.module.css';\n\nexport type DateInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Управление нативным режимом на мобильных устройствах\n     */\n    mobileMode?: 'input' | 'native';\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { date: Date; value: string },\n    ) => void;\n};\n\nexport const DateInput = forwardRef<HTMLInputElement, DateInputProps>(\n    (\n        {\n            mobileMode = 'input',\n            defaultValue = '',\n            rightAddons,\n            error,\n            value: propValue,\n            onBlur,\n            onChange,\n            onComplete,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [shouldRenderNative, setShouldRenderNative] = useState(false);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n\n        const handleChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                const { value: newValue } = event.target;\n\n                // Позволяем вводить только цифры и точки\n                if (/[^\\d.]/.test(newValue)) {\n                    return;\n                }\n\n                const dots = newValue.match(/\\./g);\n\n                // Не даем вводить больше, чем 2 точки\n                if (dots && dots.length > 2) {\n                    return;\n                }\n\n                // Форматируем введенное значение (добавляем точки)\n                const formattedValue = format(newValue);\n                const date = parseDateString(formattedValue);\n\n                setValue(formattedValue);\n\n                if (onChange) onChange(event, { date, value: formattedValue });\n\n                if (isCompleteDateInput(formattedValue)) {\n                    const valid = formattedValue.length > 0 && isValid(formattedValue);\n\n                    if (!valid) return;\n\n                    if (onComplete) onComplete(event, { date, value: formattedValue });\n                }\n            },\n            [onChange, onComplete],\n        );\n\n        const handleNativeInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                const newDate = parseDateString(event.target.value, NATIVE_DATE_FORMAT);\n                const newValue = event.target.value === '' ? '' : formatDate(newDate);\n\n                setValue(newValue);\n\n                if (onComplete) onComplete(event, { date: newDate, value: newValue });\n                if (onChange) onChange(event, { date: newDate, value: newValue });\n            },\n            [onComplete, onChange],\n        );\n\n        const handleBlur = useCallback(\n            (event: FocusEvent<HTMLInputElement>) => {\n                if (onBlur) onBlur(event);\n            },\n            [onBlur],\n        );\n\n        useEffect(() => {\n            if (mobileMode === 'native' && isInputDateSupported()) {\n                setShouldRenderNative(true);\n            }\n        }, [mobileMode]);\n\n        useEffect(() => {\n            if (typeof propValue !== 'undefined') {\n                setValue(propValue);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [propValue]);\n\n        return (\n            <Input\n                {...restProps}\n                ref={mergeRefs([ref, inputRef])}\n                value={value}\n                inputMode='decimal'\n                pattern='[0-9\\.]*'\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder='ДД.ММ.ГГГГ'\n                error={error}\n                rightAddons={\n                    <React.Fragment>\n                        {rightAddons}\n\n                        {shouldRenderNative && (\n                            <input\n                                type='date'\n                                ref={ref}\n                                defaultValue={defaultValue}\n                                onChange={handleNativeInputChange}\n                                className={styles.nativeInput}\n                            />\n                        )}\n                    </React.Fragment>\n                }\n            />\n        );\n    },\n);\n","import dateFnsFormat from 'date-fns/format';\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const NATIVE_DATE_FORMAT = 'yyyy-MM-dd';\nexport const DATE_MASK = [/\\d/, /\\d/, '.', /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/];\n\nexport const isCompleteDateInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const formatDate = (date: Date | number, dateFormat = DATE_FORMAT) =>\n    dateFnsFormat(date, dateFormat);\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\nexport const isValid = (inputValue?: string) =>\n    !inputValue || (isCompleteDateInput(inputValue) && dateFnsIsValid(parseDateString(inputValue)));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d).*/, '$1') // 12.12.20056 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 01.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 01..2005123123 => 01..2005\n        .replace(/^(\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 1..2005123123 => 1..2005\n        .replace(/^()\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // ..2005123123 => ..2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n","/**\n * Возвращает `true`, если поддерживается `input[type=\"date\"]`\n */\nexport function isInputDateSupported() {\n    const input = document.createElement('input');\n    const value = 'a';\n\n    input.setAttribute('type', 'date');\n    input.setAttribute('value', value);\n\n    return input.value !== value;\n}\n","/* eslint-disable no-useless-escape */\n\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const DATE_MASK = [\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    ' ',\n    '-',\n    ' ',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n];\n\nexport const isCompleteDateInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\n\nexport const isValid = (inputValue: string, dateFrom: string, dateTo: string) =>\n    !inputValue ||\n    (isCompleteDateInput(inputValue) &&\n        dateFnsIsValid(parseDateString(dateFrom)) &&\n        dateFnsIsValid(parseDateString(dateTo)));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/\\ $/, '') // 1 2 => 12\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)(\\d) - (\\d.*)/, '$1 - $3') // 12.12.20051 - 12.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) (\\d)- (\\d.*)/, '$1 - $3') // 12.12.2005 1- 12.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) -(\\d) (\\d.*)/, '$1 - $3') // 12.12.2005 -1 12.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d)(\\d\\d.\\d\\d.\\d\\d\\d)/, '$1 - $3') // 12.12.2005 - 112.12.200 => 12.12.2005 - 12.12.200\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d)(\\d\\d.\\d.\\d\\d\\d\\d)/, '$1 - $3') // 12.12.2005 - 112.1.2001 => 12.12.2005 - 12.1.2001\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d.*)/, '$1.$2') // 1212 => 12.12\n        .replace(/^(\\d\\d.\\d\\d)(\\d.*)/, '$1.$2') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)(\\d)/, '$1 - $2') // 12.12.20056 => 12.12.2005 - 6\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d\\d)(\\d)/, '$1 - $2.$3') // 12.12.2005 - 123 => 12.12.2005 - 12.3\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) - (\\d\\d).(\\d\\d)(\\d)/, '$1 - $2.$3.$4') // 12.12.2005 - 12.123 => 12.12.2005 - 12.12.3\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)- (\\d.*)/, '$1 - $2') // 12.12.2005- 12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) -(\\d.*)/, '$1 - $2') // 12.12.2005 -12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) -/, '$1') // 12.12.2005 - => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d) (\\d.*)/, '$1 - $2') // 12.12.2005 12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)  {2}(\\d.*)/, '$1 - $2') // 12.12.2005  12.12.2005 => 12.12.2005 - 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d)-/, '$1') // 12.12.2005- => 12.12.2005\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 1.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n\nexport const parseTimestampToDate = (timestamp: number): string => {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n\n    let month: number | string = date.getMonth() + 1;\n    let day: number | string = date.getDate();\n\n    if (month < 10) {\n        month = `0${month}`;\n    }\n    if (day < 10) {\n        day = `0${day}`;\n    }\n\n    return `${day}.${month}.${year}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_oe2U2\",\"calendarContainer\":\"calendarContainer_o4ZCa\",\"calendarResponsive\":\"calendarResponsive_Uf5v8\",\"block\":\"block_yYGNM\",\"calendarIcon\":\"calendarIcon_foTRj\"};","/* eslint-disable no-useless-escape, jsx-a11y/click-events-have-key-events */\n\nimport React, {\n    ChangeEvent,\n    ElementType,\n    FocusEvent,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport { startOfMonth } from 'date-fns';\nimport dateFnsIsValid from 'date-fns/isValid';\n\nimport {\n    Calendar as DefaultCalendar,\n    CalendarMobileProps,\n    CalendarProps,\n    usePeriod,\n} from '@alfalab/core-components-calendar';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { InputProps } from '@alfalab/core-components-input';\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { useDidUpdateEffect } from '@alfalab/hooks';\nimport { CalendarMIcon } from '@alfalab/icons-glyph/CalendarMIcon';\n\nimport {\n    DATE_FORMAT,\n    DATE_MASK,\n    format,\n    isCompleteDateInput,\n    isValid,\n    parseDateString,\n    parseTimestampToDate,\n} from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type ConditionalProps =\n    | {\n          /**\n           * Обработчик изменения значения\n           */\n          picker: true;\n\n          /**\n           * Обработчик закрытия календаря\n           */\n          onClose?: () => void;\n      }\n    | { picker?: false; onClose?: never };\n\nexport type DateRangeInputProps = Omit<InputProps, 'onChange'> &\n    ConditionalProps & {\n        /**\n         * Дополнительный класс\n         */\n        className?: string;\n\n        /**\n         * Дополнительный класс для инпута\n         */\n        inputClassName?: string;\n\n        /**\n         * Дополнительный класс для поповера\n         */\n        popoverClassName?: string;\n\n        /**\n         * Обработчик изменения значения\n         */\n        onChange?: (\n            payload: { dateFrom?: Date; dateTo?: Date; value: string },\n            event?: ChangeEvent<HTMLInputElement>,\n        ) => void;\n\n        /**\n         * Обработчик окончания ввода\n         */\n        onComplete?: (\n            payload: { dateFrom: Date; dateTo: Date; value: string },\n            event?: ChangeEvent<HTMLInputElement>,\n        ) => void;\n\n        /**\n         * Компонент календаря\n         */\n        Calendar?: ElementType;\n\n        /**\n         * Доп. пропсы для календаря\n         */\n        calendarProps?:\n            | (CalendarProps & Record<string, unknown>)\n            | (CalendarMobileProps & Record<string, unknown>);\n\n        /**\n         * Месяц в календаре по умолчанию (timestamp)\n         */\n        defaultMonth?: number;\n\n        /**\n         * Минимальная дата, доступная для выбора (timestamp)\n         */\n        minDate?: number;\n\n        /**\n         * Максимальная дата, доступная для выбора (timestamp)\n         */\n        maxDate?: number;\n\n        /**\n         * Список событий\n         */\n        events?: Array<Date | number>;\n\n        /**\n         * Список выходных\n         */\n        offDays?: Array<Date | number>;\n\n        /**\n         * Состояние открытия по умолчанию\n         */\n        defaultOpen?: boolean;\n\n        /**\n         * Позиционирование поповера с календарем\n         */\n        popoverPosition?: PopoverProps['position'];\n\n        /**\n         * z-index Popover\n         */\n        zIndexPopover?: PopoverProps['zIndex'];\n\n        /**\n         * Запрещает поповеру менять свою позицию.\n         * Например, если места снизу недостаточно, то он все равно будет показан снизу\n         */\n        preventFlip?: boolean;\n\n        /**\n         * Календарь будет принимать ширину инпута\n         */\n        useAnchorWidth?: boolean;\n\n        /**\n         * Растягивает компонент на ширину контейнера\n         */\n        block?: boolean;\n\n        /**\n         * Отображение компонента в мобильном или десктопном виде\n         */\n        view?: 'desktop' | 'mobile';\n\n        /**\n         * Компонент инпута\n         */\n        InputComponent?: ElementType;\n    };\n\ntype GetDatesRet = { formattedValue: string; dateFrom?: Date; dateTo?: Date; dateArr: string[] };\n\nexport const DateRangeInput = React.forwardRef<HTMLInputElement, DateRangeInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            popoverClassName,\n            disabled,\n            readOnly,\n            picker,\n            defaultValue = '',\n            value: propValue,\n            onChange,\n            onComplete,\n            onClose,\n            rightAddons,\n            useAnchorWidth,\n            block,\n            popoverPosition = 'bottom-start',\n            zIndexPopover,\n            preventFlip,\n            Calendar = DefaultCalendar,\n            InputComponent,\n            calendarProps = {},\n            defaultMonth,\n            minDate = calendarProps.minDate,\n            maxDate = calendarProps.maxDate,\n            offDays = calendarProps.offDays || [],\n            events = calendarProps.events || [],\n            defaultOpen = false,\n            view = 'desktop',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n        const iconRef = useRef<HTMLButtonElement>(null);\n        const calendarRef = useRef<HTMLDivElement>(null);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n        const [open, setOpen] = useState(defaultOpen);\n\n        const inputDisabled = disabled || readOnly;\n\n        const calendarResponsive = calendarProps?.responsive ?? true;\n\n        const { selectedFrom, selectedTo, updatePeriod, resetPeriod, setStart, setEnd } = usePeriod(\n            { onPeriodChange: handlePeriodChange },\n        );\n\n        useEffect(() => {\n            if (value) {\n                setCalendarPeriod(getDates(value));\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        useEffect(() => {\n            setValue((prevValue) => {\n                if (selectedFrom && selectedTo) {\n                    const from = parseTimestampToDate(selectedFrom);\n                    const to = parseTimestampToDate(selectedTo);\n\n                    return `${from} - ${to}`;\n                }\n                if (selectedFrom && prevValue.length < DATE_FORMAT.length) {\n                    return parseTimestampToDate(selectedFrom);\n                }\n\n                return prevValue;\n            });\n        }, [selectedFrom, selectedTo]);\n\n        useDidUpdateEffect(() => {\n            const newPropValue = propValue || '';\n\n            setValue((prevValue) => {\n                if (prevValue === newPropValue) {\n                    return prevValue;\n                }\n\n                const dates = getDates(newPropValue);\n\n                setCalendarPeriod(dates);\n\n                return dates.formattedValue;\n            });\n        }, [propValue]);\n\n        function getDates(val: string): GetDatesRet {\n            const formattedValue = format(val);\n\n            const dateArr = formattedValue.split('-').map((v) => v.trim());\n            const dateFrom = dateArr[0] ? parseDateString(dateArr[0]) : undefined;\n            const dateTo = dateArr[1] ? parseDateString(dateArr[1]) : undefined;\n\n            return { formattedValue, dateFrom, dateTo, dateArr };\n        }\n\n        function setCalendarPeriod({ dateFrom, dateTo }: GetDatesRet) {\n            setStart(dateFrom?.getTime());\n            setEnd(dateTo?.getTime());\n        }\n\n        function handlePeriodChange(from?: number, to?: number) {\n            if (from && !to && value.length === DATE_MASK.length) {\n                setValue(parseTimestampToDate(from));\n            } else if (\n                (!from && !to && value.length === DATE_FORMAT.length) ||\n                (from === to && value.length === DATE_MASK.length)\n            ) {\n                setValue('');\n            }\n\n            const dateFrom = from ? new Date(from) : undefined;\n            const dateTo = to ? new Date(to) : undefined;\n\n            const newValue = ([from, to].filter(Boolean) as number[])\n                .map((timestamp) => parseTimestampToDate(timestamp))\n                .join(' - ');\n\n            onChange?.({\n                dateFrom,\n                dateTo,\n                value: newValue,\n            });\n\n            if (dateFrom && dateTo) {\n                onComplete?.({\n                    dateFrom,\n                    dateTo,\n                    value: newValue,\n                });\n            }\n        }\n\n        const handleInputWrapperFocus = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                if (picker) {\n                    setOpen(true);\n                }\n\n                if (!open && event.target.tagName !== 'INPUT' && calendarRef.current) {\n                    calendarRef.current.focus();\n                }\n            }\n        };\n\n        const handleBlur = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                const target = (event.relatedTarget || document.activeElement) as HTMLElement;\n\n                if (\n                    calendarRef.current?.contains(target) === false &&\n                    inputRef.current?.contains(target) === false &&\n                    iconRef.current?.contains(target) === false\n                ) {\n                    setOpen(false);\n\n                    if (onClose) {\n                        onClose();\n                    }\n                }\n            }\n        };\n\n        // eslint-disable-next-line complexity\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const { value: newValue } = event.target;\n\n            if (newValue.length > DATE_MASK.length) return;\n\n            // Позволяем вводить только цифры, точки, дефис и пробелы\n            if (/[^\\d. -]/.test(newValue)) {\n                return;\n            }\n\n            const dots = newValue.match(/\\./g);\n            const hyphen = newValue.match(/\\-/g);\n\n            // Не даем вводить больше, чем 4 точки и 1 дефис\n            if ((dots && dots.length > 4) || (hyphen && hyphen.length > 1)) {\n                return;\n            }\n\n            const { formattedValue, dateFrom, dateTo, dateArr } = getDates(newValue);\n\n            if (!dateFrom && !dateTo) {\n                resetPeriod();\n            } else if (selectedFrom && formattedValue.length < DATE_FORMAT.length) {\n                setStart();\n            } else if (selectedFrom && selectedTo) {\n                setEnd();\n            } else if (\n                dateFrom &&\n                dateFnsIsValid(dateFrom) &&\n                dateArr[0]?.length === DATE_FORMAT.length &&\n                dateFrom.getTime() !== selectedFrom\n            ) {\n                setStart(dateFrom.getTime());\n            } else if (\n                dateTo &&\n                dateFnsIsValid(dateTo) &&\n                dateArr[1]?.length === DATE_FORMAT.length &&\n                dateTo.getTime() !== selectedTo\n            ) {\n                setEnd(dateTo.getTime());\n            }\n\n            setValue(formattedValue);\n\n            onChange?.({ dateFrom, dateTo, value: formattedValue }, event);\n\n            if (isCompleteDateInput(formattedValue)) {\n                const valid = isValid(formattedValue, dateArr[0], dateArr[1]);\n\n                if (!valid) return;\n\n                if (dateFrom && dateTo) {\n                    onComplete?.({ dateFrom, dateTo, value: formattedValue }, event);\n                }\n            }\n        };\n\n        const handleCalendarClose = () => {\n            if (view === 'mobile' && onClose) {\n                onClose();\n            }\n\n            setOpen(false);\n        };\n\n        const handleClear = () => {\n            setValue('');\n            resetPeriod();\n        };\n\n        const handleCalendarChange = (date?: number) => {\n            if (date) {\n                updatePeriod(date);\n            }\n        };\n\n        const handleCalendarWrapperMouseDown = (event: MouseEvent<HTMLDivElement>) => {\n            // Не дает инпуту терять фокус при выборе даты\n            event.preventDefault();\n        };\n\n        const handleIconButtonClick = () => {\n            if (!open) setOpen(true);\n\n            if (view === 'desktop' && inputRef.current) {\n                inputRef.current.focus();\n            }\n        };\n\n        const renderCalendar = () => {\n            const activeMonth =\n                (selectedTo && startOfMonth(selectedTo)) ||\n                (selectedFrom && startOfMonth(selectedFrom));\n\n            return (\n                // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n                <div onMouseDown={handleCalendarWrapperMouseDown}>\n                    <Calendar\n                        {...calendarProps}\n                        responsive={calendarResponsive}\n                        open={open}\n                        onClose={handleCalendarClose}\n                        ref={calendarRef}\n                        defaultMonth={activeMonth || defaultMonth}\n                        selectedFrom={selectedFrom}\n                        selectedTo={selectedTo}\n                        onChange={handleCalendarChange}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        offDays={offDays}\n                        events={events}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <div\n                className={cn(styles.component, className, {\n                    [styles.block]: block,\n                })}\n                onFocus={inputDisabled ? undefined : handleInputWrapperFocus}\n                onBlur={handleBlur}\n            >\n                {InputComponent ? (\n                    <InputComponent\n                        {...restProps}\n                        block={block}\n                        ref={mergeRefs([ref, inputRef])}\n                        value={value}\n                        onChange={handleChange}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        className={inputClassName}\n                        onClear={handleClear}\n                        rightAddons={\n                            <React.Fragment>\n                                {rightAddons}\n                                {picker && (\n                                    <IconButton\n                                        className={styles.calendarIcon}\n                                        ref={iconRef}\n                                        onClick={inputDisabled ? undefined : handleIconButtonClick}\n                                        icon={CalendarMIcon}\n                                        size='s'\n                                    />\n                                )}\n                            </React.Fragment>\n                        }\n                    />\n                ) : null}\n                {picker && (\n                    <Popover\n                        open={open}\n                        useAnchorWidth={useAnchorWidth}\n                        anchorElement={inputRef.current as HTMLElement}\n                        popperClassName={cn(styles.calendarContainer, {\n                            [styles.calendarResponsive]: calendarResponsive,\n                        })}\n                        className={popoverClassName}\n                        position={popoverPosition}\n                        offset={[0, 8]}\n                        withTransition={false}\n                        preventFlip={preventFlip}\n                        zIndex={zIndexPopover}\n                    >\n                        {renderCalendar()}\n                    </Popover>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\nimport { InputDesktop } from '@alfalab/core-components-input/desktop';\n\nimport {\n    ConditionalProps,\n    DateRangeInput,\n    DateRangeInputProps,\n} from './components/date-range-input';\n\nexport type DateRangeInputDesktopProps = Omit<\n    DateRangeInputProps,\n    'view' | 'picker' | 'onClose' | 'InputComponent'\n> &\n    ConditionalProps;\n\nexport const DateRangeInputDesktop = forwardRef<HTMLInputElement, DateRangeInputDesktopProps>(\n    (props, ref) => <DateRangeInput InputComponent={InputDesktop} {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { CalendarMobile } from '@alfalab/core-components-calendar';\nimport { InputMobile } from '@alfalab/core-components-input/mobile';\n\nimport {\n    ConditionalProps,\n    DateRangeInput,\n    DateRangeInputProps,\n} from './components/date-range-input';\n\nexport type DateRangeInputMobileProps = Omit<\n    DateRangeInputProps,\n    'view' | 'picker' | 'onClose' | 'InputComponent'\n> &\n    ConditionalProps;\n\nexport const DateRangeInputMobile = forwardRef<HTMLInputElement, DateRangeInputMobileProps>(\n    (props, ref) => (\n        <DateRangeInput\n            InputComponent={InputMobile}\n            Calendar={CalendarMobile}\n            view='mobile'\n            {...props}\n            ref={ref}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { ConditionalProps, DateRangeInputProps } from './components/date-range-input';\nimport { DateRangeInputDesktop } from './Component.desktop';\nimport { DateRangeInputMobile } from './Component.mobile';\n\nexport type DateRangeInputResponsiveProps = Omit<\n    DateRangeInputProps,\n    'view' | 'picker' | 'onClose' | 'InputComponent'\n> &\n    ConditionalProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport type DateRangeInputMedia = 'desktop' | 'mobile';\n\nexport const DateRangeInputResponsive = forwardRef<HTMLInputElement, DateRangeInputResponsiveProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<DateRangeInputMedia>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <DateRangeInputDesktop {...restProps} ref={ref} />\n        ) : (\n            <DateRangeInputMobile {...restProps} ref={ref} />\n        );\n    },\n);\n","/* eslint-disable no-useless-escape */\n\nimport dateFnsIsValid from 'date-fns/isValid';\nimport parse from 'date-fns/parse';\n\nexport const DATE_FORMAT = 'dd.MM.yyyy';\nexport const DATE_MASK = [\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    '.',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    ',',\n    ' ',\n    /\\d/,\n    /\\d/,\n    ':',\n    /\\d/,\n    /\\d/,\n];\n\nexport const DATE_WITH_TIME_LENGTH = DATE_MASK.length;\nexport const isCompleteDateInput = (input: string) => input.length === DATE_WITH_TIME_LENGTH;\nexport const parseDateString = (value: string, dateFormat = DATE_FORMAT) =>\n    parse(value, dateFormat, new Date());\nexport const isValidTimeFormat = (value: string): boolean => {\n    const timeArr = value.split(':');\n    const hours = timeArr[0];\n    const mins = timeArr[1];\n\n    if (hours.length !== 2 || Number(hours) > 23) {\n        return false;\n    }\n\n    if (mins.length !== 2 || Number(mins) > 59) {\n        return false;\n    }\n\n    return true;\n};\n\nexport const isValid = (inputValue: string) => {\n    const inputValueArr = inputValue.split(', ');\n    const date = inputValueArr[0];\n    const time = inputValueArr[1];\n\n    return (\n        !inputValue ||\n        (isCompleteDateInput(inputValue) &&\n            dateFnsIsValid(parseDateString(date)) &&\n            isValidTimeFormat(time))\n    );\n};\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1.$2') // 121 => 12.1\n        .replace(/^(\\d\\d)\\.(\\d\\d)(\\d)$/, '$1.$2.$3') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d)\\d\\.(.*)/, '$1.$2') // 123.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d\\.\\d\\d)\\d\\.(.*)/, '$1.$2') // 12.123.2005 => 12.12.2005\n        .replace(/\\.$/, '') // 12. => 12\n        .replace(/\\ $/, '') // 1 2 => 12\n        .replace(/\\:$/, '') // 1:2 => 12\n        .replace(/^(\\d\\d)(\\d.*)/, '$1.$2') // 1212 => 12.12\n        .replace(/^(\\d\\d.\\d\\d)(\\d.*)/, '$1.$2') // 12.122 => 12.12.2\n        .replace(/^(\\d\\d\\.\\d\\d)(\\d\\d\\d\\d)/, '$1.$2') // 12.122005 => 12.12.2005\n        .replace(/^(\\d\\d)(\\d\\d\\.\\d\\d\\d\\d)/, '$1.$2') // 1212.2005 => 12.12.2005\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d),/, '$1') // 12.12.2005 => 12.12.2005\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d)(\\d)/, '$1, $2') // 12.12.20050 => 12.12.2005, 0\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d),(\\d.*)/, '$1, $2') // 12.12.2005,00:00 => 12.12.2005, 00:00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d) (\\d.*)/, '$1, $2') // 12.12.2005 00:00 => 12.12.2005, 00:00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d)(\\d.*)/, '$1, $2') // 12.12.200500:00=> 12.12.2005, 00:00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d), (\\d\\d):/, '$1, $2') // 12.12.2005, 00: => 12.12.2005, 00\n        .replace(/^(\\d\\d.\\d\\d\\.\\d\\d\\d\\d), (\\d\\d)(\\d)/, '$1, $2:$3') // 12.12.2005, 000 => 12.12.2005, 00:0\n        .replace(/^(\\d\\.\\d\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.12.2005123123 => 1.12.2005\n        .replace(/^(\\d\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 01.2.20055125125 => 01.2.2005\n        .replace(/^(\\d)\\.(\\d\\d)([0-9]*)\\.(\\d\\d\\d\\d)/, '$1.$2.$4') // 1.123123.2005 => 1.12.2005\n        .replace(/^(\\d\\.\\d\\.\\d\\d\\d\\d)([0-9]*)/, '$1') // 1.2.20055125125 => 1.2.2005\n        .replace(/^(\\d\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 01..2005123123 => 01..2005\n        .replace(/^(\\d)\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // 1..2005123123 => 1..2005\n        .replace(/^()\\.()\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3') // ..2005123123 => ..2005\n        .replace(/^()\\.(\\d)\\.(\\d\\d\\d\\d)([0-9]*)/, '$1.$2.$3'); // .2.2005123123 => .2.2005\n\nexport const parseTimestampToDate = (timestamp: number): string => {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n\n    let month: number | string = date.getMonth() + 1;\n    let day: number | string = date.getDate();\n\n    if (month < 10) {\n        month = `0${month}`;\n    }\n    if (day < 10) {\n        day = `0${day}`;\n    }\n\n    return `${day}.${month}.${year}`;\n};\n\nexport const getDateWithoutTime = (value: string): Date => {\n    const valueArr = value.split(', ');\n\n    let day;\n    let month;\n    let year;\n\n    if (valueArr[0]) {\n        const date = valueArr[0].split('.');\n\n        [day, month, year] = date;\n    }\n\n    const date = new Date();\n\n    date.setFullYear(Number(year), Number(month) - 1, Number(day));\n    date.setHours(0, 0, 0, 0);\n\n    return date;\n};\n\nexport const getFullDateTime = (value: string): Date => {\n    const valueArr = value.split(', ');\n\n    let day;\n    let month;\n    let year;\n    let hours;\n    let mins;\n\n    if (valueArr[0]) {\n        const date = valueArr[0].split('.');\n\n        [day, month, year] = date;\n    }\n    if (valueArr[1]) {\n        const time = valueArr[1].split(':');\n\n        hours = Number(time[0]);\n        mins = Number(time[1]);\n    }\n\n    const fullDate = new Date();\n\n    fullDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    fullDate.setHours(Number(hours) || 0);\n    fullDate.setMinutes(Number(mins) || 0);\n    fullDate.setSeconds(0);\n    fullDate.setMilliseconds(0);\n\n    return fullDate;\n};\n\nexport const addTimeToDate = (value: string): string => {\n    if (value.length === 10 && dateFnsIsValid(parseDateString(value))) {\n        return `${value}, 00:00`;\n    }\n\n    return value;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_lz1Zt\",\"calendarContainer\":\"calendarContainer_a28Be\",\"calendarResponsive\":\"calendarResponsive_HBfGw\",\"block\":\"block_fKJaX\",\"calendarIcon\":\"calendarIcon_tGsKy\"};","/* eslint-disable no-useless-escape, jsx-a11y/click-events-have-key-events */\n\nimport React, {\n    ChangeEvent,\n    ElementType,\n    FocusEvent,\n    MouseEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport {\n    Calendar as DefaultCalendar,\n    CalendarMobileProps,\n    CalendarProps,\n    dateInLimits,\n} from '@alfalab/core-components-calendar';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { InputProps } from '@alfalab/core-components-input';\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { useDidUpdateEffect } from '@alfalab/hooks';\nimport { CalendarMIcon } from '@alfalab/icons-glyph/CalendarMIcon';\n\nimport {\n    addTimeToDate,\n    DATE_WITH_TIME_LENGTH,\n    format,\n    getDateWithoutTime,\n    getFullDateTime,\n    isCompleteDateInput,\n    isValid,\n    parseTimestampToDate,\n} from '../../utils';\n\nimport styles from './index.module.css';\n\nexport type DateTimeInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popoverClassName?: string;\n\n    /**\n     * Обработчик изменения значения\n     */\n    picker?: boolean;\n\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { date: Date; value: string },\n    ) => void;\n\n    /**\n     * Компонент календаря\n     */\n    Calendar?: ElementType;\n\n    /**\n     * Доп. пропсы для календаря\n     */\n    calendarProps?:\n        | (CalendarProps & Record<string, unknown>)\n        | (CalendarMobileProps & Record<string, unknown>);\n\n    /**\n     * Месяц в календаре по умолчанию (timestamp)\n     */\n    defaultMonth?: number;\n\n    /**\n     * Минимальная дата, доступная для выбора (timestamp)\n     */\n    minDate?: number;\n\n    /**\n     * Максимальная дата, доступная для выбора (timestamp)\n     */\n    maxDate?: number;\n\n    /**\n     * Список событий\n     */\n    events?: Array<Date | number>;\n\n    /**\n     * Список выходных\n     */\n    offDays?: Array<Date | number>;\n\n    /**\n     * Состояние открытия по умолчанию\n     */\n    defaultOpen?: boolean;\n\n    /**\n     * Позиционирование поповера с календарем\n     */\n    popoverPosition?: PopoverProps['position'];\n\n    /**\n     * z-index Popover\n     */\n    zIndexPopover?: PopoverProps['zIndex'];\n\n    /**\n     * Запрещает поповеру менять свою позицию.\n     * Например, если места снизу недостаточно,то он все равно будет показан снизу\n     */\n    preventFlip?: boolean;\n\n    /**\n     * Календарь будет принимать ширину инпута\n     */\n    useAnchorWidth?: boolean;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Отображение компонента в мобильном или десктопном виде\n     */\n    view?: 'desktop' | 'mobile';\n\n    /**\n     * Компонент инпута\n     */\n    InputComponent?: ElementType;\n};\n\nexport const DateTimeInput = React.forwardRef<HTMLInputElement, DateTimeInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            popoverClassName,\n            disabled,\n            readOnly,\n            picker,\n            defaultValue = '',\n            value: propValue,\n            onChange,\n            onComplete,\n            rightAddons,\n            useAnchorWidth,\n            block,\n            popoverPosition = 'bottom-start',\n            zIndexPopover,\n            preventFlip,\n            Calendar = DefaultCalendar,\n            InputComponent,\n            calendarProps = {},\n            defaultMonth,\n            minDate = calendarProps.minDate,\n            maxDate = calendarProps.maxDate,\n            offDays = calendarProps.offDays || [],\n            events = calendarProps.events || [],\n            defaultOpen = false,\n            error,\n            view = 'desktop',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n        const calendarRef = useRef<HTMLDivElement>(null);\n\n        const [value, setValue] = useState(propValue || defaultValue);\n        const [open, setOpen] = useState(false);\n\n        const calendarValue = value ? getDateWithoutTime(value).getTime() : undefined;\n\n        const inputDisabled = disabled || readOnly;\n\n        const calendarResponsive = calendarProps?.responsive ?? true;\n\n        useEffect(() => {\n            setOpen(defaultOpen);\n        }, [defaultOpen]);\n\n        useDidUpdateEffect(() => {\n            const newPropValue = propValue || '';\n\n            setValue((prevValue) => (prevValue === propValue ? prevValue : newPropValue));\n        }, [propValue]);\n\n        const checkInputValueIsValid = (newInputValue?: string) => {\n            if (!newInputValue || error) return false;\n\n            const dateValue = getDateWithoutTime(newInputValue).getTime();\n\n            return (\n                dateValue &&\n                dateInLimits(dateValue, minDate, maxDate) &&\n                !offDays.includes(dateValue)\n            );\n        };\n\n        const setTimeToDate = () => {\n            setValue((prevValue) => {\n                const dateWithTime = addTimeToDate(prevValue);\n\n                if (dateWithTime !== prevValue && dateWithTime.length === DATE_WITH_TIME_LENGTH) {\n                    onComplete?.(null, {\n                        date: getFullDateTime(dateWithTime),\n                        value: dateWithTime,\n                    });\n                }\n\n                return dateWithTime;\n            });\n        };\n\n        const handleInputWrapperFocus = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                if (picker) {\n                    setOpen(true);\n                }\n                if (!open && event.target.tagName !== 'INPUT' && calendarRef.current) {\n                    calendarRef.current.focus();\n                }\n            }\n        };\n\n        const handleBlur = (event: FocusEvent<HTMLDivElement>) => {\n            if (view === 'desktop') {\n                const target = (event.relatedTarget || document.activeElement) as HTMLElement;\n\n                if (calendarRef.current && calendarRef.current.contains(target) === false) {\n                    setOpen(false);\n                    setTimeToDate();\n                }\n            }\n        };\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const { value: newValue } = event.target;\n\n            if (newValue.length > DATE_WITH_TIME_LENGTH) return;\n\n            // Позволяем вводить только цифры, точки, запятую, двоеточие и пробел\n            if (/[^\\d., :]/.test(newValue)) {\n                return;\n            }\n\n            const dots = newValue.match(/\\./g);\n            const colon = newValue.match(/:/g);\n            const comma = newValue.match(/,/g);\n\n            // Не даем вводить больше, чем 2 точки, 1 двоеточие и 1 запятую\n            if (\n                (dots && dots.length > 2) ||\n                (colon && colon.length > 1) ||\n                (comma && comma.length > 1)\n            ) {\n                return;\n            }\n\n            const formattedValue = format(newValue);\n            const date = getFullDateTime(formattedValue);\n\n            setValue(formattedValue);\n\n            if (onChange) onChange(event, { date, value: formattedValue });\n\n            if (isCompleteDateInput(formattedValue)) {\n                const valid = isValid(formattedValue);\n\n                if (!valid) return;\n\n                if (onComplete) {\n                    onComplete(event, { date, value: formattedValue });\n                }\n            }\n        };\n\n        const handleMobileCalendarClose = () => {\n            setOpen(false);\n            setTimeToDate();\n        };\n\n        const handleClear = () => {\n            setValue('');\n        };\n\n        const handleCalendarChange = (date?: number) => {\n            if (date) {\n                const newValue = parseTimestampToDate(date);\n\n                setValue(newValue);\n                onChange?.(null, { date: getFullDateTime(newValue), value: newValue });\n            }\n        };\n\n        const handleCalendarWrapperMouseDown = (event: MouseEvent<HTMLDivElement>) => {\n            // Не дает инпуту терять фокус при выборе даты\n            event.preventDefault();\n        };\n\n        const handleIconButtonClick = () => {\n            if (!open) setOpen(true);\n\n            if (view === 'desktop' && inputRef.current) {\n                inputRef.current.focus();\n            }\n        };\n\n        const renderCalendar = () => (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div onMouseDown={handleCalendarWrapperMouseDown}>\n                <Calendar\n                    {...calendarProps}\n                    responsive={calendarResponsive}\n                    open={open}\n                    onClose={handleMobileCalendarClose}\n                    ref={calendarRef}\n                    defaultMonth={defaultMonth}\n                    value={checkInputValueIsValid(value) ? calendarValue : undefined}\n                    onChange={handleCalendarChange}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    offDays={offDays}\n                    events={events}\n                />\n            </div>\n        );\n\n        return (\n            <div\n                className={cn(styles.component, className, {\n                    [styles.block]: block,\n                })}\n                onFocus={inputDisabled ? undefined : handleInputWrapperFocus}\n                onBlur={handleBlur}\n            >\n                {InputComponent ? (\n                    <InputComponent\n                        {...restProps}\n                        block={block}\n                        ref={mergeRefs([ref, inputRef])}\n                        value={value}\n                        onChange={handleChange}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        className={inputClassName}\n                        onClear={handleClear}\n                        error={error}\n                        rightAddons={\n                            <React.Fragment>\n                                {rightAddons}\n                                {picker && (\n                                    <IconButton\n                                        className={styles.calendarIcon}\n                                        onClick={inputDisabled ? undefined : handleIconButtonClick}\n                                        icon={CalendarMIcon}\n                                        size='s'\n                                    />\n                                )}\n                            </React.Fragment>\n                        }\n                    />\n                ) : null}\n                {picker && (\n                    <Popover\n                        open={open}\n                        useAnchorWidth={useAnchorWidth}\n                        anchorElement={inputRef.current as HTMLElement}\n                        popperClassName={cn(styles.calendarContainer, {\n                            [styles.calendarResponsive]: calendarResponsive,\n                        })}\n                        className={popoverClassName}\n                        position={popoverPosition}\n                        offset={[0, 8]}\n                        withTransition={false}\n                        preventFlip={preventFlip}\n                        zIndex={zIndexPopover}\n                    >\n                        {renderCalendar()}\n                    </Popover>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\nimport { InputDesktop } from '@alfalab/core-components-input/desktop';\n\nimport { DateTimeInput, DateTimeInputProps } from './components/date-time-input/Component';\n\nexport type DateTimeInputDesktopProps = Omit<DateTimeInputProps, 'view' | 'InputComponent'>;\n\nexport const DateTimeInputDesktop = forwardRef<HTMLInputElement, DateTimeInputDesktopProps>(\n    (props, ref) => <DateTimeInput InputComponent={InputDesktop} {...props} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { CalendarMobile } from '@alfalab/core-components-calendar';\nimport { InputMobile } from '@alfalab/core-components-input/mobile';\n\nimport { DateTimeInput, DateTimeInputProps } from './components/date-time-input/Component';\n\nexport type DateTimeInputMobileProps = Omit<DateTimeInputProps, 'view' | 'InputComponent'>;\n\nexport const DateTimeInputMobile = forwardRef<HTMLInputElement, DateTimeInputMobileProps>(\n    (props, ref) => (\n        <DateTimeInput\n            InputComponent={InputMobile}\n            Calendar={CalendarMobile}\n            view='mobile'\n            {...props}\n            ref={ref}\n        />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { InputProps } from '@alfalab/core-components-input';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { DateTimeInputProps } from './components/date-time-input/Component';\nimport { DateTimeInputDesktop } from './Component.desktop';\nimport { DateTimeInputMobile } from './Component.mobile';\n\nexport type DateTimeInputResponsiveProps = Omit<DateTimeInputProps, 'view' | 'InputComponent'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport type DateTimeInputMedia = 'desktop' | 'mobile';\n\nexport const DateTimeInputResponsive = forwardRef<HTMLInputElement, DateTimeInputResponsiveProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<DateTimeInputMedia>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <DateTimeInputDesktop {...restProps} ref={ref} />\n        ) : (\n            <DateTimeInputMobile {...restProps} ref={ref} />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PlKe8\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type DividerProps = {\n    /**\n     * Кастомный класс\n     */\n    className?: string;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n};\n\nexport const Divider: React.FC<DividerProps> = ({ className, dataTestId }) => (\n    <hr className={cn(styles.component, className)} data-test-id={dataTestId} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_vLydz\",\"rightPlacement\":\"rightPlacement_d4tZx\",\"leftPlacement\":\"leftPlacement_Wd_VZ\",\"content\":\"content_RL5Ks\",\"simplebar\":\"simplebar_LXBkN\",\"enterRight\":\"enterRight_vT83w\",\"enterLeft\":\"enterLeft_VN0v7\",\"contentEnter\":\"contentEnter_oL67X\",\"backdropEnter\":\"backdropEnter_m_rL0\",\"enterActive\":\"enterActive_PZUWn\",\"backdropEnterActive\":\"backdropEnterActive_ypABt\",\"backdropEnterDone\":\"backdropEnterDone_xMDIF\",\"contentEnterActive\":\"contentEnterActive_d_n28\",\"exit\":\"exit_POUYD\",\"backdropExit\":\"backdropExit_FgNUz\",\"contentExit\":\"contentExit_CxuT5\",\"exitActiveRight\":\"exitActiveRight_vNDIZ\",\"exitActiveLeft\":\"exitActiveLeft_BfGuc\",\"backdropExitActive\":\"backdropExitActive_Rj6Te\",\"backdropExitDone\":\"backdropExitDone_Aitdr\",\"contentExitActive\":\"contentExitActive_VwIT3\"};","import React, { forwardRef, useMemo } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { TransitionProps } from 'react-transition-group/Transition';\nimport cn from 'classnames';\n\nimport { BaseModal, BaseModalContext, BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { Scrollbar, ScrollbarProps } from '@alfalab/core-components-scrollbar';\n\nimport styles from './index.module.css';\n\nexport const ANIMATION_DURATION = 600;\n\nexport type DrawerProps = Omit<BaseModalProps, 'container'> & {\n    /**\n     * Край экрана, с которого может появиться Drawer.\n     * @default \"right\"\n     */\n    placement?: 'left' | 'right';\n\n    /**\n     * Нужно ли использовать нативный скроллбар\n     * @default true\n     */\n    nativeScrollbar?: boolean;\n\n    /**\n     * Пропсы кастомного скроллбара.\n     */\n    scrollbarProps?: Partial<Omit<ScrollbarProps, 'children'>>;\n\n    /**\n     * Пропсы для анимации контента (CSSTransition)\n     */\n    contentTransitionProps?: Partial<TransitionProps>;\n};\n\nexport const DrawerContext = BaseModalContext;\n\nconst backdropProps = {\n    classNames: {\n        enter: styles.backdropEnter,\n        appear: styles.backdropEnter,\n        enterActive: styles.backdropEnterActive,\n        appearActive: styles.backdropEnterActive,\n        enterDone: styles.backdropEnterDone,\n        appearDone: styles.backdropEnterDone,\n        exit: styles.backdropExit,\n        exitActive: styles.backdropExitActive,\n        exitDone: styles.backdropExitDone,\n    },\n    timeout: ANIMATION_DURATION,\n};\n\nconst contentProps = {\n    classNames: {\n        enter: styles.contentEnter,\n        appear: styles.contentEnter,\n        enterActive: styles.contentEnterActive,\n        appearActive: styles.contentEnterActive,\n        exit: styles.contentExit,\n        exitActive: styles.contentExitActive,\n    },\n    timeout: ANIMATION_DURATION,\n};\n\nexport const Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n    (\n        {\n            open,\n            className,\n            children,\n            contentTransitionProps,\n            nativeScrollbar = true,\n            placement = 'right',\n            scrollbarProps,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const isRightPlacement = placement === 'right';\n        const isLeftPlacement = placement === 'left';\n\n        const transitionProps = useMemo(() => {\n            const enterClassName = cn({\n                [styles.enterRight]: isRightPlacement,\n                [styles.enterLeft]: isLeftPlacement,\n            });\n\n            const exitClassName = cn({\n                [styles.exitActiveRight]: isRightPlacement,\n                [styles.exitActiveLeft]: isLeftPlacement,\n            });\n\n            return {\n                classNames: {\n                    enter: enterClassName,\n                    appear: enterClassName,\n                    enterActive: styles.enterActive,\n                    appearActive: styles.enterActive,\n                    exit: styles.exit,\n                    exitActive: exitClassName,\n                },\n                timeout: ANIMATION_DURATION,\n                ...restProps.transitionProps,\n            };\n        }, [restProps.transitionProps, isLeftPlacement, isRightPlacement]);\n\n        const renderWithNativeScrollbar = () => <div className={styles.content}>{children}</div>;\n\n        const renderWithCustomScrollbar = () => (\n            <Scrollbar\n                {...scrollbarProps}\n                className={cn(styles.simplebar, scrollbarProps?.className)}\n            >\n                {children}\n            </Scrollbar>\n        );\n\n        return (\n            <BaseModal\n                {...restProps}\n                scrollHandler='content'\n                ref={ref}\n                open={open}\n                className={cn(styles.component, className, {\n                    [styles.rightPlacement]: isRightPlacement,\n                    [styles.leftPlacement]: isLeftPlacement,\n                })}\n                transitionProps={transitionProps}\n                backdropProps={{ ...backdropProps, ...restProps.backdropProps }}\n            >\n                <CSSTransition\n                    {...{ ...contentProps, ...contentTransitionProps }}\n                    appear={true}\n                    in={open}\n                >\n                    {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n                </CSSTransition>\n            </BaseModal>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"overlay_SxncF\",\"visible\":\"visible_P3PYx\",\"text\":\"text_pNpuV\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { ContainerMIcon } from '@alfalab/icons-glyph/ContainerMIcon';\n\nimport styles from './index.module.css';\n\nexport type OverlayProps = {\n    /**\n     * Подпись для заглушки\n     */\n    text?: string;\n\n    /**\n     * Управление видимостью\n     */\n    visible?: boolean;\n};\n\nexport const Overlay: FC<OverlayProps> = ({ text = 'Перетащите файлы', visible = false }) => (\n    <div\n        className={cn(styles.overlay, {\n            [styles.visible]: visible,\n        })}\n    >\n        <ContainerMIcon />\n        <span className={styles.text}>{text}</span>\n    </div>\n);\n","export const preventAndStopEvent = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_gxayQ\",\"disabled\":\"disabled_H_DRi\",\"block\":\"block_OXdQR\",\"dragOver\":\"dragOver_HzDtF\",\"error\":\"error_Ky_Dd\"};","import React, { ComponentType, FC, ReactNode, useCallback, useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Overlay as DefaultOverlay, OverlayProps } from './components';\nimport { preventAndStopEvent } from './utils';\n\nimport styles from './index.module.css';\n\nexport type DropzoneProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Подпись для заглушки\n     */\n    text?: string;\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Состояние ошибки\n     */\n    error?: boolean;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * @deprecated(используйте Overlay)\n     * Позволяет вручную управлять видимостью заглушки\n     */\n    overlayVisible?: boolean;\n\n    /**\n     * Компонент оверлея\n     */\n    Overlay?: ComponentType<OverlayProps>;\n\n    /**\n     * Обработчик события 'drop'\n     */\n    onDrop?: (files: FileList) => void;\n\n    /**\n     * Обработчик события 'dragover'\n     */\n    onDragOver?: (event: React.DragEvent<HTMLElement>) => void;\n\n    /**\n     * Обработчик события 'dragleave'\n     */\n    onDragLeave?: (event: React.DragEvent<HTMLElement>) => void;\n\n    /**\n     * Обработчик события 'dragenter'\n     */\n    onDragEnter?: (event: React.DragEvent<HTMLElement>) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Dropzone: FC<DropzoneProps> = ({\n    className,\n    children,\n    text = 'Перетащите файлы',\n    error = false,\n    overlayVisible,\n    Overlay = DefaultOverlay,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n    block = false,\n    disabled,\n    dataTestId,\n}) => {\n    const [dragOver, setDragOver] = useState(false);\n\n    /**\n     * При ховере дочерних элементов срабатывает dragLeave, из-за чего пропадает оверлей\n     * https://stackoverflow.com/a/21002544\n     */\n    const dragCounter = useRef(0);\n\n    const handleDragOver = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            if (onDragOver) {\n                onDragOver(event);\n            }\n        },\n        [onDragOver, disabled],\n    );\n\n    const handleDragEnter = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            dragCounter.current += 1;\n\n            setDragOver(true);\n\n            if (onDragEnter) {\n                onDragEnter(event);\n            }\n        },\n        [disabled, onDragEnter],\n    );\n\n    const handleDragLeave = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            dragCounter.current -= 1;\n\n            if (dragCounter.current > 0) return;\n\n            setDragOver(false);\n\n            if (onDragLeave) {\n                onDragLeave(event);\n            }\n        },\n        [disabled, onDragLeave],\n    );\n\n    const handleDrop = useCallback(\n        (event: React.DragEvent<HTMLElement>) => {\n            preventAndStopEvent(event);\n\n            if (disabled) return;\n\n            setDragOver(false);\n            dragCounter.current = 0;\n\n            if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n                if (onDrop) {\n                    onDrop(event.dataTransfer.files);\n                }\n\n                event.dataTransfer.clearData();\n            }\n        },\n        [disabled, onDrop],\n    );\n\n    return (\n        <div\n            className={cn(styles.component, className, {\n                [styles.dragOver]: dragOver,\n                [styles.error]: error,\n                [styles.block]: block,\n                [styles.disabled]: disabled,\n            })}\n            data-test-id={dataTestId}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n        >\n            {children}\n            {Overlay && <Overlay text={text} visible={Boolean(dragOver || overlayVisible)} />}\n        </div>\n    );\n};\n","import { DocumentDocMIcon } from '@alfalab/icons-glyph/DocumentDocMIcon';\nimport { DocumentImageMIcon } from '@alfalab/icons-glyph/DocumentImageMIcon';\nimport { DocumentPdfMIcon } from '@alfalab/icons-glyph/DocumentPdfMIcon';\nimport { DocumentTxtMIcon } from '@alfalab/icons-glyph/DocumentTxtMIcon';\nimport { DocumentUnknownMIcon } from '@alfalab/icons-glyph/DocumentUnknownMIcon';\n\nexport function humanFileSize(size: string | number) {\n    const units = ['B', 'KB', 'MB', 'GB'];\n\n    let humanSize: string | number = Number(size);\n    let factor = 0;\n\n    while (humanSize >= 1024 && factor < units.length - 1) {\n        humanSize /= 1024;\n        factor += 1;\n    }\n\n    humanSize = humanSize.toFixed(2);\n\n    return `${Number(humanSize)} ${units[factor]}`;\n}\n\nexport const getExtension = (filename: string) => filename.toLowerCase().split('.').pop();\n\nexport function fileIcon(filename: string) {\n    const extension = getExtension(filename);\n\n    switch (extension) {\n        case 'png':\n        case 'jpg':\n        case 'jpeg':\n        case 'svg':\n        case 'tif':\n        case 'tiff':\n            return DocumentImageMIcon;\n        case 'doc':\n        case 'docx':\n            return DocumentDocMIcon;\n        case 'pdf':\n            return DocumentPdfMIcon;\n        case 'txt':\n            return DocumentTxtMIcon;\n        default:\n            return DocumentUnknownMIcon;\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_x47Zs\",\"infoSection\":\"infoSection_vdwqI\",\"info\":\"info_QU4jX\",\"icon\":\"icon_k4SCL\",\"errorIcon\":\"errorIcon_mkXou\",\"successIcon\":\"successIcon_GqLC2\",\"name\":\"name_JBDKh\",\"meta\":\"meta_DZ6GZ\",\"size\":\"size_Ii2Ll\",\"delete\":\"delete_ef9Y3\",\"download\":\"download__UqIP\",\"errorWrapper\":\"errorWrapper_Mq9f8\",\"restore\":\"restore_MW4yX\",\"spinnerWrapper\":\"spinnerWrapper_vDeny\",\"spinner\":\"spinner_gYDql\",\"uploadPercent\":\"uploadPercent_F867z\"};","import React, { ElementType, MouseEvent, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { Link } from '@alfalab/core-components-link';\nimport { Spinner } from '@alfalab/core-components-spinner';\nimport { AlertCircleMIcon } from '@alfalab/icons-glyph/AlertCircleMIcon';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { ClockMIcon } from '@alfalab/icons-glyph/ClockMIcon';\nimport { CrossSIcon } from '@alfalab/icons-glyph/CrossSIcon';\nimport { PointerDownSIcon } from '@alfalab/icons-glyph/PointerDownSIcon';\n\nimport { fileIcon, humanFileSize } from './utils';\n\nimport styles from './index.module.css';\n\nexport type FileStatuses = 'ERROR' | 'SUCCESS' | 'LOADING' | 'UPLOADING';\n\nexport type FileUploadItemProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор элемента\n     */\n    id?: string;\n\n    /**\n     * Имя файла с расширением\n     */\n    name?: string;\n\n    /**\n     * Размер файла\n     */\n    size?: string | number;\n\n    /**\n     * Дата загрузки файла\n     */\n    uploadDate?: string;\n\n    /**\n     * Ссылка на файл. Если прокидывается этот параметр, то появляется кнопка скачивания\n     */\n    downloadLink?: string;\n\n    /**\n     * Рекомендует браузеру скачивать контент по ссылке.\n     * В проп может быть передано рекомендуемое название скачиваемого файла.\n     */\n    download?: string | true;\n\n    /**\n     * Отображение кнопки удаления\n     */\n    showDelete?: boolean;\n\n    /**\n     * Отображение кнопки восстановления\n     */\n    showRestore?: boolean;\n\n    /**\n     * Процент загрузки файла\n     */\n    uploadPercent?: number;\n\n    /**\n     * Статус загрузки файла\n     */\n    uploadStatus?: FileStatuses;\n\n    /**\n     * Сообщение об ошибке\n     */\n    error?: ReactNode;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Компонент кастомной иконки\n     */\n    icon?: ElementType<{ className?: string }>;\n\n    /**\n     * Обработчик загрузки файла\n     */\n    onDownload?: (id: string) => void;\n\n    /**\n     * Обработчик удаления файла\n     */\n    onDelete?: (id: string) => void;\n\n    /**\n     * Обработчик восстановления файла\n     */\n    onRestore?: (id: string) => void;\n\n    /**\n     * Управление активностью кнопок\n     */\n    disableButtons?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const FileUploadItem: React.FC<FileUploadItemProps> = ({\n    className,\n    children,\n    id = '0',\n    name = '',\n    size,\n    icon: Icon = fileIcon(name),\n    uploadDate,\n    downloadLink,\n    download,\n    uploadStatus,\n    uploadPercent = 0,\n    error,\n    showDelete,\n    showRestore,\n    onDelete,\n    onDownload,\n    onRestore,\n    disableButtons,\n    dataTestId,\n}) => {\n    const handleDownload = (event: MouseEvent<HTMLElement>) => {\n        if (onDownload) {\n            event.preventDefault();\n            onDownload(id);\n        }\n    };\n\n    const handleDelete = () => {\n        if (onDelete) onDelete(id);\n    };\n\n    const handleRestore = () => {\n        if (onRestore) onRestore(id);\n    };\n\n    const renderIcon = () => {\n        if (showRestore) {\n            return <ClockMIcon className={styles.restoreIcon} />;\n        }\n\n        switch (uploadStatus) {\n            case 'ERROR':\n                return <AlertCircleMIcon className={styles.errorIcon} />;\n            case 'SUCCESS':\n                return <CheckmarkCircleMIcon className={styles.successIcon} />;\n            case 'LOADING':\n            case 'UPLOADING':\n                return (\n                    <div className={styles.spinnerWrapper}>\n                        <Spinner visible={true} className={styles.spinner} />\n                    </div>\n                );\n            default: {\n                return <Icon className={styles.icon} />;\n            }\n        }\n    };\n\n    const renderInfoSection = () => {\n        const shouldShownError = uploadStatus === 'ERROR' || !!error;\n        const errorContent =\n            uploadStatus === 'ERROR' && !error ? 'Не удалось загрузить файл' : error;\n\n        return (\n            <div className={styles.infoSection}>\n                <div className={styles.name}>{name}</div>\n\n                {shouldShownError && (\n                    <div className={styles.errorWrapper} role='alert'>\n                        {errorContent}\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    const showMeta = !showRestore && (!uploadStatus || uploadStatus === 'SUCCESS');\n    const showDownload = Boolean(downloadLink) && !showRestore;\n\n    return (\n        <div\n            className={cn(\n                className,\n                styles.component,\n                uploadStatus && styles[uploadStatus.toLocaleLowerCase()],\n            )}\n            data-test-id={dataTestId}\n        >\n            <div className={styles.info}>\n                {renderIcon()}\n\n                {renderInfoSection()}\n\n                {children}\n\n                {uploadStatus === 'UPLOADING' && (\n                    <span className={styles.uploadPercent}>{`${Math.round(uploadPercent)}%`}</span>\n                )}\n\n                {showMeta && (\n                    <div className={styles.meta}>\n                        {uploadDate && <span key={uploadDate}>{uploadDate}</span>}\n\n                        {size && (\n                            <span key={size} className={styles.size}>\n                                {humanFileSize(size)}\n                            </span>\n                        )}\n                    </div>\n                )}\n            </div>\n\n            {showRestore && (\n                <Link pseudo={true} className={styles.restore} onClick={handleRestore}>\n                    Восстановить\n                </Link>\n            )}\n\n            {showDownload && (\n                <IconButton\n                    size='xxs'\n                    icon={PointerDownSIcon}\n                    className={styles.download}\n                    aria-label='скачать'\n                    href={downloadLink}\n                    onClick={handleDownload}\n                    disabled={disableButtons}\n                    download={download}\n                />\n            )}\n\n            {showDelete && !showRestore && (\n                <IconButton\n                    size='xxs'\n                    icon={CrossSIcon}\n                    onClick={handleDelete}\n                    disabled={disableButtons}\n                    className={styles.delete}\n                    aria-label='удалить'\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_hafUw\",\"rectangular\":\"rectangular_fKMik\",\"xxs\":\"xxs_haxXH\",\"xs\":\"xs__u9RT\",\"s\":\"s_C9knK\",\"checked\":\"checked_TDOr3\",\"disabled\":\"disabled_rDSBM\",\"valueButton\":\"valueButton_RHyrG\",\"filled\":\"filled_E0fxA\",\"close\":\"close_NsDJN\",\"clear\":\"clear_rNb9t\"};","import React, { forwardRef } from 'react';\n\nimport { BaseFilterTag, BaseFilterTagProps } from './components/base-filter-tag';\n\nimport styles from './desktop.module.css';\n\nexport type FilterTagDesktopProps = Omit<BaseFilterTagProps, 'styles'>;\n\nexport const FilterTagDesktop = forwardRef<HTMLDivElement, FilterTagDesktopProps>(\n    (restProps, ref) => <BaseFilterTag {...restProps} ref={ref} styles={styles} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Hj4KB\",\"rectangular\":\"rectangular_ix0V6\",\"xxs\":\"xxs_BNqqF\",\"xs\":\"xs_i_xgr\",\"s\":\"s_hSF3d\",\"checked\":\"checked_twVvB\",\"disabled\":\"disabled_xx6WO\",\"valueButton\":\"valueButton_KVBSg\",\"filled\":\"filled_ZQkVB\",\"close\":\"close_DGuHX\",\"clear\":\"clear_iHlEC\"};","import React, { forwardRef } from 'react';\n\nimport { BaseFilterTag, BaseFilterTagProps } from './components/base-filter-tag';\n\nimport styles from './mobile.module.css';\n\nexport type FilterTagMobileProps = Omit<BaseFilterTagProps, 'styles'>;\n\nexport const FilterTagMobile = forwardRef<HTMLDivElement, FilterTagMobileProps>(\n    (restProps, ref) => <BaseFilterTag {...restProps} ref={ref} styles={styles} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseFilterTagProps } from './components/base-filter-tag';\nimport { FilterTagDesktop } from './Component.desktop';\nimport { FilterTagMobile } from './Component.mobile';\n\nexport type FilterTagProps = Omit<BaseFilterTagProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const FilterTag = forwardRef<HTMLDivElement, FilterTagProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? FilterTagDesktop : FilterTagMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_DIoeq\",\"disabled\":\"disabled_czMWG\",\"rounded\":\"rounded_zBuYW\",\"xxs\":\"xxs_dNX_6\",\"xs\":\"xs_gry_n\",\"s\":\"s_yNyG4\",\"checked\":\"checked_f8Ar7\",\"focused\":\"focused_TiKkL\",\"chevron\":\"chevron_jjPn_\",\"valueButton\":\"valueButton_qrxaV\",\"outlined\":\"outlined_FHpeK\",\"filled\":\"filled_t6TNq\",\"open\":\"open_fl6jy\",\"close\":\"close_WwwW0\",\"clear\":\"clear_xzlTi\",\"iconWrapper\":\"iconWrapper_rvc8l\"};","import React, { forwardRef, KeyboardEvent, MouseEvent, ReactNode, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { ChevronDownCompactSIcon } from '@alfalab/icons-glyph/ChevronDownCompactSIcon';\nimport { ChevronDownMIcon } from '@alfalab/icons-glyph/ChevronDownMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossCircleSIcon } from '@alfalab/icons-glyph/CrossCircleSIcon';\n\nimport commonStyles from './index.module.css';\n\nexport type BaseFilterTagProps = {\n    /**\n     * Состояние выбора\n     */\n    checked?: boolean;\n\n    /**\n     * Состояние открытия\n     */\n    open?: boolean;\n\n    /**\n     * Состояние блокировки\n     */\n    disabled?: boolean;\n\n    /**\n     * Обработчик клика\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик очистки\n     */\n    onClear?: () => void;\n\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Показывать крестик для очистки выбора\n     */\n    showClear?: boolean;\n\n    /**\n     * @deprecated данный проп больше не используется, временно оставлен для обратной совместимости\n     * Используйте props shape и view\n     * Вариант тега\n     */\n    variant?: 'default' | 'alt';\n\n    /**\n     * Форма тега\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Стиль тега\n     */\n    view?: 'outlined' | 'filled';\n\n    /**\n     * Основные стили компонента.\n     */\n    styles?: { [key: string]: string };\n};\n\nconst isKeyBoardEvent = (\n    event: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>,\n): event is KeyboardEvent<HTMLDivElement> =>\n    (event as KeyboardEvent<HTMLDivElement>).key !== undefined;\n\nexport const BaseFilterTag = forwardRef<HTMLDivElement, BaseFilterTagProps>(\n    (\n        {\n            children,\n            checked,\n            disabled,\n            open,\n            onClick,\n            size = 's',\n            variant = 'default',\n            shape,\n            view = 'outlined',\n            onClear = () => null,\n            showClear = true,\n            className,\n            dataTestId,\n            styles = {},\n        },\n        ref,\n    ) => {\n        const valueRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(valueRef, 'keyboard');\n\n        const handleClear = (event: MouseEvent<HTMLDivElement> | KeyboardEvent<HTMLDivElement>) => {\n            event.stopPropagation();\n\n            if (isKeyBoardEvent(event)) {\n                const clickSimilarKeys = ['Enter'].includes(event.key);\n\n                if (clickSimilarKeys) onClear();\n\n                return;\n            }\n\n            onClear();\n        };\n\n        const variantClassName = variant === 'default' ? 'rounded' : 'rectangular';\n\n        const shapeClassName = shape || variantClassName;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n            <div\n                className={cn(\n                    className,\n                    commonStyles.component,\n                    commonStyles[shapeClassName],\n                    commonStyles[size],\n                    styles.component,\n                    styles[shapeClassName],\n                    styles[size],\n                    {\n                        [commonStyles.checked]: checked,\n                        [styles.checked]: checked,\n                        [commonStyles.disabled]: disabled,\n                        [styles.disabled]: disabled,\n                        [commonStyles.focused]: focused,\n                        [commonStyles.open]: open,\n                    },\n                )}\n                ref={ref}\n                data-test-id={dataTestId}\n                onClick={disabled ? undefined : onClick}\n            >\n                <button\n                    type='button'\n                    ref={valueRef}\n                    disabled={disabled}\n                    className={cn(\n                        commonStyles.valueButton,\n                        styles.valueButton,\n                        commonStyles[size],\n                        styles[size],\n                        commonStyles[shapeClassName],\n                        styles[shapeClassName],\n                        commonStyles[view],\n                        {\n                            [styles[view]]: Boolean(styles[view]),\n                            [commonStyles.checked]: checked,\n                            [styles.checked]: checked,\n                            [commonStyles.open]: open,\n                            [commonStyles.close]: !showClear,\n                            [styles.close]: !showClear,\n                        },\n                    )}\n                >\n                    <span>{children}</span>\n                    <span className={commonStyles.chevron}>\n                        {size === 'xxs' ? <ChevronDownCompactSIcon /> : <ChevronDownMIcon />}\n                    </span>\n                </button>\n\n                {checked && !disabled && showClear && (\n                    <div\n                        role='button'\n                        className={cn(\n                            commonStyles.clear,\n                            styles.clear,\n                            commonStyles[size],\n                            styles[size],\n                            styles[shapeClassName],\n                            commonStyles[shapeClassName],\n                        )}\n                        onClick={handleClear}\n                        onKeyDown={handleClear}\n                        tabIndex={0}\n                    >\n                        <span className={commonStyles.iconWrapper}>\n                            {size === 'xxs' ? <CrossCircleSIcon /> : <CrossCircleMIcon />}\n                        </span>\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"above\":\"above_PEN6D\",\"sub\":\"sub_SFuVC\",\"error\":\"error_kARxz\",\"s\":\"s_b0iE8\",\"inner\":\"inner_It6I5\",\"m\":\"m_EhEMb\",\"l\":\"l_Ndbk3\",\"xl\":\"xl_zQjHA\"};","import React, { forwardRef } from 'react';\n\nimport { BaseFormControl, BaseFormControlProps } from './components/base-form-control';\n\nimport defaultColors from './default.desktop.module.css';\nimport styles from './desktop.module.css';\nimport invertedColors from './inverted.desktop.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type FormControlDesktopProps = Omit<BaseFormControlProps, 'styles' | 'colorStyles'>;\n\nexport const FormControlDesktop = forwardRef<HTMLDivElement, FormControlDesktopProps>(\n    (restProps, ref) => (\n        <BaseFormControl {...restProps} ref={ref} styles={styles} colorStyles={colorStyles} />\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"inner\":\"inner_h8Tsz\",\"disabled\":\"disabled_YVLdD\",\"hasError\":\"hasError_gXhVd\",\"focused\":\"focused__I4ea\"};","// extracted by mini-css-extract-plugin\nexport default {\"inner\":\"inner_la6R_\",\"disabled\":\"disabled_hS9cY\",\"hasError\":\"hasError_kfWTA\",\"focused\":\"focused_cEif3\"};","// extracted by mini-css-extract-plugin\nexport default {\"above\":\"above_N61tu\",\"sub\":\"sub_mLJ3g\",\"error\":\"error_EwZag\",\"s\":\"s_ZrKeh\",\"inner\":\"inner_AcgFT\",\"m\":\"m_gcQvb\",\"l\":\"l_Bg2d0\",\"xl\":\"xl_Pdcr9\"};","import React, { forwardRef } from 'react';\n\nimport { BaseFormControl, BaseFormControlProps } from './components/base-form-control';\n\nimport defaultColors from './default.mobile.module.css';\nimport invertedColors from './inverted.mobile.module.css';\nimport styles from './mobile.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type FormControlMobileProps = Omit<BaseFormControlProps, 'styles' | 'colorStyles'>;\n\nexport const FormControlMobile = forwardRef<HTMLDivElement, FormControlMobileProps>(\n    (restProps, ref) => (\n        <BaseFormControl {...restProps} ref={ref} styles={styles} colorStyles={colorStyles} />\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"inner\":\"inner_eto97\",\"disabled\":\"disabled_FBsNf\",\"hasError\":\"hasError_eeBJD\",\"focused\":\"focused_tZKqv\"};","// extracted by mini-css-extract-plugin\nexport default {\"inner\":\"inner_Y4ZRH\",\"disabled\":\"disabled_OL0KF\",\"hasError\":\"hasError_VXAXZ\",\"focused\":\"focused_NX8E8\"};","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseFormControlProps } from './components/base-form-control';\nimport { FormControlDesktop } from './Component.desktop';\nimport { FormControlMobile } from './Component.mobile';\n\nexport type FormControlProps = Omit<BaseFormControlProps, 'styles' | 'colorStyles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n\n    /**\n     * Значение по-умолчанию для хука useMatchMedia\n     */\n    defaultMatchMediaValue?: boolean | (() => boolean);\n};\n\nexport const FormControl = forwardRef<HTMLDivElement, FormControlProps>(\n    ({ breakpoint = 1024, defaultMatchMediaValue, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue);\n\n        const Component = isDesktop ? FormControlDesktop : FormControlMobile;\n\n        return <Component ref={ref} {...restProps} />;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UmDJO\",\"inner\":\"inner_yDVeG\",\"inputWrapper\":\"inputWrapper_RACHA\",\"input\":\"input_M2go7\",\"label\":\"label_no1wl\",\"labelInner\":\"labelInner_d5ogK\",\"addons\":\"addons__lWB3\",\"leftAddons\":\"leftAddons_Qf8E_\",\"rightAddons\":\"rightAddons_d0QnE\",\"sub\":\"sub_PwVm0\",\"above\":\"above_Y_ViB\",\"block\":\"block_iUxMz\",\"s\":\"s_gW461\",\"hasInnerLabel\":\"hasInnerLabel_Pje9S\",\"m\":\"m_o1_Xh\",\"l\":\"l_RdqVp\",\"xl\":\"xl_nKK5S\",\"hasLeftAddons\":\"hasLeftAddons_B1f_M\",\"hasRightAddons\":\"hasRightAddons_ZZKOG\",\"disabled\":\"disabled_UxDEw\",\"focused\":\"focused_GIAsm\",\"hasError\":\"hasError_ds_oQ\",\"filled\":\"filled_M8Zce\",\"hiddenLabel\":\"hiddenLabel_wY5Yq\"};","import React, { HTMLAttributes, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport defaultColors from './default.module.css';\nimport commonStyles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorCommonStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type StyleColors = {\n    default: {\n        [key: string]: string;\n    };\n    inverted: {\n        [key: string]: string;\n    };\n};\n\nexport type BaseFormControlProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Cостояние только для чтения\n     */\n    readOnly?: boolean;\n\n    /**\n     * Заполненное состояние\n     */\n    filled?: boolean;\n\n    /**\n     * Выбранное (фокус) состояние\n     */\n    focused?: boolean;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Текст подсказки\n     */\n    hint?: ReactNode;\n\n    /**\n     * Лейбл компонента\n     */\n    label?: ReactNode;\n\n    /**\n     * Вид лейбла внутри / снаружи\n     */\n    labelView?: 'inner' | 'outer';\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Слот под полем\n     */\n    bottomAddons?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    fieldClassName?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    inputWrapperClassName?: string;\n\n    /**\n     * Дополнительный класс для лейбла\n     */\n    labelClassName?: string;\n\n    /**\n     * Дополнительный класс для аддонов\n     */\n    addonsClassName?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Компонент поля (инпут, textarea и пр.)\n     */\n    children?: ReactNode;\n\n    /**\n     * Основные стили компонента.\n     */\n    styles: { [key: string]: string };\n\n    /**\n     * Стили компонента для default и inverted режима.\n     */\n    colorStyles?: StyleColors;\n};\n\nexport const BaseFormControl = React.forwardRef<HTMLDivElement, BaseFormControlProps>(\n    (\n        {\n            block = false,\n            size = 's',\n            colors = 'default',\n            className,\n            fieldClassName,\n            inputWrapperClassName,\n            labelClassName,\n            addonsClassName,\n            disabled,\n            readOnly,\n            focused,\n            filled,\n            error,\n            hint,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            rightAddons,\n            bottomAddons,\n            children,\n            dataTestId,\n            styles,\n            colorStyles = { default: {}, inverted: {} },\n            ...restProps\n        },\n        ref,\n    ) => {\n        const errorMessage = typeof error === 'boolean' ? '' : error;\n\n        return (\n            <div\n                data-test-id={dataTestId}\n                className={cn(\n                    commonStyles.component,\n                    colorCommonStyles[colors].component,\n                    className,\n                    commonStyles[size],\n                    styles[size],\n                    {\n                        [commonStyles.block]: block,\n                        [commonStyles.hasLeftAddons]: leftAddons,\n                        [commonStyles.hasRightAddons]: rightAddons || error,\n                    },\n                )}\n            >\n                {label && labelView === 'outer' && (\n                    <span\n                        className={cn(\n                            commonStyles.above,\n                            styles.above,\n                            colorCommonStyles[colors].label,\n                        )}\n                    >\n                        {label}\n                    </span>\n                )}\n                <div\n                    {...restProps}\n                    className={cn(\n                        fieldClassName,\n                        commonStyles.inner,\n                        styles.inner,\n                        colorCommonStyles[colors].inner,\n                        colorStyles[colors].inner,\n                        {\n                            [commonStyles.disabled]: disabled || readOnly,\n                            [colorCommonStyles[colors].disabled]: disabled || readOnly,\n                            [colorStyles[colors].disabled]: disabled || readOnly,\n                            [commonStyles.filled]: filled,\n                            [colorCommonStyles[colors].filled]: filled,\n                            [commonStyles.hasInnerLabel]: label && labelView === 'inner',\n                            [commonStyles.focused]: focused,\n                            [colorCommonStyles[colors].focused]: focused,\n                            [colorStyles[colors].focused]: focused,\n                            [commonStyles.hasError]: error,\n                            [colorCommonStyles[colors].hasError]: error,\n                            [colorStyles[colors].hasError]: error,\n                        },\n                    )}\n                    ref={ref}\n                >\n                    {leftAddons && (\n                        <div\n                            className={cn(\n                                commonStyles.addons,\n                                commonStyles.leftAddons,\n                                addonsClassName,\n                            )}\n                        >\n                            {leftAddons}\n                        </div>\n                    )}\n\n                    <div className={cn(commonStyles.inputWrapper, inputWrapperClassName)}>\n                        {label && labelView === 'inner' && (\n                            <React.Fragment>\n                                <span className={commonStyles.hiddenLabel} aria-hidden={true}>\n                                    {label}\n                                </span>\n                                <div\n                                    className={cn(\n                                        commonStyles.label,\n                                        colorCommonStyles[colors].label,\n                                        labelClassName,\n                                    )}\n                                >\n                                    <span className={commonStyles.labelInner}>{label}</span>\n                                </div>\n                            </React.Fragment>\n                        )}\n\n                        <div className={commonStyles.input}>{children}</div>\n                    </div>\n\n                    {rightAddons && (\n                        <div\n                            className={cn(\n                                commonStyles.addons,\n                                commonStyles.rightAddons,\n                                addonsClassName,\n                            )}\n                        >\n                            {rightAddons}\n                        </div>\n                    )}\n                </div>\n                {bottomAddons}\n\n                {errorMessage && (\n                    <span\n                        className={cn(\n                            commonStyles.sub,\n                            styles.error,\n                            colorCommonStyles[colors].error,\n                        )}\n                        role='alert'\n                    >\n                        {errorMessage}\n                    </span>\n                )}\n\n                {hint && !errorMessage && (\n                    <span\n                        className={cn(commonStyles.sub, styles.sub, colorCommonStyles[colors].hint)}\n                    >\n                        {hint}\n                    </span>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_d11gA\",\"label\":\"label_tvLnw\",\"hint\":\"hint_jqcnC\",\"disabled\":\"disabled_Nvj8G\",\"filled\":\"filled_PWKMy\",\"focused\":\"focused_vg1iI\",\"hasError\":\"hasError_DOlJb\",\"error\":\"error_B34yg\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_KGql3\",\"label\":\"label_hhrMj\",\"hint\":\"hint_lHRqI\",\"disabled\":\"disabled_LoRMX\",\"filled\":\"filled_KDoaw\",\"focused\":\"focused_VcWH6\",\"hasError\":\"hasError_A9jUi\",\"error\":\"error_xyuW2\"};","// extracted by mini-css-extract-plugin\nexport default {\"gap\":\"gap_t03go\",\"vertical\":\"vertical_IPAUH\",\"horizontal\":\"horizontal_g8xV3\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Size =\n    | '3xs'\n    | '2xs'\n    | 'xs'\n    | 's'\n    | 'm'\n    | 'l'\n    | 'xl'\n    | '2xl'\n    | '3xl'\n    | '4xl'\n    | '5xl'\n    | '6xl'\n    | '7xl'\n    | '8xl';\n\nexport type GapProps = {\n    /**\n     * Размер отступа\n     */\n    size: Size;\n\n    /**\n     * Вид отступа (вертикальный или горизонтальный)\n     * @default - 'vertical'\n     */\n    direction?: 'horizontal' | 'vertical';\n\n    /**\n     * HTML тег\n     * @default 'div'\n     */\n    tag?: 'div' | 'span';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Gap = ({\n    size,\n    direction = 'vertical',\n    tag: Component = 'div',\n    className,\n    dataTestId,\n}: GapProps) => (\n    <Component\n        data-test-id={dataTestId}\n        data-gap-size={size}\n        className={cn(styles.gap, styles[direction], className)}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_IJ2MC\",\"column\":\"column_YN5Ec\",\"align-stretch\":\"align-stretch_VDwAD\",\"align-start\":\"align-start_MsMLb\",\"align-end\":\"align-end_US8BN\",\"align-center\":\"align-center_iaSQx\",\"align-baseline\":\"align-baseline_syFgd\",\"justify-center\":\"justify-center_LFKb0\",\"justify-between\":\"justify-between_V4_Kx\",\"justify-around\":\"justify-around_GtrD6\",\"justify-evenly\":\"justify-evenly_xmiIO\",\"justify-start\":\"justify-start_wnJoR\",\"justify-end\":\"justify-end_sw3KC\",\"grow\":\"grow_vcTO_\",\"padding-top-3xs\":\"padding-top-3xs_B30Ey\",\"padding-top-2xs\":\"padding-top-2xs_Nh726\",\"padding-top-xs\":\"padding-top-xs_kbaNM\",\"padding-top-s\":\"padding-top-s_TawHU\",\"padding-top-m\":\"padding-top-m_YhyTm\",\"padding-top-l\":\"padding-top-l_yvMtE\",\"padding-top-xl\":\"padding-top-xl_jwnWx\",\"padding-right-3xs\":\"padding-right-3xs_fMni2\",\"padding-right-2xs\":\"padding-right-2xs_G6ugp\",\"padding-right-xs\":\"padding-right-xs_SPOcH\",\"padding-right-s\":\"padding-right-s_aWpRd\",\"padding-right-m\":\"padding-right-m_j6lMI\",\"padding-right-l\":\"padding-right-l_wzVE_\",\"padding-right-xl\":\"padding-right-xl_T5D5k\",\"padding-bottom-3xs\":\"padding-bottom-3xs_JOWec\",\"padding-bottom-2xs\":\"padding-bottom-2xs_xVsZM\",\"padding-bottom-xs\":\"padding-bottom-xs_zwYk_\",\"padding-bottom-s\":\"padding-bottom-s_exaVf\",\"padding-bottom-m\":\"padding-bottom-m_lFSb8\",\"padding-bottom-l\":\"padding-bottom-l_VUxWf\",\"padding-bottom-xl\":\"padding-bottom-xl_vsMp4\",\"padding-left-3xs\":\"padding-left-3xs_l46Hb\",\"padding-left-2xs\":\"padding-left-2xs_F0jao\",\"padding-left-xs\":\"padding-left-xs_obXQm\",\"padding-left-s\":\"padding-left-s_saR4k\",\"padding-left-m\":\"padding-left-m_tdjUU\",\"padding-left-l\":\"padding-left-l_twxEe\",\"padding-left-xl\":\"padding-left-xl_Nausb\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { GapProps } from '@alfalab/core-components-gap';\n\nimport styles from './index.module.css';\n\nexport type ReducedGapType = Omit<\n    GapProps['size'],\n    '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl'\n>;\n\nexport type PaddingPropType = {\n    top?: ReducedGapType;\n    right?: ReducedGapType;\n    bottom?: ReducedGapType;\n    left?: ReducedGapType;\n};\n\nexport type GenericWrapperProps = {\n    /**\n     * Дочерние элементы.\n     */\n    children: ReactNode;\n\n    /**\n     * Свойство управляет направлением основной оси внутри флекс-контейнера\n     */\n    column?: boolean;\n\n    /**\n     * Внутренние отступы\n     */\n    padding?: PaddingPropType;\n\n    /**\n     * Свойство для выравнивания элементов внутри контейнера по поперечной оси.\n     */\n    alignItems?: 'stretch' | 'end' | 'start' | 'center' | 'baseline';\n\n    /**\n     * Свойство выравнивает флекс-элементы внутри флекс-контейнера по основной оси.\n     */\n    justifyContent?: 'between' | 'around' | 'evenly' | 'center' | 'start' | 'end';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Позволяет заполнить всё доступное пространство родительского элемента.\n     */\n    grow?: boolean;\n};\n\nexport const GenericWrapper = ({\n    children,\n    padding,\n    alignItems,\n    justifyContent,\n    className,\n    dataTestId,\n    column = false,\n    grow = false,\n}: GenericWrapperProps) => {\n    const paddingStyles = padding && {\n        [styles[`padding-top-${padding.top}`]]: padding.top,\n        [styles[`padding-right-${padding.right}`]]: padding.right,\n        [styles[`padding-bottom-${padding.bottom}`]]: padding.bottom,\n        [styles[`padding-left-${padding.left}`]]: padding.left,\n    };\n    const alignmentStyles = alignItems && styles[`align-${alignItems}`];\n    const justifyContentStyles = justifyContent && styles[`justify-${justifyContent}`];\n    const growStyles = grow && styles.grow;\n    const columnsStyles = column && styles.column;\n\n    return (\n        <div\n            className={cn(\n                styles.component,\n                columnsStyles,\n                alignmentStyles,\n                paddingStyles,\n                justifyContentStyles,\n                growStyles,\n                className,\n            )}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n","export type SavedStyle = {\n    value: string;\n    key: string;\n    el: HTMLElement;\n};\n\ntype RestoreStyle = {\n    container: HTMLElement;\n    modals: number;\n    styles: SavedStyle[];\n};\n\nexport class ModalStore {\n    private readonly restoreStyles: RestoreStyle[];\n\n    constructor() {\n        this.restoreStyles = [];\n    }\n\n    getRestoreStyles = () => this.restoreStyles;\n}\n","import { ModalStore } from './ModalStore';\n\nexport class GlobalStore {\n    private readonly modalStore: ModalStore;\n\n    constructor() {\n        this.modalStore = new ModalStore();\n    }\n\n    getModalStore = () => this.modalStore;\n}\n","import { GlobalStore } from './GlobalStore';\nimport { ModalStore, SavedStyle } from './ModalStore';\n\nexport type { SavedStyle };\n\nconst getCoreComponentsStore = (): GlobalStore => {\n    if (!window.coreComponentsStore) {\n        window.coreComponentsStore = new GlobalStore();\n\n        return window.coreComponentsStore;\n    }\n\n    return window.coreComponentsStore;\n};\n\nexport const getModalStore = (): ModalStore => getCoreComponentsStore().getModalStore();\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_Ko3hQ\",\"hatch\":\"hatch_BSCyW\",\"filled\":\"filled_W7uye\",\"positive\":\"positive_zjmGh\",\"attention\":\"attention_tCtBQ\",\"negative\":\"negative_M8h9I\",\"link\":\"link_a5i6v\",\"tertiary\":\"tertiary_I6Spr\",\"secondary\":\"secondary_cUgeC\",\"primary\":\"primary_gRkuF\",\"accent\":\"accent_Q8lOm\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type HatchingProgressBarProps = {\n    /**\n     * Значение заполненной части 0-100\n     */\n    value: number;\n\n    /**\n     * Значение будущей заполненной части 0-100\n     */\n    hatchValue: number;\n\n    /**\n     * Css-класс для стилизации\n     */\n    className?: string;\n\n    /**\n     * Цвет заполнения\n     */\n    view?:\n        | 'positive'\n        | 'negative'\n        | 'attention'\n        | 'link'\n        | 'tertiary'\n        | 'secondary'\n        | 'primary'\n        | 'accent';\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n};\n\nexport const HatchingProgressBar = React.forwardRef<HTMLDivElement, HatchingProgressBarProps>(\n    ({ className, value, hatchValue, view = 'positive', dataTestId }, ref) => (\n        <div\n            role='progressbar'\n            aria-valuenow={Math.round(value)}\n            aria-valuemin={0}\n            aria-valuemax={100}\n            className={cn(styles.container, className)}\n            data-test-id={dataTestId}\n            ref={ref}\n        >\n            <div\n                className={styles.hatch}\n                style={{ transform: `translateX(${hatchValue - 100}%)` }}\n            />\n            <div\n                className={cn(styles.filled, styles[view])}\n                style={{ transform: `translateX(${value - 100}%)` }}\n            />\n        </div>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"xxs\":\"xxs_UlGqR\",\"xs\":\"xs_lUVWU\",\"s\":\"s_ioNgg\",\"iconWrapper\":\"iconWrapper_Qmq5c\",\"center\":\"center_qMRzh\",\"left\":\"left_laRGY\",\"right\":\"right_CvqHm\",\"icon\":\"icon__huU2\"};","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes, ElementType, forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type IconButtonProps = {\n    /**\n     * Компонент иконки\n     */\n    icon: ElementType<{ className?: string }>;\n\n    /**\n     * Тип кнопки\n     */\n    view?: 'primary' | 'secondary' | 'transparent' | 'tertiary' | 'negative';\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Выравнивание иконки\n     * @default 'center'\n     */\n    alignIcon?: 'left' | 'center' | 'right';\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n} & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'size'> &\n    Pick<ButtonProps, 'href' | 'loading'> &\n    Pick<AnchorHTMLAttributes<HTMLAnchorElement>, 'target' | 'download'>;\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n    (\n        {\n            className,\n            icon: Icon,\n            view = 'primary',\n            size = 's',\n            colors = 'default',\n            alignIcon = 'center',\n            ...restProps\n        },\n        ref,\n    ) => (\n        <Button\n            {...restProps}\n            ref={ref}\n            view='ghost'\n            className={cn(\n                'cc-icon-button',\n                className,\n                colorStyles[colors][view],\n                colorStyles[colors].component,\n                {\n                    [colorStyles[colors].loader]: restProps.loading,\n                },\n            )}\n            size='s'\n        >\n            <span className={cn(styles.iconWrapper, styles[size], styles[alignIcon])}>\n                <Icon className={styles.icon} />\n            </span>\n        </Button>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_mrk6x\",\"secondary\":\"secondary_FLdLE\",\"transparent\":\"transparent_VMdra\",\"negative\":\"negative_obA3j\",\"tertiary\":\"tertiary_i42d9\",\"component\":\"component_fJqZU\",\"loader\":\"loader_pgtEx\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_YS_4z\",\"secondary\":\"secondary_5vwsr\",\"transparent\":\"transparent_ZlVKE\",\"negative\":\"negative_ReUKu\",\"tertiary\":\"tertiary_iWHyh\",\"component\":\"component_ywWfd\",\"loader\":\"loader_Mx9xJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_dps9B\",\"red\":\"red_aXXvQ\",\"border\":\"border_Cmy4J\",\"white\":\"white_K_qSw\",\"grey\":\"grey_rYijs\",\"xs\":\"xs_EpLNh\",\"s\":\"s_iVuD8\",\"content\":\"content_KtxO2\",\"m\":\"m_nROyp\",\"l\":\"l_yhn3E\",\"xl\":\"xl_K6gcc\",\"xxl\":\"xxl_RO3RL\"};","import React, { CSSProperties, forwardRef, ReactElement } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\n// TODO: вынести в общие типы\ntype Border = {\n    width?: number;\n    color?: string;\n    style?: 'solid' | 'dashed' | 'dotted';\n};\n\nexport type IndicatorProps = React.HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Значение индикатора\n     */\n    value?: number | ReactElement;\n\n    /**\n     * Цвет значения\n     */\n    color?: string;\n\n    /**\n     * Цвет заливки\n     */\n    backgroundColor?: string;\n\n    /**\n     * Высота компонента, min = 16; max = 48\n     */\n    height?: number;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 's' | 'm' | 'l';\n\n    /**\n     * Настройки обводки\n     */\n    border?: boolean | Border;\n\n    /**\n     * Пресет компонента\n     */\n    view?: 'red' | 'grey' | 'white';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nfunction getSize(height?: number, value?: IndicatorProps['value']) {\n    if (!height) {\n        return typeof value === 'undefined' ? 'xs' : 's';\n    }\n\n    if (height <= 8) return 'xs';\n    if (height <= 18) return 's';\n    if (height <= 24) return 'm';\n    if (height <= 32) return 'l';\n    if (height <= 40) return 'xl';\n\n    return 'xxl';\n}\n\nfunction formatValue(rawValue: IndicatorProps['value']) {\n    if (typeof rawValue === 'number' && rawValue >= 100) return '99+';\n\n    return rawValue;\n}\n\nfunction borderStyles(\n    border: IndicatorProps['border'],\n    view?: IndicatorProps['view'],\n): CSSProperties {\n    if (!border) return {};\n\n    if (typeof border === 'object') {\n        return {\n            outlineColor: border.color,\n            outlineWidth: border.width,\n            outlineStyle: border.style || 'solid',\n        };\n    }\n\n    if (view) return {};\n\n    return {\n        outlineWidth: 2,\n        outlineColor: 'var(--color-light-graphic-primary)',\n        outlineStyle: 'solid',\n    };\n}\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>(\n    (\n        {\n            value,\n            view,\n            color,\n            backgroundColor,\n            height,\n            border,\n            className,\n            dataTestId,\n            style,\n            size = getSize(height, value),\n            ...restProps\n        },\n        ref,\n    ) => {\n        const showContent = typeof value !== 'undefined' && size !== 'xs';\n\n        return (\n            <div\n                ref={ref}\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    view && styles[view],\n                    border === true && styles.border,\n                    className,\n                )}\n                style={{\n                    ...style,\n                    ...(!view && {\n                        backgroundColor,\n                        color,\n                    }),\n                    height,\n                    minWidth: height,\n                    ...borderStyles(border, view),\n                }}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                {showContent && <span className={styles.content}>{formatValue(value)}</span>}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"arrow\":\"arrow_RWc1Z\",\"error\":\"error_HXxNm\"};","import React, { useCallback, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { InputDesktop as DefaultInput } from '@alfalab/core-components-input/desktop';\nimport { FieldProps } from '@alfalab/core-components-select';\n\nimport { InputAutocompleteDesktopProps } from '../Component.desktop';\n\nimport styles from './index.module.css';\n\nexport type AutocompleteFieldProps = FieldProps &\n    Pick<InputAutocompleteDesktopProps, 'Input' | 'inputProps' | 'value' | 'onInput' | 'readOnly'>;\n\nexport const AutocompleteField = ({\n    label,\n    labelView = 'inner',\n    placeholder,\n    size,\n    Arrow,\n    Input = DefaultInput,\n    value,\n    error,\n    success,\n    hint,\n    disabled,\n    readOnly,\n    onInput,\n    inputProps = {},\n    innerProps,\n}: AutocompleteFieldProps) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const { onClick, onFocus } = innerProps;\n\n    const inputDisabled = disabled || readOnly;\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            if (onClick) onClick(event);\n\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [onClick],\n    );\n\n    return (\n        <Input\n            {...inputProps}\n            {...innerProps}\n            wrapperRef={mergeRefs([\n                innerProps.ref as React.Ref<HTMLElement>,\n                inputProps.wrapperRef as React.Ref<HTMLElement>,\n            ])}\n            ref={mergeRefs([inputRef, inputProps.ref as React.Ref<HTMLElement>])}\n            disabled={disabled}\n            readOnly={readOnly}\n            block={true}\n            label={label}\n            labelView={labelView}\n            placeholder={placeholder}\n            size={size}\n            error={error}\n            success={success}\n            hint={hint}\n            onChange={onInput}\n            onClick={inputDisabled ? undefined : handleClick}\n            onFocus={inputDisabled ? undefined : onFocus}\n            autoComplete='off'\n            value={value}\n            rightAddons={\n                (Arrow || inputProps.rightAddons) && (\n                    <React.Fragment>\n                        {inputProps.rightAddons}\n                        {Arrow && (\n                            <span\n                                className={cn(styles.arrow, {\n                                    [styles.error]: error,\n                                })}\n                            >\n                                {Arrow}\n                            </span>\n                        )}\n                    </React.Fragment>\n                )\n            }\n        />\n    );\n};\n","import React, { ChangeEvent, FC, forwardRef, RefAttributes } from 'react';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport {\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    Option as DefaultOption,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { AutocompleteField } from './autocomplete-field';\n\nexport type InputAutocompleteDesktopProps = Omit<BaseSelectProps, 'Field' | 'nativeSelect'> & {\n    /**\n     * Компонент ввода значения\n     */\n    Input?: FC<InputProps & RefAttributes<HTMLInputElement>>;\n\n    /**\n     * Пропсы, которые будут прокинуты в инпут\n     */\n    inputProps?: InputProps & Record<string, unknown>;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Поле доступно только для чтения\n     */\n    readOnly?: InputProps['readOnly'];\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Обработчик ввода\n     */\n    onInput?: (event: ChangeEvent<HTMLInputElement>) => void;\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение поповера\n     */\n    updatePopover?: BaseSelectProps['updatePopover'];\n};\n\nexport const InputAutocompleteDesktop = forwardRef<HTMLInputElement, InputAutocompleteDesktopProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            Input,\n            inputProps = {},\n            onInput,\n            value,\n            success,\n            readOnly,\n            closeOnSelect = false,\n            options,\n            ...restProps\n        },\n        ref,\n    ) => (\n        <BaseSelect\n            ref={ref}\n            autocomplete={true}\n            options={options}\n            closeOnSelect={closeOnSelect}\n            Option={Option}\n            Field={AutocompleteField}\n            fieldProps={{\n                Input,\n                onInput,\n                value,\n                inputProps,\n                readOnly,\n                success,\n            }}\n            Optgroup={Optgroup}\n            OptionsList={OptionsList}\n            {...restProps}\n        />\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_shmZr\",\"field\":\"field_lHc4C\",\"disabled\":\"disabled_fvYlN\",\"placeholder\":\"placeholder__30Tu\",\"contentWrapper\":\"contentWrapper_sbKRl\",\"value\":\"value_GSNlj\",\"focusVisible\":\"focusVisible_lmfo8\"};","import React, { useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport {\n    FormControlMobile,\n    FormControlMobileProps,\n} from '@alfalab/core-components-form-control/mobile';\nimport { InputAutocompleteProps } from '@alfalab/core-components-input-autocomplete';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select';\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nexport type AutocompleteMobileFieldProps = FormControlMobileProps &\n    Omit<BaseFieldProps, 'selected' | 'multiple' | 'success'> &\n    Pick<InputAutocompleteProps, 'value'>;\n\nexport const AutocompleteMobileField = ({\n    size = 'm',\n    open,\n    error,\n    hint,\n    disabled,\n    label,\n    labelView = 'inner',\n    placeholder,\n    value,\n    innerProps,\n    dataTestId,\n    fieldClassName,\n    Arrow,\n    valueRenderer,\n    toggleMenu,\n    setSelectedItems,\n    selectedMultiple,\n    ...restProps\n}: AutocompleteMobileFieldProps) => {\n    const [focused, setFocused] = useState(false);\n\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    const [focusVisible] = useFocus(wrapperRef, 'keyboard');\n\n    const filled = Boolean(value);\n    const showLabel = !!label && (filled || !placeholder || labelView === 'outer');\n\n    return (\n        <div\n            className={styles.component}\n            ref={wrapperRef}\n            onFocus={() => setFocused(true)}\n            onBlur={() => setFocused(false)}\n        >\n            <FormControlMobile\n                fieldClassName={cn(styles.field, fieldClassName, {\n                    [styles.disabled]: disabled,\n                    [styles.focusVisible]: focusVisible,\n                })}\n                block={true}\n                size={size}\n                focused={focused}\n                disabled={disabled}\n                filled={filled}\n                label={showLabel && label}\n                labelView={labelView}\n                error={error}\n                hint={hint}\n                rightAddons={Arrow}\n                data-test-id={dataTestId}\n                {...restProps}\n                {...innerProps}\n            >\n                <div className={styles.contentWrapper}>\n                    {placeholder && !filled && (\n                        <span className={styles.placeholder}>{placeholder}</span>\n                    )}\n                    {filled && <div className={styles.value}>{value}</div>}\n                </div>\n            </FormControlMobile>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"bottomAddonInput\":\"bottomAddonInput_nFDlu\",\"footer\":\"footer_WM8GQ\"};","import React, { ChangeEvent, ElementType, RefObject, useMemo, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport throttle from 'lodash.throttle';\n\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { Input as CoreInput } from '@alfalab/core-components-input';\nimport {\n    BaseSelectChangePayload,\n    BaseSelectProps,\n    SelectMobile,\n    SelectMobileProps,\n} from '@alfalab/core-components-select';\n\nimport { AutocompleteMobileField } from './autocomplete-mobile-field';\n\nimport styles from './mobile.module.css';\n\nexport type InputAutocompleteMobileProps = Omit<\n    BaseSelectProps,\n    'OptionsList' | 'Checkmark' | 'onScroll' | 'nativeSelect' | 'autocomplete' | 'valueRenderer'\n> & {\n    /**\n     * Обработчик выбора\n     */\n    onChange: (payload: string | BaseSelectChangePayload) => void;\n\n    /**\n     * Обработчик ввода фильтра.\n     */\n    onFilter: (event: ChangeEvent<HTMLInputElement>) => void;\n\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Значение фильтра.\n     */\n    filter?: string;\n\n    /**\n     * Обработчик нажатия на кнопку \"Отмена\".\n     */\n    onCancel?: () => void;\n\n    /**\n     * Обработчик нажатия на крестик в инпуте фильтра.\n     */\n    onClearFilter?: () => void;\n\n    /**\n     * Дополнительные пропсы компонента BottomSheet\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Дополнительные пропсы на слот под заголовком компонента BottomSheet\n     */\n    bottomSheetHeaderAddonsProps?: Record<string, unknown>;\n\n    /**\n     * Дополнительные пропсы на кнопку \"продолжить\"\n     */\n    continueButtonProps?: ButtonProps;\n\n    /**\n     * Дополнительные пропсы на кнопку \"отмена\"\n     */\n    cancelButtonProps?: ButtonProps;\n\n    /**\n     * Кастомный инпут\n     */\n    Input?: ElementType;\n};\n\nconst SELECTED: string[] = [];\n\nexport const InputAutocompleteMobile = React.forwardRef(\n    (\n        {\n            Input,\n            bottomSheetProps = {},\n            bottomSheetHeaderAddonsProps = {},\n            value = '',\n            filter = '',\n            name,\n            Arrow = null,\n            label,\n            placeholder,\n            size = 's',\n            open: openProp,\n            onFilter,\n            onChange,\n            onOpen,\n            onCancel,\n            onClearFilter,\n            continueButtonProps,\n            cancelButtonProps,\n            selected,\n            multiple,\n            ...restProps\n        }: InputAutocompleteMobileProps,\n        ref,\n    ) => {\n        const [open, setOpen] = useState(false);\n        const bottomSheetInputRef = useRef<HTMLInputElement>(null);\n        const targetRef = useRef<HTMLDivElement>(null);\n\n        const setBottomSheetVisibility = (isOpen: boolean) => {\n            if (openProp === undefined) {\n                setOpen(isOpen);\n            }\n\n            if (onOpen) {\n                onOpen({ open: isOpen, name });\n            }\n        };\n\n        const handleOpen: SelectMobileProps['onOpen'] = (payload) => {\n            setBottomSheetVisibility(Boolean(payload.open));\n        };\n\n        const handleOptionsListTouchMove = useMemo(\n            () =>\n                throttle(() => {\n                    const input = bottomSheetInputRef.current;\n\n                    if (input && document.activeElement === input) {\n                        input.blur();\n                    }\n                }, 300),\n            [],\n        );\n\n        const handleApply = () => {\n            setBottomSheetVisibility(false);\n            onChange(filter);\n        };\n\n        const handleChange: SelectMobileProps['onChange'] = (payload) => {\n            onChange(payload);\n\n            if (multiple) {\n                // После выбора опции возвращаем фокус в поле ввода.\n                bottomSheetInputRef.current?.focus();\n            }\n        };\n\n        const handleCancel = () => {\n            setBottomSheetVisibility(false);\n\n            if (onCancel) {\n                onCancel();\n            }\n        };\n\n        const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n            const input = bottomSheetInputRef.current;\n\n            // Перед закрытием шторки снимаем фокус с инпута, чтобы предотвратить скачок шторки.\n            if (\n                event.relatedTarget === targetRef.current &&\n                input &&\n                input === document.activeElement\n            ) {\n                input.blur();\n            }\n        };\n\n        const getBottomSheetProps = (): InputAutocompleteMobileProps['bottomSheetProps'] => {\n            const Component = Input || CoreInput;\n\n            return {\n                actionButton: (\n                    <div className={styles.footer}>\n                        <Button\n                            block={true}\n                            view='secondary'\n                            size='s'\n                            onClick={handleCancel}\n                            {...cancelButtonProps}\n                        >\n                            Отмена\n                        </Button>\n                        <Button\n                            block={true}\n                            view='primary'\n                            size='s'\n                            onClick={handleApply}\n                            {...continueButtonProps}\n                        >\n                            Продолжить\n                        </Button>\n                    </div>\n                ),\n                title: label || placeholder,\n                bottomAddons: (\n                    <Component\n                        block={true}\n                        clear={!!onClearFilter}\n                        onClear={onClearFilter}\n                        value={filter}\n                        onInput={onFilter}\n                        placeholder={placeholder}\n                        onFocus={handleInputFocus}\n                        {...bottomSheetHeaderAddonsProps}\n                        className={cn(\n                            styles.bottomAddonInput,\n                            bottomSheetHeaderAddonsProps.className as string,\n                        )}\n                        ref={mergeRefs([\n                            bottomSheetInputRef,\n                            bottomSheetHeaderAddonsProps.ref as RefObject<HTMLInputElement>,\n                        ])}\n                    />\n                ),\n                initialHeight: 'full',\n                ...bottomSheetProps,\n                containerProps: {\n                    onTouchMove: handleOptionsListTouchMove,\n                    ...bottomSheetProps.containerProps,\n                },\n            };\n        };\n\n        return (\n            <SelectMobile\n                ref={mergeRefs([targetRef, ref])}\n                selected={selected || SELECTED}\n                open={Boolean(open || openProp)}\n                onOpen={handleOpen}\n                onChange={handleChange}\n                Arrow={Arrow}\n                Field={AutocompleteMobileField}\n                fieldProps={{ value }}\n                placeholder={placeholder}\n                label={label}\n                size={size}\n                name={name}\n                multiple={multiple}\n                useWithApplyHook={false}\n                bottomSheetProps={getBottomSheetProps()}\n                optionsListProps={{ showFooter: false }}\n                {...restProps}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { BaseSelectProps } from '@alfalab/core-components-select';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { InputAutocompleteDesktop, InputAutocompleteDesktopProps } from './Component.desktop';\nimport { InputAutocompleteMobile, InputAutocompleteMobileProps } from './Component.mobile';\n\nexport type InputAutocompleteResponsiveProps = InputAutocompleteDesktopProps &\n    InputAutocompleteMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport type InputAutocompleteMedia = 'desktop' | 'mobile';\n\nexport const InputAutocompleteResponsive = forwardRef<\n    HTMLInputElement | HTMLDivElement,\n    InputAutocompleteResponsiveProps\n>(({ breakpoint = 1024, ...restProps }, ref) => {\n    const [view] = useMedia<InputAutocompleteMedia>(\n        [\n            ['mobile', `(max-width: ${breakpoint - 1}px)`],\n            ['desktop', `(min-width: ${breakpoint}px)`],\n        ],\n        'desktop',\n    );\n\n    return view === 'desktop' ? (\n        <InputAutocompleteDesktop {...restProps} ref={ref as React.Ref<HTMLInputElement>} />\n    ) : (\n        <InputAutocompleteMobile {...restProps} ref={ref} />\n    );\n});\n","import React, { forwardRef } from 'react';\n\nimport { FormControlDesktop } from '@alfalab/core-components-form-control/desktop';\n\nimport { BaseInput, BaseInputProps } from './components/base-input';\n\nimport defaultColors from './default.desktop.module.css';\nimport invertedColors from './inverted.desktop.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type InputDesktopProps = Omit<BaseInputProps, 'FormControlComponent' | 'colorStyles'>;\n\nexport const InputDesktop = forwardRef<HTMLInputElement, InputDesktopProps>((restProps, ref) => (\n    <BaseInput\n        {...restProps}\n        FormControlComponent={FormControlDesktop}\n        ref={ref}\n        colorStyles={colorStyles}\n    />\n));\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"error_wh31i\"};","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"error_JQk1w\"};","import React, { forwardRef } from 'react';\n\nimport { FormControlMobile } from '@alfalab/core-components-form-control/mobile';\n\nimport { BaseInput, BaseInputProps } from './components/base-input';\n\nimport defaultColors from './default.mobile.module.css';\nimport invertedColors from './inverted.mobile.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type InputMobileProps = Omit<BaseInputProps, 'FormControlComponent' | 'colorStyles'>;\n\nexport const InputMobile = forwardRef<HTMLInputElement, InputMobileProps>((restProps, ref) => (\n    <BaseInput\n        {...restProps}\n        FormControlComponent={FormControlMobile}\n        ref={ref}\n        colorStyles={colorStyles}\n    />\n));\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"error_hnp1Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"error_Xz6bE\"};","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseInputProps } from './components/base-input';\nimport { InputDesktop } from './Component.desktop';\nimport { InputMobile } from './Component.mobile';\n\nexport type InputProps = Omit<BaseInputProps, 'FormControlComponent' | 'colorStyles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n\n    /**\n     * Значение по-умолчанию для хука useMatchMedia\n     */\n    defaultMatchMediaValue?: boolean | (() => boolean);\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n    ({ breakpoint = 1024, defaultMatchMediaValue, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue);\n\n        const Component = isDesktop ? InputDesktop : InputMobile;\n\n        return <Component ref={ref} {...restProps} />;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_sDL1C\",\"hasInnerLabel\":\"hasInnerLabel_f4A1y\",\"s\":\"s_lK8yt\",\"m\":\"m_zKp3C\",\"l\":\"l_ykIhv\",\"xl\":\"xl_enTDZ\",\"block\":\"block_bmIew\",\"clearIcon\":\"clearIcon_xxFc0\",\"errorIcon\":\"errorIcon_w6ug0\",\"errorColorIcon\":\"errorColorIcon_vF50F\",\"clearButton\":\"clearButton_A0Gju\",\"successIcon\":\"successIcon_CKes0\",\"successColorIcon\":\"successColorIcon_ZRUt2\",\"focusVisible\":\"focusVisible_TwtEQ\",\"onautofillstart\":\"onautofillstart_CELbt\",\"onautofillcancel\":\"onautofillcancel_g2IzH\"};","import React, {\n    AnimationEvent,\n    ChangeEvent,\n    ElementType,\n    Fragment,\n    InputHTMLAttributes,\n    MouseEvent,\n    ReactNode,\n    useCallback,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { Button } from '@alfalab/core-components-button';\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { ExclamationCircleMIcon } from '@alfalab/icons-glyph/ExclamationCircleMIcon';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorCommonStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type StyleColors = {\n    default: {\n        [key: string]: string;\n    };\n    inverted: {\n        [key: string]: string;\n    };\n};\n\nexport type BaseInputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    | 'size'\n    | 'type'\n    | 'value'\n    | 'defaultValue'\n    | 'onChange'\n    | 'onClick'\n    | 'onMouseDown'\n    | 'enterKeyHint'\n> & {\n    /**\n     * Значение поля ввода\n     */\n    value?: string;\n\n    /**\n     * Начальное значение поля\n     */\n    defaultValue?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Крестик для очистки поля\n     */\n    clear?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Отображение иконки успеха\n     */\n    success?: boolean;\n\n    /**\n     * Текст подсказки\n     */\n    hint?: ReactNode;\n\n    /**\n     * Лейбл компонента\n     */\n    label?: React.ReactNode;\n\n    /**\n     * Вид лейбла внутри / снаружи\n     */\n    labelView?: 'inner' | 'outer';\n\n    /**\n     * Атрибут type\n     */\n    type?: 'number' | 'card' | 'email' | 'money' | 'password' | 'tel' | 'text';\n\n    /**\n     * Ref для обертки input\n     */\n    wrapperRef?: React.Ref<HTMLDivElement> | null;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: React.ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: React.ReactNode;\n\n    /**\n     * Слот под инпутом\n     */\n    bottomAddons?: React.ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для поля\n     */\n    fieldClassName?: string;\n\n    /**\n     * Дополнительный класс инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Дополнительный класс для лейбла\n     */\n    labelClassName?: string;\n\n    /**\n     * Дополнительный класс для аддонов\n     */\n    addonsClassName?: string;\n\n    /**\n     * Класс, который будет установлен при фокусе\n     */\n    focusedClassName?: string;\n\n    /**\n     * Класс, который будет установлен, если в поле есть значение\n     */\n    filledClassName?: string;\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: string }) => void;\n\n    /**\n     * Обработчик нажатия на кнопку очистки\n     */\n    onClear?: (event: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Обработчик клика по полю\n     */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseDown по полю\n     */\n    onMouseDown?: (event: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик MouseUp по полю\n     */\n    onMouseUp?: (event: MouseEvent<HTMLDivElement>) => void;\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    FormControlComponent?: ElementType;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Стили компонента для default и inverted режима.\n     */\n    colorStyles?: StyleColors;\n};\n\nexport const BaseInput = React.forwardRef<HTMLInputElement, BaseInputProps>(\n    (\n        {\n            size = 's',\n            type = 'text',\n            block = false,\n            colors = 'default',\n            bottomAddons,\n            dataTestId,\n            clear = false,\n            disabled,\n            error,\n            success,\n            hint,\n            className,\n            fieldClassName,\n            inputClassName,\n            labelClassName,\n            addonsClassName,\n            focusedClassName,\n            filledClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onClear,\n            onClick,\n            onMouseDown,\n            onMouseUp,\n            onAnimationStart,\n            rightAddons,\n            value,\n            defaultValue,\n            wrapperRef,\n            readOnly,\n            FormControlComponent,\n            colorStyles = { default: {}, inverted: {} },\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        const [focused, setFocused] = useState(restProps.autoFocus);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const [autofilled, setAutofilled] = useState(false);\n\n        // отображаем крестик только для заполненного и активного инпута\n        const clearButtonVisible = clear && filled && !disabled && !readOnly;\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const handleInputFocus = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                if (!readOnly) {\n                    setFocused(true);\n                }\n\n                if (onFocus) {\n                    onFocus(event);\n                }\n            },\n            [onFocus, readOnly],\n        );\n\n        const handleInputBlur = useCallback(\n            (event: React.FocusEvent<HTMLInputElement>) => {\n                setFocused(false);\n\n                if (onBlur) {\n                    onBlur(event);\n                }\n            },\n            [onBlur],\n        );\n\n        const handleInputChange = useCallback(\n            (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (onChange) {\n                    onChange(event, { value: event.target.value });\n                }\n\n                if (uncontrolled) {\n                    setStateValue(event.target.value);\n                }\n            },\n            [onChange, uncontrolled],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                if (!clearButtonVisible) return;\n\n                if (uncontrolled) {\n                    setStateValue('');\n                }\n\n                if (onClear) {\n                    onClear(event);\n                }\n\n                if (inputRef.current && !focused) {\n                    inputRef.current.focus();\n                }\n            },\n            [clearButtonVisible, focused, onClear, uncontrolled],\n        );\n\n        const handleAnimationStart = useCallback(\n            (event: AnimationEvent<HTMLInputElement>) => {\n                if (onAnimationStart) {\n                    onAnimationStart(event);\n                }\n\n                setAutofilled(event.animationName.includes('start'));\n            },\n            [onAnimationStart],\n        );\n\n        const renderRightAddons = () => {\n            const addonsVisible = clearButtonVisible || rightAddons || error || success;\n\n            return (\n                addonsVisible && (\n                    <Fragment>\n                        {clearButtonVisible && (\n                            <Button\n                                type='button'\n                                view='ghost'\n                                disabled={disabled}\n                                aria-label='Очистить'\n                                className={styles.clearButton}\n                                onClick={handleClear}\n                                tabIndex={-1}\n                            >\n                                <CrossCircleMIcon\n                                    className={cn(\n                                        styles.clearIcon,\n                                        colorCommonStyles[colors].clearIcon,\n                                    )}\n                                />\n                            </Button>\n                        )}\n                        {rightAddons}\n                        {error && (\n                            <div className={styles.errorIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='negative'\n                                    content={\n                                        <ExclamationCircleMIcon className={styles.errorColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                        {success && !error && (\n                            <div className={styles.successIcon}>\n                                <Badge\n                                    view='icon'\n                                    size='m'\n                                    iconColor='positive'\n                                    content={\n                                        <CheckmarkCircleMIcon className={styles.successColorIcon} />\n                                    }\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )\n            );\n        };\n\n        return FormControlComponent ? (\n            <FormControlComponent\n                ref={wrapperRef}\n                className={cn(className, focused && focusedClassName, filled && filledClassName)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                labelClassName={labelClassName}\n                addonsClassName={addonsClassName}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                readOnly={readOnly}\n                filled={filled || autofilled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={renderRightAddons()}\n                bottomAddons={bottomAddons}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n            >\n                <input\n                    {...restProps}\n                    className={cn(\n                        styles.input,\n                        colorCommonStyles[colors].input,\n                        colorStyles[colors].input,\n                        {\n                            [styles.error]: error,\n                            [colorStyles[colors].error]: error,\n                            [styles[size]]: hasInnerLabel,\n                            [styles.hasInnerLabel]: hasInnerLabel,\n                            [colorCommonStyles[colors].hasInnerLabel]: hasInnerLabel,\n                        },\n                        inputClassName,\n                    )}\n                    disabled={disabled}\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    onChange={handleInputChange}\n                    onAnimationStart={handleAnimationStart}\n                    ref={mergeRefs([ref, inputRef])}\n                    type={type}\n                    value={uncontrolled ? stateValue : value}\n                    readOnly={readOnly}\n                    data-test-id={dataTestId}\n                    aria-label={typeof label === 'string' ? label : undefined}\n                />\n            </FormControlComponent>\n        ) : null;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_lTgZB\",\"hasInnerLabel\":\"hasInnerLabel_M1dw9\",\"clearIcon\":\"clearIcon_LuHni\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_GszJj\",\"hasInnerLabel\":\"hasInnerLabel_aw_ra\",\"clearIcon\":\"clearIcon_rwrYS\"};","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RefObject, useRef } from 'react';\n\nimport { useFocus } from '@alfalab/hooks';\n\ntype KeyboardFocusableProps = {\n    /**\n     * Рендер-проп, в который передается состояние фокуса и реф.\n     *\n     * Реф нужно установить на интерактивный элемент или на одного из его родителей.\n     */\n    children: (ref: RefObject<any>, focused: boolean) => JSX.Element;\n};\n\nexport const KeyboardFocusable = ({ children }: KeyboardFocusableProps) => {\n    const targetRef = useRef<HTMLElement | null>(null);\n\n    const [focused] = useFocus(targetRef, 'keyboard');\n\n    return children(targetRef, focused);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_lMFXL\",\"text\":\"text_aPya0\",\"withAddons\":\"withAddons_N7SYb\",\"focused\":\"focused_hQu__\",\"pseudo\":\"pseudo_kpIHn\",\"withoutUnderline\":\"withoutUnderline_IhODm\",\"addons\":\"addons_Q30kx\"};","import React, { AnchorHTMLAttributes, ElementType, forwardRef, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\ntype NativeProps = AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport type LinkProps = NativeProps & {\n    /**\n     * URL для перехода (native prop)\n     */\n    href?: string;\n\n    /**\n     * Тип ссылки\n     */\n    view?: 'primary' | 'secondary' | 'default';\n\n    /**\n     * Пунктирное подчеркивание\n     */\n    pseudo?: boolean;\n\n    /**\n     * Включает / отключает подчеркивание\n     * @default true\n     */\n    underline?: boolean;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Позволяет использовать кастомный компонент для кнопки (например Link из роутера)\n     */\n    Component?: ElementType;\n\n    /**\n     * Дополнительный класс (native prop)\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Обработчик нажатия (native prop)\n     */\n    onClick?: NativeProps['onClick'];\n\n    /**\n     * Дочерние элементы (native prop)\n     */\n    children: ReactNode;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n};\n\nexport const Link = forwardRef<HTMLAnchorElement, LinkProps>(\n    (\n        {\n            view = 'primary',\n            pseudo = false,\n            underline = true,\n            leftAddons,\n            rightAddons,\n            className,\n            dataTestId,\n            children,\n            colors = 'default',\n            href,\n            Component = pseudo ? 'button' : 'a',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const linkRef = useRef<HTMLAnchorElement>(null);\n\n        const [focused] = useFocus(linkRef, 'keyboard');\n\n        const viewClassName = view === 'default' ? 'defaultView' : view;\n\n        const componentProps = {\n            className: cn(\n                styles.component,\n                colorStyles[colors][viewClassName],\n                {\n                    [styles.withoutUnderline]: !underline && !pseudo,\n                    [styles.pseudo]: pseudo,\n                    [styles.focused]: focused,\n                    [styles.withAddons]: leftAddons || rightAddons,\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n            rel: restProps.target === '_blank' ? 'noreferrer noopener' : undefined,\n            // Для совместимости с react-router-dom, меняем href на to\n            [typeof Component === 'string' ? 'href' : 'to']: href,\n            ...(pseudo && { type: 'button' }),\n        };\n\n        return (\n            <Component {...componentProps} {...restProps} ref={mergeRefs([linkRef, ref])}>\n                {leftAddons || rightAddons ? (\n                    <React.Fragment>\n                        {leftAddons && <span className={styles.addons}>{leftAddons}</span>}\n                        {children && (\n                            <span>\n                                <span className={styles.text}>{children}</span>\n                            </span>\n                        )}\n                        {rightAddons && <span className={styles.addons}>{rightAddons}</span>}\n                    </React.Fragment>\n                ) : (\n                    <span className={styles.text}>{children}</span>\n                )}\n            </Component>\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nLink.defaultProps = {\n    view: 'primary',\n    pseudo: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_ToVKN\",\"secondary\":\"secondary_UPo_S\",\"defaultView\":\"defaultView_Vv_pD\"};","// extracted by mini-css-extract-plugin\nexport default {\"primary\":\"primary_XvGVZ\",\"secondary\":\"secondary_jZLuE\",\"defaultView\":\"defaultView_em4fi\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_h7GV6\",\"description\":\"description_rfDiA\",\"filled\":\"filled_M8E8n\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport styles from './index.module.css';\n\nexport type ListHeaderProps = {\n    /**\n     * Заголовок\n     */\n    title: string;\n\n    /**\n     * Дополнительное описание\n     */\n    description?: string;\n\n    /**\n     * Наличие фоновой подложки\n     */\n    filled?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const ListHeader: React.FC<ListHeaderProps> = ({\n    title,\n    description,\n    filled = true,\n    className,\n    dataTestId,\n}) => (\n    <div\n        data-test-id={dataTestId}\n        className={cn(styles.component, { [styles.filled]: filled }, className)}\n    >\n        <Typography.Text view='secondary-large'>{title}</Typography.Text>\n        {description && (\n            <Typography.Text view='secondary-large' className={cn(styles.description)}>\n                {`, ${description}`}\n            </Typography.Text>\n        )}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"item_wo5BR\",\"reversed\":\"reversed_WoAsG\",\"unorderedItem\":\"unorderedItem_xBIso\",\"slot\":\"slot_FB574\",\"defaultColor\":\"defaultColor_MZoxA\",\"disc\":\"disc_CkVQ4\",\"caption\":\"caption_DQlVD\"};","import React, { ReactNode, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { ListContext } from '../../Component';\n\nimport styles from './index.module.css';\n\nexport type ItemProps = {\n    /**\n     * Дополнительный текст\n     */\n    caption?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Item: React.FC<ItemProps> = ({ caption, children }) => {\n    const {\n        orderedList,\n        markerType,\n        colorMarker,\n        reversed,\n        index = 0,\n        start = 0,\n    } = useContext(ListContext);\n\n    const markerLowerAlpha = markerType === 'lower-alpha';\n\n    const itemClassNames = cn(styles.item, {\n        [styles.unorderedItem]: markerLowerAlpha,\n        [styles.reversed]: reversed,\n    });\n\n    const isDisc = markerType === '•';\n\n    const count = start === 0 ? index + 1 : start + index;\n    const marker = orderedList || markerType === 'decimal' ? `${count}.` : markerType;\n\n    return (\n        <li className={cn(itemClassNames)}>\n            {!markerLowerAlpha && (\n                <Typography.Text\n                    tag='div'\n                    color={colorMarker}\n                    monospaceNumbers={true}\n                    view='primary-medium'\n                    className={cn(styles.slot, {\n                        [styles.disc]: isDisc && !orderedList,\n                        [styles.defaultColor]: !colorMarker,\n                    })}\n                >\n                    {marker}\n                </Typography.Text>\n            )}\n            <div>\n                <Typography.Text tag='div' view='primary-medium'>\n                    {children}\n                </Typography.Text>\n                {caption && (\n                    <Typography.Text\n                        tag='div'\n                        view='primary-small'\n                        color='secondary'\n                        className={styles.caption}\n                    >\n                        {caption}\n                    </Typography.Text>\n                )}\n            </div>\n        </li>\n    );\n};\n\nItem.displayName = 'ListItem';\n","import { isValidElement, ReactNode } from 'react';\n\nexport const isItemElement = (obj: JSX.Element, name?: string): boolean =>\n    typeof obj === 'object' && obj.type.displayName === name;\n\nexport const isItem = (child: ReactNode) =>\n    isValidElement(child) && isItemElement(child, 'ListItem');\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"list_qvd0s\",\"lowerAlpha\":\"lowerAlpha_ZrKFj\",\"decimal\":\"decimal_Hatns\",\"reversed\":\"reversed_DWhfe\"};","import React, { Children, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Item } from './components/item';\nimport { isItem } from './utils';\n\nimport styles from './index.module.css';\n\nexport type TListContext = {\n    /**\n     * Упорядоченный список\n     */\n    orderedList?: boolean;\n\n    /**\n     * Маркер\n     * @default '—' for ul and 'decimal' for ol\n     */\n    markerType?: 'lower-alpha' | 'decimal' | string | ReactNode;\n\n    /**\n     * Цвет маркера\n     */\n    colorMarker?: ColorMarkerType;\n\n    /**\n     * Список обратного счета\n     */\n    reversed?: boolean;\n\n    /**\n     * Номер пункта\n     */\n    index?: number;\n\n    /**\n     * Начало отсчета элементов списка\n     */\n    start?: number;\n};\n\nexport const ListContext = React.createContext<TListContext>({});\n\ntype ColorMarkerType =\n    | 'tertiary'\n    | 'accent'\n    | 'primary'\n    | 'attention'\n    | 'positive'\n    | 'secondary'\n    | 'tertiary-inverted'\n    | 'primary-inverted'\n    | 'secondary-inverted'\n    | 'link'\n    | 'negative';\n\nexport type ListProps = {\n    /**\n     * HTML тег\n     * @default 'ul'\n     */\n    tag?: 'ul' | 'ol';\n\n    /**\n     * Маркер\n     * @default '—' for ul and 'decimal' for ol\n     */\n    marker?: 'lower-alpha' | 'decimal' | string | ReactNode;\n\n    /**\n     * Css-класс для стилизации\n     */\n    className?: string;\n\n    /**\n     * Цвет маркера\n     */\n    colorMarker?: ColorMarkerType;\n\n    /**\n     * Список обратного счета\n     */\n    reversed?: boolean;\n\n    /**\n     * Начало отсчета элементов списка\n     */\n    start?: number;\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: ReactNode;\n} & Omit<React.OlHTMLAttributes<HTMLOListElement>, 'type'>;\n\nconst ListComponent: React.FC<ListProps> = ({\n    tag = 'ul',\n    marker,\n    className,\n    dataTestId,\n    colorMarker,\n    children,\n    reversed,\n    start,\n    ...restProps\n}) => {\n    const markerType = marker || (tag === 'ul' ? '—' : 'decimal');\n    const alphaMarker = markerType === 'lower-alpha';\n    const decimalMarker = markerType === 'decimal';\n    const Component = tag === 'ul' || alphaMarker ? 'ul' : 'ol';\n\n    const orderedList = Component === 'ol';\n\n    const listClassNames = cn(\n        styles.list,\n        {\n            [styles.lowerAlpha]: alphaMarker,\n            [styles.decimal]: decimalMarker,\n            [styles.reversed]: reversed,\n        },\n        className,\n    );\n\n    /* eslint-disable react/jsx-no-constructed-context-values */\n    return (\n        <Component className={listClassNames} data-test-id={dataTestId} {...restProps}>\n            {Children.map(children, (child, index) => (\n                <ListContext.Provider\n                    value={{ orderedList, markerType, colorMarker, reversed, index, start }}\n                >\n                    {isItem(child) ? child : <Item>{child}</Item>}\n                </ListContext.Provider>\n            ))}\n        </Component>\n    );\n};\n\nexport const List = Object.assign(ListComponent, {\n    Item,\n});\n","export const listPresets = {\n    mobile: {\n        tag: 'ul',\n        marker: '–',\n    },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_XRPUW\",\"blink\":\"blink_ItqMJ\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type LoaderProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Loader: React.FC<LoaderProps> = ({ className, dataTestId }) => (\n    <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n        <div />\n        <div />\n        <div />\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"textHidden\":\"textHidden_XBnIp\"};","import React, { ChangeEvent, MouseEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport { createTextMaskInputElement, TextMaskInputElement } from 'text-mask-core';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport styles from './index.module.css';\n\n// TODO: заставить rollup добавлять кастомные декларации в сборку\ntype Mask = Array<string | RegExp>;\ntype TextMaskConfig = {\n    currentCaretPosition: number;\n    rawValue: string;\n    previousConformedValue: string;\n    mask?: Mask | ((rawValue: string) => Mask);\n    guide?: boolean;\n    showMask?: boolean;\n    placeholderChar?: string;\n    keepCharPositions?: boolean;\n    pipe?: (\n        conformedValue: string,\n        config: TextMaskConfig,\n    ) => false | string | { value: string; indexesOfPipedChars: number[] };\n};\n\nexport type MaskedInputProps = InputProps & {\n    /**\n     * Маска для поля ввода\n     * https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#mask-array\n     */\n    mask?: TextMaskConfig['mask'];\n\n    /**\n     * Управляет поведением компонента при удалении символов\n     */\n    keepCharPositions?: TextMaskConfig['keepCharPositions'];\n\n    /**\n     * Дает возможность изменить значение поля перед рендером\n     */\n    onBeforeDisplay?: TextMaskConfig['pipe'];\n};\n\n// Символ плейсхолдера не может входить в маску, поэтому вместо пробела используется \\u2000\nexport const PLACEHOLDER_CHAR = '\\u2000';\n\nexport const MaskedInput = React.forwardRef<HTMLInputElement, MaskedInputProps>(\n    (\n        {\n            mask,\n            keepCharPositions = false,\n            value,\n            defaultValue,\n            className,\n            onBeforeDisplay,\n            onChange,\n            onClear,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null);\n        const textMask = useRef<TextMaskInputElement | null>(null);\n\n        const [inputValue, setInputValue] = useState(value || defaultValue || '');\n        // Не показываем сырое значение до применения маски\n        const [textHidden, setTextHidden] = useState(true);\n\n        const update = useCallback(\n            (newValue = '') => {\n                if (textMask.current && inputNode) {\n                    try {\n                        textMask.current.update(newValue);\n                    } catch (e) {\n                        // ignore masking errors\n                    }\n\n                    setInputValue(inputNode.value);\n                }\n            },\n            [inputNode],\n        );\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>) => {\n                update(event.target.value);\n\n                if (onChange) {\n                    onChange(event, {\n                        value: event.target.value,\n                    });\n                }\n            },\n            [onChange, update],\n        );\n\n        const handleClear = useCallback(\n            (event: MouseEvent<HTMLButtonElement>) => {\n                update('');\n                if (onClear) onClear(event);\n            },\n            [onClear, update],\n        );\n\n        useEffect(() => {\n            if (inputNode) {\n                textMask.current = createTextMaskInputElement({\n                    mask,\n                    inputElement: inputNode,\n                    pipe: onBeforeDisplay,\n                    guide: false,\n                    keepCharPositions,\n                    showMask: false,\n                    placeholderChar: PLACEHOLDER_CHAR,\n                    rawValue: '',\n                    currentCaretPosition: 0,\n                    previousConformedValue: '',\n                });\n            }\n        }, [onBeforeDisplay, mask, keepCharPositions, inputNode]);\n\n        useEffect(() => {\n            update(value || defaultValue);\n        }, [value, update, defaultValue]);\n\n        useEffect(() => {\n            setTextHidden(false);\n        }, []);\n\n        return (\n            <Input\n                {...restProps}\n                className={cn(className, { [styles.textHidden]: textHidden })}\n                value={inputValue}\n                onChange={handleInputChange}\n                onClear={handleClear}\n                ref={mergeRefs([ref, setInputNode])}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { Closer } from '@alfalab/core-components-navigation-bar';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { Content } from './components/content/Component';\nimport { Footer } from './components/footer/Component';\nimport { Header } from './components/header/Component';\nimport { Modal } from './Component';\nimport type { ModalResponsiveProps, View } from './typings';\n\nconst ModalResponsiveComponent = forwardRef<HTMLDivElement, ModalResponsiveProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const [view] = useMedia<View>(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return (\n            <Modal ref={ref} {...restProps} view={view}>\n                {children}\n            </Modal>\n        );\n    },\n);\n\nexport const ModalResponsive = Object.assign(ModalResponsiveComponent, {\n    Header,\n    Content,\n    Footer,\n    Closer,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper_UeFvW\",\"component\":\"component_SB8Cu\",\"fullscreen\":\"fullscreen_rEQ4W\",\"s\":\"s_Zxh1t\",\"m\":\"m_iMxS5\",\"l\":\"l_t1yA2\",\"xl\":\"xl_d8fZM\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_deED_\"};","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"appear_LrTZw\",\"enter\":\"enter_AtgMD\",\"appearActive\":\"appearActive_clLT0\",\"enterActive\":\"enterActive_tUpmB\",\"exit\":\"exit_Tq_ZS\",\"exitActive\":\"exitActive_h8Khg\",\"exitDone\":\"exitDone_vF503\"};","import React, { forwardRef, useMemo, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { BaseModal } from '@alfalab/core-components-base-modal';\n\nimport { ResponsiveContext } from './ResponsiveContext';\nimport { ModalDesktopProps, View } from './typings';\n\nimport desktopStyles from './desktop.module.css';\nimport mobileStyles from './mobile.module.css';\nimport transitions from './transitions.module.css';\n\nexport const Modal = forwardRef<HTMLDivElement, ModalDesktopProps & { view: View }>(\n    (\n        {\n            size = 's',\n            fixedPosition,\n            fullscreen,\n            children,\n            className,\n            wrapperClassName,\n            transitionProps = {},\n            view,\n            ...restProps\n        },\n        ref,\n    ) => {\n        // TODO: удалить, после удаления пропсы fullscreen\n        const componentSize = fullscreen ? 'fullscreen' : size;\n\n        const modalRef = useRef<HTMLElement>(null);\n\n        const handleEntered = (node: HTMLElement, isAppearing: boolean) => {\n            if (fixedPosition && modalRef.current) {\n                const content = modalRef.current.querySelector<HTMLElement>(\n                    `.${desktopStyles.component}`,\n                );\n\n                if (content) {\n                    const { marginTop } = window.getComputedStyle(content);\n\n                    content.style.marginTop = marginTop;\n                }\n            }\n\n            if (transitionProps.onEntered) {\n                transitionProps.onEntered(node, isAppearing);\n            }\n        };\n\n        const baseModalProps =\n            view === 'desktop'\n                ? {\n                      ref: mergeRefs([ref, modalRef]),\n                      wrapperClassName: cn(desktopStyles.wrapper, wrapperClassName, {\n                          [desktopStyles.fullscreen]: componentSize === 'fullscreen',\n                      }),\n                      className: cn(\n                          desktopStyles.component,\n                          className,\n                          desktopStyles[componentSize],\n                      ),\n                      backdropProps: {\n                          invisible: componentSize === 'fullscreen',\n                          ...restProps.backdropProps,\n                      },\n                      transitionProps: {\n                          classNames: transitions,\n                          ...transitionProps,\n                          onEntered: handleEntered,\n                      },\n                  }\n                : {\n                      ref,\n                      transitionProps: {\n                          classNames: transitions,\n                          ...transitionProps,\n                      },\n                      className: cn(className, mobileStyles.component),\n                  };\n\n        const contextValue = useMemo(() => ({ size: componentSize, view }), [componentSize, view]);\n\n        return (\n            <ResponsiveContext.Provider value={contextValue}>\n                <BaseModal {...restProps} {...baseModalProps}>\n                    {children}\n                </BaseModal>\n            </ResponsiveContext.Provider>\n        );\n    },\n);\n","import { BaseModalContext } from '@alfalab/core-components-base-modal';\n\nexport const ModalContext = BaseModalContext;\n","import React from 'react';\n\nimport type { TResponsiveModalContext } from './typings';\n\nexport const ResponsiveContext = React.createContext<TResponsiveModalContext>({\n    view: 'desktop',\n    size: 's',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"s\":\"s_Ncl87\",\"m\":\"m_YExQ4\",\"l\":\"l_gIHAZ\",\"xl\":\"xl_hYNMd\",\"fullscreen\":\"fullscreen_iip2_\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_kFpdR\",\"withHeader\":\"withHeader_ghmvm\",\"flex\":\"flex_lRFJp\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_ZF1C_\"};","import React, { FC, Ref, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\nimport { ContentProps } from '../../typings';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport const Content: FC<ContentProps> = ({ children, flex, className }) => {\n    const { contentRef, hasHeader } = useContext(ModalContext);\n    const { size, view } = useContext(ResponsiveContext);\n\n    return (\n        <div\n            className={cn(styles.content, className, {\n                [styles.flex]: flex,\n                [styles.withHeader]: hasHeader,\n                [desktopStyles[size]]: view === 'desktop' && size,\n                [mobileStyles.content]: view === 'mobile',\n            })}\n            ref={contentRef as Ref<HTMLDivElement>}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_RWnDU\",\"sticky\":\"sticky_Oj5Qu\",\"fullscreen\":\"fullscreen_KxKrO\",\"s\":\"s_Vfikl\",\"m\":\"m_FlaoK\",\"l\":\"l_DoD4w\",\"xl\":\"xl_Ntozq\"};","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_Ztyb3\",\"sticky\":\"sticky_W13Fn\",\"highlighted\":\"highlighted_cHU5Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"column\":\"column_MRxXG\",\"gap-16\":\"gap-16_hOErc\",\"gap-24\":\"gap-24_ZmSnR\",\"gap-32\":\"gap-32_FjKeu\",\"column-mobile\":\"column-mobile_RfNYK\",\"start\":\"start_FQhkR\",\"center\":\"center_ru3zB\",\"space-between\":\"space-between_o5htd\"};","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_v_jwp\",\"sticky\":\"sticky_rBGBQ\"};","import React, { FC, ReactNode, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport layoutStyles from './layout.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport type FooterProps = {\n    /**\n     * Контент футера\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Фиксирует футер\n     */\n    sticky?: boolean;\n\n    /**\n     * Выравнивание элементов футера\n     */\n    layout?: 'start' | 'center' | 'space-between' | 'column';\n\n    /**\n     * Отступы между элементами футера\n     */\n    gap?: 16 | 24 | 32;\n};\n\nexport const Footer: FC<FooterProps> = ({ children, className, sticky, layout = 'start', gap }) => {\n    const { footerHighlighted, setHasFooter } = useContext(ModalContext);\n    const { size, view } = useContext(ResponsiveContext);\n\n    useEffect(() => {\n        setHasFooter(true);\n    }, [setHasFooter]);\n\n    return (\n        <div\n            className={cn(\n                styles.footer,\n                className,\n                layoutStyles[layout],\n                gap && layoutStyles[`gap-${gap}`],\n                {\n                    [styles.highlighted]: sticky && footerHighlighted,\n                    [styles.sticky]: sticky,\n                    [desktopStyles.footer]: view === 'desktop',\n                    [desktopStyles.sticky]: view === 'desktop' && sticky,\n                    [desktopStyles[size]]: view === 'desktop',\n                    [mobileStyles.footer]: view === 'mobile',\n                    [mobileStyles.sticky]: view === 'mobile' && sticky,\n                    [layoutStyles[`${layout}-mobile`]]: view === 'mobile',\n                },\n            )}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_p28h1\",\"content\":\"content_sMxQ9\",\"s\":\"s_GHQwK\",\"m\":\"m_FWwDT\",\"l\":\"l_sI_c0\",\"xl\":\"xl_sTIcp\",\"fullscreen\":\"fullscreen_Gy4BX\",\"sticky\":\"sticky_tAsHv\"};","// extracted by mini-css-extract-plugin\nexport default {\"highlighted\":\"highlighted_A5oYe\",\"sticky\":\"sticky_U72b8\",\"hasContent\":\"hasContent_xQ0kf\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_ReV_7\",\"sticky\":\"sticky_Zw9wp\",\"content\":\"content_I3W29\"};","import React, { FC, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { NavigationBar, NavigationBarProps } from '@alfalab/core-components-navigation-bar';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport type HeaderProps = Omit<NavigationBarProps, 'size' | 'view' | 'parentRef'>;\n\nexport const Header: FC<HeaderProps> = ({\n    className,\n    sticky,\n    title,\n    children,\n    contentClassName,\n    hasCloser = true,\n    ...restProps\n}) => {\n    const { setHasHeader, headerHighlighted, parentRef, onClose } = useContext(ModalContext);\n    const { view, size } = useContext(ResponsiveContext);\n\n    useEffect(() => {\n        setHasHeader(true);\n    }, [setHasHeader]);\n\n    const hasContent = Boolean(title || children);\n\n    return (\n        <NavigationBar\n            {...restProps}\n            scrollableParentRef={parentRef}\n            hasCloser={hasCloser}\n            sticky={sticky}\n            view={view}\n            title={title}\n            onClose={onClose}\n            className={cn(className, {\n                [styles.highlighted]: hasContent && sticky && headerHighlighted,\n                [styles.sticky]: sticky,\n                [styles.hasContent]: hasContent,\n                [desktopStyles.header]: view === 'desktop',\n                [desktopStyles.sticky]: view === 'desktop' && sticky,\n                [desktopStyles[size]]: view === 'desktop',\n                [mobileStyles.header]: view === 'mobile',\n                [mobileStyles.sticky]: view === 'mobile' && sticky,\n            })}\n            contentClassName={cn(contentClassName, {\n                [desktopStyles.content]: view === 'desktop',\n                [mobileStyles.content]: view === 'mobile',\n            })}\n        >\n            {children}\n        </NavigationBar>\n    );\n};\n","import React, { FC, Fragment, ReactNode, useEffect } from 'react';\n\nimport { useMatchMedia } from './useMatchMedia';\nimport { isPointerEventsSupported, isTouchSupported } from './utils';\n\nconst IS_BROWSER = typeof window !== 'undefined';\nconst SUPPORTS_TOUCH = IS_BROWSER && (isPointerEventsSupported() || isTouchSupported());\n\nexport type MqProps = {\n    /**\n     * Media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n     */\n    query?: string;\n\n    /**\n     * Запрос на поддержку тач-событий\n     */\n    touch?: boolean;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n\n    /**\n     * Обработчик изменений в совпадении запросов\n     */\n    onMatchChange?: (isMatched: boolean) => void;\n};\n\nexport const Mq: FC<MqProps> = ({ children, query = '', touch, onMatchChange }) => {\n    const [queryMatches] = useMatchMedia(query);\n\n    const touchPass = touch === undefined ? true : touch === SUPPORTS_TOUCH;\n\n    const matches = touchPass && (!query || queryMatches);\n\n    useEffect(() => {\n        if (onMatchChange) {\n            onMatchChange(matches);\n        }\n    }, [matches, onMatchChange]);\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <Fragment>{matches && IS_BROWSER ? children : null}</Fragment>;\n};\n","import { useState } from 'react';\n\nimport { useLayoutEffect_SAFE_FOR_SSR } from '@alfalab/hooks';\n\nimport { getMatchMedia, releaseMatchMedia } from './utils';\n\n/**\n * Хук для медиа запросов.\n * @param query media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n * @param defaultValue Значение по-умолчанию.\n */\nexport const useMatchMedia = (query: string, defaultValue: boolean | (() => boolean) = false) => {\n    const [matches, setMatches] = useState(defaultValue);\n\n    useLayoutEffect_SAFE_FOR_SSR(() => {\n        const mql = getMatchMedia(query);\n\n        const handleMatchChange = () => setMatches(mql.matches);\n\n        handleMatchChange();\n\n        if (mql.addListener) {\n            mql.addListener(handleMatchChange);\n        } else {\n            mql.addEventListener('change', handleMatchChange);\n        }\n\n        return () => {\n            if (mql.removeListener) {\n                mql.removeListener(handleMatchChange);\n            } else {\n                mql.removeEventListener('change', handleMatchChange);\n            }\n\n            releaseMatchMedia(query);\n        };\n    }, [query]);\n\n    return [matches];\n};\n","import MqList from './mq.json';\n\ntype AvailableMediaQueries = keyof typeof MqList;\n\ntype QueriesPool = Record<string, MediaQueryList>;\n\ntype Counters = Record<string, number>;\n\n// TODO: перенести в alfalab/utils\nconst pool: QueriesPool = {};\nconst refCounters: Counters = {};\n\n/**\n * Возвращает MediaQueryList для заданного media-выражения.\n *\n * @param queryProp media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n */\nexport function getMatchMedia(queryProp: string): MediaQueryList {\n    const query = MqList[queryProp as AvailableMediaQueries] || queryProp;\n\n    if (pool[query]) {\n        refCounters[query] += 1;\n    } else {\n        pool[query] = window.matchMedia(query);\n        refCounters[query] = 1;\n    }\n\n    return pool[query];\n}\n\n/**\n * Удаляет MediaQueryList.\n *\n * @param queryProp media выражение или кастомный запрос из `mq.json`, например `--mobile`.\n */\nexport function releaseMatchMedia(queryProp: string): void {\n    const query = MqList[queryProp as AvailableMediaQueries] || queryProp;\n\n    refCounters[query] -= 1;\n\n    if (pool[query] && refCounters[query] === 0) {\n        delete pool[query];\n        delete refCounters[query];\n    }\n}\n\n/**\n * Возвращает `true`, если есть поддержка `Pointer Events`\n */\nexport function isPointerEventsSupported() {\n    return 'PointerEvent' in window || 'msPointerEnabled' in window.navigator;\n}\n\n/**\n * Возвращает `true`, если есть поддержка `Touch Events`\n */\nexport function isTouchSupported() {\n    return (\n        'ontouchstart' in window ||\n        window.navigator.maxTouchPoints > 0 ||\n        // eslint-disable-next-line\n        (window.navigator as any).msMaxTouchPoints > 0\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_SFZbO\",\"mobileComponent\":\"mobileComponent_Urtqx\",\"flex\":\"flex_MwBNC\",\"iconWrapper\":\"iconWrapper_RFwkf\",\"text\":\"text_X8HkJ\",\"mobileWrapper\":\"mobileWrapper_tyKbs\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Button } from '@alfalab/core-components-button';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { ArrowLeftMediumMIcon } from '@alfalab/icons-glyph/ArrowLeftMediumMIcon';\nimport { ArrowLeftMIcon } from '@alfalab/icons-glyph/ArrowLeftMIcon';\n\nimport styles from './index.module.css';\n\nexport interface BackArrowAddonProps extends React.HTMLAttributes<HTMLButtonElement> {\n    /**\n     * Текст после иконки\n     */\n    text?: string;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Вид компонента\n     */\n    view: 'mobile' | 'desktop';\n\n    /**\n     * Прозрачность текста\n     */\n    textOpacity?: number;\n\n    /**\n     * Обработчик клика\n     */\n    onClick?: () => void;\n}\n\nexport const BackArrowAddon: React.FC<BackArrowAddonProps> = ({\n    text = 'Назад',\n    onClick,\n    className,\n    textOpacity = 1,\n    view,\n    ...htmlAttributes\n}) => {\n    const Icon = view === 'desktop' ? ArrowLeftMediumMIcon : ArrowLeftMIcon;\n\n    return (\n        <Button\n            view='ghost'\n            size={view === 'mobile' ? 'xxs' : 's'}\n            onClick={onClick}\n            aria-label='назад'\n            className={cn(\n                styles.component,\n                { [styles.mobileComponent]: view === 'mobile' },\n                className,\n            )}\n            {...htmlAttributes}\n        >\n            <div className={styles.flex}>\n                <div\n                    className={cn(styles.iconWrapper, {\n                        [styles.mobileWrapper]: view === 'mobile',\n                    })}\n                >\n                    <Icon />\n                </div>\n                {textOpacity > 0 && (\n                    <Typography.Text\n                        className={styles.text}\n                        view={view === 'desktop' ? 'primary-large' : 'component'}\n                        weight='medium'\n                        style={{ opacity: textOpacity }}\n                    >\n                        {text}\n                    </Typography.Text>\n                )}\n            </div>\n        </Button>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"closer\":\"closer_XFkDP\",\"button\":\"button__K5zq\",\"mobile\":\"mobile_ataB1\",\"sticky\":\"sticky_Q2q7w\"};","import React, { ButtonHTMLAttributes, ElementType, FC } from 'react';\nimport cn from 'classnames';\n\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { CrossHeavyMIcon } from '@alfalab/icons-glyph/CrossHeavyMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\n\nimport styles from './index.module.css';\n\nexport interface CloserProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    /**\n     * Вид компонента\n     */\n    view: 'desktop' | 'mobile';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Позиция крестика\n     */\n    align?: 'left' | 'right';\n\n    /**\n     * Фиксирует крестик\n     */\n    sticky?: boolean;\n\n    /**\n     * Иконка\n     */\n    icon?: ElementType;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Коллбэк закрытия.\n     */\n    onClose?: (\n        event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n        reason?: 'backdropClick' | 'escapeKeyDown' | 'closerClick',\n    ) => void;\n}\n\nexport const Closer: FC<CloserProps> = ({\n    view,\n    className,\n    sticky,\n    icon = view === 'desktop' ? CrossHeavyMIcon : CrossMIcon,\n    dataTestId,\n    onClose,\n    ...restProps\n}) => {\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClose?.(event, 'closerClick');\n    };\n\n    return (\n        <div\n            className={cn(styles.closer, className, {\n                [styles.sticky]: sticky,\n            })}\n        >\n            <IconButton\n                size={view === 'desktop' ? 's' : 'xs'}\n                className={cn(styles.button, { [styles.mobile]: view === 'mobile' })}\n                aria-label='закрыть'\n                onClick={handleClick}\n                icon={icon}\n                dataTestId={dataTestId}\n                {...restProps}\n            />\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_M7HbQ\",\"backgroundImage\":\"backgroundImage_S_aJf\",\"mainLine\":\"mainLine_Rjfok\",\"mainLineSticky\":\"mainLineSticky_vDDkv\",\"mainLineWithImageBg\":\"mainLineWithImageBg_W8KXy\",\"content\":\"content_fhDJa\",\"withBothAddons\":\"withBothAddons_S4PoF\",\"withCompactTitle\":\"withCompactTitle_yNLPw\",\"children\":\"children_euV39\",\"title\":\"title_T5iLd\",\"contentOnBotDesktop\":\"contentOnBotDesktop_NoygE\",\"contentOnBotMobile\":\"contentOnBotMobile_Rgs8g\",\"subtitle\":\"subtitle_qZ7GZ\",\"addonsWrapper\":\"addonsWrapper_NM40V\",\"rightAddons\":\"rightAddons_TvDJ0\",\"addon\":\"addon_EiOTV\",\"bottomAddons\":\"bottomAddons_TgNOu\",\"closer\":\"closer_gTVx0\",\"left\":\"left_eFWha\",\"center\":\"center_dcbw0\",\"trim\":\"trim_OdgXt\"};","/* eslint-disable complexity */\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useLayoutEffect_SAFE_FOR_SSR } from '@alfalab/hooks';\n\nimport { getDataTestId } from '../../utils';\n\nimport { BackArrowAddon } from './components/back-arrow-addon';\nimport { Closer } from './components/closer';\nimport type { ContentParams, NavigationBarProps } from './types';\n\nimport styles from './index.module.css';\n\nconst ADDONS_HEIGHT = 48;\n\nexport const NavigationBar = forwardRef<HTMLDivElement, NavigationBarProps>(\n    (\n        {\n            addonClassName,\n            className,\n            contentClassName,\n            closerClassName,\n            leftAddons,\n            rightAddons,\n            bottomAddons,\n            bottomAddonsClassName,\n            children,\n            align = 'left',\n            trim = true,\n            title,\n            titleSize = 'default',\n            subtitle,\n            hasCloser,\n            hasBackButton,\n            backButtonClassName,\n            dataTestId,\n            imageUrl,\n            closerIcon,\n            onClose,\n            view,\n            scrollableParentRef,\n            sticky,\n            onBack,\n        },\n        ref,\n    ) => {\n        const [scrollTop, setScrollTop] = useState(0);\n        const [titleMargin, setTitleMargin] = useState({ left: 0, right: 0 });\n        const bottomContentRef = useRef<HTMLDivElement>(null);\n        const headerRef = useRef<HTMLDivElement>(null);\n        const mainLinePaddingTopRef = useRef<string>('0px');\n        const leftAddonsRef = useRef<HTMLDivElement>(null);\n        const rightAddonsRef = useRef<HTMLDivElement>(null);\n\n        const compactTitle = view === 'mobile' && titleSize === 'compact';\n        const hasLeftPart = Boolean(leftAddons || hasBackButton);\n        const hasRightPart = Boolean(rightAddons || hasCloser);\n        const hasContent = Boolean(title || children);\n        const withAnimation = Boolean(view === 'mobile' && hasLeftPart && sticky && !compactTitle);\n        const showContentOnTop = hasContent && (compactTitle || !hasLeftPart);\n        const showContentOnBot = hasContent && !compactTitle && hasLeftPart;\n        const showStaticContentOnTop = !withAnimation && showContentOnTop;\n        const showStaticContentOnBot = !withAnimation && showContentOnBot;\n        const showAnimatedContentOnTop =\n            withAnimation && showContentOnBot && scrollTop > ADDONS_HEIGHT;\n        const showAnimatedContentOnBot = withAnimation && showContentOnBot;\n        const headerPaddingTop = mainLinePaddingTopRef.current;\n\n        useLayoutEffect_SAFE_FOR_SSR(() => {\n            if (align === 'center' && (showStaticContentOnTop || showAnimatedContentOnTop)) {\n                const leftAddonsWidth = leftAddonsRef.current?.offsetWidth || 0;\n                const rightAddonsWidth = rightAddonsRef.current?.offsetWidth || 0;\n\n                const marginSize = Math.abs(rightAddonsWidth - leftAddonsWidth);\n                const shouldAddLeftMargin = rightAddonsWidth - leftAddonsWidth > 0;\n\n                setTitleMargin((prev) => {\n                    const newState = shouldAddLeftMargin\n                        ? { left: marginSize, right: 0 }\n                        : { left: 0, right: marginSize };\n\n                    const isStateChanged =\n                        prev.left !== newState.left || prev.right !== newState.right;\n\n                    return isStateChanged ? newState : prev;\n                });\n            }\n        }, [\n            align,\n            showStaticContentOnTop,\n            showAnimatedContentOnTop,\n            leftAddons,\n            rightAddons,\n            hasBackButton,\n            hasCloser,\n        ]);\n\n        useEffect(() => {\n            const parent = scrollableParentRef?.current;\n\n            const handleScroll = (ev: Event) => {\n                const divElement = ev.target as HTMLDivElement;\n\n                setScrollTop(divElement.scrollTop);\n            };\n\n            if (withAnimation && headerRef.current) {\n                mainLinePaddingTopRef.current = getComputedStyle(headerRef.current).paddingTop;\n            }\n\n            if (withAnimation && parent) {\n                parent.addEventListener('scroll', handleScroll);\n            }\n\n            return () => parent?.removeEventListener('scroll', handleScroll);\n        }, [scrollableParentRef, withAnimation]);\n\n        const renderBackButton = () => {\n            let textOpacity = 1;\n\n            if (withAnimation) {\n                const height = hasContent ? ADDONS_HEIGHT : ADDONS_HEIGHT / 2;\n\n                textOpacity = Math.max(0, 1 - scrollTop / height);\n            } else if (compactTitle) {\n                textOpacity = 0;\n            }\n\n            return (\n                <div className={cn(styles.addon, backButtonClassName)}>\n                    <BackArrowAddon\n                        textOpacity={textOpacity}\n                        view={view}\n                        onClick={onBack}\n                        data-test-id={getDataTestId(dataTestId, 'back-button')}\n                    />\n                </div>\n            );\n        };\n\n        const renderContent = (args: ContentParams = {}) => {\n            const { extraClassName, wrapperRef, style, hidden } = args;\n\n            return (\n                <div\n                    style={{ ...style, visibility: hidden ? 'hidden' : 'visible' }}\n                    ref={wrapperRef}\n                    className={cn(styles.content, extraClassName, contentClassName, styles[align], {\n                        [styles.trim]: trim,\n                        [styles.withCompactTitle]: view === 'mobile' && compactTitle && hasContent,\n                    })}\n                    aria-hidden={hidden}\n                >\n                    {children && <div className={styles.children}>{children}</div>}\n                    {title && (\n                        <div\n                            className={styles.title}\n                            data-test-id={hidden ? undefined : getDataTestId(dataTestId, 'title')}\n                        >\n                            {title}\n                        </div>\n                    )}\n                    {compactTitle && subtitle && <div className={styles.subtitle}>{subtitle}</div>}\n                </div>\n            );\n        };\n\n        const renderCloser = () => (\n            <div className={cn(styles.addon, styles.closer, closerClassName)}>\n                <Closer\n                    view={view}\n                    icon={closerIcon}\n                    dataTestId={getDataTestId(dataTestId, 'closer')}\n                    onClose={onClose}\n                />\n            </div>\n        );\n\n        return (\n            <div\n                ref={mergeRefs([ref, headerRef])}\n                className={cn(styles.header, className, { [styles.backgroundImage]: imageUrl })}\n                data-test-id={getDataTestId(dataTestId)}\n                style={{\n                    ...(imageUrl && { backgroundImage: `url(${imageUrl})` }),\n                    ...(withAnimation &&\n                        bottomContentRef.current && {\n                            top: -bottomContentRef.current.scrollHeight,\n                        }),\n                }}\n            >\n                <div\n                    className={cn(styles.mainLine, {\n                        [styles.mainLineSticky]: withAnimation,\n                        [styles.mainLineWithImageBg]: imageUrl,\n                    })}\n                    style={{\n                        ...(withAnimation\n                            ? {\n                                  marginTop: `-${headerPaddingTop}`,\n                                  paddingTop: headerPaddingTop,\n                              }\n                            : null),\n                    }}\n                >\n                    {hasLeftPart && (\n                        <div className={styles.addonsWrapper} ref={leftAddonsRef}>\n                            {hasBackButton && renderBackButton()}\n                            {leftAddons && (\n                                <div className={cn(styles.addon, addonClassName)}>{leftAddons}</div>\n                            )}\n                        </div>\n                    )}\n\n                    {showStaticContentOnTop &&\n                        renderContent({\n                            ...(align === 'center'\n                                ? {\n                                      style: {\n                                          marginLeft: titleMargin.left,\n                                          marginRight: titleMargin.right,\n                                      },\n                                  }\n                                : null),\n                        })}\n\n                    {showAnimatedContentOnTop &&\n                        renderContent({\n                            extraClassName: styles.withBothAddons,\n                            style: {\n                                opacity: Math.min(1, (scrollTop - ADDONS_HEIGHT) / ADDONS_HEIGHT),\n                                ...(align === 'center'\n                                    ? {\n                                          marginLeft: titleMargin.left,\n                                          marginRight: titleMargin.right,\n                                      }\n                                    : null),\n                            },\n                        })}\n\n                    {hasRightPart && (\n                        <div\n                            className={cn(styles.addonsWrapper, styles.rightAddons)}\n                            ref={rightAddonsRef}\n                        >\n                            {rightAddons && (\n                                <div className={cn(styles.addon, addonClassName)}>\n                                    {rightAddons}\n                                </div>\n                            )}\n\n                            {hasCloser && renderCloser()}\n                        </div>\n                    )}\n                </div>\n\n                {showAnimatedContentOnBot &&\n                    renderContent({\n                        wrapperRef: bottomContentRef,\n                        extraClassName: styles.underAddons,\n                        style: { opacity: Math.max(0, 1 - scrollTop / ADDONS_HEIGHT) },\n                        hidden: scrollTop / ADDONS_HEIGHT > 1,\n                    })}\n\n                {showStaticContentOnBot &&\n                    renderContent({\n                        extraClassName: cn({\n                            [styles.contentOnBotDesktop]: view === 'desktop',\n                            [styles.contentOnBotMobile]: view === 'mobile',\n                        }),\n                    })}\n\n                {bottomAddons && (\n                    <div className={cn(styles.bottomAddons, bottomAddonsClassName)}>\n                        {bottomAddons}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","import { cloneElement, FC, ReactElement, useCallback, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { NotificationProps as CoreNotificationProps } from '@alfalab/core-components-notification';\n\nexport type NotificationElement = ReactElement<CoreNotificationProps & { id: string }>;\n\ntype NotificationProps = {\n    element: NotificationElement;\n    className: string;\n    onRemoveNotification: (id: string) => void;\n};\n\nexport const Notification: FC<NotificationProps> = ({\n    element,\n    className,\n    onRemoveNotification,\n}) => {\n    const { onClose, onCloseTimeout } = element.props;\n\n    const handleClose = useCallback(() => {\n        if (onClose) {\n            onClose();\n        }\n\n        onRemoveNotification(element.props.id);\n    }, [onClose, onRemoveNotification, element.props.id]);\n\n    const handleCloseTimeout = useCallback(() => {\n        if (onCloseTimeout) {\n            onCloseTimeout();\n        }\n\n        onRemoveNotification(element.props.id);\n    }, [element.props.id, onCloseTimeout, onRemoveNotification]);\n\n    const notificationProps = useMemo<CoreNotificationProps>(\n        () => ({\n            ...element.props,\n            visible: true,\n            className: cn(className, element.props.className),\n            usePortal: false,\n            offset: 0,\n            onClose: handleClose,\n            onCloseTimeout: handleCloseTimeout,\n        }),\n        [element, handleClose, handleCloseTimeout, className],\n    );\n\n    return cloneElement(element, notificationProps);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_mrfIK\",\"notification\":\"notification_kwAwy\",\"enter\":\"enter_DA82k\",\"enterActive\":\"enterActive_mACZa\",\"exit\":\"exit_OvjkS\",\"exitActive\":\"exitActive_lKvKF\"};","import React, { forwardRef, HTMLAttributes } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { Portal, PortalProps } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\n\nimport { Notification, NotificationElement } from './components';\n\nimport styles from './index.module.css';\n\nexport type NotificationManagerProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Массив нотификаций.\n     * В нотификации обязательно передавайте id.\n     */\n    notifications: NotificationElement[];\n\n    /**\n     * Дополнительный класс (native prop)\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Удаление нотификации\n     */\n    onRemoveNotification: (id: string) => void;\n\n    /**\n     * Нода, компонент или функция возвращающая их\n     *\n     * Контейнер к которому будут добавляться порталы\n     */\n    container?: PortalProps['getPortalContainer'];\n};\n\nconst CSS_TRANSITION_CLASS_NAMES = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n};\n\nexport const NotificationManager = forwardRef<HTMLDivElement, NotificationManagerProps>(\n    (\n        {\n            notifications,\n            className,\n            dataTestId,\n            zIndex = stackingOrder.TOAST,\n            style = {},\n            onRemoveNotification,\n            container,\n            ...restProps\n        },\n        ref,\n    ) => (\n        <Stack value={zIndex}>\n            {(computedZIndex) => (\n                <Portal getPortalContainer={container}>\n                    <div\n                        className={cn(styles.component, className)}\n                        ref={ref}\n                        data-test-id={dataTestId}\n                        style={{\n                            zIndex: computedZIndex,\n                            ...style,\n                        }}\n                        {...restProps}\n                    >\n                        <TransitionGroup>\n                            {notifications.map((element) => (\n                                <CSSTransition\n                                    key={element.props.id}\n                                    timeout={400}\n                                    classNames={CSS_TRANSITION_CLASS_NAMES}\n                                    unmountOnExit={true}\n                                >\n                                    <Notification\n                                        element={element}\n                                        className={styles.notification}\n                                        onRemoveNotification={onRemoveNotification}\n                                    />\n                                </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n                    </div>\n                </Portal>\n            )}\n        </Stack>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"notificationComponent\":\"notificationComponent_aMT9v\",\"isVisible\":\"isVisible_MQzl0\",\"isClosing\":\"isClosing_InZXy\",\"toastContent\":\"toastContent_KqMoG\",\"actionSection\":\"actionSection_c73VH\",\"closeButton\":\"closeButton_ciTbX\"};","import React, {\n    forwardRef,\n    Fragment,\n    MouseEvent,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useSwipeable } from 'react-swipeable';\nimport cn from 'classnames';\nimport elementClosest from 'element-closest';\n\nimport { Portal } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\nimport { ToastPlate, ToastPlateProps } from '@alfalab/core-components-toast-plate';\n\nimport { useClickOutside } from './utils';\n\nimport styles from './index.module.css';\n\nexport type NotificationProps = ToastPlateProps & {\n    /**\n     * Управление видимостью компонента\n     */\n    visible?: boolean;\n\n    /**\n     * Отступ от верхнего края\n     */\n    offset?: number;\n\n    /**\n     * Время до закрытия компонента\n     */\n    autoCloseDelay?: number | null;\n\n    /**\n     * Использовать портал\n     */\n    usePortal?: boolean;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Обработчик события истечения времени до закрытия компонента\n     */\n    onCloseTimeout?: () => void;\n\n    /**\n     * Обработчик события наведения курсора на компонент\n     */\n    onMouseEnter?: (event?: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик события снятия курсора с компонента\n     */\n    onMouseLeave?: (event?: MouseEvent<HTMLDivElement>) => void;\n\n    /**\n     * Обработчик клика вне компонента\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClickOutside?: (event?: MouseEvent<any>) => void;\n};\n\nconst notificationClassNameSelector = `.${styles.notificationComponent}`;\n\nexport const Notification = forwardRef<HTMLDivElement, NotificationProps>(\n    (\n        {\n            className,\n            actionSectionClassName,\n            closerClassName,\n            children,\n            visible,\n            offset = 108,\n            hasCloser = true,\n            autoCloseDelay = 5000,\n            usePortal = true,\n            zIndex = stackingOrder.TOAST,\n            style,\n            onClose,\n            onCloseTimeout,\n            onMouseEnter,\n            onMouseLeave,\n            onClickOutside,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const notificationRef = useRef<HTMLDivElement>(null);\n        const autoCloseTimeoutRef = useRef(0);\n        const closeTimeoutRef = useRef(0);\n\n        const [isClosing, setIsClosing] = useState(false);\n\n        const startAutoCloseTimer = useCallback(() => {\n            if (autoCloseDelay !== null) {\n                autoCloseTimeoutRef.current = window.setTimeout(() => {\n                    if (onCloseTimeout) {\n                        onCloseTimeout();\n                    }\n                }, autoCloseDelay);\n            }\n        }, [autoCloseDelay, onCloseTimeout]);\n\n        const stopAutoCloseTimer = useCallback(() => {\n            clearTimeout(autoCloseTimeoutRef.current);\n        }, []);\n\n        useEffect(\n            () => () => {\n                clearTimeout(closeTimeoutRef.current);\n            },\n            [],\n        );\n\n        useEffect(() => {\n            elementClosest(window);\n        }, []);\n\n        useEffect(() => {\n            if (visible) {\n                startAutoCloseTimer();\n            }\n\n            return () => {\n                stopAutoCloseTimer();\n            };\n        }, [startAutoCloseTimer, stopAutoCloseTimer, visible]);\n\n        const handleMouseEnter = useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n                stopAutoCloseTimer();\n\n                if (onMouseEnter) {\n                    onMouseEnter(event);\n                }\n            },\n            [onMouseEnter, stopAutoCloseTimer],\n        );\n\n        const handleMouseLeave = useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n                stopAutoCloseTimer();\n                startAutoCloseTimer();\n\n                if (onMouseLeave) {\n                    onMouseLeave(event);\n                }\n            },\n            [onMouseLeave, startAutoCloseTimer, stopAutoCloseTimer],\n        );\n\n        const handleOutsideClick = useCallback(\n            (event: React.MouseEvent | React.TouchEvent) => {\n                const isTargetNotification = !!(event.target as Element).closest(\n                    notificationClassNameSelector,\n                );\n\n                /*\n                 * проверка isTargetNotification нужна для предотвращения срабатывания handleOutsideClick\n                 * при клике на другие нотификации, если их несколько на странице\n                 */\n                if (onClickOutside && visible && !isTargetNotification) {\n                    onClickOutside(event as React.MouseEvent);\n                }\n            },\n            [onClickOutside, visible],\n        );\n\n        useClickOutside(notificationRef, handleOutsideClick);\n\n        const swipeableHandlers = useSwipeable({\n            onSwiped: ({ dir }) => {\n                if (onClose && ['Left', 'Right', 'Up'].includes(dir)) {\n                    setIsClosing(true);\n\n                    closeTimeoutRef.current = window.setTimeout(() => {\n                        setIsClosing(false);\n                        onClose();\n                    }, 100);\n                }\n            },\n            delta: 100,\n        });\n\n        const Wrapper = usePortal ? Portal : Fragment;\n\n        return (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <Wrapper>\n                        <div {...swipeableHandlers}>\n                            <ToastPlate\n                                className={cn(\n                                    styles.notificationComponent,\n                                    {\n                                        [styles.isVisible]: visible,\n                                        [styles.isClosing]: isClosing,\n                                    },\n                                    className,\n                                )}\n                                contentClassName={styles.toastContent}\n                                actionSectionClassName={cn(\n                                    actionSectionClassName,\n                                    styles.actionSection,\n                                )}\n                                closerClassName={cn(styles.closeButton, closerClassName)}\n                                style={{\n                                    top: offset,\n                                    zIndex: computedZIndex,\n                                    ...style,\n                                }}\n                                onMouseEnter={handleMouseEnter}\n                                onMouseLeave={handleMouseLeave}\n                                ref={mergeRefs([ref, notificationRef])}\n                                role={visible ? 'alert' : undefined}\n                                hasCloser={hasCloser}\n                                onClose={onClose}\n                                {...restProps}\n                            >\n                                {children}\n                            </ToastPlate>\n                        </div>\n                    </Wrapper>\n                )}\n            </Stack>\n        );\n    },\n);\n","import React from 'react';\n\n/*\n * Дублирую хук из @alfalab/hooks, так как не подходят названия событий\n * https://github.com/core-ds/utils/blob/develop/packages/hooks/src/useClickOutside/hook.ts\n * issue завел, когда изменения будут реализованы, отсюда можно будет удалить\n * https://github.com/core-ds/utils/issues/35\n */\nexport function useClickOutside(\n    ref: React.RefObject<HTMLElement>,\n    cb: (e: React.MouseEvent | React.TouchEvent) => void,\n): void {\n    React.useEffect(() => {\n        // eslint-disable-next-line\n        const handler = (event: any) => {\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            cb(event);\n        };\n\n        document.addEventListener('click', handler);\n        document.addEventListener('touchend', handler);\n\n        return () => {\n            document.removeEventListener('click', handler);\n            document.removeEventListener('touchend', handler);\n        };\n    }, [ref, cb]);\n}\n","export const SIGNS = ['-', '+'];\nexport const SEPARATORS = [',', '.'];\n\nexport function createSeparatorsRegExp() {\n    return new RegExp(`[${SEPARATORS.map((s) => `\\\\${s}`).join('')}]`, 'g');\n}\n\nconst getNumberRegExp = (fractionLength?: number): RegExp => {\n    let reStr = '[0-9]+';\n\n    if (fractionLength !== 0) {\n        reStr = `${reStr}[${SEPARATORS.map((s) => `\\\\${s}`).join('')}]?[0-9]{0,${\n            fractionLength || Number.MAX_SAFE_INTEGER\n        }}`;\n    }\n\n    return new RegExp(`^${reStr}$`);\n};\n\n/**\n * Проверка вводимых значений.\n */\nexport const getAllowedValue = ({\n    value = '',\n    fractionLength,\n    separator,\n    allowSigns,\n}: {\n    value: string;\n    fractionLength?: number;\n    separator: string;\n    allowSigns: boolean;\n}): string => {\n    const sign = allowSigns && SIGNS.some((s) => s === value[0]) ? value[0] : '';\n    const testedValue = sign ? value.slice(1) : value;\n\n    if (getNumberRegExp(fractionLength).test(testedValue)) {\n        return value;\n    }\n\n    const [majorPart, minorPart] = testedValue\n        .split(separator)\n        .map((v) => v.replace(/[^0-9]/g, ''));\n\n    return `${sign}${majorPart}${minorPart ? separator + minorPart.slice(0, fractionLength) : ''}`;\n};\n","import React, { ChangeEvent, FocusEvent, KeyboardEvent, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport { createSeparatorsRegExp, getAllowedValue, SEPARATORS, SIGNS } from './utils';\n\nexport type NumberInputProps = Omit<InputProps, 'value' | 'onChange' | 'type'> & {\n    /**\n     * Значение поля ввода\n     */\n    value?: string | number | null;\n\n    /**\n     * Учитывать знаки '+' и '-'\n     */\n    allowSigns?: boolean;\n\n    /**\n     * Разделитель ',' или '.'\n     */\n    separator?: '.' | ',';\n\n    /**\n     * Количество символов после разделителя\n     */\n    fractionLength?: number;\n\n    /**\n     * Обработчик события изменения значения\n     */\n    onChange?: (\n        e: React.ChangeEvent<HTMLInputElement>,\n        payload: {\n            /**\n             * Числовое значение инпута\n             */\n            value: number | null;\n            /**\n             * Строковое значение инпута\n             * Используйте для изменения значения инпута\n             */\n            valueString: string;\n        },\n    ) => void;\n};\n\nexport const NumberInput = React.forwardRef<HTMLInputElement, NumberInputProps>(\n    (\n        {\n            value: propValue,\n            onChange,\n            onBlur,\n            allowSigns = true,\n            separator = ',',\n            fractionLength,\n            defaultValue,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = propValue === undefined;\n        const inputRef = useRef<HTMLInputElement>(null);\n        const [value, setValue] = useState<string>(defaultValue || '');\n\n        const getNumberValueFromStr = (valueString: string) => {\n            if (valueString === '') return null;\n\n            if (valueString.includes(',')) {\n                return parseFloat(valueString.replace(',', '.'));\n            }\n\n            return parseFloat(valueString);\n        };\n\n        const restoreCaret = (target: HTMLInputElement) => {\n            setTimeout(() => {\n                const input = target;\n                const positionCursor = input.selectionStart || 0;\n                const isEndPosition = input.value.length === positionCursor;\n\n                const enteredSign = SIGNS.some((s) => s === input.value[positionCursor - 1]);\n                const enteredSeparator = SEPARATORS.filter((s) => s !== separator).some(\n                    (s) => s === input.value[positionCursor - 1],\n                );\n\n                const shouldRestore = enteredSeparator || enteredSign;\n\n                if (!isEndPosition && shouldRestore) {\n                    input.selectionStart = positionCursor;\n                    input.selectionEnd = positionCursor;\n                }\n            });\n        };\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const input = event.target;\n            const newValue = input.value.replace(createSeparatorsRegExp(), separator);\n\n            const allowedValue = getAllowedValue({\n                value: newValue,\n                fractionLength,\n                allowSigns,\n                separator,\n            });\n\n            if (onChange) {\n                onChange(event, {\n                    value: getNumberValueFromStr(allowedValue),\n                    valueString: allowedValue,\n                });\n            }\n\n            if (uncontrolled) {\n                setValue(allowedValue);\n            }\n\n            restoreCaret(input);\n        };\n\n        const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n            const disallowedSymbols = /[/|?!@#$%^&*()_=A-Za-zА-Яа-яЁё ]/;\n            const oneKeyPress = !event.altKey && !event.metaKey && !event.ctrlKey;\n\n            // Запрещаем вводить неразрешенные символы за исключением комбинаций клавиш\n            if (oneKeyPress && event.key.length === 1 && disallowedSymbols.test(event.key)) {\n                return event.preventDefault();\n            }\n\n            const val = event.target.value;\n            const hasSeparator = (val.match(createSeparatorsRegExp()) || []).length > 0;\n\n            // Запрещаем вводить второй сепаратор\n            if (hasSeparator && SEPARATORS.some((s) => s === event.key)) {\n                return event.preventDefault();\n            }\n\n            // Запрещаем вводить лишний знак\n            if (\n                (!allowSigns || SIGNS.some((s) => s === val[0])) &&\n                SIGNS.some((s) => s === event.key)\n            ) {\n                return event.preventDefault();\n            }\n\n            const selectionStart = event.target.selectionStart || 0;\n\n            // Запрещаем вводить цифры в дробную часть, если кол-во цифр больше fractionLength\n            if (\n                hasSeparator &&\n                fractionLength &&\n                event.key.length === 1 &&\n                selectionStart > val.indexOf(separator) &&\n                val.split(separator)[1].length >= fractionLength\n            ) {\n                return event.preventDefault();\n            }\n\n            return undefined;\n        };\n\n        const handleBlur = (event: FocusEvent<HTMLInputElement>) => {\n            const valueBlur = event.target.value.replace(new RegExp(`\\\\${separator}$`), '');\n\n            if (onChange) {\n                onChange(event, {\n                    value: getNumberValueFromStr(valueBlur),\n                    valueString: valueBlur,\n                });\n            }\n\n            if (uncontrolled) {\n                setValue(valueBlur);\n            }\n\n            if (onBlur) onBlur(event);\n        };\n\n        const visibleValue = uncontrolled ? value : propValue?.toString();\n\n        return (\n            <Input\n                ref={mergeRefs([ref, inputRef])}\n                value={visibleValue}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                inputMode='decimal'\n                {...restProps}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"tag_QmFNw\",\"checked\":\"checked_w5tl3\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport {\n    TagDesktop as CoreTag,\n    TagDesktopProps as TagProps,\n} from '@alfalab/core-components-tag/desktop';\n\nimport styles from './index.module.css';\n\nexport const Tag: FC<TagProps> = ({ className, checked, ...restProps }) => (\n    <CoreTag\n        {...restProps}\n        checked={checked}\n        size='xxs'\n        className={cn(className, styles.tag, { [styles.checked]: checked })}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"dots\":\"dots_E1ovr\"};","/* eslint-disable react/no-array-index-key */\nimport React, { FC, useCallback } from 'react';\n\nimport { PaginationProps } from '../../Component';\nimport { Tag } from '../tag';\n\nimport styles from './index.module.css';\n\ntype DefaultViewProps = Pick<\n    PaginationProps,\n    'sidePadding' | 'activePadding' | 'pagesCount' | 'currentPageIndex' | 'onPageChange'\n>;\n\nexport const DefaultView: FC<DefaultViewProps> = ({\n    sidePadding = 2,\n    activePadding = 1,\n    pagesCount,\n    currentPageIndex,\n    onPageChange = () => null,\n}) => {\n    const maxHalfCount = sidePadding + activePadding + 1;\n    const maxElementsCount = maxHalfCount * 2 + 1;\n    const itemsFit = pagesCount <= maxElementsCount;\n    const elementsCount = itemsFit ? pagesCount : maxElementsCount;\n\n    const getPageIndex = useCallback(\n        (elementIndex: number) => {\n            const lastIndex = pagesCount - 1;\n            const reverseIndex = lastIndex - currentPageIndex;\n            const lastElementIndex = elementsCount - 1;\n            const reverseElementIndex = lastElementIndex - elementIndex;\n\n            const hasCollapsedItems = (index: number) => !itemsFit && index >= maxHalfCount;\n\n            if (elementIndex < sidePadding) {\n                return elementIndex;\n            }\n\n            if (elementIndex === sidePadding && hasCollapsedItems(currentPageIndex)) {\n                return null;\n            }\n\n            if (reverseElementIndex === sidePadding && hasCollapsedItems(reverseIndex)) {\n                return null;\n            }\n\n            if (reverseElementIndex < sidePadding) {\n                return lastIndex - reverseElementIndex;\n            }\n\n            const computedIndex = currentPageIndex - maxHalfCount + elementIndex;\n\n            return Math.min(lastIndex - reverseElementIndex, Math.max(elementIndex, computedIndex));\n        },\n        [currentPageIndex, elementsCount, itemsFit, maxHalfCount, pagesCount, sidePadding],\n    );\n\n    return (\n        <React.Fragment>\n            {Array(elementsCount)\n                .fill('')\n                .map((_, i) => {\n                    const pageIndex = getPageIndex(i);\n\n                    if (pageIndex === null) {\n                        return (\n                            <div key={i.toString()} className={styles.dots}>\n                                ...\n                            </div>\n                        );\n                    }\n\n                    const active = currentPageIndex === pageIndex;\n\n                    return (\n                        <Tag\n                            key={i.toString()}\n                            checked={active}\n                            disabled={active}\n                            onClick={() => onPageChange(pageIndex)}\n                        >\n                            {pageIndex + 1}\n                        </Tag>\n                    );\n                })}\n        </React.Fragment>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_cFkqV\"};","import React, { FC } from 'react';\n\nimport { PaginationProps } from '../../Component';\n\nimport styles from './index.module.css';\n\ntype PerPageViewProps = Pick<PaginationProps, 'pagesCount' | 'currentPageIndex'>;\n\nexport const PerPageView: FC<PerPageViewProps> = ({ pagesCount, currentPageIndex }) => (\n    <span className={styles.component}>\n        {currentPageIndex + 1} из {pagesCount} страниц\n    </span>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Im5zt\",\"defaultView\":\"defaultView_Cxc7V\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { ChevronBackMIcon } from '@alfalab/icons-glyph/ChevronBackMIcon';\nimport { ChevronForwardMIcon } from '@alfalab/icons-glyph/ChevronForwardMIcon';\n\nimport { DefaultView } from './components/default-view';\nimport { PerPageView } from './components/per-page-view';\nimport { Tag } from './components/tag';\n\nimport styles from './index.module.css';\n\nexport type PaginationProps = {\n    /**\n     * Текущая страница (с нуля)\n     */\n    currentPageIndex: number;\n\n    /**\n     * Количество страниц\n     */\n    pagesCount: number;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Скрывает стрелки, если выбрана первая или последняя страница\n     */\n    hideArrows?: boolean;\n\n    /**\n     * Количество видимых страниц по бокам\n     */\n    sidePadding?: number;\n\n    /**\n     * Количество видимых страниц вокруг выбранной\n     */\n    activePadding?: number;\n\n    /**\n     * Режим пагинации\n     */\n    view?: 'default' | 'per-page';\n\n    /**\n     * Обработчик переключения страницы\n     */\n    onPageChange?: (pageIndex: number) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Pagination: FC<PaginationProps> = ({\n    currentPageIndex = 0,\n    pagesCount,\n    className,\n    sidePadding = 1,\n    activePadding = 2,\n    hideArrows = true,\n    view = 'default',\n    onPageChange = () => null,\n    dataTestId,\n}) => {\n    const handlePageClick = (pageIndex: number) => {\n        onPageChange(pageIndex);\n    };\n\n    const handleNextPageClick = () => {\n        handlePageClick(Math.min(pagesCount - 1, currentPageIndex + 1));\n    };\n\n    const handlePrevPageClick = () => {\n        handlePageClick(Math.max(0, currentPageIndex - 1));\n    };\n\n    const shouldRenderPrevArrow = view === 'per-page' || !hideArrows || currentPageIndex > 0;\n    const shouldRenderNextArrow =\n        view === 'per-page' || !hideArrows || currentPageIndex < pagesCount - 1;\n\n    const viewClassName = view === 'default' ? 'defaultView' : view;\n\n    return (\n        <div\n            className={cn(styles.component, className, styles[viewClassName])}\n            data-test-id={dataTestId}\n        >\n            {shouldRenderPrevArrow && (\n                <Tag\n                    className={styles.arrow}\n                    disabled={currentPageIndex <= 0}\n                    onClick={handlePrevPageClick}\n                    rightAddons={<ChevronBackMIcon width={16} height={16} />}\n                />\n            )}\n\n            {view === 'default' && (\n                <DefaultView\n                    activePadding={activePadding}\n                    sidePadding={sidePadding}\n                    currentPageIndex={currentPageIndex}\n                    pagesCount={pagesCount}\n                    onPageChange={handlePageClick}\n                />\n            )}\n\n            {view === 'per-page' && (\n                <PerPageView currentPageIndex={currentPageIndex} pagesCount={pagesCount} />\n            )}\n\n            {shouldRenderNextArrow && (\n                <Tag\n                    className={styles.arrow}\n                    disabled={currentPageIndex >= pagesCount - 1}\n                    onClick={handleNextPageClick}\n                    rightAddons={<ChevronForwardMIcon width={16} height={16} />}\n                />\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Xynz_\",\"dot\":\"dot_q9_sK\",\"error\":\"error__Hxqe\",\"filled\":\"filled_PSH3n\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"enter_sncMw\",\"enterActive\":\"enterActive_opHHL\",\"exit\":\"exit_qKSS2\",\"exitActive\":\"exitActive_BVFXm\",\"shake\":\"shake_BlLy2\"};","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\n\nimport styles from './index.module.css';\nimport transitions from './transitions.module.css';\n\nexport type InputProgressProps = {\n    maxCodeLength: number;\n    codeLength?: number;\n    error: boolean;\n    value?: string;\n    dataTestId?: string;\n};\n\nconst TRANSITION_DURATION = 150;\n\nexport const InputProgress: React.FC<InputProgressProps> = ({\n    value = '',\n    maxCodeLength,\n    codeLength,\n    error,\n    dataTestId,\n}) => (\n    <div\n        className={cn(styles.component, { [transitions.shake]: error })}\n        data-test-id={getDataTestId(dataTestId, 'input-progress')}\n    >\n        {codeLength\n            ? new Array(codeLength).fill(null).map((_, i) => {\n                  const filled = Boolean(value[i]);\n\n                  return (\n                      <div\n                          key={i}\n                          className={cn(styles.dot, {\n                              [styles.error]: filled && error,\n                              [styles.filled]: filled,\n                          })}\n                      />\n                  );\n              })\n            : new Array(maxCodeLength).fill(null).map((_, i) => (\n                  <CSSTransition\n                      key={i}\n                      in={Boolean(value[i])}\n                      timeout={TRANSITION_DURATION}\n                      classNames={transitions}\n                      unmountOnExit={true}\n                  >\n                      <div className={cn(styles.dot, styles.filled, { [styles.error]: error })} />\n                  </CSSTransition>\n              ))}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ct2WI\",\"digit\":\"digit_b1jTn\"};","import React, { ReactNode } from 'react';\n\nimport { BackspaceXxlIcon } from '@alfalab/icons-glyph/BackspaceXxlIcon';\n\nimport { getDataTestId } from '../../../../utils';\nimport { KeyPadButton } from '../KeyPadButton';\n\nimport styles from './index.module.css';\n\nexport type KeyPadProps = {\n    /**\n     * Показать кнопку \"очистить\".\n     */\n    showClear: boolean;\n\n    /**\n     * Слот слева.\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа.\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для автоматизированного тестирования.\n     */\n    dataTestId?: string;\n\n    /**\n     * Коллбэк нажатия на кнопку.\n     */\n    onClick: (digit: number) => void;\n\n    /**\n     * Коллбэк очистки кода.\n     */\n    onClear: () => void;\n};\n\nconst CELL_COUNT = 12;\nconst CELLS = new Array(CELL_COUNT).fill(null).map((_, i) => {\n    if (i === 10) return 0;\n\n    return i + 1;\n});\n\nexport const KeyPad: React.FC<KeyPadProps> = ({\n    leftAddons,\n    rightAddons,\n    onClick,\n    onClear,\n    showClear,\n    dataTestId,\n}) => (\n    <div className={styles.component} data-test-id={getDataTestId(dataTestId, 'keypad')}>\n        {CELLS.map((digit, i) => {\n            if (i === 9) {\n                if (leftAddons) return leftAddons;\n\n                return <div key='left-addons-empty' />;\n            }\n\n            if (i === 11) {\n                if (showClear) {\n                    return (\n                        <KeyPadButton key='clear-btn' onClick={onClear} view='ghost'>\n                            <BackspaceXxlIcon />\n                        </KeyPadButton>\n                    );\n                }\n\n                if (rightAddons) return rightAddons;\n\n                return <div key='right-addon-empty' />;\n            }\n\n            return (\n                <KeyPadButton\n                    key={digit}\n                    onClick={onClick}\n                    view='secondary'\n                    buttonClassName={styles.digit}\n                >\n                    {digit}\n                </KeyPadButton>\n            );\n        })}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Je1G5\",\"error\":\"error_MEBxn\"};","import React, { forwardRef, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Gap } from '@alfalab/core-components-gap';\n\nimport { getDataTestId } from '../../utils';\n\nimport { InputProgress } from './components/InputProgress';\nimport { KeyPad } from './components/KeyPad';\n\nimport styles from './index.module.css';\n\nexport type BasePassCodeProps = {\n    /**\n     * Код.\n     */\n    value: string;\n\n    /**\n     * Обработчик изменения кода.\n     */\n    onChange: (code: string) => void;\n\n    /**\n     * Дополнительный класс.\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Слот слева.\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа.\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования.\n     */\n    dataTestId?: string;\n};\n\ntype PropsWithUnknownLen = {\n    codeLength?: never;\n\n    /**\n     * Максимально возможная длина кода.\n     * @default 10\n     */\n    maxCodeLength?: number;\n};\n\ntype PropsWithLen = {\n    maxCodeLength?: never;\n\n    /**\n     * Длина кода.\n     */\n    codeLength?: number;\n};\n\ntype PassCodeProps = BasePassCodeProps & (PropsWithLen | PropsWithUnknownLen);\n\nexport const PassCode = forwardRef<HTMLDivElement, PassCodeProps>(\n    (\n        {\n            value = '',\n            dataTestId,\n            className,\n            leftAddons,\n            rightAddons,\n            error,\n            onChange,\n            maxCodeLength = 10,\n            codeLength,\n        },\n        ref,\n    ) => {\n        const passwordLen = codeLength || maxCodeLength;\n\n        const handleChange = (digit: number) => {\n            const newValue = value.concat(digit.toString());\n\n            if (newValue.length <= passwordLen) {\n                onChange?.(newValue);\n            }\n        };\n\n        const handleClear = () => {\n            if (value.length > 0) {\n                onChange?.(value?.slice(0, -1));\n            }\n        };\n\n        return (\n            <div\n                className={cn(styles.component, className)}\n                ref={ref}\n                data-test-id={getDataTestId(dataTestId, 'wrapper')}\n            >\n                <div className={styles.error} data-test-id={getDataTestId(dataTestId, 'error')}>\n                    {error}\n                </div>\n\n                <Gap size='m' />\n\n                <InputProgress\n                    dataTestId={dataTestId}\n                    value={value}\n                    maxCodeLength={maxCodeLength}\n                    codeLength={codeLength}\n                    error={Boolean(error)}\n                />\n\n                <Gap size='4xl' />\n\n                <KeyPad\n                    dataTestId={dataTestId}\n                    leftAddons={leftAddons}\n                    rightAddons={rightAddons}\n                    onClick={handleChange}\n                    onClear={handleClear}\n                    showClear={Boolean(value)}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_vOeR7\",\"button\":\"button_n1HgJ\",\"secondary\":\"secondary_klg7r\",\"ghost\":\"ghost_vxRt8\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nexport type KeyPadButtonProps<T> = {\n    /**\n     * Вид кнопки.\n     */\n    view: ButtonProps['view'];\n\n    /**\n     * Значение.\n     */\n    children: T;\n\n    /**\n     * Дополнительный класс.\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс кнопки.\n     */\n    buttonClassName?: string;\n\n    /**\n     * Коллбэк нажатия на кнопку.\n     */\n    onClick?: (payload: T) => void;\n};\n\nexport function KeyPadButton<T extends ReactNode>({\n    children,\n    onClick,\n    className,\n    view = 'secondary',\n    buttonClassName,\n}: KeyPadButtonProps<T>) {\n    return (\n        <div className={cn(styles.component, className)}>\n            <Button\n                className={cn(styles.button, styles[view], buttonClassName)}\n                view={view}\n                onClick={() => onClick?.(children)}\n            >\n                {children}\n            </Button>\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"eye\":\"eye_AWsOT\",\"xl\":\"xl_gk9PF\",\"input\":\"input_kTVfp\",\"addons\":\"addons_HuikE\"};","import React, { forwardRef, useCallback, useState } from 'react';\nimport cn from 'classnames';\n\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { Input, InputProps } from '@alfalab/core-components-input';\nimport { EyeMIcon } from '@alfalab/icons-glyph/EyeMIcon';\nimport { EyeOffMIcon } from '@alfalab/icons-glyph/EyeOffMIcon';\n\nimport styles from './index.module.css';\n\nexport type PasswordInputProps = InputProps & {\n    /**\n     * Управление видимостью пароля (controlled)\n     */\n    passwordVisible?: boolean;\n\n    /**\n     * Коллбэк при изменении видимости пароля\n     */\n    onPasswordVisibleChange?: (visible: boolean) => void;\n};\n\nexport const PasswordInput = forwardRef<HTMLInputElement, PasswordInputProps>(\n    (\n        {\n            onPasswordVisibleChange,\n            passwordVisible,\n            disabled,\n            colors,\n            rightAddons,\n            size = 's',\n            className,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = passwordVisible === undefined;\n        const [statePasswordVisible, setStatePasswordVisible] = useState(\n            uncontrolled ? false : passwordVisible,\n        );\n\n        const handleButtonClick = useCallback(() => {\n            if (onPasswordVisibleChange) {\n                onPasswordVisibleChange(!passwordVisible);\n            }\n\n            if (uncontrolled) {\n                setStatePasswordVisible((visible) => !visible);\n            }\n        }, [passwordVisible, uncontrolled, onPasswordVisibleChange]);\n\n        const isPasswordVisible = uncontrolled ? statePasswordVisible : passwordVisible;\n\n        return (\n            <Input\n                {...restProps}\n                disabled={disabled}\n                type={isPasswordVisible ? 'text' : 'password'}\n                size={size}\n                ref={ref}\n                colors={colors}\n                className={cn(className, styles[size])}\n                rightAddons={\n                    <React.Fragment>\n                        {rightAddons}\n                        <IconButton\n                            className={styles.eye}\n                            colors={colors}\n                            view='secondary'\n                            size='s'\n                            icon={isPasswordVisible ? EyeMIcon : EyeOffMIcon}\n                            onClick={handleButtonClick}\n                            disabled={disabled}\n                        />\n                    </React.Fragment>\n                }\n                addonsClassName={styles.addons}\n                inputClassName={styles.input}\n            />\n        );\n    },\n);\n","import { Theme, ThemeParams } from 'react-canvas-pattern-lock';\n\nimport { OBSERVABLE_TOKENS, THEME_STATE } from './consts';\n\nexport function getDefaultObserveTarget() {\n    return document.head;\n}\n\nexport function getColorByToken(token: string) {\n    return getComputedStyle(document.documentElement).getPropertyValue(token);\n}\n\nexport const getSizes = (() => {\n    const COMMON_SIZES = {\n        lineWidth: 6,\n        nodeRing: 0,\n        nodeCore: 12,\n    };\n\n    let cachedSize: { elementSizes: ThemeParams['dimens']; width: number; height: number };\n\n    return () => {\n        if (cachedSize) {\n            return cachedSize;\n        }\n\n        if (window.matchMedia('(min-width: 390px)').matches) {\n            cachedSize = {\n                elementSizes: { ...COMMON_SIZES, nodeRadius: 43 },\n                width: 322,\n                height: 322,\n            };\n        } else if (window.matchMedia('(min-width: 360px)').matches) {\n            cachedSize = {\n                elementSizes: { ...COMMON_SIZES, nodeRadius: 38 },\n                width: 292,\n                height: 292,\n            };\n        } else {\n            cachedSize = {\n                elementSizes: { ...COMMON_SIZES, nodeRadius: 32 },\n                width: 240,\n                height: 240,\n            };\n        }\n\n        return cachedSize;\n    };\n})();\n\nexport function getTheme(dimens: ThemeParams['dimens']): Theme {\n    const baseColors = {\n        primary: getColorByToken(OBSERVABLE_TOKENS.PRIMARY),\n        bg: getColorByToken(OBSERVABLE_TOKENS.BG),\n        ringBg: getColorByToken(OBSERVABLE_TOKENS.RING_BG_INITIAL),\n    };\n\n    return {\n        [THEME_STATE.INITIAL]: {\n            colors: {\n                ...baseColors,\n                accent: getColorByToken(OBSERVABLE_TOKENS.ACCENT_INITIAL),\n                selectedRingBg: getColorByToken(OBSERVABLE_TOKENS.SELECTED_RING_BG_INITIAL),\n            },\n            dimens,\n        },\n        [THEME_STATE.SUCCESS]: {\n            colors: {\n                ...baseColors,\n                accent: getColorByToken(OBSERVABLE_TOKENS.ACCENT_SUCCESS),\n                selectedRingBg: getColorByToken(OBSERVABLE_TOKENS.SELECTED_RING_BG_SUCCESS),\n            },\n            dimens,\n        },\n        [THEME_STATE.FAILURE]: {\n            colors: {\n                ...baseColors,\n                accent: getColorByToken(OBSERVABLE_TOKENS.ACCENT_FAILURE),\n                selectedRingBg: getColorByToken(OBSERVABLE_TOKENS.SELECTED_RING_BG_FAILURE),\n            },\n            dimens,\n        },\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ztYMj\",\"hidden\":\"hidden_HQPS_\",\"error\":\"error_y55uz\",\"forgotBtn\":\"forgotBtn_hfJnP\"};","import React, { forwardRef, useEffect, useState } from 'react';\nimport type { Theme, TPatternLockInstance } from 'react-canvas-pattern-lock';\nimport { ReactCanvasPatternLock } from 'react-canvas-pattern-lock';\nimport cn from 'classnames';\n\nimport { Button } from '@alfalab/core-components-button';\nimport { Gap } from '@alfalab/core-components-gap';\n\nimport { getDataTestId } from '../../utils';\n\nimport { DEFAULT_EXTRA_BOUNDS, OBSERVABLE_TOKENS, OBSERVE_OPTIONS, THEME_STATE } from './consts';\nimport type { PatternLockProps } from './typings';\nimport { getColorByToken, getDefaultObserveTarget, getSizes, getTheme } from './utils';\n\nimport styles from './index.module.css';\n\nexport const PatternLock = forwardRef<TPatternLockInstance, PatternLockProps>(\n    (\n        {\n            observeTokens = false,\n            observerParams = {},\n            justifyNodes = 'space-between',\n            className,\n            error,\n            dataTestId,\n            forgotCodeBtnText = 'Забыли код?',\n            showForgotCodeBtn = false,\n            onForgotBtnClick,\n            extraBounds = DEFAULT_EXTRA_BOUNDS,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const [params, setParams] = useState<\n            { theme: Theme; width: number; height: number } | undefined\n        >();\n\n        useEffect(() => {\n            const { elementSizes, width, height } = getSizes();\n\n            setParams({\n                theme: getTheme(elementSizes),\n                width,\n                height,\n            });\n        }, []);\n\n        useEffect(() => {\n            let styleObserver: MutationObserver | null = null;\n\n            if (observeTokens) {\n                const { options = OBSERVE_OPTIONS, getTarget = getDefaultObserveTarget } =\n                    observerParams;\n\n                styleObserver = new MutationObserver(() =>\n                    setParams((prevState) => {\n                        const { width, height, elementSizes } = getSizes();\n\n                        if (!prevState) {\n                            return { theme: getTheme(elementSizes), width, height };\n                        }\n\n                        const prevBgColor = prevState.theme[THEME_STATE.INITIAL].colors.bg;\n                        const themeChanged = prevBgColor !== getColorByToken(OBSERVABLE_TOKENS.BG);\n\n                        if (themeChanged) return { ...prevState, theme: getTheme(elementSizes) };\n\n                        return prevState;\n                    }),\n                );\n\n                styleObserver.observe(getTarget(), options);\n            }\n\n            return () => styleObserver?.disconnect();\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [observeTokens]);\n\n        return (\n            <div\n                className={cn(styles.component, className, { [styles.hidden]: !params })}\n                data-test-id={dataTestId}\n            >\n                <Gap size='xs' />\n\n                <div className={styles.error}>{error}</div>\n\n                <Gap size='3xl' />\n\n                <ReactCanvasPatternLock\n                    {...restProps}\n                    {...params}\n                    ref={ref}\n                    rows={3}\n                    cols={3}\n                    justifyNodes={justifyNodes}\n                    extraBounds={extraBounds}\n                />\n\n                {showForgotCodeBtn ? (\n                    <Button\n                        view='link'\n                        className={styles.forgotBtn}\n                        onClick={onForgotBtnClick}\n                        dataTestId={getDataTestId(dataTestId, 'forgot-code-btn')}\n                    >\n                        {forgotCodeBtnText}\n                    </Button>\n                ) : (\n                    <div className={styles.forgotBtn} />\n                )}\n            </div>\n        );\n    },\n);\n","import type { ReactPatternLockProps } from 'react-canvas-pattern-lock';\n\nimport type { ObservableTokens } from './typings';\n\nexport const OBSERVE_OPTIONS: MutationObserverInit = {\n    childList: true,\n    attributes: false,\n    characterData: false,\n    subtree: true,\n};\n\nexport const DEFAULT_EXTRA_BOUNDS: ReactPatternLockProps['extraBounds'] = [75, 50, 75, 50];\n\nexport const OBSERVABLE_TOKENS: ObservableTokens = {\n    ACCENT_INITIAL: '--color-light-graphic-primary',\n    ACCENT_SUCCESS: '--color-light-graphic-positive',\n    ACCENT_FAILURE: '--color-light-graphic-negative',\n    PRIMARY: '--color-light-graphic-tertiary',\n    BG: '--color-light-bg-primary',\n    RING_BG_INITIAL: '--color-light-specialbg-secondary-transparent',\n    SELECTED_RING_BG_INITIAL: '--color-light-specialbg-tertiary-transparent',\n    SELECTED_RING_BG_SUCCESS: '--color-light-graphic-positive-alpha-10',\n    SELECTED_RING_BG_FAILURE: '--color-light-graphic-negative-alpha-10',\n};\n\nexport const THEME_STATE = {\n    INITIAL: 'initial',\n    SUCCESS: 'success',\n    FAILURE: 'failure',\n};\n","/**\n * Удаляет форматирование номера телефона\n * @param phone Номер телефона\n */\n\nexport const deleteFormatting = (phone: string) =>\n    phone.replace('+', '').replace(/^7/, '').replace(/\\s/g, '').replace(/-/g, '');\n\nexport function setCaretPosition({\n    position,\n    inputRef,\n}: {\n    position: number;\n    inputRef: React.RefObject<HTMLInputElement>;\n}) {\n    window.requestAnimationFrame(() => {\n        if (inputRef === null || !inputRef.current) return;\n\n        inputRef.current.setSelectionRange(position, position);\n    });\n}\n\nexport function getInsertedNumber({\n    rawValue,\n    clearableCountryCode,\n    countryPrefix,\n    previousConformedValue,\n}: {\n    rawValue: string;\n    clearableCountryCode: boolean;\n    countryPrefix: string;\n    previousConformedValue: string;\n}) {\n    if (!clearableCountryCode && previousConformedValue === countryPrefix) {\n        if (rawValue.startsWith('7') || rawValue.startsWith('8')) {\n            return rawValue;\n        }\n\n        return rawValue.slice(countryPrefix.length);\n    }\n\n    return rawValue;\n}\n","import React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport { conformToMask, TextMaskConfig } from 'text-mask-core';\n\nimport { MaskedInput, MaskedInputProps } from '@alfalab/core-components-masked-input';\n\nimport { deleteFormatting, getInsertedNumber, setCaretPosition } from './utils';\n\nconst mask = [\n    '+',\n    '7',\n    ' ',\n    /([0-6]|[8-9])/,\n    /\\d/,\n    /\\d/,\n    ' ',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n];\n\nconst countryPrefix = '+7 ';\n\nexport type PhoneInputProps = Omit<MaskedInputProps, 'onBeforeDisplay' | 'type' | 'mask'> & {\n    clearableCountryCode?: boolean;\n};\n\nexport const PhoneInput = React.forwardRef<HTMLInputElement, PhoneInputProps>(\n    ({ clearableCountryCode = true, ...restProps }, ref) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        // Оставляет возможность прокинуть ref извне\n        useImperativeHandle(ref, () => inputRef.current as HTMLInputElement);\n\n        const handleBeforeDisplay = useCallback(\n            (conformedValue: string, config: TextMaskConfig) => {\n                const { rawValue, previousConformedValue, currentCaretPosition } = config;\n\n                /*\n                 * код ниже нужен для фикса следующих багов библиотеки text-mask:\n                 * 1) так как код страны указан в маске жестко как \"+7\",\n                 * то при удалении цифры перед ним каретка устанавливается перед кодом страны\n                 * 2) в номере телефона есть пробелы и дефисы,\n                 * при редактировании цифр рядом с этими символами каретка перескакивает через них,\n                 * а не остается на том же месте, на котором была до редактирования\n                 */\n                const previousValueWithoutFormatting = previousConformedValue\n                    ? deleteFormatting(previousConformedValue)\n                    : '';\n                const currentValueWithoutFormatting = deleteFormatting(conformedValue) || '';\n\n                if (\n                    previousConformedValue &&\n                    (([3, 6].includes(currentCaretPosition) &&\n                        Math.abs(\n                            previousValueWithoutFormatting.length -\n                                currentValueWithoutFormatting.length,\n                        ) === 1) ||\n                        ([7, 10, 13].includes(currentCaretPosition) &&\n                            previousConformedValue.length > currentCaretPosition))\n                ) {\n                    setCaretPosition({ position: currentCaretPosition, inputRef });\n                }\n\n                // Удаление цифры перед кодом страны удаляет только саму цифру, код остается (\"+7 1\" -> \"+7 \")\n                if (rawValue === countryPrefix) {\n                    return rawValue;\n                }\n\n                // Вставка номера с 10 цифрами без кода страны\n                if (rawValue.length === 10 && conformedValue.length === mask.length) {\n                    const masked = conformToMask(`+7${rawValue}`, mask, config);\n\n                    return masked.conformedValue;\n                }\n\n                const insertedNumber = getInsertedNumber({\n                    rawValue,\n                    clearableCountryCode,\n                    countryPrefix,\n                    previousConformedValue,\n                });\n\n                // Вставка номера, начинающегося с 8 или 7: 89990313131, 71112223344\n                if (\n                    conformedValue.length === mask.length &&\n                    (insertedNumber.startsWith('8') || insertedNumber.startsWith('7'))\n                ) {\n                    const masked = conformToMask(`+7${insertedNumber.slice(1)}`, mask, config);\n\n                    return masked.conformedValue;\n                }\n\n                // Если ввод начат с 7 или 8 - выводит \"+7 \" и дает продолжить ввод со след. цифры\n                if (rawValue.length === 1 && ['7', '8'].includes(rawValue[0])) {\n                    return countryPrefix;\n                }\n\n                const abortCountryCodeClearing = !clearableCountryCode && !conformedValue;\n\n                if (abortCountryCodeClearing) {\n                    setCaretPosition({ position: countryPrefix.length, inputRef });\n\n                    if (!rawValue.length) return countryPrefix;\n\n                    return false;\n                }\n\n                return conformedValue;\n            },\n            [clearableCountryCode],\n        );\n\n        return (\n            <MaskedInput\n                {...restProps}\n                defaultValue={clearableCountryCode ? restProps.defaultValue : countryPrefix}\n                mask={mask}\n                onBeforeDisplay={handleBeforeDisplay}\n                type='tel'\n                ref={inputRef}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_yeBjE\",\"optionsPopover\":\"optionsPopover_ZFIbu\",\"sideGap\":\"sideGap_khSlz\",\"option\":\"option_TJJ9_\"};","import React, { FC, forwardRef, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport {\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { Field as DefaultField } from './field';\nimport { Option as DefaultOption } from './option';\n\nimport styles from './index.module.css';\n\nconst SIDE_POSITIONS = ['right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'];\n\nexport type PickerButtonSize = 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\nexport type PickerButtonVariant = 'default' | 'compact';\n\nexport type PickerButtonDesktopProps = Omit<\n    BaseSelectProps,\n    | 'placeholder'\n    | 'Arrow'\n    | 'autocomplete'\n    | 'size'\n    | 'onFocus'\n    | 'selected'\n    | 'closeOnSelect'\n    | 'multiple'\n    | 'hint'\n    | 'allowUnselect'\n    | 'options'\n> &\n    Pick<ButtonProps, 'view' | 'loading' | 'leftAddons' | 'rightAddons'> & {\n        options: Array<\n            BaseSelectProps['options'][0] & {\n                /**\n                 * Иконка, отображающаяся слева от текстового представления пункта\n                 */\n                icon?: FC<SVGProps<SVGSVGElement>>;\n            }\n        >;\n\n        /**\n         * Размер кнопки\n         */\n        size?: PickerButtonSize;\n\n        /**\n         * Тип кнопки\n         */\n        variant?: PickerButtonVariant;\n\n        /**\n         * Показывать стрелку\n         * @default true\n         */\n        showArrow?: boolean;\n    };\n\nexport const PickerButtonDesktop = forwardRef<HTMLInputElement, PickerButtonDesktopProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            view,\n            loading,\n            size = 'm',\n            variant = 'default',\n            className,\n            leftAddons,\n            rightAddons,\n            popperClassName,\n            optionClassName,\n            showArrow,\n            Field = DefaultField,\n            fieldProps = {},\n            ...restProps\n        },\n        ref,\n    ) => {\n        const isSideGap =\n            !!restProps.popoverPosition && SIDE_POSITIONS.includes(restProps.popoverPosition);\n\n        const fieldDedaultProps = {\n            view,\n            loading,\n            /** size у select, button несовместимы */\n            buttonSize: size,\n            buttonVariant: variant,\n            leftAddons,\n            rightAddons,\n            showArrow,\n        };\n\n        return (\n            <BaseSelect\n                {...restProps}\n                optionProps={{ Checkmark: null }}\n                ref={ref}\n                Option={Option}\n                Field={Field}\n                size={size === 'm' ? 'm' : 's'}\n                fieldProps={{\n                    ...fieldDedaultProps,\n                    ...(fieldProps as object),\n                }}\n                Optgroup={Optgroup}\n                OptionsList={OptionsList}\n                className={cn(styles.container, className)}\n                popperClassName={cn('cc-picker-button', styles.optionsPopover, popperClassName, {\n                    [styles.sideGap]: isSideGap,\n                })}\n                optionClassName={cn(styles.option, optionClassName)}\n                selected={[]}\n                closeOnSelect={true}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"iconContainer\":\"iconContainer_s0KfQ\",\"addonsContainer\":\"addonsContainer_A1BDF\",\"showControlIcon\":\"showControlIcon_vw_Fr\",\"open\":\"open_vBG4R\"};","import React, { ButtonHTMLAttributes, FC, Fragment, SVGProps } from 'react';\nimport cn from 'classnames';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\nimport { FieldProps as BaseFieldProps } from '@alfalab/core-components-select/src/typings';\n\nimport { PickerButtonSize, PickerButtonVariant } from '../Component';\nimport { getIcon } from '../utils';\n\nimport styles from './index.module.css';\n\ntype FieldProps = Omit<BaseFieldProps, 'size' | 'hint' | 'success' | 'error' | 'placeholder'> &\n    ButtonProps & {\n        buttonSize?: PickerButtonSize;\n        buttonVariant?: PickerButtonVariant;\n        showArrow?: boolean;\n    };\n\nexport const Field = ({\n    buttonSize = 'm',\n    buttonVariant = 'default',\n    view,\n    label,\n    open,\n    multiple,\n    rightAddons,\n    Arrow,\n    innerProps,\n    className,\n    selected,\n    selectedMultiple,\n    setSelectedItems,\n    toggleMenu,\n    valueRenderer,\n    showArrow = true,\n    labelView,\n    ...restProps\n}: FieldProps) => {\n    const Icon: FC<SVGProps<SVGSVGElement>> = getIcon(buttonVariant, buttonSize);\n\n    const { ref, ...restInnerProps } = innerProps;\n\n    const buttonProps = {\n        ...restProps,\n        ...restInnerProps,\n    } as ButtonHTMLAttributes<HTMLButtonElement>;\n\n    return (\n        <div ref={ref}>\n            <Button\n                {...buttonProps}\n                rightAddons={\n                    <Fragment>\n                        {rightAddons && (\n                            <span\n                                className={cn(styles.addonsContainer, {\n                                    [styles.showControlIcon]:\n                                        showArrow || buttonVariant === 'compact',\n                                })}\n                            >\n                                {rightAddons}\n                            </span>\n                        )}\n\n                        {(showArrow || buttonVariant === 'compact') && (\n                            <span\n                                className={cn(\n                                    styles.iconContainer,\n                                    buttonVariant !== 'compact' && open && styles.open,\n                                )}\n                            >\n                                <Icon data-test-id='picker-button-icon' />\n                            </span>\n                        )}\n                    </Fragment>\n                }\n                block={true}\n                view={view}\n                size={buttonSize}\n                className={cn(styles.component, view === 'primary' && styles.primary, className)}\n            >\n                {buttonVariant !== 'compact' && label}\n            </Button>\n        </div>\n    );\n};\n","import React, { forwardRef } from 'react';\n\nimport {\n    AdditionalMobileProps,\n    Optgroup as DefaultOptgroup,\n    SelectMobile,\n} from '@alfalab/core-components-select';\n\nimport { PickerButtonDesktopProps } from './Component';\nimport { Field as DefaultField } from './field';\nimport { Option as DefaultOption } from './option';\n\nexport type PickerButtonMobileProps = Omit<\n    PickerButtonDesktopProps,\n    'OptionsList' | 'Checkmark' | 'onScroll'\n> &\n    AdditionalMobileProps;\n\nexport const PickerButtonMobile = forwardRef<HTMLInputElement, PickerButtonMobileProps>(\n    (\n        {\n            options,\n            label,\n            Option = DefaultOption,\n            Optgroup = DefaultOptgroup,\n            view,\n            loading,\n            variant = 'default',\n            leftAddons,\n            rightAddons,\n            size,\n            bottomSheetProps,\n            showArrow,\n            Field = DefaultField,\n            fieldProps = {},\n            ...restProps\n        },\n        ref,\n    ) => {\n        const fieldDedaultProps = {\n            view,\n            loading,\n            /** size у select, button несовместимы */\n            buttonSize: size,\n            buttonVariant: variant,\n            leftAddons,\n            rightAddons,\n            showArrow,\n        };\n\n        return (\n            <SelectMobile\n                {...restProps}\n                label={label}\n                Option={Option}\n                bottomSheetProps={{\n                    title: label,\n                    stickyHeader: true,\n                    ...bottomSheetProps,\n                }}\n                Field={Field}\n                Optgroup={Optgroup}\n                size={size === 'm' ? 'm' : 's'}\n                closeOnSelect={true}\n                fieldProps={{\n                    ...fieldDedaultProps,\n                    ...(fieldProps as object),\n                }}\n                ref={ref}\n                options={options}\n                selected={[]}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport { AdditionalMobileProps } from '@alfalab/core-components-select';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { PickerButtonDesktop, PickerButtonDesktopProps } from './Component';\nimport { PickerButtonMobile } from './Component.mobile';\n\nexport type PickerButtonMatchMedia = 'desktop' | 'mobile';\n\nexport type PickerButtonResponsiveProps = PickerButtonDesktopProps &\n    AdditionalMobileProps & {\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n    };\n\nexport const PickerButtonResponsive = forwardRef<HTMLInputElement, PickerButtonResponsiveProps>(\n    (\n        {\n            OptionsList,\n            onScroll,\n            footer,\n            swipeable,\n            bottomSheetProps,\n            breakpoint = 1024,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const [view] = useMedia(\n            [\n                ['mobile', `(max-width: ${breakpoint - 1}px)`],\n                ['desktop', `(min-width: ${breakpoint}px)`],\n            ],\n            'desktop',\n        );\n\n        return view === 'desktop' ? (\n            <PickerButtonDesktop\n                ref={ref}\n                OptionsList={OptionsList}\n                onScroll={onScroll}\n                {...restProps}\n            />\n        ) : (\n            <PickerButtonMobile\n                ref={ref}\n                footer={footer}\n                swipeable={swipeable}\n                bottomSheetProps={bottomSheetProps}\n                {...restProps}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_xMu0c\",\"icon\":\"icon_PSCe7\",\"content\":\"content_OGU8b\"};","import React, { FC, SVGProps } from 'react';\n\nimport { Option as BaseOption } from '@alfalab/core-components-select';\nimport {\n    OptionProps as BaseOptionProps,\n    OptionShape,\n} from '@alfalab/core-components-select/src/typings';\n\nimport styles from './index.module.css';\n\ntype OptionProps = Omit<BaseOptionProps, 'option'> & {\n    option: OptionShape & {\n        icon?: FC<SVGProps<SVGSVGElement>>;\n    };\n};\n\nexport const Option = ({ option, children, ...restProps }: OptionProps) => {\n    const content = children || option.content || option.key;\n\n    const Icon = option.icon;\n\n    return (\n        <BaseOption option={option} {...restProps}>\n            <div className={styles.container}>\n                {Icon && <Icon className={styles.icon} />}\n                <div className={styles.content}>{content}</div>\n            </div>\n        </BaseOption>\n    );\n};\n","import { FC, SVGProps } from 'react';\n\nimport { ChevronDownCompactSIcon } from '@alfalab/icons-glyph/ChevronDownCompactSIcon';\nimport { ChevronDownMIcon } from '@alfalab/icons-glyph/ChevronDownMIcon';\nimport { MoreMIcon } from '@alfalab/icons-glyph/MoreMIcon';\nimport { MoreSIcon } from '@alfalab/icons-glyph/MoreSIcon';\n\nimport { PickerButtonSize, PickerButtonVariant } from '..';\n\nexport const getIcon = (\n    variant: PickerButtonVariant,\n    size: PickerButtonSize,\n): FC<SVGProps<SVGSVGElement>> => {\n    if (variant === 'compact') {\n        return size === 'xxs' ? MoreSIcon : MoreMIcon;\n    }\n\n    return size === 'xxs' ? ChevronDownCompactSIcon : ChevronDownMIcon;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_PidtG\",\"inner\":\"inner_qULUT\",\"scrollableContent\":\"scrollableContent_R9XWi\",\"arrow\":\"arrow_rproE\",\"arrowShift\":\"arrowShift_DVdqH\",\"enter\":\"enter_bNaxk\",\"enterActive\":\"enterActive_zKtYy\",\"exit\":\"exit_h6i45\",\"exitActive\":\"exitActive_RAbbe\"};","import React, {\n    CSSProperties,\n    forwardRef,\n    MutableRefObject,\n    ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { usePopper } from 'react-popper';\nimport { CSSTransition } from 'react-transition-group';\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport { BasePlacement, ModifierArguments, Obj, VariationPlacement } from '@popperjs/core';\nimport cn from 'classnames';\nimport maxSize from 'popper-max-size-modifier';\n\nimport { Portal } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\n\nimport styles from './index.module.css';\n\ntype RefElement = HTMLElement | null;\n\nexport type Position = BasePlacement | VariationPlacement;\n\ntype PopperModifier = {\n    name: string;\n    options: Obj;\n};\n\nexport type PopoverProps = {\n    /**\n     * Управление состоянием поповера (открыт/закрыт)\n     */\n    open: boolean;\n\n    /**\n     * Элемент, относительного которого появляется поповер\n     */\n    anchorElement: RefElement;\n\n    /**\n     * Использовать ширину родительского элемента\n     */\n    useAnchorWidth?: boolean;\n\n    /**\n     * Позиционирование поповера\n     */\n    position?: Position;\n\n    /**\n     * Запрещает поповеру менять свою позицию.\n     * Например, если места снизу недостаточно,то он все равно будет показан снизу\n     */\n    preventFlip?: boolean;\n\n    /**\n     * Запрещает поповеру менять свою позицию, если он не влезает в видимую область.\n     */\n    preventOverflow?: boolean;\n\n    /**\n     *  Позволяет поповеру подствраивать свою высоту под границы экрана, если из-за величины контента он выходит за рамки видимой области экрана\n     */\n    availableHeight?: boolean;\n\n    /**\n     * Если `true`, будет отрисована стрелочка\n     */\n    withArrow?: boolean;\n\n    /**\n     * Смещение поповера.\n     * Если позиционирование top, bottom, то [x, y].\n     * Если позиционирование left, right то [y, x].\n     */\n    offset?: [number, number];\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popperClassName?: string;\n\n    /**\n     * Дополнительный класс для стрелочки\n     */\n    arrowClassName?: string;\n\n    /**\n     * Функция, возвращающая контейнер, в который будет рендериться поповер\n     */\n    getPortalContainer?: () => HTMLElement;\n\n    /**\n     * CSSTransitionProps, прокидываются в компонент CSSTransitionProps.\n     */\n    transition?: CSSTransitionProps;\n\n    /**\n     * Выставляет кастомное свойство transition-duration\n     */\n    transitionDuration?: CSSProperties['transitionDuration'];\n\n    /**\n     * Рендерит компонент, обернутый в Transition\n     */\n    withTransition?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение компонента\n     */\n    update?: MutableRefObject<() => void>;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Если поповер не помещается в переданной позиции (position), он попробует открыться в другой позиции,\n     * по очереди для каждой позиции из этого списка.\n     * Если не передавать, то поповер открывается в противоположном направлении от переданного position.\n     */\n    fallbackPlacements?: Position[];\n\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n};\n\nconst DEFAULT_TRANSITION: PopoverProps['transition'] = {\n    timeout: 150,\n};\n\nconst CSS_TRANSITION_CLASS_NAMES = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n};\n\nconst availableHieghtModifier = {\n    name: 'availableHeight',\n    enabled: true,\n    phase: 'beforeWrite',\n    requires: ['maxSize'],\n    fn({\n        state: {\n            modifiersData,\n            elements: { popper },\n        },\n    }: ModifierArguments<Obj>) {\n        const { height } = modifiersData.maxSize;\n\n        const content = popper.querySelector(`.${styles.scrollableContent}`) as HTMLElement;\n\n        if (content && !content.style.maxHeight) {\n            content.style.maxHeight = `${height}px`;\n        }\n    },\n};\n\n/**\n * Минимальный размер anchorElement,\n * при котором возможно смещение стрелочки относительно центра\n */\nconst MIN_ARROW_SHIFT_SIZE = 75;\n\nexport const Popover = forwardRef<HTMLDivElement, PopoverProps>(\n    (\n        {\n            children,\n            getPortalContainer,\n            transition = DEFAULT_TRANSITION,\n            anchorElement,\n            useAnchorWidth,\n            offset = [0, 0],\n            withArrow = false,\n            withTransition = true,\n            position = 'left',\n            preventFlip,\n            popperClassName,\n            arrowClassName,\n            className,\n            open,\n            dataTestId,\n            update,\n            transitionDuration = `${transition.timeout}ms`,\n            zIndex = stackingOrder.POPOVER,\n            fallbackPlacements,\n            preventOverflow = true,\n            availableHeight = false,\n        },\n        ref,\n    ) => {\n        const [referenceElement, setReferenceElement] = useState<RefElement>(anchorElement);\n        const [popperElement, setPopperElement] = useState<RefElement>(null);\n        const [arrowElement, setArrowElement] = useState<RefElement>(null);\n        const [arrowShift, setArrowShift] = useState(false);\n\n        const updatePopperRef = useRef<() => void>();\n\n        const popperRef = useRef<HTMLDivElement>(null);\n        const innerRef = useRef<HTMLDivElement>(null);\n\n        const popperModifiers = useMemo(() => {\n            const modifiers: PopperModifier[] = [{ name: 'offset', options: { offset } }];\n\n            if (withArrow) {\n                modifiers.push({ name: 'arrow', options: { element: arrowElement } });\n            }\n\n            if (preventFlip) {\n                modifiers.push({ name: 'flip', options: { fallbackPlacements: [] } });\n            }\n\n            if (fallbackPlacements) {\n                modifiers.push({ name: 'flip', options: { fallbackPlacements } });\n            }\n\n            if (preventOverflow) {\n                modifiers.push({ name: 'preventOverflow', options: { mainAxis: false } });\n            }\n\n            if (availableHeight) {\n                modifiers.push({ ...maxSize, options: {} });\n                modifiers.push({ ...availableHieghtModifier, options: {} });\n            }\n\n            return modifiers;\n        }, [\n            offset,\n            withArrow,\n            preventFlip,\n            fallbackPlacements,\n            preventOverflow,\n            availableHeight,\n            arrowElement,\n        ]);\n\n        const {\n            styles: popperStyles,\n            attributes,\n            update: updatePopper,\n        } = usePopper(referenceElement, popperElement, {\n            placement: position,\n            modifiers: popperModifiers,\n        });\n\n        if (updatePopper) {\n            updatePopperRef.current = updatePopper;\n        }\n\n        useEffect(() => {\n            setReferenceElement(anchorElement);\n        }, [anchorElement]);\n\n        useEffect(() => {\n            if (updatePopper) {\n                updatePopper();\n            }\n        }, [updatePopper, arrowElement, children]);\n\n        useEffect(() => {\n            if (update && !update.current && updatePopper) {\n                // eslint-disable-next-line no-param-reassign\n                update.current = updatePopper;\n            }\n        });\n\n        useEffect(() => {\n            if (useAnchorWidth) {\n                const updatePopoverWidth = () => updatePopperRef.current?.();\n                const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n                const observer = new ResizeObserver(updatePopoverWidth);\n\n                if (anchorElement) {\n                    observer.observe(anchorElement);\n                }\n\n                return () => {\n                    observer.disconnect();\n                };\n            }\n\n            return () => ({});\n        }, [anchorElement, useAnchorWidth]);\n\n        /**\n         * По дизайну, если у тултипа позиционирование -start/-end, то стрелочка немного сдвигается вбок.\n         * Но если anchorElement слишком маленький, то стрелочка сдвигаться не должна.\n         */\n        useEffect(() => {\n            const shiftedPosition = position.includes('-start') || position.includes('-end');\n\n            if (shiftedPosition && referenceElement) {\n                const { width, height } = referenceElement.getBoundingClientRect();\n\n                const size =\n                    position.includes('left') || position.includes('right') ? height : width;\n\n                if (size >= MIN_ARROW_SHIFT_SIZE) {\n                    setArrowShift(true);\n                }\n            }\n        }, [referenceElement, position]);\n\n        const renderContent = (computedZIndex: number) => (\n            <div\n                ref={mergeRefs([ref, popperRef, setPopperElement])}\n                style={{\n                    zIndex: computedZIndex,\n                    width: useAnchorWidth ? referenceElement?.offsetWidth : undefined,\n                    ...popperStyles.popper,\n                    ...(popperStyles.popper?.transform ? null : { visibility: 'hidden' }),\n                }}\n                data-test-id={dataTestId}\n                className={cn(styles.component, className, {\n                    [styles.arrowShift]: arrowShift,\n                })}\n                {...attributes.popper}\n            >\n                <div className={cn(styles.inner, popperClassName)} ref={innerRef}>\n                    <div className={cn({ [styles.scrollableContent]: availableHeight })}>\n                        {children}\n                    </div>\n\n                    {withArrow && (\n                        <div\n                            ref={setArrowElement}\n                            style={popperStyles.arrow}\n                            className={cn(styles.arrow, arrowClassName)}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n\n        return (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <Portal getPortalContainer={getPortalContainer}>\n                        {withTransition ? (\n                            <CSSTransition\n                                unmountOnExit={true}\n                                classNames={CSS_TRANSITION_CLASS_NAMES}\n                                nodeRef={popperRef}\n                                {...transition}\n                                in={open}\n                                onEntering={(node: HTMLElement, isAppearing: boolean) => {\n                                    // Меняем transition-duration только в случае, если передано значение отличное от дефолтного.\n                                    if (\n                                        innerRef.current &&\n                                        transitionDuration !== `${DEFAULT_TRANSITION.timeout}ms`\n                                    ) {\n                                        innerRef.current.style.setProperty(\n                                            'transition-duration',\n                                            transitionDuration,\n                                        );\n                                    }\n                                    transition?.onEntering?.(node, isAppearing);\n                                }}\n                            >\n                                {renderContent(computedZIndex)}\n                            </CSSTransition>\n                        ) : (\n                            open && renderContent(computedZIndex)\n                        )}\n                    </Portal>\n                )}\n            </Stack>\n        );\n    },\n);\n","import { MutableRefObject, RefObject } from 'react';\n\nexport const PORTAL_CONTAINER_ATTRIBUTE = 'alfa-portal-container';\n\nfunction createPortalContainer() {\n    const portalContainer = document.createElement('div');\n\n    portalContainer.setAttribute(PORTAL_CONTAINER_ATTRIBUTE, '');\n\n    document.body.appendChild(portalContainer);\n\n    return portalContainer;\n}\n\nexport const getDefaultPortalContainer = (): Element =>\n    document.querySelector(`[${PORTAL_CONTAINER_ATTRIBUTE}]`) || createPortalContainer();\n\nexport function setRef<T>(\n    ref: RefObject<T> | ((instance: T | null) => void) | null | undefined,\n    value: T | null,\n): void {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        // eslint-disable-next-line no-param-reassign\n        (ref as MutableRefObject<T | null>).current = value;\n    }\n}\n","import { forwardRef, ReactNode, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { getDefaultPortalContainer, setRef } from './utils';\n\nexport type PortalProps = {\n    /** Контент */\n    children?: ReactNode;\n\n    /**\n     * Функция, возвращающая контейнер, в который будут рендериться дочерние элементы\n     */\n    getPortalContainer?: () => Element;\n\n    /**\n     * Немедленно отрендерить дочерние элементы (false - контент будет отрендерен на след. рендер).\n     */\n    immediateMount?: boolean;\n};\nexport const Portal = forwardRef<Element, PortalProps>(\n    ({ getPortalContainer = getDefaultPortalContainer, immediateMount = false, children }, ref) => {\n        const [mountNode, setMountNode] = useState<Element | null>(() =>\n            typeof window !== 'undefined' && immediateMount ? getPortalContainer() : null,\n        );\n\n        useEffect(() => {\n            setMountNode(getPortalContainer());\n        }, [getPortalContainer]);\n\n        useEffect(() => {\n            if (mountNode) {\n                setRef(ref, mountNode);\n\n                return () => {\n                    setRef(ref, null);\n                };\n            }\n\n            return () => null;\n        }, [ref, mountNode]);\n\n        return mountNode ? createPortal(children, mountNode) : mountNode;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_Vw_mp\",\"s\":\"s_cYLYP\",\"m\":\"m_Clpeu\",\"filled\":\"filled_seaxe\",\"positive\":\"positive_t3AFB\",\"negative\":\"negative_TGd44\",\"attention\":\"attention_RUoag\",\"link\":\"link_mMva0\",\"tertiary\":\"tertiary_KaD3G\",\"secondary\":\"secondary_m4fgZ\",\"primary\":\"primary_dBH6i\",\"accent\":\"accent_LLX5M\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type ProgressBarProps = {\n    /**\n     * Значение заполненной части 0-100\n     */\n    value: number;\n\n    /**\n     * Css-класс для стилизации\n     */\n    className?: string;\n\n    /**\n     * Цвет заполнения\n     */\n    view?:\n        | 'positive'\n        | 'negative'\n        | 'attention'\n        | 'link'\n        | 'tertiary'\n        | 'secondary'\n        | 'primary'\n        | 'accent';\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Id компонента для тестов\n     */\n    dataTestId?: string;\n};\n\nexport const ProgressBar = React.forwardRef<HTMLDivElement, ProgressBarProps>(\n    ({ className, value, view = 'positive', size = 'm', dataTestId }, ref) => {\n        const translateX = Math.max(-100, Math.min(0, value - 100));\n\n        return (\n            <div\n                role='progressbar'\n                aria-valuenow={Math.round(value)}\n                aria-valuemin={0}\n                aria-valuemax={100}\n                className={cn(styles.container, styles[size], className)}\n                data-test-id={dataTestId}\n                ref={ref}\n            >\n                <div\n                    className={cn(styles.filled, styles[view])}\n                    style={{ transform: `translateX(${translateX}%)` }}\n                />\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_uTdYw\",\"none\":\"none_Q6Koo\",\"default\":\"default_Fjj8h\",\"addonPadding\":\"addonPadding_DmTfF\",\"auto\":\"auto_YanNE\",\"top\":\"top_suDPv\",\"center\":\"center_UgsOi\",\"bottom\":\"bottom_MhVN4\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { AddonElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Вертикальное выравнивание\n     */\n    verticalAlign?: 'auto' | 'top' | 'center' | 'bottom';\n\n    /**\n     * Горизонтальные отступы\n     */\n    addonPadding?: 'default' | 'none';\n\n    /**\n     * Компоненты\n     */\n    children: AddonElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Addon: React.FC<Props> = ({\n    children,\n    verticalAlign = 'top',\n    addonPadding = 'default',\n    dataTestId,\n}) => (\n    <section\n        className={cn(styles.component, styles[addonPadding], styles[verticalAlign])}\n        data-test-id={getDataTestId(dataTestId, 'addon')}\n    >\n        {children}\n    </section>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_WZU2n\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Amount as CoreAmount } from '@alfalab/core-components-amount';\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { AmountProps as AmountType } from '../typesProps';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Начертание шрифта денежного значения\n     */\n    weight?: 'bold' | 'normal';\n\n    /**\n     * Размер денежного значения\n     */\n    textView?: 'component' | 'primary-small';\n\n    /**\n     * Цвет денежного значения\n     */\n    color?: Color;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n} & AmountType;\n\nexport const Amount: React.FC<Props> = ({\n    weight = 'normal',\n    textView = 'component',\n    color = 'primary',\n    minority,\n    minorUnits = 100,\n    dataTestId,\n    ...restProps\n}) => (\n    <Typography.Text\n        view={textView}\n        dataTestId={getDataTestId(dataTestId, 'amount-text')}\n        className={cn(styles.component)}\n        color={color}\n    >\n        <CoreAmount\n            minority={minority || minorUnits}\n            bold={weight === 'bold' ? 'full' : 'none'}\n            dataTestId={getDataTestId(dataTestId, 'amount')}\n            {...restProps}\n        />\n    </Typography.Text>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_U0c5c\",\"weight\":\"weight_Qmog0\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Amount as CoreAmount } from '@alfalab/core-components-amount';\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { AmountProps as AmountType } from '../typesProps';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Цвет денежного значения\n     */\n    color?: Color;\n} & AmountType;\n\nexport const AmountTitle: React.FC<Props> = ({\n    minority,\n    minorUnits = 100,\n    className,\n    color = 'primary',\n    dataTestId,\n    ...restProps\n}) => (\n    <Typography.Title\n        tag='h4'\n        view='small'\n        dataTestId={getDataTestId(dataTestId, 'amount-title')}\n        className={styles.component}\n        color={color}\n    >\n        <CoreAmount\n            minority={minority || minorUnits}\n            className={cn(styles.weight, className)}\n            dataTestId={getDataTestId(dataTestId, 'core-amount-title')}\n            {...restProps}\n            bold='none'\n        />\n    </Typography.Title>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_RNQaX\",\"categoryName\":\"categoryName_LQVD4\",\"categoryPercent\":\"categoryPercent_mo1wK\",\"rightAddon\":\"rightAddon_UK4o8\"};","import React, { ReactNode } from 'react';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Наименование категории\n     */\n    categoryName: string;\n\n    /**\n     * Процент категории\n     */\n    categoryPercent?: number;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Category: React.FC<Props> = ({\n    categoryName,\n    categoryPercent,\n    rightAddons,\n    dataTestId,\n}) => (\n    <div className={styles.component} data-test-id='cell-pure-category'>\n        <Typography.Text\n            view='primary-small'\n            color='secondary'\n            dataTestId={getDataTestId(dataTestId, 'category-name')}\n            className={styles.categoryName}\n        >\n            {categoryName}\n        </Typography.Text>\n        {categoryPercent !== undefined && (\n            <Typography.Text\n                tag='div'\n                view='primary-small'\n                color='secondary'\n                className={styles.categoryPercent}\n                dataTestId={getDataTestId(dataTestId, 'category-percent')}\n            >\n                {categoryPercent}%\n            </Typography.Text>\n        )}\n        {rightAddons !== undefined && (\n            <div\n                className={styles.rightAddon}\n                data-test-id={getDataTestId(dataTestId, 'category-right-addon')}\n            >\n                {rightAddons}\n            </div>\n        )}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_CFva2\",\"horizontal\":\"horizontal_TCHb7\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { PureCellContext } from '../../component';\nimport { ContentElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Компоненты\n     */\n    children: ContentElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Content: React.FC<Props> = ({ children, dataTestId }) => {\n    const { direction } = useContext(PureCellContext);\n\n    return (\n        <section\n            className={cn(styles.component, { [styles.horizontal]: direction === 'horizontal' })}\n            data-test-id={getDataTestId(dataTestId, 'content')}\n        >\n            {children}\n        </section>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_JxPUw\",\"none\":\"none_cYmad\",\"default\":\"default_kRR0c\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { FooterElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Компоненты\n     */\n    children: FooterElement;\n\n    /**\n     * Вертикальные отступы\n     */\n    footerPadding?: 'default' | 'none';\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Footer: React.FC<Props> = ({ children, footerPadding = 'default', dataTestId }) => (\n    <footer\n        className={cn(styles.component, styles[footerPadding])}\n        data-test-id={getDataTestId(dataTestId, 'footer')}\n    >\n        {children}\n    </footer>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ohVPj\"};","import React from 'react';\n\nimport { Button, ButtonProps } from '@alfalab/core-components-button';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\n\nimport styles from './index.module.css';\n\nexport const FooterButton: React.FC<ButtonProps> = ({ children, dataTestId, ...props }) => (\n    <Button\n        {...props}\n        size='xxs'\n        dataTestId={getDataTestId(dataTestId, 'button')}\n        className={styles.component}\n    >\n        {children}\n    </Button>\n);\n","import React, { ReactNode } from 'react';\n\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\n\nexport type Props = {\n    /**\n     * Цвет текста\n     */\n    color?: Color;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const FooterText: React.FC<Props> = ({ children, color = 'secondary', dataTestId }) => (\n    <Typography.Text\n        view='primary-small'\n        color={color}\n        data-test-id={getDataTestId(dataTestId, 'footer-title')}\n    >\n        {children}\n    </Typography.Text>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_KfXlP\",\"top\":\"top_vUba4\",\"center\":\"center_ppdLl\",\"bottom\":\"bottom_JMtrw\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { GraphicsElement } from '../types';\n\nimport styles from './index.module.css';\n\nexport type Props = {\n    /**\n     * Компоненты\n     */\n    children: GraphicsElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Вертикальное выравнивание\n     */\n    verticalAlign?: 'top' | 'center' | 'bottom';\n};\n\nexport const Graphics: React.FC<Props> = ({ children, dataTestId, verticalAlign = 'top' }) => (\n    <section\n        className={cn(styles.component, styles[verticalAlign])}\n        data-test-id={getDataTestId(dataTestId, 'graphics')}\n    >\n        {children}\n    </section>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_l1Bpk\",\"vertical\":\"vertical_dtFlu\",\"reverse\":\"reverse_vSuqm\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { PureCellContext } from '../../component';\nimport { MainElement } from '../types';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Компоненты\n     */\n    children: MainElement;\n\n    /**\n     * Позволяет изменить расположение блоков внутри main\n     */\n    isReverse?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Main: React.FC<Props> = ({ children, isReverse, dataTestId }) => {\n    const { direction = 'horizontal' } = useContext(PureCellContext);\n\n    return (\n        <div\n            className={cn(styles.component, styles[direction], {\n                [styles.reverse]: isReverse,\n            })}\n            data-test-id={getDataTestId(dataTestId, 'main')}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"horizontal_KKl6c\",\"rowLimit1\":\"rowLimit1_YUUG2\",\"rowLimit2\":\"rowLimit2_TIlsh\",\"component\":\"component_qyE8O\",\"vertical\":\"vertical_mvmPD\",\"title\":\"title_EgeNN\",\"value\":\"value_KqfO9\"};","import React, { ReactNode, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Color, Typography } from '@alfalab/core-components-typography';\n\nimport { getDataTestId } from '../../../../utils/getDataTestId';\nimport { PureCellContext } from '../../component';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Количество строк\n     */\n    rowLimit?: 1 | 2;\n\n    /**\n     * Размер текста\n     */\n    view: 'primary-large' | 'primary-medium' | 'primary-small' | 'component';\n\n    /**\n     * Толщина title\n     */\n    titleWeight?: 'regular' | 'bold';\n\n    /**\n     * Цвет title\n     */\n    titleColor: Color;\n\n    /**\n     * Value ячейки\n     */\n    value?: ReactNode;\n\n    /**\n     * Цвет value\n     */\n    valueColor?: Color;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Text: React.FC<Props> = ({\n    children,\n    value,\n    rowLimit,\n    view = 'component',\n    titleWeight,\n    titleColor,\n    valueColor,\n    dataTestId,\n}) => {\n    const { direction = 'horizontal' } = useContext(PureCellContext);\n    const className = rowLimit && styles[`rowLimit${rowLimit}`];\n\n    return (\n        <div\n            className={cn(styles.component, {\n                [styles.vertical]: direction !== 'horizontal',\n            })}\n        >\n            <div className={styles.title}>\n                <Typography.Text\n                    view={view}\n                    weight={titleWeight}\n                    tag='div'\n                    color={titleColor}\n                    className={className}\n                    data-test-id={getDataTestId(dataTestId, 'text_content')}\n                >\n                    {children}\n                </Typography.Text>\n            </div>\n\n            {value && (\n                <div className={styles.value}>\n                    <Typography.Text\n                        view={view}\n                        tag='div'\n                        color={valueColor}\n                        className={className}\n                        data-test-id={getDataTestId(dataTestId, 'text_value')}\n                    >\n                        {value}\n                    </Typography.Text>\n                </div>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_kn8FA\",\"horizontal\":\"horizontal_Etkwv\",\"vertical\":\"vertical_EC3nL\",\"button\":\"button_RSfCP\",\"link\":\"link_PjZd7\",\"none\":\"none_REPhZ\",\"airy\":\"airy_AIVoH\",\"defaultPadding\":\"defaultPadding_CZkrN\",\"compact\":\"compact_g7rsI\",\"tiny\":\"tiny_Pr_Om\",\"left\":\"left_awn_3\",\"right\":\"right_Wftj9\",\"both\":\"both_OfuoJ\",\"focused\":\"focused_xiX72\"};","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, {\n    AnchorHTMLAttributes,\n    ButtonHTMLAttributes,\n    ElementType,\n    forwardRef,\n    HTMLAttributes,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { ButtonProps } from '@alfalab/core-components-button';\nimport { Comment } from '@alfalab/core-components-comment';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { Addon } from './components/addon';\nimport { Amount } from './components/amount';\nimport { AmountTitle } from './components/amount-title';\nimport { Category } from './components/category';\nimport { Content } from './components/content';\nimport { Footer } from './components/footer';\nimport { FooterButton } from './components/footer-button';\nimport { FooterText } from './components/footer-text';\nimport { Graphics } from './components/graphics';\nimport { Main } from './components/main';\nimport { Text } from './components/text';\nimport { PureCellElement } from './components/types';\n\nimport styles from './index.module.css';\n\nexport type PureCellContext = {\n    /** Направление */\n    direction?: 'horizontal' | 'vertical';\n};\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const PureCellContext = React.createContext<PureCellContext>({});\n\nexport type PureCellProps = {\n    /**\n     * Направление\n     */\n    direction?: 'horizontal' | 'vertical';\n\n    /**\n     * Сss класс для стилизации общей обёртки\n     */\n    className?: string;\n\n    /**\n     * Выводит ссылку в виде ячейки\n     */\n    href?: string;\n\n    /**\n     * Вертикальные отступы\n     */\n    verticalPadding?: 'airy' | 'default' | 'compact' | 'tiny' | 'none';\n\n    /**\n     * Горизонтальные отступы\n     */\n    horizontalPadding?: 'left' | 'right' | 'both' | 'none';\n\n    /**\n     * Позволяет использовать кастомный компонент для кнопки (например Link из роутера)\n     */\n    tag?: ElementType;\n    /**\n     * Компоненты\n     */\n    children: PureCellElement;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\ntype AnchorPureCellProps = PureCellProps & AnchorHTMLAttributes<HTMLAnchorElement>;\ntype ButtonPureCellProps = PureCellProps & ButtonHTMLAttributes<HTMLButtonElement>;\ntype ElementPureCellProps = PureCellProps & HTMLAttributes<HTMLElement>;\ntype PureProps = Partial<AnchorPureCellProps | ButtonPureCellProps | ElementPureCellProps>;\n\nconst PureCellComponent = forwardRef<HTMLElement, PureProps>(\n    (\n        {\n            className,\n            dataTestId,\n            onClick,\n            href,\n            tag: Component = (href && 'a') || (onClick && 'button') || 'section',\n            children,\n            horizontalPadding = 'none',\n            verticalPadding = 'none',\n            direction = 'horizontal',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const cellRef = useRef<HTMLDivElement>(null);\n        const [focused] = useFocus(cellRef, 'keyboard');\n        const addClasses = {\n            [styles.component]: true,\n            [styles.focused]: focused,\n            [styles[direction]]: true,\n            [styles.defaultPadding]: verticalPadding === 'default',\n            [styles[verticalPadding]]: verticalPadding !== 'default',\n            [styles[horizontalPadding]]: true,\n        };\n\n        if (href) {\n            const { target } = restProps as AnchorHTMLAttributes<HTMLAnchorElement>;\n\n            // Для совместимости с react-router-dom, меняем href на to\n            const hrefProps = { [typeof Component === 'string' ? 'href' : 'to']: href };\n\n            return (\n                <Component\n                    rel={target === '_blank' ? 'noreferrer noopener' : undefined}\n                    {...(restProps as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                    {...hrefProps}\n                    ref={mergeRefs([cellRef, ref])}\n                    className={cn(styles.link, addClasses, className)}\n                    data-test-id={dataTestId}\n                    onClick={onClick}\n                >\n                    <PureCellContext.Provider value={{ direction }}>\n                        {children}\n                    </PureCellContext.Provider>\n                </Component>\n            );\n        }\n\n        if (onClick) {\n            return (\n                <Component\n                    {...(restProps as AnchorHTMLAttributes<HTMLAnchorElement>)}\n                    ref={mergeRefs([cellRef, ref])}\n                    className={cn(styles.button, addClasses, className)}\n                    data-test-id={dataTestId}\n                    onClick={onClick}\n                >\n                    <PureCellContext.Provider value={{ direction }}>\n                        {children}\n                    </PureCellContext.Provider>\n                </Component>\n            );\n        }\n\n        return (\n            <Component\n                ref={ref}\n                tabIndex={0}\n                className={cn(addClasses, className)}\n                data-test-id={dataTestId}\n            >\n                <PureCellContext.Provider value={{ direction }}>\n                    {children}\n                </PureCellContext.Provider>\n            </Component>\n        );\n    },\n);\n\n/**\n * Универсальный конструктор для сборки любой ячейки.\n *\n * [Макет](https://www.figma.com/file/KlFOLLkKO8rtvvQE3RXuhq/Click-Library?node-id=43525%3A240018)\n */\nexport const PureCell = Object.assign(PureCellComponent, {\n    Main,\n    Graphics,\n    Content,\n    Text,\n    Amount,\n    AmountTitle,\n    Addon,\n    Footer,\n    ExtraSubtitle: FooterText,\n    FooterButton,\n    Comment,\n    Category,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_McG3V\",\"hasInnerLabel\":\"hasInnerLabel_N7K76\",\"clearIcon\":\"clearIcon_tNoce\",\"component\":\"component_R8Xdt\",\"block\":\"block_BRBEz\",\"s\":\"s_ImKQ_\",\"m\":\"m_rXPol\",\"l\":\"l_VWXAP\",\"xl\":\"xl_UVp0L\",\"focusVisible\":\"focusVisible_S4hPl\"};","import React, { InputHTMLAttributes, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nexport type PureInputProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'size' | 'type' | 'enterKeyHint'\n> & {\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Атрибут type\n     */\n    type?: 'number' | 'card' | 'email' | 'hidden' | 'money' | 'password' | 'tel' | 'text';\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const PureInput = React.forwardRef<HTMLInputElement, PureInputProps>(\n    ({ size = 's', type = 'text', block = false, className, dataTestId, ...restProps }, ref) => {\n        const inputRef = useRef<HTMLInputElement>(null);\n\n        const [focusVisible] = useFocus(inputRef, 'keyboard');\n\n        return (\n            <input\n                {...restProps}\n                className={cn(\n                    styles.component,\n                    styles[size],\n                    {\n                        [styles.block]: block,\n                        [styles.focusVisible]: focusVisible,\n                    },\n                    className,\n                )}\n                ref={mergeRefs([ref, inputRef])}\n                type={type}\n                data-test-id={dataTestId}\n            />\n        );\n    },\n);\n\n/**\n * Для отображения в сторибуке\n */\nPureInput.defaultProps = {\n    size: 's',\n    type: 'text',\n    block: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"radioList\":\"radioList_v9coE\",\"label\":\"label_ew8ZQ\",\"sub\":\"sub_c5lQ8\"};","import React, { forwardRef } from 'react';\n\nimport { BaseRadioGroup, BaseRadioGroupProps } from './components/base-radio-group';\n\nimport styles from './desktop.module.css';\n\nexport type RadioGroupDesktopProps = Omit<BaseRadioGroupProps, 'styles'>;\n\nexport const RadioGroupDesktop = forwardRef<HTMLDivElement, RadioGroupDesktopProps>(\n    (props, ref) => <BaseRadioGroup {...props} ref={ref} styles={styles} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"radioList\":\"radioList_RkYxr\",\"label\":\"label_o1Lov\",\"sub\":\"sub_qbKhH\"};","import React, { forwardRef } from 'react';\n\nimport { BaseRadioGroup, BaseRadioGroupProps } from './components/base-radio-group';\n\nimport styles from './mobile.module.css';\n\nexport type RadioGroupMobileProps = Omit<BaseRadioGroupProps, 'styles'>;\n\nexport const RadioGroupMobile = forwardRef<HTMLDivElement, RadioGroupMobileProps>((props, ref) => (\n    <BaseRadioGroup {...props} ref={ref} styles={styles} />\n));\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseRadioGroupProps } from './components/base-radio-group';\nimport { RadioGroupDesktop } from './Component.desktop';\nimport { RadioGroupMobile } from './Component.mobile';\n\nexport type RadioGroupProps = Omit<BaseRadioGroupProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const RadioGroup = forwardRef<HTMLDivElement, RadioGroupProps>(\n    ({ breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? RadioGroupDesktop : RadioGroupMobile;\n\n        return <Component ref={ref} {...restProps} />;\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qabhB\",\"error\":\"error_vSOO1\",\"tag\":\"tag_QtcmG\",\"radioList\":\"radioList_LgIHk\",\"vertical\":\"vertical_NzVdY\",\"radio\":\"radio_iF8Qp\",\"horizontal\":\"horizontal_WjKdP\",\"tagLabel\":\"tagLabel_u7X3v\",\"label\":\"label_F9RcM\",\"sub\":\"sub_S_aU1\",\"errorMessage\":\"errorMessage_CuGax\",\"hint\":\"hint_ZY8d8\",\"hiddenInput\":\"hiddenInput_tmRLW\"};","import React, {\n    ChangeEvent,\n    Children,\n    cloneElement,\n    FocusEvent,\n    forwardRef,\n    isValidElement,\n    MouseEvent,\n    ReactElement,\n    ReactNode,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { useDidUpdateEffect } from '@alfalab/hooks';\n\nimport commonStyles from './index.module.css';\n\nexport type Direction = 'horizontal' | 'vertical';\nexport type RadioGroupType = 'radio' | 'tag';\n\nexport type BaseRadioGroupProps = {\n    /**\n     * Заголовок группы\n     */\n    label?: ReactNode;\n\n    /**\n     * Направление\n     */\n    direction?: Direction;\n\n    /**\n     * Тип компонента\n     */\n    type?: RadioGroupType;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Отображение ошибки\n     */\n    error?: ReactNode | boolean;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Дочерние элементы. Ожидаются компоненты `Radio` или `Tag`\n     */\n    children: ReactNode;\n\n    /**\n     * Обработчик изменения значения 'checked' одного из дочерних компонентов\n     */\n    onChange?: (\n        event: ChangeEvent | MouseEvent,\n        payload: {\n            value: string;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * Обработчик блюра.\n     */\n    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Обработчик фокуса.\n     */\n    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;\n\n    /**\n     * Управление возможностью изменения состояния 'checked' дочерних компонентов Radio | Tag\n     */\n    disabled?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Атрибут name для всех дочерних компонентов\n     */\n    name?: string;\n\n    /**\n     * Value выбранного дочернего элемента\n     */\n    value?: string | null;\n\n    /**\n     * Основные стили компонента.\n     */\n    styles: { [key: string]: string };\n};\n\nexport const BaseRadioGroup = forwardRef<HTMLDivElement, BaseRadioGroupProps>(\n    (\n        {\n            children,\n            className,\n            direction = 'vertical',\n            label,\n            error,\n            hint,\n            onChange,\n            onBlur,\n            onFocus,\n            type = 'radio',\n            dataTestId,\n            disabled = false,\n            name,\n            value,\n            styles,\n        },\n        ref,\n    ) => {\n        const [stateValue, setStateValue] = useState<BaseRadioGroupProps['value']>('');\n\n        useDidUpdateEffect(() => {\n            setStateValue(value);\n        }, [value]);\n\n        const isChecked = (childValue: string) =>\n            value !== null && (value || stateValue) === childValue;\n\n        const handleChange = (event: ChangeEvent | MouseEvent, childValue: string) => {\n            setStateValue(childValue);\n            if (onChange) {\n                onChange(event, { name, value: childValue });\n            }\n        };\n\n        const renderRadio = (child: ReactElement) => {\n            const { className: childClassName, value: childValue } = child.props;\n\n            return cloneElement(child, {\n                onChange: (event: ChangeEvent) => handleChange(event, childValue),\n                disabled,\n                ...child.props,\n                checked: isChecked(childValue),\n                name,\n                className: cn(childClassName, commonStyles.radio),\n            });\n        };\n\n        const renderTag = (child: ReactElement) => {\n            const childValue = child.props.value;\n            const checked = isChecked(childValue);\n            const clone = cloneElement(child, {\n                onClick: (event: MouseEvent) => handleChange(event, childValue),\n                disabled,\n                ...child.props,\n                checked,\n                name,\n                tabIndex: -1,\n            });\n\n            return (\n                <label className={cn(commonStyles.radio, commonStyles.tagLabel)}>\n                    <input\n                        type='radio'\n                        autoComplete='off'\n                        onChange={(event: ChangeEvent) => handleChange(event, childValue)}\n                        disabled={disabled || child.props.disabled}\n                        name={name}\n                        checked={checked}\n                        className={commonStyles.hiddenInput}\n                        value={child.props.value}\n                    />\n                    {clone}\n                </label>\n            );\n        };\n\n        const errorMessage = typeof error === 'boolean' ? '' : error;\n\n        return (\n            <div\n                className={cn(\n                    commonStyles.component,\n                    commonStyles[type],\n                    commonStyles[direction],\n                    { [commonStyles.error]: error },\n                    className,\n                )}\n                data-test-id={dataTestId}\n                ref={ref}\n            >\n                {label ? (\n                    <span className={cn(commonStyles.label, styles.label)}>{label}</span>\n                ) : null}\n\n                {children ? (\n                    <div\n                        className={cn(commonStyles.radioList, {\n                            [styles.radioList]: type === 'radio',\n                        })}\n                        onBlur={onBlur}\n                        onFocus={onFocus}\n                    >\n                        {Children.map(children, (child) => {\n                            if (isValidElement(child)) {\n                                return type === 'radio' ? renderRadio(child) : renderTag(child);\n                            }\n\n                            return null;\n                        })}\n                    </div>\n                ) : null}\n\n                {errorMessage && (\n                    <span\n                        className={cn(commonStyles.sub, styles.sub, commonStyles.errorMessage)}\n                        role='alert'\n                    >\n                        {errorMessage}\n                    </span>\n                )}\n\n                {hint && !errorMessage && (\n                    <span className={cn(commonStyles.sub, styles.sub, commonStyles.hint)}>\n                        {hint}\n                    </span>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_YVxLX\",\"checked\":\"checked_pqVQp\",\"disabled\":\"disabled_dkrkW\",\"inactive\":\"inactive_WDMWP\",\"circle\":\"circle_ShLCn\",\"label\":\"label_zLN3J\",\"hint\":\"hint_u2pkj\",\"focused\":\"focused_ZqiQy\",\"s\":\"s_G5yno\",\"content\":\"content_FTi_c\",\"start\":\"start_I3XxQ\",\"center\":\"center_Pkjfe\",\"addons\":\"addons_n79mM\",\"block\":\"block_gFlJ3\"};","import React, { ChangeEvent, forwardRef, InputHTMLAttributes, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\ntype NativeProps = InputHTMLAttributes<HTMLInputElement>;\ntype Align = 'start' | 'center';\n\nexport type RadioProps = Omit<\n    NativeProps,\n    'size' | 'type' | 'onChange' | 'checked' | 'disabled' | 'name' | 'className' | 'enterKeyHint'\n> & {\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Текст подписи\n     */\n    label?: ReactNode;\n\n    /**\n     * Размер компонента\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Управление состоянием отмечен/не отмечен\n     */\n    checked?: boolean;\n\n    /**\n     * Управление состоянием включен / выключен\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием активен / неактивен\n     */\n    inactive?: boolean;\n\n    /**\n     * Html аттрибут name инпута\n     */\n    name?: string;\n\n    /**\n     * Класс компонента\n     */\n    className?: string;\n\n    /**\n     * Доп. класс радио кнопки\n     */\n    circleClassName?: string;\n\n    /**\n     * Доп. класс контента\n     */\n    contentClassName?: string;\n\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Дополнительный слот\n     */\n    addons?: React.ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * Обработчик на выбор элемента\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n};\n\nexport const Radio = forwardRef<HTMLLabelElement, RadioProps>(\n    (\n        {\n            onChange,\n            className,\n            circleClassName,\n            contentClassName,\n            name,\n            disabled,\n            inactive,\n            dataTestId,\n            label,\n            checked,\n            hint,\n            size = 's',\n            align = 'start',\n            addons,\n            block,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const labelRef = useRef<HTMLLabelElement>(null);\n\n        const [focused] = useFocus(labelRef, 'keyboard');\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (onChange) {\n                onChange(event, { checked: event.target.checked, name });\n            }\n        };\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label\n                className={cn(styles.container, styles[size], styles[align], className, {\n                    [styles.disabled]: disabled,\n                    [styles.inactive]: inactive,\n                    [styles.checked]: checked,\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                })}\n                ref={mergeRefs([labelRef, ref])}\n            >\n                <input\n                    type='radio'\n                    onChange={handleChange}\n                    data-test-id={dataTestId}\n                    disabled={disabled || inactive}\n                    checked={checked}\n                    name={name}\n                    {...restProps}\n                />\n                <span className={cn(styles.circle, circleClassName)} />\n                {(label || hint) && (\n                    <span className={cn(styles.content, contentClassName)}>\n                        {label && <span className={styles.label}>{label}</span>}\n                        {hint && <span className={styles.hint}>{hint}</span>}\n                    </span>\n                )}\n                {addons && <span className={styles.addons}>{addons}</span>}\n            </label>\n        );\n    },\n);\n","const req = require.context('../../', true, /^\\.\\/(.*)\\/src\\/index.ts$/);\n\nconst packages = req.keys().reduce((acc, key) => {\n    const packageName = key.split('/')[1];\n\n    acc[packageName] = req(key);\n\n    return acc;\n    // eslint-disable-next-line\n}, {} as Record<string, any>);\n\nexport const getComponent = (\n    packageName: string,\n    componentName: string,\n    subComponentName?: string,\n) => {\n    try {\n        const component = packages[packageName][componentName];\n\n        return subComponentName ? component[subComponentName] : component;\n    } catch (e) {\n        return null;\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_x_PaQ\",\"wrapper\":\"wrapper_PzV2i\",\"heightAutoObserverWrapper\":\"heightAutoObserverWrapper_XIsF5\",\"heightAutoObserver\":\"heightAutoObserver_jWgaw\",\"mask\":\"mask_zPNqL\",\"offset\":\"offset_aucl5\",\"contentWrapper\":\"contentWrapper_s9gd2\",\"placeholder\":\"placeholder_qEx8W\",\"vertical\":\"vertical_hRaze\",\"hover\":\"hover_rhhvl\",\"horizontal\":\"horizontal_PIC5i\",\"content\":\"content_oHLNu\"};","import React, { HTMLAttributes, useEffect, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport throttle from 'lodash.throttle';\nimport SimpleBar from 'simplebar/src/simplebar';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStylesMap = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type ScrollbarProps = {\n    /**\n     * Оборачиваемый элемент.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс на корневой элемент.\n     */\n    className?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Растягивать контент по горизонтали по ширине содержимого.\n     */\n    horizontalAutoStretch?: boolean;\n\n    /**\n     * Название css свойства, которое устанавливается на контейнер при horizontalAutoStretch.\n     */\n    widthPropName?: 'minWidth' | 'width' | 'maxWidth';\n\n    /**\n     * Включает автоскрытие ползунка.\n     */\n    autoHide?: boolean;\n\n    /**\n     * Время в мс, определяющее задержку до исчезновения полосы прокрутки (при включенной опции autoHide).\n     */\n    autoHideTimeout?: number;\n\n    /**\n     * Принудительное отображение полосы прокрутки.\n     */\n    forceVisible?: boolean | 'x' | 'y';\n\n    /**\n     * Управление поведением клика по треку.\n     * Если true, то будет выполняться прокрутка к месту клика.\n     */\n    clickOnTrack?: boolean;\n\n    /**\n     * HTML-aтрибуты на прокручиваемый узел.\n     */\n    scrollableNodeProps?: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >;\n\n    /**\n     * HTML-aтрибуты на узел с контентом.\n     */\n    contentNodeProps?: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >;\n} & HTMLAttributes<HTMLDivElement>;\n\nconst classNames = {\n    wrapper: styles.wrapper,\n    heightAutoObserverEl: styles.heightAutoObserver,\n    heightAutoObserverWrapperEl: styles.heightAutoObserverWrapper,\n    mask: styles.mask,\n    offset: styles.offset,\n    contentWrapper: styles.contentWrapper,\n    contentEl: styles.content,\n    placeholder: styles.placeholder,\n    vertical: styles.vertical,\n    horizontal: styles.horizontal,\n    hover: styles.hover,\n    track: 'track',\n    scrollbar: 'scrollbar',\n    dragging: 'dragging',\n    visible: 'visible',\n};\n\nexport const Scrollbar = React.forwardRef<HTMLDivElement, ScrollbarProps>(\n    (\n        {\n            colors = 'default',\n            className,\n            children,\n            scrollableNodeProps = { ref: null },\n            contentNodeProps = { ref: null },\n            autoHide = true,\n            forceVisible = false,\n            autoHideTimeout = 1000,\n            clickOnTrack = true,\n            horizontalAutoStretch = false,\n            widthPropName = 'minWidth',\n            ...htmlAttributes\n        },\n        ref,\n    ) => {\n        const elRef = useRef<HTMLDivElement>(null);\n        const scrollableNodeRef = useRef<HTMLDivElement>(null);\n        const contentNodeRef = useRef<HTMLDivElement>(null);\n        const maskNodeRef = useRef<HTMLDivElement>(null);\n\n        const colorStyles = colorStylesMap[colors];\n\n        useEffect(() => {\n            let instance: SimpleBar | null;\n\n            if (elRef.current) {\n                instance = new SimpleBar(elRef.current, {\n                    autoHide,\n                    forceVisible,\n                    clickOnTrack,\n                    classNames,\n                    timeout: autoHideTimeout,\n                    direction: 'ltr',\n                    scrollbarMinSize: 40,\n                    scrollableNode: scrollableNodeRef.current,\n                    contentNode: contentNodeRef.current,\n                });\n            }\n\n            return () => {\n                if (instance) {\n                    instance.unMount();\n                    instance = null;\n                }\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        useEffect(() => {\n            let mutationObserver: MutationObserver | null = null;\n            const contentNode = contentNodeRef.current;\n            const rootNode = elRef.current;\n            const scrollableNode = scrollableNodeRef.current;\n            const maskNode = maskNodeRef.current;\n\n            const setMinWidth = throttle(() => {\n                if (contentNode && rootNode && scrollableNode && maskNode) {\n                    /*\n                     * Устанавливаем min-width, чтобы максимально растянуть абсолютно позиционированный элемент.\n                     * Затем контенту устанавливаем display: inline-block, чтобы его ширина была равна ширине содержимого.\n                     */\n                    maskNode.style.minWidth = '4000px';\n                    contentNode.style.display = 'inline-block';\n\n                    const contentRect = contentNode.getBoundingClientRect();\n                    const newWidth = `${Math.ceil(contentRect.width)}px`;\n                    const prevWidth = rootNode.style[widthPropName];\n\n                    if (newWidth !== prevWidth) {\n                        rootNode.style[widthPropName] = newWidth;\n                    }\n\n                    contentNode.style.display = '';\n                    maskNode.style.minWidth = '';\n                }\n            }, 200);\n\n            if (horizontalAutoStretch && contentNode) {\n                setMinWidth();\n\n                mutationObserver = new MutationObserver(setMinWidth);\n\n                mutationObserver.observe(contentNode, {\n                    childList: true,\n                    subtree: true,\n                    characterData: true,\n                });\n            }\n\n            return () => {\n                setMinWidth.cancel();\n\n                if (mutationObserver) {\n                    mutationObserver.disconnect();\n                }\n            };\n        }, [widthPropName, horizontalAutoStretch]);\n\n        return (\n            <div\n                {...htmlAttributes}\n                ref={mergeRefs([elRef, ref])}\n                data-simplebar={true}\n                className={cn(styles.component, colorStyles.component, className)}\n            >\n                <div className={classNames.wrapper}>\n                    <div className={classNames.heightAutoObserverWrapperEl}>\n                        <div className={classNames.heightAutoObserverEl} />\n                    </div>\n                    <div className={classNames.mask} ref={maskNodeRef}>\n                        <div className={classNames.offset}>\n                            <div\n                                {...scrollableNodeProps}\n                                ref={mergeRefs([\n                                    scrollableNodeRef,\n                                    ...(scrollableNodeProps.ref ? [scrollableNodeProps.ref] : []),\n                                ])}\n                                className={cn(\n                                    classNames.contentWrapper,\n                                    scrollableNodeProps?.className,\n                                )}\n                            >\n                                <div\n                                    {...contentNodeProps}\n                                    ref={mergeRefs([\n                                        contentNodeRef,\n                                        ...(contentNodeProps.ref ? [contentNodeProps.ref] : []),\n                                    ])}\n                                    className={cn(\n                                        classNames.contentEl,\n                                        contentNodeProps?.className,\n                                    )}\n                                >\n                                    {children}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames.placeholder} />\n                </div>\n                <div className={cn(classNames.track, classNames.horizontal)}>\n                    <div className={classNames.scrollbar} />\n                </div>\n                <div className={cn(classNames.track, classNames.vertical)}>\n                    <div className={classNames.scrollbar} />\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ZJA1w\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component__nMyH\"};","import { createContext } from 'react';\n\nimport { IDType } from './typing';\n\nexport type ContextType = {\n    onChange: (id: IDType) => void;\n};\n\nexport const SegmentedControlContext = createContext<ContextType>({\n    onChange: () => null,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper_N9EbJ\",\"container\":\"container_wgn0V\",\"inner\":\"inner_mLacL\",\"segment\":\"segment_oMKH7\",\"selected\":\"selected_FwXVX\",\"xs\":\"xs_Ht6PL\",\"rounded\":\"rounded_LPl0z\",\"rectangular\":\"rectangular__hTJl\",\"selectedBox\":\"selectedBox_nVEcu\",\"xxs\":\"xxs_orhZH\"};","import React, { FC, ReactElement, useCallback, useEffect, useRef } from 'react';\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer';\nimport cn from 'classnames';\n\nimport { SegmentProps } from './components';\nimport { ContextType, SegmentedControlContext } from './context';\nimport { IDType } from './typing';\n\nimport styles from './index.module.css';\n\nexport type SegmentedControlProps = {\n    /**\n     * Дополнительный className\n     */\n    className?: string;\n\n    /**\n     * Обработчик смены выбранного сегмента\n     */\n    onChange: ContextType['onChange'];\n\n    /**\n     * ID выбранного сегмента\n     */\n    selectedId: IDType;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 'xxs';\n\n    /**\n     * Форма компонента\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Дочерние элементы\n     */\n    children: Array<ReactElement<SegmentProps>>;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nconst MAX_SEGMENTS = 5;\n\nexport const SegmentedControl: FC<SegmentedControlProps> = ({\n    className,\n    selectedId,\n    onChange,\n    shape = 'rectangular',\n    size = 'xxs',\n    children: defaultChildren,\n    dataTestId,\n}) => {\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const innerRef = useRef<HTMLDivElement>(null);\n    const selectedBoxRef = useRef<HTMLDivElement>(null);\n    const children = defaultChildren.slice(0, MAX_SEGMENTS);\n\n    const selectedSegmentPosition = children.findIndex((item) => item.props.id === selectedId);\n    const isPositionFounded = selectedSegmentPosition !== -1;\n    const content = isPositionFounded && children[selectedSegmentPosition].props.children;\n    const contentClassName =\n        isPositionFounded && children[selectedSegmentPosition].props.contentClassName;\n\n    const setSelectedBoxStyles = useCallback(() => {\n        if (innerRef.current && selectedBoxRef.current) {\n            const segments = Array.from(innerRef.current.children);\n            const { width: parentWidth } = innerRef.current.getBoundingClientRect();\n            const width = parentWidth / segments.length;\n            const offsetLeft = width * selectedSegmentPosition;\n\n            selectedBoxRef.current.style.width = `${width}px`;\n            selectedBoxRef.current.style.transform = `translateX(${offsetLeft}px)`;\n        }\n    }, [selectedSegmentPosition]);\n\n    const setSelectedBoxStylesRef = useRef(setSelectedBoxStyles);\n\n    useEffect(() => {\n        setSelectedBoxStylesRef.current = setSelectedBoxStyles;\n        setSelectedBoxStyles();\n    }, [setSelectedBoxStyles]);\n\n    useEffect(() => {\n        if (!wrapperRef.current) return undefined;\n\n        const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill;\n\n        const observer = new ResizeObserver(() => setSelectedBoxStylesRef.current());\n\n        observer.observe(wrapperRef.current);\n\n        return () => observer.disconnect();\n    }, []);\n\n    return (\n        // eslint-disable-next-line react/jsx-no-constructed-context-values\n        <SegmentedControlContext.Provider value={{ onChange }}>\n            <div\n                ref={wrapperRef}\n                className={cn(styles.wrapper, styles[shape], styles[size], className)}\n                data-test-id={dataTestId}\n            >\n                <div className={cn(styles.container)}>\n                    <div className={cn(styles.selectedBox, styles[shape])} ref={selectedBoxRef} />\n                    <div className={cn(styles.inner)} ref={innerRef}>\n                        {React.Children.map(children, (item) =>\n                            React.cloneElement(item, {\n                                className: cn(\n                                    styles.segment,\n                                    {\n                                        [styles.selected]: item.props.id === selectedId,\n                                    },\n                                    item.props.className,\n                                ),\n                            }),\n                        )}\n                    </div>\n                </div>\n            </div>\n            {content && <div className={cn(contentClassName)}>{content}</div>}\n        </SegmentedControlContext.Provider>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"segment\":\"segment_zeSuv\",\"focused\":\"focused_igu1d\"};","import React, { forwardRef, ReactNode, useContext, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport { SegmentedControlContext } from '../../context';\nimport { IDType } from '../../typing';\n\nimport styles from './index.module.css';\n\nexport type SegmentProps = {\n    /**\n     * Дополнительный className\n     */\n    className?: string;\n\n    /**\n     * Дополнительный className для контента сегмента\n     */\n    contentClassName?: string;\n\n    /**\n     * ID сегмента\n     */\n    id: IDType;\n\n    /**\n     * Заголовок сегмента\n     */\n    title: string;\n\n    /**\n     * Контент выбранного сегмента\n     */\n    children?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Segment = forwardRef<HTMLButtonElement, SegmentProps>(\n    ({ id, className, title, dataTestId }, ref) => {\n        const { onChange } = useContext(SegmentedControlContext);\n\n        const segmentRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(segmentRef, 'keyboard');\n\n        const handleClick = () => {\n            onChange(id);\n        };\n\n        return (\n            <button\n                type='button'\n                onClick={handleClick}\n                ref={mergeRefs([segmentRef, ref])}\n                className={cn(styles.segment, className, styles.focused && focused)}\n                data-test-id={dataTestId}\n            >\n                {title}\n            </button>\n        );\n    },\n);\n","const getElementSize = (element: HTMLElement, property: string): number => {\n    const size = +window.getComputedStyle(element).getPropertyValue(property).replace('px', '');\n\n    return Number.isNaN(size) ? 0 : size;\n};\n\nconst getTagWidth = (tag: HTMLElement) => {\n    const tagMarginLeft = getElementSize(tag, 'margin-left');\n    const tagMarginRight = getElementSize(tag, 'margin-right');\n\n    return tag.getBoundingClientRect().width + tagMarginRight + tagMarginLeft;\n};\n\nexport const calculateTotalElementsPerRow = (\n    container: HTMLDivElement,\n    input?: HTMLInputElement | null,\n): number => {\n    let containerWidth = container.getBoundingClientRect().width;\n    const containerPaddingLeft = getElementSize(container, 'padding-left');\n    const containerPaddingRight = getElementSize(container, 'padding-right');\n\n    containerWidth -= containerPaddingLeft + containerPaddingRight;\n\n    if (input) {\n        const inputMinWidth = getElementSize(input, 'min-width');\n        const inputMarginLeft = getElementSize(input, 'margin-left');\n        const inputMarginRight = getElementSize(input, 'margin-right');\n        const minInputWidth = inputMarginLeft + inputMarginRight + inputMinWidth;\n\n        containerWidth -= minInputWidth;\n    }\n\n    const tags = container.getElementsByTagName('button');\n    const latestTag = tags[tags.length - 1];\n\n    if (latestTag && latestTag.getAttribute('data-collapse') === 'collapse-last-tag-element') {\n        containerWidth -= getTagWidth(latestTag);\n    }\n    let totalTagsWidth = 0;\n    let totalVisibleElements = 0;\n\n    for (let i = 0; i < tags.length; i++) {\n        const tag = tags[i];\n\n        if (tag.getAttribute('data-collapse') === 'collapse-last-tag-element') {\n            break;\n        }\n        totalTagsWidth += getTagWidth(tag);\n        if (totalTagsWidth < containerWidth) {\n            totalVisibleElements += 1;\n        }\n    }\n\n    return totalVisibleElements;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"tag_FY9oJ\",\"tagNoClose\":\"tagNoClose_bkg0f\",\"tagContentWrap\":\"tagContentWrap_jFIHW\",\"tagCross\":\"tagCross_u6yby\"};","import React, { useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { TagDesktop as CoreTag } from '@alfalab/core-components-tag/desktop';\nimport { CrossCompactMIcon } from '@alfalab/icons-glyph/CrossCompactMIcon';\n\nimport { TagComponent } from '../../types';\n\nimport styles from './index.module.css';\n\nexport const Tag: TagComponent = ({\n    option: { content, key },\n    onClick,\n    handleDeleteTag,\n    ...props\n}) => {\n    const handleClick = useCallback(() => {\n        if (handleDeleteTag) {\n            handleDeleteTag(key);\n        }\n    }, [handleDeleteTag, key]);\n\n    return (\n        <CoreTag\n            key={key}\n            size='xxs'\n            onClick={onClick}\n            checked={!!handleDeleteTag}\n            className={cn(styles.tag, { [styles.tagNoClose]: !handleDeleteTag })}\n            {...props}\n        >\n            <span className={styles.tagContentWrap}>\n                {content}\n                {handleDeleteTag && (\n                    // eslint-disable-next-line\n                    <span className={styles.tagCross} onClick={handleClick}>\n                        <CrossCompactMIcon />\n                    </span>\n                )}\n            </span>\n        </CoreTag>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_H8dWc\",\"xl\":\"xl_HnEsq\",\"contentWrapper\":\"contentWrapper_up1O8\",\"l\":\"l_CDm6X\",\"m\":\"m_EyO5x\",\"s\":\"s_Wpirm\",\"contentWrapperVertical\":\"contentWrapperVertical_k4dOj\",\"hasInnerLabel\":\"hasInnerLabel_nUSST\",\"hasTags\":\"hasTags_Wud_3\",\"addons\":\"addons_dGzqn\",\"field\":\"field__FnTv\",\"input\":\"input_LboKB\",\"block\":\"block_qarp_\",\"focusVisible\":\"focusVisible_zDAeu\",\"placeholder\":\"placeholder_sQ_7l\",\"addons-size-m\":\"addons-size-m_XLFhq\",\"addons-size-l\":\"addons-size-l_Cat43\",\"addons-size-xl\":\"addons-size-xl_gDffy\",\"label\":\"label_TVxR9\"};","import React, {\n    ChangeEvent,\n    FC,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    MutableRefObject,\n    ReactNode,\n    useCallback,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { FormControl, FormControlProps } from '@alfalab/core-components-form-control';\nimport { FieldProps } from '@alfalab/core-components-select';\nimport { useFocus } from '@alfalab/hooks';\n\nimport { TagComponent } from '../../types';\nimport { calculateTotalElementsPerRow } from '../../utils/calculate-collapse-size';\nimport { Tag as DefaultTag } from '../tag';\n\nimport styles from './index.module.css';\n\ntype TagListOwnProps = {\n    value?: string;\n    handleDeleteTag?: (key: string) => void;\n    onInput?: (event: ChangeEvent<HTMLInputElement>) => void;\n    inputRef?: MutableRefObject<HTMLInputElement>;\n    autocomplete?: boolean;\n    isPopoverOpen?: boolean;\n    collapseTagList?: boolean;\n    moveInputToNewLine?: boolean;\n    transformCollapsedTagText?: (collapsedCount: number) => string;\n    transformTagText?: (tagText?: ReactNode) => ReactNode;\n    Tag?: TagComponent;\n    handleUpdatePopover?: () => void;\n};\n\nexport const TagList: FC<FieldProps & FormControlProps & TagListOwnProps> = ({\n    size = 'xl',\n    open,\n    disabled,\n    placeholder,\n    selectedMultiple = [],\n    Arrow,\n    innerProps,\n    className,\n    fieldClassName,\n    value = '',\n    autocomplete,\n    label,\n    valueRenderer,\n    onInput,\n    handleDeleteTag,\n    collapseTagList,\n    moveInputToNewLine,\n    transformCollapsedTagText,\n    transformTagText,\n    isPopoverOpen,\n    handleUpdatePopover,\n    Tag = DefaultTag,\n    setSelectedItems,\n    toggleMenu,\n    labelView,\n    ...restProps\n}) => {\n    const [focused, setFocused] = useState(false);\n    const [isShowMoreEnabled, setShowMoreEnabled] = useState<boolean | undefined>(false);\n    const [visibleElements, setVisibleElements] = useState(1);\n    const [inputOnNewLine, setInputOnNewLine] = useState(false);\n\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const contentWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [focusVisible] = useFocus(wrapperRef, 'keyboard');\n    const [inputFocusVisible] = useFocus(inputRef, 'keyboard');\n\n    useLayoutEffect(() => {\n        setShowMoreEnabled(isPopoverOpen);\n    }, [isPopoverOpen]);\n\n    useLayoutEffect(() => {\n        setVisibleElements(selectedMultiple.length);\n        setShowMoreEnabled(false);\n    }, [selectedMultiple]);\n\n    useLayoutEffect(() => {\n        if (collapseTagList && contentWrapperRef.current) {\n            const totalVisibleElements = calculateTotalElementsPerRow(\n                contentWrapperRef.current,\n                autocomplete && inputRef.current ? inputRef.current : null,\n            );\n\n            setVisibleElements(totalVisibleElements);\n        }\n    }, [collapseTagList, visibleElements, autocomplete]);\n\n    const handleFocus = useCallback(() => setFocused(true), []);\n    const handleBlur = useCallback(() => setFocused(false), []);\n\n    const inputTextIsOverflow = useCallback(\n        () => inputRef.current && inputRef.current.scrollWidth > inputRef.current.clientWidth,\n        [],\n    );\n\n    const handleMouseDown = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    }, []);\n\n    const { onClick, ...restInnerProps } = innerProps;\n\n    const handleClick = useCallback<MouseEventHandler<HTMLDivElement>>(\n        (event) => {\n            if (onClick && contentWrapperRef.current) {\n                const eventTarget = event.target as HTMLDivElement;\n\n                const clickedInsideContent =\n                    eventTarget !== contentWrapperRef.current &&\n                    contentWrapperRef.current.contains(eventTarget);\n\n                if (!clickedInsideContent) {\n                    onClick(event);\n                }\n            }\n\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        },\n        [onClick],\n    );\n\n    const handleKeyDown = useCallback<KeyboardEventHandler<HTMLDivElement>>(\n        (event) => {\n            const lastSelectedTag = selectedMultiple[selectedMultiple.length - 1];\n\n            if (event.key === 'Backspace' && !value && handleDeleteTag && lastSelectedTag) {\n                handleDeleteTag(lastSelectedTag.key);\n            }\n        },\n        [handleDeleteTag, selectedMultiple, value],\n    );\n\n    const toggleShowMoreLessButton = useCallback(\n        (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (event) {\n                event.stopPropagation();\n                setShowMoreEnabled((v) => !v);\n                if (handleUpdatePopover) {\n                    handleUpdatePopover();\n                }\n            }\n        },\n        [handleUpdatePopover],\n    );\n\n    useEffect(() => {\n        /**\n         * Если текст не помещается в инпут, то нужно перенести инпут на новую строку.\n         */\n        if (moveInputToNewLine) {\n            if (inputTextIsOverflow() && !inputOnNewLine) {\n                setInputOnNewLine(true);\n            } else if (value.length === 0) {\n                setInputOnNewLine(false);\n            }\n        }\n    }, [value, inputOnNewLine, inputTextIsOverflow, moveInputToNewLine]);\n\n    const collapseTagTitle = useMemo(() => {\n        if (isShowMoreEnabled) {\n            return 'Свернуть';\n        }\n        if (transformCollapsedTagText) {\n            return transformCollapsedTagText(selectedMultiple.length - visibleElements);\n        }\n\n        return `+${selectedMultiple.length - visibleElements}`;\n    }, [transformCollapsedTagText, isShowMoreEnabled, selectedMultiple.length, visibleElements]);\n\n    const filled = Boolean(selectedMultiple.length > 0) || Boolean(value);\n    const hasInnerLabel = Boolean(label) && labelView !== 'outer';\n\n    /**\n     * Флаг который позволит добавлять класс с вертикальными\n     * отступами если элементы не помещаются в один ряд,\n     * для того чтобы не менялась высота инпута\n     */\n    const shouldAddVerticalMargin = Boolean(\n        (!collapseTagList || isShowMoreEnabled) && !hasInnerLabel,\n    );\n\n    return (\n        <div\n            ref={wrapperRef}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            className={cn(className, styles.component, styles[size])}\n        >\n            <FormControl\n                {...restProps}\n                ref={innerProps.ref}\n                fieldClassName={cn(fieldClassName, styles.field, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                block={true}\n                size={size}\n                focused={open || focused}\n                disabled={disabled}\n                filled={filled || !!placeholder}\n                onMouseDown={handleMouseDown}\n                rightAddons={Arrow}\n                onClick={handleClick}\n                addonsClassName={cn(styles.addons, styles[`addons-size-${size}`])}\n                label={label}\n                labelClassName={styles.label}\n                labelView={labelView}\n            >\n                <div\n                    className={cn(styles.contentWrapper, {\n                        [styles.hasInnerLabel]: hasInnerLabel,\n                        [styles.hasTags]: selectedMultiple.length > 0,\n                        [styles.contentWrapperVertical]: shouldAddVerticalMargin,\n                    })}\n                    ref={contentWrapperRef}\n                >\n                    {selectedMultiple.map((option, index) =>\n                        isShowMoreEnabled || index + 1 <= visibleElements ? (\n                            <Tag\n                                option={{\n                                    ...option,\n                                    content: transformTagText\n                                        ? transformTagText(option.content)\n                                        : option.content,\n                                }}\n                                key={option.key}\n                                handleDeleteTag={handleDeleteTag}\n                            />\n                        ) : null,\n                    )}\n                    {visibleElements < selectedMultiple.length && (\n                        <Tag\n                            data-collapse='collapse-last-tag-element'\n                            onClick={toggleShowMoreLessButton}\n                            option={{\n                                key: 'collapse',\n                                content: collapseTagTitle,\n                            }}\n                        />\n                    )}\n\n                    {autocomplete && (\n                        <input\n                            {...restInnerProps}\n                            autoComplete='off'\n                            ref={inputRef}\n                            value={value}\n                            onChange={onInput}\n                            className={cn(styles.input, {\n                                [styles.focusVisible]: inputFocusVisible,\n                                [styles.block]: inputOnNewLine,\n                            })}\n                            disabled={disabled}\n                            onKeyDown={handleKeyDown}\n                            placeholder={filled ? '' : placeholder}\n                        />\n                    )}\n\n                    {placeholder && !filled && !autocomplete && (\n                        <span className={styles.placeholder}>{placeholder}</span>\n                    )}\n                </div>\n            </FormControl>\n        </div>\n    );\n};\n","import { GroupShape, isGroup, OptionShape } from '@alfalab/core-components-select';\n\nimport { OptionMatcher, SelectWithTagsProps } from '../types';\n\nconst defaultMatch: OptionMatcher = (option, inputValue) =>\n    option.value.toLowerCase().indexOf((inputValue || '').toLowerCase(), 0) !== -1;\n\nconst optionsIsGroupShapes = (options: SelectWithTagsProps['options']): options is GroupShape[] => {\n    const item = options[0];\n\n    if (!item) {\n        return false;\n    }\n\n    return isGroup(item);\n};\n\nexport const filterOptions = (\n    options: SelectWithTagsProps['options'],\n    inputValue: string,\n    math = defaultMatch,\n) => {\n    if (optionsIsGroupShapes(options)) {\n        return options.reduce<GroupShape[]>((acc, group) => {\n            const matchedOptions = group.options.filter((option) => math(option, inputValue));\n\n            if (matchedOptions.length > 0) {\n                acc.push({ ...group, options: matchedOptions });\n\n                return acc;\n            }\n\n            return acc;\n        }, []);\n    }\n\n    return (options as OptionShape[]).filter((option) => math(option, inputValue));\n};\n","import React, { ChangeEvent, forwardRef, useCallback, useRef, useState } from 'react';\n\nimport {\n    Arrow as DefaultArrow,\n    BaseSelect,\n    BaseSelectProps,\n    Optgroup as DefaultOptgroup,\n    Option as DefaultOption,\n    OptionsList as DefaultOptionsList,\n} from '@alfalab/core-components-select';\n\nimport { TagList } from './components';\nimport { SelectWithTagsProps } from './types';\nimport { filterOptions } from './utils';\n\nexport const SelectWithTags = forwardRef<HTMLInputElement, SelectWithTagsProps>(\n    (\n        {\n            OptionsList = DefaultOptionsList,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            Arrow = DefaultArrow,\n            value,\n            selected,\n            size = 'xl',\n            onOpen,\n            onInput,\n            onChange,\n            options,\n            autocomplete = true,\n            match,\n            allowUnselect = true,\n            collapseTagList = false,\n            moveInputToNewLine = true,\n            transformCollapsedTagText,\n            transformTagText,\n            Tag,\n            breakpoint,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const controlled = Boolean(selected);\n\n        const [selectedTags, setSelectedTags] = useState(selected || []);\n        const [isPopoverOpen, setPopoverOpen] = useState<boolean | undefined>(false);\n        const updatePopover = useRef(() => null);\n\n        const resetValue = useCallback(() => {\n            const event = { target: { value: '' } };\n\n            onInput(event as ChangeEvent<HTMLInputElement>);\n        }, [onInput]);\n\n        const handleUpdatePopover = useCallback(() => {\n            if (updatePopover && updatePopover.current) {\n                updatePopover.current();\n            }\n        }, []);\n\n        const handleDeleteTag = useCallback(\n            (deletedKey: string) => {\n                let tags = selected || selectedTags;\n\n                tags = tags.filter((tag) => {\n                    const key = typeof tag === 'string' ? tag : tag.key;\n\n                    return deletedKey !== key;\n                });\n\n                if (onChange) {\n                    onChange({ selectedMultiple: tags });\n                }\n\n                if (!controlled) {\n                    setSelectedTags(tags);\n                }\n            },\n            [controlled, onChange, selected, selectedTags],\n        );\n\n        const handleChange = useCallback<Required<BaseSelectProps>['onChange']>(\n            ({ selectedMultiple, name, initiator }) => {\n                if (onChange) {\n                    onChange({ selectedMultiple, name, initiator });\n                }\n\n                if (!controlled) {\n                    setSelectedTags(selectedMultiple);\n                }\n\n                if (value) {\n                    resetValue();\n                }\n            },\n            [onChange, controlled, value, resetValue],\n        );\n\n        const handleOpen = useCallback<Required<BaseSelectProps>['onOpen']>(\n            (payload) => {\n                const { open } = payload;\n\n                if (!open && value) {\n                    resetValue();\n                }\n                setPopoverOpen(open);\n\n                if (onOpen) onOpen(payload);\n            },\n            [onOpen, resetValue, value],\n        );\n\n        const filteredOptions = filterOptions(options, value, match);\n\n        const isAutocomplete = autocomplete || Boolean(match);\n\n        return (\n            <BaseSelect\n                {...restProps}\n                ref={ref}\n                Option={Option}\n                Field={TagList}\n                Optgroup={Optgroup}\n                OptionsList={OptionsList}\n                Arrow={Arrow}\n                multiple={true}\n                updatePopover={updatePopover}\n                allowUnselect={allowUnselect}\n                showEmptyOptionsList={true}\n                fieldProps={{\n                    value,\n                    autocomplete: isAutocomplete,\n                    onInput,\n                    handleDeleteTag,\n                    Tag,\n                    collapseTagList,\n                    moveInputToNewLine,\n                    transformCollapsedTagText,\n                    transformTagText,\n                    handleUpdatePopover,\n                    isPopoverOpen,\n                    breakpoint,\n                }}\n                selected={selected || selectedTags}\n                autocomplete={isAutocomplete}\n                size={size}\n                options={filteredOptions}\n                onChange={handleChange}\n                onOpen={handleOpen}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer__dans\"};","import React from 'react';\n\nimport { Button } from '@alfalab/core-components-button';\n\nimport { OptionShape } from '../../../../typings';\n\nimport styles from './index.module.css';\n\nexport type FooterProps = {\n    handleClear?: () => void;\n    handleApply?: () => void;\n    showClear?: boolean;\n    selectedDraft?: OptionShape[];\n};\n\nexport const Footer = ({\n    handleApply,\n    handleClear,\n    showClear,\n    selectedDraft = [],\n}: FooterProps) => (\n    <div\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n        className={styles.footer}\n    >\n        <Button size='xxs' view='primary' onClick={handleApply}>\n            Применить\n        </Button>\n\n        {showClear && selectedDraft.length > 0 && (\n            <Button size='xxs' view='secondary' onClick={handleClear}>\n                Сбросить\n            </Button>\n        )}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"desktop\":\"desktop_eZJqs\",\"mobile\":\"mobile_yYgHP\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Checkbox, CheckboxProps } from '@alfalab/core-components-checkbox';\n\nimport styles from './index.module.css';\n\nexport type HeaderProps = {\n    checked?: boolean;\n    indeterminate?: boolean;\n    onChange?: CheckboxProps['onChange'];\n    mobile?: boolean;\n};\n\nexport const Header: React.FC<HeaderProps> = ({ onChange, checked, indeterminate, mobile }) => (\n    <div className={cn({ [styles.desktop]: !mobile, [styles.mobile]: mobile })}>\n        <Checkbox\n            block={true}\n            indeterminate={indeterminate}\n            size='m'\n            onChange={onChange}\n            checked={checked}\n            label='Выбрать все'\n        />\n    </div>\n);\n","import React, { FC, forwardRef, RefAttributes, useCallback, useEffect } from 'react';\n\nimport { OptionsList as DefaultOptionsList } from '../../../components/options-list';\nimport { DEFAULT_VISIBLE_OPTIONS } from '../../../consts';\nimport { OptionShape, OptionsListProps } from '../../../typings';\nimport { SELECT_ALL_KEY } from '../hook';\n\nimport { Footer as DefaultFooter, FooterProps } from './footer/Component';\nimport { Header as DefaultHeader, HeaderProps } from './header/Component';\n\ntype OptionsListWithApplyProps = OptionsListProps & {\n    showClear?: boolean;\n    onClose?: () => void;\n    selectedDraft?: OptionShape[];\n    OptionsList?: React.FC<OptionsListProps & RefAttributes<HTMLDivElement>>;\n    Footer?: FC<FooterProps>;\n    Header?: FC<HeaderProps>;\n    headerProps?: HeaderProps;\n    showHeaderWithSelectAll?: boolean;\n};\n\nexport const OptionsListWithApply = forwardRef<HTMLDivElement, OptionsListWithApplyProps>(\n    (\n        {\n            toggleMenu,\n            getOptionProps: defaultGetOptionProps,\n            showClear = true,\n            showHeaderWithSelectAll,\n            selectedDraft = [],\n            flatOptions = [],\n            OptionsList = DefaultOptionsList,\n            onApply = () => null,\n            onClear = () => null,\n            onClose = () => null,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            Footer = DefaultFooter,\n            Header = DefaultHeader,\n            headerProps,\n            ...restProps\n        }: OptionsListWithApplyProps,\n        ref,\n    ) => {\n        const getOptionProps = useCallback(\n            (option: OptionShape, index: number) => {\n                const optionProps = defaultGetOptionProps(option, index);\n\n                const selected =\n                    option.key === SELECT_ALL_KEY\n                        ? selectedDraft.length === flatOptions.length - 1\n                        : selectedDraft.includes(option);\n\n                return {\n                    ...optionProps,\n                    selected,\n                };\n            },\n            [defaultGetOptionProps, flatOptions.length, selectedDraft],\n        );\n\n        const handleApply = useCallback(() => {\n            onApply();\n\n            toggleMenu();\n        }, [onApply, toggleMenu]);\n\n        const handleClear = useCallback(() => {\n            onClear();\n\n            toggleMenu();\n        }, [onClear, toggleMenu]);\n\n        useEffect(() => {\n            const activeElement = document.activeElement as HTMLElement;\n\n            return () => {\n                onClose();\n                if (activeElement) {\n                    activeElement.focus();\n                }\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        return (\n            <OptionsList\n                {...restProps}\n                ref={ref}\n                visibleOptions={visibleOptions}\n                toggleMenu={toggleMenu}\n                flatOptions={flatOptions}\n                getOptionProps={getOptionProps}\n                onApply={handleApply}\n                onClear={handleClear}\n                header={showHeaderWithSelectAll ? <Header {...headerProps} /> : undefined}\n                footer={\n                    <Footer\n                        handleApply={handleApply}\n                        handleClear={handleClear}\n                        showClear={showClear}\n                        selectedDraft={selectedDraft}\n                    />\n                }\n            />\n        );\n    },\n);\n","import { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { AnyObject, BaseSelectProps, OptionShape, processOptions } from '../..';\n\nimport { OptionsListWithApply } from './options-list-with-apply';\n\nexport type UseSelectWithApplyProps = {\n    /**\n     * Список выбранных пунктов\n     */\n    selected: BaseSelectProps['selected'];\n\n    /**\n     * Список вариантов выбора\n     */\n    options: BaseSelectProps['options'];\n\n    /**\n     * Обработчик выбора\n     */\n    onChange: BaseSelectProps['onChange'];\n\n    /**\n     * Компонент выпадающего меню\n     */\n    OptionsList?: BaseSelectProps['OptionsList'];\n\n    /**\n     * Пропсы, которые будут прокинуты в компонент списка\n     */\n    optionsListProps?: BaseSelectProps['optionsListProps'];\n\n    /**\n     * Показывать кнопку очистки\n     */\n    showClear?: boolean;\n\n    /**\n     * Показывать пункт \"Выбрать все\"\n     */\n    showSelectAll?: boolean;\n\n    /**\n     * Показывать пункт \"Выбрать все\" в заголовке списка\n     */\n    showHeaderWithSelectAll?: boolean;\n};\n\nexport const SELECT_ALL_KEY = 'select_all';\n\nconst selectAllOption = { key: SELECT_ALL_KEY, content: 'Выбрать все' };\n\nexport function useSelectWithApply({\n    options,\n    selected,\n    onChange = () => null,\n    OptionsList,\n    optionsListProps = {},\n    showClear = true,\n    showSelectAll = false,\n    showHeaderWithSelectAll = false,\n}: UseSelectWithApplyProps) {\n    const { flatOptions, selectedOptions } = useMemo(\n        () => processOptions(options, selected),\n        [options, selected],\n    );\n\n    const [selectedDraft, setSelectedDraft] = useState<OptionShape[]>(selectedOptions);\n\n    const selectedOptionsRef = useRef<OptionShape[]>(selectedOptions);\n\n    const handleApply = () => {\n        onChange({\n            selected: selectedDraft[0],\n            selectedMultiple: selectedDraft,\n            initiator: null,\n        });\n    };\n\n    const handleClear = () => {\n        setSelectedDraft([]);\n        onChange({\n            selected: null,\n            selectedMultiple: [],\n            initiator: null,\n        });\n    };\n\n    const handleToggleAll = () => {\n        setSelectedDraft(flatOptions.length === selectedDraft.length ? [] : flatOptions);\n    };\n\n    const handleChange: Required<BaseSelectProps>['onChange'] = ({ initiator, ...restArgs }) => {\n        if (!initiator) {\n            onChange({\n                initiator: null,\n                ...restArgs,\n            });\n\n            return;\n        }\n\n        const initiatorSelected =\n            selectedDraft.includes(initiator) ||\n            (initiator.key === SELECT_ALL_KEY && selectedDraft.length === flatOptions.length);\n\n        if (initiator.key === SELECT_ALL_KEY) {\n            setSelectedDraft(initiatorSelected ? [] : flatOptions);\n        } else {\n            setSelectedDraft(\n                initiatorSelected\n                    ? selectedDraft.filter((o) => o !== initiator)\n                    : selectedDraft.concat(initiator),\n            );\n        }\n    };\n\n    const handleClose = () => setSelectedDraft(selectedOptionsRef.current);\n\n    useEffect(() => {\n        setSelectedDraft(selectedOptions);\n        selectedOptionsRef.current = selectedOptions;\n    }, [selectedOptions]);\n\n    const memoizedOptions = useMemo(\n        () => (showSelectAll ? [selectAllOption, ...options] : options),\n        [options, showSelectAll],\n    );\n\n    return {\n        OptionsList: OptionsListWithApply,\n        optionsListProps: {\n            ...(optionsListProps as AnyObject),\n            OptionsList,\n            showClear,\n            onClear: handleClear,\n            onApply: handleApply,\n            onClose: handleClose,\n            selectedDraft,\n            showHeaderWithSelectAll,\n            headerProps: {\n                indeterminate: !!selectedDraft.length && selectedDraft.length < flatOptions.length,\n                checked: selectedDraft.length === flatOptions.length,\n                onChange: handleToggleAll,\n            },\n        },\n        allowUnselect: true,\n        multiple: true,\n        options: memoizedOptions,\n        onChange: handleChange,\n        selected,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Ueoys\",\"sheet\":\"sheet_M7FLk\",\"sheetContent\":\"sheetContent_FzFRt\",\"sheetContainer\":\"sheetContainer_xoxRd\",\"block\":\"block_UhmUp\",\"option\":\"option_SOtzg\",\"optionGroup\":\"optionGroup_afe40\"};","import React, {\n    FocusEvent,\n    forwardRef,\n    KeyboardEvent,\n    MouseEvent,\n    ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport {\n    useCombobox,\n    useMultipleSelection,\n    UseMultipleSelectionProps,\n    UseMultipleSelectionState,\n} from 'downshift';\n\nimport { BottomSheet, BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { ModalMobile } from '@alfalab/core-components-modal/mobile';\n\nimport { getDataTestId } from '../../../../utils';\nimport {\n    AnyObject,\n    BaseSelectProps,\n    OptionProps,\n    OptionShape,\n    OptionsListProps,\n} from '../../typings';\nimport { processOptions } from '../../utils';\nimport { Arrow as DefaultArrow } from '../arrow';\nimport { Field as DefaultField } from '../field';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\nimport { Option as DefaultOption } from '../option';\nimport { OptionsList as DefaultOptionsList } from '../options-list';\n\nimport styles from './index.module.css';\n\nexport type SelectMobileProps = Omit<BaseSelectProps, 'Checkmark' | 'onScroll'> & {\n    /**\n     * Футер\n     * @deprecated Используйте bottomSheetProps.actionButton\n     */\n    footer?: ReactNode;\n\n    /**\n     * Будет ли свайпаться шторка\n     * @deprecated Используйте bottomSheetProps.swipeable\n     */\n    swipeable?: boolean;\n\n    /**\n     * Отображать в BottomSheet\n     */\n    isBottomSheet?: boolean;\n\n    /**\n     * Дополнительные пропсы шторки\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     *  Дополнительные пропсы модалки\n     */\n    modalProps?: Partial<React.ComponentProps<typeof ModalMobile>>;\n\n    /**\n     *  Дополнительные пропсы шапки модалки\n     */\n    modalHeaderProps?: Partial<React.ComponentProps<typeof ModalMobile.Header>>;\n\n    /**\n     *  Дополнительные пропсы футера модалки\n     */\n    modalFooterProps?: Partial<React.ComponentProps<typeof ModalMobile.Footer>>;\n};\n\nexport const BaseSelectMobile = forwardRef(\n    (\n        {\n            dataTestId,\n            className,\n            fieldClassName,\n            optionsListClassName,\n            optionClassName,\n            optionGroupClassName,\n            optionsListProps,\n            options = [],\n            autocomplete = false,\n            multiple = false,\n            allowUnselect = false,\n            disabled = false,\n            closeOnSelect = !multiple,\n            circularNavigation = false,\n            defaultOpen = false,\n            open: openProp,\n            optionsListWidth = 'content',\n            name,\n            id,\n            selected = [],\n            size = 'm',\n            optionsSize = 'm',\n            error,\n            hint,\n            block,\n            label,\n            labelView,\n            placeholder,\n            fieldProps = {},\n            optionProps = {},\n            valueRenderer,\n            onChange,\n            onOpen,\n            onFocus,\n            Arrow = DefaultArrow,\n            Field = DefaultField,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            OptionsList = DefaultOptionsList,\n            swipeable,\n            footer,\n            isBottomSheet,\n            bottomSheetProps,\n            modalProps,\n            modalHeaderProps,\n            modalFooterProps,\n            showEmptyOptionsList = false,\n        }: SelectMobileProps,\n        ref,\n    ) => {\n        const rootRef = useRef<HTMLLabelElement>(null);\n        const fieldRef = useRef<HTMLInputElement>(null);\n        const listRef = useRef<HTMLDivElement>(null);\n        const initiatorRef = useRef<OptionShape | null>(null);\n        const alreadyClickedRef = useRef<boolean>(false);\n\n        const itemToString = (option: OptionShape) => (option ? option.key : '');\n\n        const { flatOptions, selectedOptions } = useMemo(\n            () => processOptions(options, selected),\n            [options, selected],\n        );\n\n        const scrollableContainerRef = useRef<HTMLDivElement>(null);\n\n        const useMultipleSelectionProps: UseMultipleSelectionProps<OptionShape> = {\n            itemToString,\n            onSelectedItemsChange: (changes) => {\n                if (onChange) {\n                    const { selectedItems = [] } = changes;\n\n                    onChange({\n                        selectedMultiple: selectedItems,\n                        selected: selectedItems.length ? selectedItems[0] : null,\n                        initiator: initiatorRef.current,\n                        name,\n                    });\n\n                    initiatorRef.current = null;\n                }\n            },\n            stateReducer: (state, actionAndChanges) => {\n                const { type, changes } = actionAndChanges;\n\n                if (\n                    !allowUnselect &&\n                    type === useMultipleSelection.stateChangeTypes.DropdownKeyDownBackspace\n                ) {\n                    return state;\n                }\n\n                return changes as UseMultipleSelectionState<OptionShape>;\n            },\n        };\n\n        if (selected !== undefined) {\n            useMultipleSelectionProps.selectedItems = selectedOptions;\n        }\n\n        const {\n            selectedItems,\n            addSelectedItem,\n            setSelectedItems,\n            removeSelectedItem,\n            getDropdownProps,\n        } = useMultipleSelection(useMultipleSelectionProps);\n\n        const {\n            isOpen: open,\n            getMenuProps,\n            getInputProps,\n            getItemProps,\n            getComboboxProps,\n            getLabelProps,\n            highlightedIndex,\n            toggleMenu,\n            openMenu,\n        } = useCombobox<OptionShape>({\n            id,\n            isOpen: openProp,\n            circularNavigation,\n            items: flatOptions,\n            itemToString,\n            defaultHighlightedIndex: -1,\n            onIsOpenChange: ({ isOpen }) => {\n                if (onOpen) {\n                    /**\n                     *  Вызываем обработчик асинхронно.\n                     *\n                     * Иначе при клике вне открытого селекта сначала сработает onOpen, который закроет селект,\n                     * А затем сработает onClick кнопки открытия\\закрытия с open=false и в итоге селект откроется снова.\n                     */\n                    setTimeout(() => {\n                        onOpen({\n                            open: isOpen,\n                            name,\n                        });\n                    }, 0);\n                }\n            },\n            stateReducer: (state, actionAndChanges) => {\n                const { type, changes } = actionAndChanges;\n                const { selectedItem } = changes;\n\n                switch (type) {\n                    case useCombobox.stateChangeTypes.InputBlur:\n                        return state;\n                    case useCombobox.stateChangeTypes.InputKeyDownEnter:\n                    case useCombobox.stateChangeTypes.ItemClick:\n                        initiatorRef.current = selectedItem;\n\n                        if (selectedItem && !selectedItem.disabled && !alreadyClickedRef.current) {\n                            alreadyClickedRef.current = true;\n                            // TODO!!! Проблема downshift + React 18. ItemClick срабатывает дважды. См https://github.com/downshift-js/downshift/issues/1384\n                            setTimeout(() => {\n                                alreadyClickedRef.current = false;\n                            });\n                            const alreadySelected = selectedItems.includes(selectedItem);\n                            const allowRemove =\n                                allowUnselect || (multiple && selectedItems.length > 1);\n\n                            if (alreadySelected && allowRemove) {\n                                if (multiple) {\n                                    removeSelectedItem(selectedItem);\n                                } else {\n                                    setSelectedItems([]);\n                                }\n                            }\n\n                            if (!alreadySelected) {\n                                if (multiple) {\n                                    addSelectedItem(selectedItem);\n                                } else {\n                                    setSelectedItems([selectedItem]);\n                                }\n                            }\n                        }\n\n                        return {\n                            ...changes,\n                            isOpen: !closeOnSelect || multiple,\n                            // при closeOnSelect === false - сохраняем подсвеченный индекс\n                            highlightedIndex:\n                                state.isOpen && !closeOnSelect\n                                    ? state.highlightedIndex\n                                    : changes.highlightedIndex,\n                        };\n                    default:\n                        return changes;\n                }\n            },\n        });\n\n        const menuProps = (getMenuProps as (options: object, additional: object) => AnyObject)(\n            { ref: listRef },\n            { suppressRefError: true },\n        );\n        const inputProps = getInputProps(getDropdownProps({ ref: mergeRefs([ref, fieldRef]) }));\n\n        const handleFieldFocus = (event: FocusEvent<HTMLDivElement | HTMLInputElement>) => {\n            if (onFocus) onFocus(event);\n\n            if (autocomplete && !open) {\n                openMenu();\n            }\n        };\n\n        const handleFieldKeyDown = (event: KeyboardEvent<HTMLDivElement | HTMLInputElement>) => {\n            inputProps.onKeyDown(event);\n            if (autocomplete && !open && (event.key.length === 1 || event.key === 'Backspace')) {\n                // Для автокомплита - открываем меню при начале ввода\n                openMenu();\n            }\n\n            if (\n                [' ', 'Enter'].includes(event.key) &&\n                !autocomplete &&\n                (event.target as HTMLElement).tagName !== 'INPUT' &&\n                (event.target as HTMLElement).tagName !== 'BUTTON'\n            ) {\n                // Открываем\\закрываем меню по нажатию enter или пробела\n                event.preventDefault();\n                if (!open || highlightedIndex === -1) toggleMenu();\n            }\n        };\n\n        const handleFieldClick = (event: MouseEvent) => {\n            if (!autocomplete || (event.target as HTMLElement).tagName !== 'INPUT') {\n                toggleMenu();\n            } else {\n                openMenu();\n            }\n        };\n\n        const getOptionProps = (option: OptionShape, index: number): OptionProps => {\n            const selectedItem = selectedItems.includes(option);\n\n            return {\n                ...(optionProps as object),\n                mobile: true,\n                className: cn(styles.option, optionClassName),\n                innerProps: getItemProps({\n                    index,\n                    item: option,\n                    disabled: option.disabled,\n                    onMouseDown: (event: MouseEvent) => event.preventDefault(),\n                }),\n                multiple,\n                index,\n                option,\n                size: optionsSize,\n                disabled: option.disabled,\n                highlighted: index === highlightedIndex,\n                selected: selectedItem,\n                dataTestId: getDataTestId(dataTestId, 'option'),\n            };\n        };\n\n        useEffect(() => {\n            if (defaultOpen) openMenu();\n        }, [defaultOpen, openMenu]);\n\n        useEffect(() => {\n            if (openProp) {\n                openMenu();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const handleClose = () => {\n            toggleMenu();\n        };\n\n        const renderValue = () =>\n            selectedItems.map((option) => (\n                <input type='hidden' name={name} value={option.key} key={option.key} />\n            ));\n\n        const renderOptionsList = () => {\n            if (flatOptions.length === 0 && !showEmptyOptionsList) return null;\n\n            return (\n                <div {...menuProps} className={optionsListClassName}>\n                    <OptionsList\n                        {...(optionsListProps as OptionsListProps)}\n                        ref={scrollableContainerRef}\n                        optionsListWidth={optionsListWidth}\n                        flatOptions={flatOptions}\n                        highlightedIndex={highlightedIndex}\n                        open={open}\n                        size={size}\n                        options={options}\n                        Optgroup={Optgroup}\n                        Option={Option}\n                        selectedItems={selectedItems}\n                        setSelectedItems={setSelectedItems}\n                        toggleMenu={toggleMenu}\n                        getOptionProps={getOptionProps}\n                        visibleOptions={0}\n                        dataTestId={getDataTestId(dataTestId, 'options-list')}\n                        optionGroupClassName={cn(styles.optionGroup, optionGroupClassName)}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <div\n                {...getComboboxProps({\n                    ref: rootRef,\n                    ...(disabled && { 'aria-disabled': true }),\n                    className: cn(styles.component, { [styles.block]: block }, className),\n                })}\n                onKeyDown={disabled ? undefined : handleFieldKeyDown}\n                tabIndex={-1}\n                data-test-id={getDataTestId(dataTestId)}\n            >\n                <Field\n                    selectedMultiple={selectedItems}\n                    selected={selectedItems[0]}\n                    setSelectedItems={setSelectedItems}\n                    toggleMenu={toggleMenu}\n                    multiple={multiple}\n                    open={open}\n                    disabled={disabled}\n                    size={size}\n                    placeholder={placeholder}\n                    label={label && <span {...getLabelProps()}>{label}</span>}\n                    labelView={labelView}\n                    Arrow={Arrow && <Arrow open={open} />}\n                    error={error}\n                    hint={hint}\n                    valueRenderer={valueRenderer}\n                    className={fieldClassName}\n                    innerProps={{\n                        onFocus: disabled ? undefined : handleFieldFocus,\n                        onClick: disabled ? undefined : handleFieldClick,\n                        tabIndex: disabled ? -1 : 0,\n                        ref: mergeRefs([inputProps.ref]),\n                        id: inputProps.id,\n                        'aria-labelledby': inputProps['aria-labelledby'],\n                        'aria-controls': inputProps['aria-controls'],\n                        'aria-autocomplete': autocomplete\n                            ? inputProps['aria-autocomplete']\n                            : undefined,\n                    }}\n                    dataTestId={getDataTestId(dataTestId, 'field')}\n                    {...(fieldProps as AnyObject)}\n                />\n\n                {name && renderValue()}\n\n                {isBottomSheet ? (\n                    <BottomSheet\n                        open={open}\n                        onClose={handleClose}\n                        className={styles.sheet}\n                        contentClassName={styles.sheetContent}\n                        containerClassName={styles.sheetContainer}\n                        title={label || placeholder}\n                        actionButton={footer}\n                        stickyHeader={true}\n                        hasCloser={true}\n                        swipeable={swipeable}\n                        scrollableContainerRef={scrollableContainerRef}\n                        {...bottomSheetProps}\n                    >\n                        {renderOptionsList()}\n                    </BottomSheet>\n                ) : (\n                    <ModalMobile\n                        open={open}\n                        hasCloser={true}\n                        {...modalProps}\n                        onClose={(...args) => {\n                            handleClose();\n                            modalProps?.onClose?.(...args);\n                        }}\n                        contentClassName={cn(styles.sheetContent, modalProps?.contentClassName)}\n                        ref={mergeRefs([\n                            scrollableContainerRef,\n                            modalProps?.ref as React.Ref<HTMLDivElement>,\n                        ])}\n                    >\n                        <ModalMobile.Header hasCloser={true} sticky={true} {...modalHeaderProps}>\n                            {label || placeholder}\n                        </ModalMobile.Header>\n\n                        {renderOptionsList()}\n\n                        {modalFooterProps?.children && <ModalMobile.Footer {...modalFooterProps} />}\n                    </ModalMobile>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_axvIA\",\"button\":\"button_pDzdW\",\"highlighted\":\"highlighted_Elc3O\"};","import React, { useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { BaseModalContext } from '@alfalab/core-components-base-modal';\nimport { Button } from '@alfalab/core-components-button';\n\nimport styles from './index.module.css';\n\nexport type FooterProps = {\n    handleClear?: () => void;\n    handleApply?: () => void;\n    showClear?: boolean;\n};\n\nexport const Footer = ({ handleApply, handleClear, showClear }: FooterProps) => {\n    const { footerHighlighted, setHasFooter } = useContext(BaseModalContext);\n\n    useEffect(() => {\n        setHasFooter(true);\n    }, [setHasFooter]);\n\n    return (\n        <div\n            // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n            tabIndex={0}\n            className={cn(styles.footer, {\n                [styles.highlighted]: footerHighlighted,\n            })}\n        >\n            {showClear && (\n                <Button size='s' view='secondary' className={styles.button} onClick={handleClear}>\n                    Сбросить\n                </Button>\n            )}\n\n            <Button size='s' view='primary' className={styles.button} onClick={handleApply}>\n                Применить\n            </Button>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"virtualOptionsList\":\"virtualOptionsList_f8l8Q\",\"virtualOptionsListHeader\":\"virtualOptionsListHeader_Il1v5\",\"virtualOptionsListFooter\":\"virtualOptionsListFooter_dRAb1\",\"withBorder\":\"withBorder_Ufdow\",\"scrollable\":\"scrollable_D_W_P\",\"inner\":\"inner_HnsHb\",\"virtualRow\":\"virtualRow_LhVkm\",\"highlighted\":\"highlighted_pMwde\",\"emptyPlaceholder\":\"emptyPlaceholder_VR5vJ\",\"l\":\"l_eZbum\",\"xl\":\"xl_jd5nz\"};","import React, { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useVirtual } from 'react-virtual';\nimport cn from 'classnames';\n\nimport { Scrollbar } from '@alfalab/core-components-scrollbar';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { DEFAULT_VISIBLE_OPTIONS } from '../../consts';\nimport { GroupShape, OptionShape, OptionsListProps } from '../../typings';\nimport { isGroup, lastIndexOf, usePrevious, useVisibleOptions } from '../../utils';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\n\nimport styles from './index.module.css';\n\nexport const VirtualOptionsList = forwardRef<HTMLDivElement, OptionsListProps>(\n    (\n        {\n            size = 's',\n            flatOptions = [],\n            highlightedIndex = -1,\n            className,\n            getOptionProps,\n            Option,\n            open,\n            options = [],\n            Optgroup = DefaultOptgroup,\n            dataTestId,\n            emptyPlaceholder,\n            visibleOptions = DEFAULT_VISIBLE_OPTIONS,\n            header,\n            footer,\n            showFooter = true,\n            optionsListWidth,\n            onScroll,\n            nativeScrollbar: nativeScrollbarProp,\n        },\n        ref,\n    ) => {\n        const listRef = useRef<HTMLDivElement>(null);\n        const parentRef = useRef<HTMLDivElement>(null);\n        const scrollbarRef = useRef<HTMLDivElement>(null);\n        const [visibleOptionsInvalidateKey, setVisibleOptionsInvalidateKey] = useState(0);\n        const prevHighlightedIndex = usePrevious(highlightedIndex) || -1;\n\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        const rowVirtualizer = useVirtual({\n            size: flatOptions.length,\n            parentRef: (ref || parentRef) as React.RefObject<HTMLDivElement>,\n            overscan: 15,\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        // Сколл к выбранному пункту при открытии меню\n        useEffect(() => {\n            if (open) {\n                rowVirtualizer.scrollToIndex(highlightedIndex, { align: 'end' });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [open]);\n\n        // Скролл к пункту, которого нет на экране\n        useEffect(() => {\n            if (highlightedIndex === -1) return;\n\n            if (!rowVirtualizer.virtualItems.some((option) => option.index === highlightedIndex)) {\n                rowVirtualizer.scrollToIndex(highlightedIndex, { align: 'end' });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [highlightedIndex]);\n\n        // Циклическая навигация\n        useEffect(() => {\n            const notDisabled = (option: OptionShape) => !option.disabled;\n            const firstNonDisabled = flatOptions.findIndex(notDisabled);\n            const lastNonDisabled = lastIndexOf(flatOptions, notDisabled);\n\n            if (\n                prevHighlightedIndex <= firstNonDisabled &&\n                highlightedIndex === flatOptions.length - 1\n            ) {\n                rowVirtualizer.scrollToIndex(lastNonDisabled);\n            }\n\n            if (prevHighlightedIndex >= lastNonDisabled && highlightedIndex === 0) {\n                rowVirtualizer.scrollToIndex(0);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [prevHighlightedIndex, highlightedIndex]);\n\n        useEffect(() => {\n            setVisibleOptionsInvalidateKey(\n                /**\n                 * react-virtual может несколько раз отрендерить список с одним элементом,\n                 * поэтому нужно еще раз пересчитать высоту, когда список ВИДИМЫХ пунктов будет отрендерен полностью\n                 * Также, высоту нужно пересчитывать при изменении ОБЩЕГО кол-ва пунктов меню\n                 */\n                rowVirtualizer.virtualItems.length > 1 ? flatOptions.length : 1,\n            );\n        }, [rowVirtualizer.virtualItems.length, flatOptions.length]);\n\n        useVisibleOptions({\n            visibleOptions,\n            invalidate: visibleOptionsInvalidateKey,\n            listRef,\n            styleTargetRef: nativeScrollbar ? parentRef : scrollbarRef,\n            open,\n        });\n\n        // Т.к. рендерится плоский список, необходимо знать индекс, когда начинается новая группа\n        const groupStartIndexes = useMemo(() => {\n            let currentIndex = 0;\n\n            return options.reduce((acc: { [key: number]: number }, option, index) => {\n                if (isGroup(option)) {\n                    acc[currentIndex] = index;\n                    currentIndex += option.options.length;\n                } else {\n                    currentIndex += 1;\n                }\n\n                return acc;\n            }, {});\n        }, [options]);\n\n        const renderList = () =>\n            rowVirtualizer.virtualItems.map((virtualRow) => {\n                const option = flatOptions[virtualRow.index];\n                const group = options[groupStartIndexes[virtualRow.index]] as GroupShape;\n\n                return (\n                    <div\n                        key={virtualRow.index}\n                        ref={virtualRow.measureRef}\n                        className={cn(styles.virtualRow, {\n                            [styles.highlighted]: highlightedIndex === virtualRow.index,\n                        })}\n                        style={{\n                            transform: `translateY(${virtualRow.start}px)`,\n                        }}\n                    >\n                        {group && <Optgroup label={group.label} />}\n                        {!isGroup(option) && (\n                            <Option {...getOptionProps(option, virtualRow.index)} />\n                        )}\n                    </div>\n                );\n            });\n\n        const contentNodeProps = {\n            className: styles.inner,\n            style: { height: `${rowVirtualizer.totalSize}px` },\n            ref: listRef,\n        };\n\n        const renderWithCustomScrollbar = () => (\n            <Scrollbar\n                className={styles.scrollable}\n                ref={scrollbarRef}\n                horizontalAutoStretch={optionsListWidth === 'content'}\n                scrollableNodeProps={{ onScroll, ref: parentRef }}\n                contentNodeProps={contentNodeProps}\n            >\n                {renderList()}\n            </Scrollbar>\n        );\n\n        const renderWithNativeScrollbar = () => {\n            if (visibleOptions) {\n                return (\n                    <div\n                        className={styles.scrollable}\n                        ref={mergeRefs([parentRef, ref])}\n                        onScroll={onScroll}\n                    >\n                        <div {...contentNodeProps}>{renderList()}</div>\n                    </div>\n                );\n            }\n\n            return <div {...contentNodeProps}>{renderList()}</div>;\n        };\n\n        if (options.length === 0 && !emptyPlaceholder) {\n            return null;\n        }\n\n        return (\n            <div\n                className={cn(styles.virtualOptionsList, styles[size], className)}\n                data-test-id={dataTestId}\n            >\n                {header && <div className={styles.virtualOptionsListHeader}>{header}</div>}\n\n                {nativeScrollbar ? renderWithNativeScrollbar() : renderWithCustomScrollbar()}\n\n                {emptyPlaceholder && options.length === 0 && (\n                    <div className={styles.emptyPlaceholder}>{emptyPlaceholder}</div>\n                )}\n\n                {showFooter && footer && (\n                    <div\n                        className={cn(styles.virtualOptionsListFooter, {\n                            [styles.withBorder]:\n                                visibleOptions && flatOptions.length > visibleOptions,\n                        })}\n                    >\n                        {footer}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","import React, { forwardRef, ReactNode } from 'react';\n\nimport { BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { FormControlMobile } from '@alfalab/core-components-form-control/mobile';\n\nimport { useSelectWithApply, UseSelectWithApplyProps } from '../../presets/useSelectWithApply/hook';\nimport { Header } from '../../presets/useSelectWithApply/options-list-with-apply/header/Component';\nimport { AnyObject, BaseSelectProps } from '../../typings';\nimport { Arrow as DefaultArrow } from '../arrow';\nimport { BaseSelectMobile } from '../base-select-mobile';\nimport { Footer } from '../base-select-mobile/footer';\nimport { Field as DefaultField } from '../field';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\nimport { Option as DefaultOption } from '../option';\nimport { OptionsList as DefaultOptionsList } from '../options-list';\nimport { VirtualOptionsList as DefaultVirtualOptionsList } from '../virtual-options-list';\n\nexport type AdditionalMobileProps = {\n    /**\n     * Футер\n     * @deprecated Используйте bottomSheetProps.actionButton\n     */\n    footer?: ReactNode;\n\n    /**\n     * Будет ли свайпаться шторка\n     * @deprecated Используйте bottomSheetProps.swipeable\n     */\n    swipeable?: boolean;\n\n    /**\n     * Дополнительные пропсы шторки\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Показывать кнопку очистки\n     */\n    showClear?: UseSelectWithApplyProps['showClear'];\n\n    /**\n     * Показывать пункт \"Выбрать все\"\n     */\n    showSelectAll?: UseSelectWithApplyProps['showSelectAll'];\n\n    /**\n     * Показывать пункт \"Выбрать все\" в заголовке списка\n     */\n    showHeaderWithSelectAll?: UseSelectWithApplyProps['showHeaderWithSelectAll'];\n\n    /**\n     * Использовать ли хук useSelectWithApply\n     */\n    useWithApplyHook?: boolean;\n};\n\nexport type SelectMobileProps = Omit<BaseSelectProps, 'Checkmark' | 'onScroll'> &\n    AdditionalMobileProps;\n\nconst VIRTUAL_OPTIONS_LIST_THRESHOLD = 30;\n\nexport const SelectMobile = forwardRef(\n    (\n        {\n            autocomplete = false,\n            multiple = false,\n            allowUnselect = false,\n            disabled = false,\n            closeOnSelect = !multiple,\n            circularNavigation = false,\n            defaultOpen = false,\n            open: openProp,\n            size = 'm',\n            optionsSize = 'm',\n            fieldProps = {},\n            optionProps = {},\n            optionsListProps = {},\n            Arrow = DefaultArrow,\n            Field = DefaultField,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            selected,\n            options,\n            OptionsList = options.length > VIRTUAL_OPTIONS_LIST_THRESHOLD\n                ? DefaultVirtualOptionsList\n                : DefaultOptionsList,\n            onChange,\n            bottomSheetProps,\n            showClear = true,\n            showSelectAll,\n            showHeaderWithSelectAll,\n            useWithApplyHook = multiple,\n            ...restProps\n        }: SelectMobileProps,\n        ref,\n    ) => {\n        const applyProps = useSelectWithApply({\n            optionsListProps: {\n                ...(optionsListProps as AnyObject),\n                Footer,\n            },\n            OptionsList,\n            selected,\n            options,\n            onChange,\n            showClear,\n            showSelectAll,\n        });\n\n        return (\n            <BaseSelectMobile\n                ref={ref}\n                autocomplete={autocomplete}\n                multiple={multiple}\n                allowUnselect={allowUnselect}\n                disabled={disabled}\n                closeOnSelect={closeOnSelect}\n                circularNavigation={circularNavigation}\n                defaultOpen={defaultOpen}\n                open={openProp}\n                size={size}\n                optionsSize={optionsSize}\n                fieldProps={{\n                    FormControlComponent: FormControlMobile,\n                    ...(fieldProps as object),\n                }}\n                optionProps={optionProps}\n                Arrow={Arrow}\n                Field={Field}\n                Optgroup={Optgroup}\n                Option={Option}\n                isBottomSheet={true}\n                options={options}\n                selected={selected}\n                onChange={onChange}\n                OptionsList={OptionsList}\n                bottomSheetProps={{\n                    bottomAddons: useWithApplyHook && showHeaderWithSelectAll && (\n                        <Header {...applyProps.optionsListProps.headerProps} mobile={true} />\n                    ),\n                    ...bottomSheetProps,\n                }}\n                optionsListProps={optionsListProps}\n                {...restProps}\n                {...(useWithApplyHook && applyProps)}\n            />\n        );\n    },\n);\n","import React, { forwardRef } from 'react';\n\nimport { FormControlMobile } from '@alfalab/core-components-form-control/mobile';\nimport { ModalMobile } from '@alfalab/core-components-modal/Component.mobile';\n\nimport { useSelectWithApply, UseSelectWithApplyProps } from '../../presets/useSelectWithApply/hook';\nimport { Header } from '../../presets/useSelectWithApply/options-list-with-apply/header/Component';\nimport { AnyObject, BaseSelectProps } from '../../typings';\nimport { Arrow as DefaultArrow } from '../arrow';\nimport { BaseSelectMobile } from '../base-select-mobile';\nimport { Footer } from '../base-select-mobile/footer';\nimport { Field as DefaultField } from '../field';\nimport { Optgroup as DefaultOptgroup } from '../optgroup';\nimport { Option as DefaultOption } from '../option';\nimport { OptionsList as DefaultOptionsList } from '../options-list';\nimport { VirtualOptionsList as DefaultVirtualOptionsList } from '../virtual-options-list';\n\nexport type SelectModalMobileProps = Omit<BaseSelectProps, 'Checkmark' | 'onScroll'> & {\n    /**\n     * Показывать кнопку очистки\n     */\n    showClear?: UseSelectWithApplyProps['showClear'];\n\n    /**\n     * Показывать пункт \"Выбрать все\"\n     */\n    showSelectAll?: UseSelectWithApplyProps['showSelectAll'];\n\n    /**\n     *  Дополнительные пропсы шапки модалки\n     */\n    modalHeaderProps?: Partial<React.ComponentProps<typeof ModalMobile.Header>>;\n\n    /**\n     *  Дополнительные пропсы модалки\n     */\n    modalProps?: Partial<React.ComponentProps<typeof ModalMobile>>;\n\n    /**\n     *  Дополнительные пропсы футера модалки\n     */\n    modalFooterProps?: Partial<React.ComponentProps<typeof ModalMobile.Footer>>;\n\n    /*\n     * Показывать пункт \"Выбрать все\" в заголовке списка\n     */\n    showHeaderWithSelectAll?: UseSelectWithApplyProps['showHeaderWithSelectAll'];\n\n    /**\n     * Использовать ли хук useSelectWithApply\n     */\n    useWithApplyHook?: boolean;\n};\n\nconst VIRTUAL_OPTIONS_LIST_THRESHOLD = 30;\n\nexport const SelectModalMobile = forwardRef(\n    (\n        {\n            autocomplete = false,\n            multiple = false,\n            allowUnselect = false,\n            disabled = false,\n            closeOnSelect = !multiple,\n            circularNavigation = false,\n            defaultOpen = false,\n            open: openProp,\n            size = 'm',\n            optionsSize = 'm',\n            fieldProps = {},\n            optionProps = {},\n            optionsListProps = {},\n            Arrow = DefaultArrow,\n            Field = DefaultField,\n            Optgroup = DefaultOptgroup,\n            Option = DefaultOption,\n            selected,\n            options,\n            OptionsList = options.length > VIRTUAL_OPTIONS_LIST_THRESHOLD\n                ? DefaultVirtualOptionsList\n                : DefaultOptionsList,\n            onChange,\n            showClear = true,\n            showSelectAll,\n            useWithApplyHook = multiple,\n            modalHeaderProps,\n            showHeaderWithSelectAll,\n            ...restProps\n        }: SelectModalMobileProps,\n        ref,\n    ) => {\n        const applyProps = useSelectWithApply({\n            optionsListProps: {\n                ...(optionsListProps as AnyObject),\n                Footer,\n            },\n            OptionsList,\n            selected,\n            options,\n            onChange,\n            showClear,\n            showSelectAll,\n        });\n\n        return (\n            <BaseSelectMobile\n                ref={ref}\n                autocomplete={autocomplete}\n                multiple={multiple}\n                allowUnselect={allowUnselect}\n                disabled={disabled}\n                closeOnSelect={closeOnSelect}\n                circularNavigation={circularNavigation}\n                defaultOpen={defaultOpen}\n                open={openProp}\n                size={size}\n                optionsSize={optionsSize}\n                fieldProps={{\n                    FormControlComponent: FormControlMobile,\n                    ...(fieldProps as object),\n                }}\n                optionProps={optionProps}\n                Arrow={Arrow}\n                Field={Field}\n                Optgroup={Optgroup}\n                Option={Option}\n                isBottomSheet={false}\n                options={options}\n                selected={selected}\n                onChange={onChange}\n                OptionsList={OptionsList}\n                optionsListProps={optionsListProps}\n                modalHeaderProps={{\n                    bottomAddons: useWithApplyHook && showHeaderWithSelectAll && (\n                        <Header {...applyProps.optionsListProps.headerProps} mobile={true} />\n                    ),\n                    ...modalHeaderProps,\n                }}\n                {...restProps}\n                {...(useWithApplyHook && applyProps)}\n            />\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkmark\":\"checkmark_k7JPV\",\"single\":\"single_RGgG2\",\"selected\":\"selected_oDSqq\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Checkbox } from '@alfalab/core-components-checkbox';\nimport { CheckmarkMIcon } from '@alfalab/icons-glyph/CheckmarkMIcon';\n\nimport { CheckmarkProps } from '../../typings';\n\nimport styles from './index.module.css';\n\nexport const BaseCheckmark = ({\n    selected,\n    disabled = false,\n    className,\n    multiple,\n}: CheckmarkProps) => {\n    const checkmarkClassNames = cn(styles.checkmark, className, {\n        [styles.single]: !multiple,\n        [styles.selected]: selected,\n    });\n\n    return multiple ? (\n        <Checkbox\n            checked={selected}\n            disabled={disabled}\n            className={checkmarkClassNames}\n            size='m'\n            hiddenInput={true}\n        />\n    ) : (\n        <CheckmarkMIcon className={checkmarkClassNames} />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"option\":\"option_lBHIe\",\"disabled\":\"disabled_ZtCGg\",\"checkmarkBefore\":\"checkmarkBefore_foivD\",\"mobile\":\"mobile_USY9r\",\"checkmarkAfter\":\"checkmarkAfter_I95_j\",\"textContent\":\"textContent_pnRzJ\",\"selected\":\"selected_mQZoC\",\"highlighted\":\"highlighted_lDy30\",\"content\":\"content_STONQ\"};","import React, { FC, isValidElement } from 'react';\nimport cn from 'classnames';\n\nimport { OptionProps } from '../../typings';\nimport { BaseCheckmark } from '../base-checkmark';\n\nimport styles from './index.module.css';\n\nexport const BaseOption: FC<OptionProps> = ({\n    className,\n    option,\n    children,\n    selected,\n    highlighted,\n    disabled,\n    multiple,\n    Checkmark = BaseCheckmark,\n    checkmarkPosition = multiple ? 'before' : 'after',\n    innerProps,\n    dataTestId,\n    mobile = false,\n}) => {\n    const content = children || option.content || option.key;\n    const { showCheckMark = true } = option;\n\n    const isTextContent = !isValidElement(content);\n\n    const renderCheckmark = () => {\n        if (Checkmark && showCheckMark) {\n            return <Checkmark disabled={disabled} selected={selected} multiple={multiple} />;\n        }\n\n        return null;\n    };\n\n    return (\n        <div\n            {...innerProps}\n            className={cn(styles.option, className, {\n                [styles.highlighted]: !mobile && highlighted,\n                [styles.selected]: selected,\n                [styles.disabled]: disabled,\n                [styles.textContent]: isTextContent,\n                [styles.mobile]: mobile,\n                [styles.checkmarkAfter]: !isTextContent && checkmarkPosition === 'after',\n                [styles.checkmarkBefore]: !isTextContent && checkmarkPosition === 'before',\n            })}\n            data-test-id={dataTestId}\n        >\n            {checkmarkPosition === 'before' && renderCheckmark()}\n\n            <div className={cn(styles.content)}>{content}</div>\n\n            {checkmarkPosition === 'after' && renderCheckmark()}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"skeleton_ck4Ej\"};","import React from 'react';\n\nimport { Skeleton } from '@alfalab/core-components-skeleton';\n\nimport { Option as DefaultOption } from '../../components/option';\nimport { BaseSelectProps, OptionProps, OptionShape } from '../../typings';\n\nimport styles from './index.module.css';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype useSelectWithLoadingProps = {\n    loading?: boolean;\n    visibleOptions?: BaseSelectProps['visibleOptions'];\n    Option?: React.FC<OptionProps>;\n};\n\nexport function useSelectWithLoading({\n    loading = false,\n    visibleOptions = 6,\n    Option = DefaultOption,\n}: useSelectWithLoadingProps) {\n    const renderOption = (props: OptionProps) => (\n        <Option {...props} Checkmark={null} highlighted={loading ? false : props.highlighted} />\n    );\n\n    const options: OptionShape[] = Array(visibleOptions)\n        .fill(0)\n        .map((_, key) => ({\n            key: `loading-${key}`,\n            disabled: true,\n            content: <Skeleton className={styles.skeleton} visible={true} />,\n        }));\n\n    if (!loading) return null;\n\n    return {\n        Option: renderOption,\n        options,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"skeleton_q7v7e\"};","import React, { Reducer, useCallback, useEffect, useMemo, useReducer, useRef } from 'react';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport { Skeleton } from '@alfalab/core-components-skeleton';\n\nimport { Option as DefaultOption } from '../../components/option';\nimport { OptionProps, OptionShape } from '../../typings';\n\nimport styles from './index.module.css';\n\nimport 'intersection-observer';\n\nconst DEBOUNCE_TIMEOUT = 300;\n\ntype OptionsFetcherResponse = {\n    options: OptionShape[];\n    hasMore: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype useLazyLoadingProps = {\n    /** Количество элементов на \"странице\" */\n    limit?: number;\n\n    /** Начальный номер \"страницы\" */\n    initialOffset?: number;\n\n    /** Скелетон загружаемых элементов */\n    skeleton?: React.ReactNode;\n\n    /** Компонент пункта меню */\n    Option?: React.FC<OptionProps>;\n\n    /**\n     * Функция-загрузчик опций.\n     * @param offset - текущая страница\n     * @param limit - количество элементов на странице\n     * @param queryString - строчные данные, пробрасываемые для поиска из кастомного инпута, расположенного в заголовке OptionsList\n     * @returns Promise<{\n     *  options - список опций следующей \"страницы\". Они аппендятся к предыдущим\n     *  hasMore - указывает, есть ли еще незагруженные элементы (в случае false перестает загружать \"следующую страницу\")\n     * }>\n     */\n    optionsFetcher(\n        offset: number,\n        limit: number,\n        queryString?: string,\n    ): Promise<OptionsFetcherResponse>;\n};\n\nconst actions = {\n    fetchOptionsStart() {\n        return { type: 'FETCH_OPTIONS_START' } as const;\n    },\n    fetchOptionsBreak() {\n        return { type: 'FETCH_OPTIONS_BREAK' } as const;\n    },\n    fetchOptionsSuccess(payload: { options: OptionShape[]; hasMore: boolean }) {\n        return { type: 'FETCH_OPTIONS_SUCCESS', payload } as const;\n    },\n    setIsOpened(opened: boolean) {\n        return { type: 'SET_IS_OPENED', payload: opened } as const;\n    },\n    setQueryString(qs: string) {\n        return { type: 'SET_QUERY_STRING', payload: qs } as const;\n    },\n    reset() {\n        return { type: 'RESET' } as const;\n    },\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Actions = typeof actions extends { [key: string]: (...args: any) => infer U } ? U : never;\n\nexport function useLazyLoading({\n    limit = 10,\n    initialOffset = 0,\n    optionsFetcher,\n    skeleton = <Skeleton className={styles.skeleton} visible={true} />,\n    Option = DefaultOption,\n}: useLazyLoadingProps) {\n    const initialOptions: OptionShape[] = [];\n    const initialLoading = false;\n\n    const lazyLoadingInitialState = {\n        opened: false,\n        offset: initialOffset,\n        options: initialOptions,\n        loading: initialLoading,\n        allOptionsLoaded: false,\n        queryString: '',\n    };\n\n    const lazyLoadingReducer: Reducer<typeof lazyLoadingInitialState, Actions> = (\n        state,\n        action,\n    ) => {\n        switch (action.type) {\n            case 'FETCH_OPTIONS_START': {\n                return {\n                    ...state,\n                    loading: true,\n                };\n            }\n            case 'FETCH_OPTIONS_BREAK': {\n                return {\n                    ...state,\n                    loading: false,\n                };\n            }\n            case 'FETCH_OPTIONS_SUCCESS': {\n                return {\n                    ...state,\n                    options: [...state.options, ...action.payload.options],\n                    offset: state.offset + (action.payload.options.length ? 1 : 0),\n                    allOptionsLoaded: !action.payload.hasMore,\n                    loading: false,\n                };\n            }\n            case 'SET_IS_OPENED': {\n                return {\n                    ...state,\n                    opened: action.payload,\n                };\n            }\n            case 'SET_QUERY_STRING': {\n                return {\n                    // Изменение queryString подразумевает сброс текущих опций.\n                    ...lazyLoadingInitialState,\n                    opened: state.opened,\n                    loading: true,\n                    queryString: action.payload,\n                };\n            }\n            case 'RESET': {\n                return {\n                    ...lazyLoadingInitialState,\n                };\n            }\n            default: {\n                return state;\n            }\n        }\n    };\n\n    const [{ opened, offset, options, loading, allOptionsLoaded, queryString }, dispatch] =\n        useReducer(lazyLoadingReducer, lazyLoadingInitialState);\n\n    const abortFetchingOptionsRef = useRef<() => void>();\n\n    const fetchNextOffsetOptions = useCallback(() => {\n        dispatch(actions.fetchOptionsStart());\n\n        new Promise<OptionsFetcherResponse>((resolve, reject) => {\n            // eslint-disable-next-line no-unused-expressions\n            abortFetchingOptionsRef.current?.();\n            abortFetchingOptionsRef.current = reject;\n            optionsFetcher(offset, limit, queryString).then((res) => {\n                resolve(res);\n            });\n        })\n            .then((res) => {\n                dispatch(actions.fetchOptionsSuccess(res));\n                abortFetchingOptionsRef.current = undefined;\n            })\n            .catch(\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                () => {},\n            );\n    }, [optionsFetcher, offset, limit, queryString]);\n\n    const listRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        let observer: IntersectionObserver;\n\n        if (opened && !loading && !allOptionsLoaded) {\n            observer = new IntersectionObserver(\n                ([entry]) => {\n                    if (entry.isIntersecting) {\n                        if (observer) {\n                            observer.disconnect();\n                        }\n                        fetchNextOffsetOptions();\n                    }\n                },\n                {\n                    root: listRef.current,\n                },\n            );\n\n            /*\n             * Обсервим пересечение последней опции с контейнером.\n             * Таким образом, загрузка следующей \"страницы\" начнется когда юзер доскроллит список\n             * до верхнего края последней опции, что обеспечивает плавность\n             */\n            const optionList = listRef.current?.querySelectorAll('[role=\"option\"]');\n            const lastOption = optionList?.[optionList.length - 1];\n\n            if (lastOption) {\n                observer.observe(lastOption);\n            }\n        }\n\n        return () => {\n            if (observer) {\n                observer.disconnect();\n            }\n        };\n    }, [offset, fetchNextOffsetOptions, opened, allOptionsLoaded, initialOffset, loading]);\n\n    const onOpen = useCallback(\n        (payload: { open?: boolean }) => {\n            if (payload.open) {\n                if (options.length === initialOptions.length) {\n                    fetchNextOffsetOptions();\n                }\n            } else {\n                // eslint-disable-next-line no-unused-expressions\n                abortFetchingOptionsRef.current?.();\n                dispatch(actions.fetchOptionsBreak());\n            }\n\n            dispatch(actions.setIsOpened(payload.open ?? false));\n        },\n        [initialOptions.length, fetchNextOffsetOptions, options.length],\n    );\n\n    const fetchNextOptionsRef = useRef<() => void>();\n    const fetchNextOptionsTimerRef = useRef<ReturnType<typeof setTimeout>>();\n\n    useEffect(() => {\n        fetchNextOptionsRef.current = fetchNextOffsetOptions;\n    }, [fetchNextOffsetOptions]);\n\n    const onQueryStringChange = useCallback<Exclude<InputProps['onChange'], undefined>>(\n        (_, payload) => {\n            dispatch(actions.setQueryString(payload.value));\n            /* eslint-disable no-unused-expressions */\n\n            /*\n             * Если во время загрузки опций юзер ввел новый текст в инпут,\n             * нужно прервать текущую загрузку, чтобы неактуальные опции не попали в выдачу\n             */\n            abortFetchingOptionsRef.current?.();\n\n            listRef.current?.scrollTo({ top: 0 });\n\n            /* Дебаунсим ввод текста, чтобы не отправлять запрос к новым опциям на каждый чих */\n            if (fetchNextOptionsTimerRef.current) {\n                clearTimeout(fetchNextOptionsTimerRef.current);\n            }\n            fetchNextOptionsTimerRef.current = setTimeout(() => {\n                /*\n                 * После дебаунса необходимо вызвать функцию-загрузчик,\n                 * содержащую актуальные на данный момент данные оффсета и queryString.\n                 * Поэтому мы не можем обратиться напрямую к функции fetchNextOptions,\n                 * так как она будет замкнута на старые значения, актуальные на момент вызова хэндлера,\n                 * так что берем ее из обновляемого рефа\n                 */\n                fetchNextOptionsRef.current?.();\n            }, DEBOUNCE_TIMEOUT);\n            /* eslint-enable */\n        },\n        [],\n    );\n\n    const renderOption = (props: OptionProps) => (\n        <Option {...props} highlighted={loading ? false : props.highlighted} />\n    );\n\n    const skeletonOptions: OptionShape[] = useMemo(\n        () =>\n            Array(loading ? limit : 0)\n                .fill(0)\n                .map((_, key) => ({\n                    key: `loading-${key}`,\n                    disabled: true,\n                    content: skeleton,\n                })),\n        [loading, limit, skeleton],\n    );\n\n    const reset = useCallback(() => {\n        dispatch(actions.reset());\n    }, []);\n\n    return {\n        optionsProps: {\n            Option: renderOption,\n            options: [...options, ...skeletonOptions],\n            optionsListProps: {\n                ref: listRef,\n                inputProps: {\n                    onChange: onQueryStringChange,\n                    value: queryString,\n                },\n            },\n            onOpen,\n        },\n        reset,\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"s\":\"s_LRCZa\",\"hidden\":\"hidden_Lso1y\"};","// extracted by mini-css-extract-plugin\nexport default {\"enterRight\":\"enterRight_tv4o_\",\"enterLeft\":\"enterLeft_AJ0oo\",\"enterActive\":\"enterActive_F8KXX\",\"exit\":\"exit_BapSR\",\"exitActiveRight\":\"exitActiveRight_ZQPIm\",\"exitActiveLeft\":\"exitActiveLeft_W31oh\"};","import React, { cloneElement, forwardRef, isValidElement, useContext, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { Drawer, DrawerProps } from '@alfalab/core-components-drawer';\n\nimport { ContentDesktop } from './components/content/Component.desktop';\nimport { FooterDesktop } from './components/footer/Component.desktop';\nimport { Header } from './components/header/Component';\nimport { ResponsiveContext } from './ResponsiveContext';\nimport { TResponsiveModalContext } from './typings';\n\nimport styles from './desktop.module.css';\nimport transitions from './transitions.desktop.module.css';\n\nexport type SidePanelDesktopProps = BaseModalProps &\n    Pick<\n        DrawerProps,\n        'placement' | 'nativeScrollbar' | 'contentTransitionProps' | 'scrollbarProps'\n    > & {\n        /**\n         * Ширина модального окна\n         * @default \"s\"\n         */\n        size?: 's';\n\n        /**\n         * Управление наличием закрывающего крестика\n         * @default false\n         */\n        hasCloser?: boolean;\n    };\n\nconst SidePanelDesktopComponent = forwardRef<HTMLDivElement, SidePanelDesktopProps>(\n    (\n        {\n            size = 's',\n            children,\n            className,\n            wrapperClassName,\n            contentTransitionProps = {},\n            backdropProps,\n            placement = 'right',\n            ...restProps\n        },\n        ref,\n    ) => {\n        const responsiveContext = useContext(ResponsiveContext);\n        const modalRef = useRef<HTMLElement>(null);\n\n        const enterCn = cn({\n            [transitions.appearRight]: placement === 'right',\n            [transitions.appearLeft]: placement === 'left',\n        });\n\n        const exitCn = cn({\n            [transitions.exitActiveRight]: placement === 'right',\n            [transitions.exitActiveLeft]: placement === 'left',\n        });\n\n        const contextValue = React.useMemo<TResponsiveModalContext>(\n            () => ({ size, view: 'desktop' }),\n            [size],\n        );\n\n        const renderContent = () => (\n            <Drawer\n                {...restProps}\n                ref={mergeRefs([ref, modalRef])}\n                placement={placement}\n                wrapperClassName={wrapperClassName}\n                className={cn(className, styles[size], styles.hidden)}\n                backdropProps={backdropProps}\n                contentTransitionProps={{\n                    classNames: {\n                        appear: enterCn,\n                        enter: enterCn,\n                        appearActive: transitions.enterActive,\n                        enterActive: transitions.enterActive,\n                        exit: transitions.exit,\n                        exitActive: exitCn,\n                        exitDone: exitCn,\n                    },\n                    ...contentTransitionProps,\n                }}\n            >\n                {React.Children.map(children, (child) =>\n                    isValidElement(child) ? cloneElement(child, { size }) : child,\n                )}\n            </Drawer>\n        );\n\n        const renderWithContext = () => (\n            <ResponsiveContext.Provider value={contextValue}>\n                {renderContent()}\n            </ResponsiveContext.Provider>\n        );\n\n        return responsiveContext ? renderContent() : renderWithContext();\n    },\n);\n\nexport const SidePanelDesktop = Object.assign(SidePanelDesktopComponent, {\n    Content: ContentDesktop,\n    Header,\n    Footer: FooterDesktop,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_YGtfd\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Content, ContentProps } from './Component';\n\nimport styles from './mobile.module.css';\n\nexport type ContentMobileProps = ContentProps;\n\nexport const ContentMobile: FC<ContentMobileProps> = ({ className, ...restProps }) => (\n    <Content className={cn(className, styles.content)} {...restProps} />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_cqAhC\",\"sticky\":\"sticky_Ep_1n\",\"column\":\"column_rXwS7\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Footer, FooterProps } from './Component';\n\nimport styles from './mobile.module.css';\n\nexport type FooterMobileProps = FooterProps;\n\nexport const FooterMobile: FC<FooterMobileProps> = ({\n    className,\n    sticky,\n    layout = 'start',\n    ...restProps\n}) => (\n    <Footer\n        className={cn(className, styles.footer, styles[layout], {\n            [styles.sticky]: sticky,\n        })}\n        sticky={sticky}\n        layout={layout}\n        {...restProps}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component__gWdU\",\"mobileContent\":\"mobileContent_y91QW\"};","// extracted by mini-css-extract-plugin\nexport default {\"appear\":\"appear_vApK4\",\"enter\":\"enter_l_qbP\",\"appearActive\":\"appearActive_z_d_h\",\"enterActive\":\"enterActive_JnTe5\",\"exit\":\"exit_dQ6ul\",\"exitActive\":\"exitActive_H_p9l\",\"exitDone\":\"exitDone__WSI3\"};","import React, { forwardRef, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { BaseModal, BaseModalProps } from '@alfalab/core-components-base-modal';\n\nimport { ContentMobile } from './components/content/Component.mobile';\nimport { FooterMobile } from './components/footer/Component.mobile';\nimport { Header } from './components/header/Component';\nimport { ResponsiveContext } from './ResponsiveContext';\n\nimport styles from './mobile.module.css';\nimport transitions from './transitions.mobile.module.css';\n\nexport type SidePanelMobileProps = BaseModalProps & {\n    /**\n     * Управление наличием закрывающего крестика\n     * @default false\n     */\n    hasCloser?: boolean;\n};\n\nconst contextValue = { size: 's', view: 'mobile' } as const;\n\nconst SidePanelMobileComponent = forwardRef<HTMLDivElement, SidePanelMobileProps>(\n    ({ children, className, transitionProps, ...restProps }, ref) => {\n        const responsiveContext = useContext(ResponsiveContext);\n\n        const renderContent = () => (\n            <BaseModal\n                {...restProps}\n                ref={ref}\n                transitionProps={{\n                    classNames: transitions,\n                    ...transitionProps,\n                }}\n                className={cn(className, styles.component)}\n                scrollHandler='content'\n            >\n                <div className={styles.mobileContent}>{children}</div>\n            </BaseModal>\n        );\n\n        const renderWithContext = () => (\n            <ResponsiveContext.Provider value={contextValue}>\n                {renderContent()}\n            </ResponsiveContext.Provider>\n        );\n\n        return responsiveContext ? renderContent() : renderWithContext();\n    },\n);\n\nexport const SidePanelMobile = Object.assign(SidePanelMobileComponent, {\n    Content: ContentMobile,\n    Header,\n    Footer: FooterMobile,\n});\n","import React, { FC, forwardRef, useContext, useMemo } from 'react';\n\nimport { BaseModalProps } from '@alfalab/core-components-base-modal';\nimport { DrawerProps } from '@alfalab/core-components-drawer';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { isClient } from '../../utils';\n\nimport { Header } from './components/header/Component';\nimport { SidePanelDesktop } from './Component.desktop';\nimport { SidePanelMobile } from './Component.mobile';\nimport { ResponsiveContext } from './ResponsiveContext';\nimport { TResponsiveModalContext } from './typings';\n\nexport type SidePanelResponsiveProps = BaseModalProps &\n    Pick<\n        DrawerProps,\n        'contentTransitionProps' | 'placement' | 'nativeScrollbar' | 'scrollbarProps'\n    > & {\n        /**\n         * Ширина модального окна\n         * @default \"s\"\n         */\n        size?: 's';\n\n        /**\n         * Управление наличием закрывающего крестика\n         * @default false\n         */\n        hasCloser?: boolean;\n\n        /**\n         * Контрольная точка, с нее начинается desktop версия\n         * @default 1024\n         */\n        breakpoint?: number;\n\n        /**\n         * Значение по-умолчанию для хука useMatchMedia\n         */\n        defaultMatchMediaValue?: boolean | (() => boolean);\n    };\n\nfunction createResponsive<DesktopType extends FC, MobileType extends FC>(\n    desktop: DesktopType,\n    mobile: MobileType,\n) {\n    // eslint-disable-next-line\n    function ResponsiveChild(props: any) {\n        const { view = 'desktop' } = useContext(ResponsiveContext) || {};\n\n        const Child = view === 'desktop' ? desktop : mobile;\n\n        return <Child {...props} />;\n    }\n\n    return ResponsiveChild as DesktopType | MobileType;\n}\n\nconst SidePanelResponsiveComponent = forwardRef<HTMLDivElement, SidePanelResponsiveProps>(\n    ({ children, breakpoint = 1024, size = 's', defaultMatchMediaValue, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n        const getDefaultValue = () => (isClient() ? window.matchMedia(query).matches : false);\n\n        const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue ?? getDefaultValue);\n\n        const view = isDesktop ? 'desktop' : 'mobile';\n\n        const contextValue = useMemo<TResponsiveModalContext>(() => ({ view, size }), [view, size]);\n\n        const Component = isDesktop ? SidePanelDesktop : SidePanelMobile;\n\n        return (\n            <ResponsiveContext.Provider value={contextValue}>\n                <Component ref={ref} size={size} {...restProps}>\n                    {children}\n                </Component>\n            </ResponsiveContext.Provider>\n        );\n    },\n);\n\nexport const SidePanelResponsive = Object.assign(SidePanelResponsiveComponent, {\n    Header,\n    Content: createResponsive(SidePanelDesktop.Content, SidePanelMobile.Content),\n    Footer: createResponsive(SidePanelDesktop.Footer, SidePanelMobile.Footer),\n});\n","import { BaseModalContext } from '@alfalab/core-components-base-modal';\n\nexport const ModalContext = BaseModalContext;\n","import React from 'react';\n\nimport type { TResponsiveModalContext } from './typings';\n\nexport const ResponsiveContext = React.createContext<TResponsiveModalContext>(null);\n","// extracted by mini-css-extract-plugin\nexport default {\"s\":\"s_ZzFqW\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Content, ContentProps } from './Component';\n\nimport styles from './desktop.module.css';\n\nexport type ContentDesktopProps = ContentProps & {\n    /**\n     * Размер (только для desktop версии компонента)\n     */\n    size?: 's';\n};\n\nexport const ContentDesktop: FC<ContentDesktopProps> = ({\n    size = 's',\n    className,\n    ...restProps\n}) => <Content className={cn(className, size && styles[size])} {...restProps} />;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_G0dGy\",\"withHeader\":\"withHeader_tYAz0\",\"flex\":\"flex_roQ3w\"};","import React, { FC, ReactNode, Ref, useContext } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\n\nimport styles from './index.module.css';\n\nexport type ContentProps = {\n    /**\n     * Контент\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Content: FC<ContentProps> = ({ children, className, dataTestId }) => {\n    const { contentRef, hasHeader } = useContext(ModalContext);\n\n    return (\n        <div\n            className={cn(styles.content, className, styles.flex, {\n                [styles.withHeader]: hasHeader,\n            })}\n            ref={contentRef as Ref<HTMLDivElement>}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sticky\":\"sticky_AQL9P\",\"s\":\"s_nyXQv\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Footer, FooterProps } from './Component';\n\nimport styles from './desktop.module.css';\n\nexport type FooterDesktopProps = FooterProps & {\n    /**\n     * Размер (только для desktop версии компонента)\n     */\n    size?: 's';\n};\n\nexport const FooterDesktop: FC<FooterDesktopProps> = ({\n    size = 's',\n    className,\n    sticky,\n    ...restProps\n}) => (\n    <Footer\n        className={cn(className, size && styles[size], {\n            [styles.sticky]: sticky,\n        })}\n        sticky={sticky}\n        {...restProps}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"footer_EBatm\",\"sticky\":\"sticky_pk8Ab\",\"highlighted\":\"highlighted_Nuyic\"};","// extracted by mini-css-extract-plugin\nexport default {\"column\":\"column_vDc7Z\",\"gap-16\":\"gap-16_Loo6j\",\"gap-24\":\"gap-24_LXx4R\",\"gap-32\":\"gap-32_YfhRx\",\"start\":\"start_Dpw3H\",\"center\":\"center_mMlT_\",\"space-between\":\"space-between_hQ_4l\"};","import React, { FC, ReactNode, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { ModalContext } from '../../Context';\n\nimport styles from './index.module.css';\nimport layoutStyles from './layout.module.css';\n\nexport type FooterProps = {\n    /**\n     * Контент футера\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Фиксирует футер\n     */\n    sticky?: boolean;\n\n    /**\n     * Выравнивание элементов футера\n     */\n    layout?: 'start' | 'center' | 'space-between' | 'column';\n\n    /**\n     * Отступы между элементами футера\n     */\n    gap?: 16 | 24 | 32;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Footer: FC<FooterProps> = ({\n    children,\n    className,\n    sticky,\n    layout = 'start',\n    gap,\n    dataTestId,\n}) => {\n    const { footerHighlighted, setHasFooter } = useContext(ModalContext);\n\n    useEffect(() => {\n        setHasFooter(true);\n    }, [setHasFooter]);\n\n    return (\n        <div\n            className={cn(\n                styles.footer,\n                className,\n                layoutStyles[layout],\n                gap && layoutStyles[`gap-${gap}`],\n                {\n                    [styles.highlighted]: sticky && footerHighlighted,\n                    [styles.sticky]: sticky,\n                },\n            )}\n            data-test-id={dataTestId}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"content_Yj8ia\",\"s\":\"s_YrUnf\",\"sticky\":\"sticky_GJe2z\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_UsRtW\",\"hasContent\":\"hasContent_J0xwX\",\"highlighted\":\"highlighted_gH14n\",\"sticky\":\"sticky_OogXi\",\"backgroundImage\":\"backgroundImage_UAHu6\",\"content\":\"content_fxQv8\",\"title\":\"title_oGff0\",\"addon\":\"addon_garBk\",\"closer\":\"closer_rtEQA\",\"right\":\"right_L3rNl\",\"trim\":\"trim_HpDmO\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_JDNRW\",\"sticky\":\"sticky_yqHcL\",\"content\":\"content_o2vay\"};","import React, { FC, useContext, useEffect } from 'react';\nimport cn from 'classnames';\n\nimport { NavigationBar, NavigationBarProps } from '@alfalab/core-components-navigation-bar';\n\nimport { ModalContext } from '../../Context';\nimport { ResponsiveContext } from '../../ResponsiveContext';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nexport type HeaderProps = Omit<NavigationBarProps, 'size' | 'view' | 'parentRef'>;\n\nexport const Header: FC<HeaderProps> = ({\n    className,\n    children,\n    contentClassName,\n    title,\n    sticky,\n    hasCloser = true,\n    ...restProps\n}) => {\n    const { setHasHeader, headerHighlighted, onClose, componentRef } = useContext(ModalContext);\n    const { size = 's', view = 'desktop' } = useContext(ResponsiveContext) || {};\n\n    useEffect(() => {\n        setHasHeader(true);\n    }, [setHasHeader]);\n\n    const hasContent = Boolean(title || children);\n\n    return (\n        <NavigationBar\n            {...restProps}\n            scrollableParentRef={componentRef}\n            view={view}\n            sticky={sticky}\n            title={title}\n            hasCloser={hasCloser}\n            onClose={onClose}\n            className={cn(styles.header, className, {\n                [styles.highlighted]: hasContent && sticky && headerHighlighted,\n                [styles.sticky]: sticky,\n                [styles.hasContent]: hasContent,\n                [desktopStyles.sticky]: view === 'desktop' && sticky,\n                [desktopStyles[size]]: view === 'desktop',\n                [mobileStyles.sticky]: view === 'mobile' && sticky,\n                [mobileStyles.header]: view === 'mobile',\n            })}\n            contentClassName={cn(contentClassName, {\n                [desktopStyles.content]: view === 'desktop',\n                [mobileStyles.content]: view === 'mobile',\n            })}\n        >\n            {children}\n        </NavigationBar>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_XvB5T\",\"animate\":\"animate_YKq6N\",\"background\":\"background_u0rNE\",\"gradient\":\"gradient_eeQMy\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport type SkeletonProps = {\n    /**\n     * Флаг, явно задающий состояние, при котором контент закрывается прелоадером\n     */\n    visible?: boolean;\n    /**\n     * Флаг явного включения анимации скелета\n     */\n    animate?: boolean;\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n    visible,\n    animate = true,\n    className,\n    dataTestId,\n    children,\n}) => {\n    if (visible) {\n        return (\n            <div\n                className={cn(styles.component, { [styles.animate]: animate }, className)}\n                data-test-id={dataTestId}\n            >\n                {children}\n            </div>\n        );\n    }\n\n    return (\n        <div data-test-id={dataTestId} className={className}>\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_Gwmbo\",\"block\":\"block_zSpqT\",\"slider\":\"slider_JSa9k\",\"xl\":\"xl_eVHeN\",\"hidePips\":\"hidePips_y1zQW\",\"field\":\"field_p3YAG\",\"s\":\"s_GOqNA\",\"m\":\"m_x0DcS\",\"l\":\"l_G1356\",\"input\":\"input_JIhnu\",\"steps\":\"steps_ofqNx\",\"info\":\"info_UU2mL\",\"hasLabel\":\"hasLabel_f2yBo\",\"focused\":\"focused_fhHNc\",\"filled\":\"filled_E6rgJ\"};","import React, {\n    ChangeEvent,\n    cloneElement,\n    FC,\n    forwardRef,\n    Fragment,\n    isValidElement,\n    ReactNode,\n    useCallback,\n} from 'react';\nimport cn from 'classnames';\n\nimport { Input as DefaultInput, InputProps } from '@alfalab/core-components-input';\nimport { Slider, SliderProps } from '@alfalab/core-components-slider';\n\nimport styles from './index.module.css';\n\nexport type SliderInputProps = Omit<\n    InputProps,\n    'min' | 'max' | 'step' | 'value' | 'type' | 'onChange' | 'bottomAddons'\n> & {\n    /**\n     * Мин. допустимое число\n     */\n    min?: number;\n\n    /**\n     * Макс. допустимое число\n     */\n    max?: number;\n\n    /**\n     * Массив подписей к слайдеру\n     */\n    steps?: ReactNode[];\n\n    /**\n     * Шаг (должен нацело делить отрезок между мин и макс)\n     */\n    step?: number;\n\n    /**\n     * Отображение подписей\n     * https://refreshless.com/nouislider/pips/\n     */\n    pips?: SliderProps['pips'];\n\n    /**\n     * Настройка шагов\n     * https://refreshless.com/nouislider/pips/#section-range\n     */\n    range?: SliderProps['range'];\n\n    /**\n     * Значение инпута\n     */\n    value?: number | string;\n\n    /**\n     * Значение слайдера\n     */\n    sliderValue?: number;\n\n    /**\n     * Дополнительная информация в правой части поля\n     */\n    info?: ReactNode;\n\n    /**\n     * Компонент поля ввода\n     */\n    Input?: FC<Omit<InputProps, 'onChange' | 'value'>>;\n\n    /**\n     * Кастомные пропсы для поля ввода\n     */\n    customInputProps?: Record<string, unknown>;\n\n    /**\n     * Класс для инпута\n     */\n    inputClassName?: string;\n\n    /**\n     * Класс для слайдера\n     */\n    sliderClassName?: string;\n\n    /**\n     * Класс для шагов\n     */\n    stepsClassName?: string;\n\n    /**\n     * Обработчик изменения значения через слайдер или поле ввода\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement> | null,\n        payload: { value: number | '' },\n    ) => void;\n\n    /**\n     * Обработчик ввода\n     */\n    onInputChange?: (event: ChangeEvent<HTMLInputElement>, payload: { value: number | '' }) => void;\n\n    /**\n     * Обработчик изменения слайдера\n     */\n    onSliderChange?: (payload: { value: number }) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const SliderInput = forwardRef<HTMLInputElement, SliderInputProps>(\n    (\n        {\n            className,\n            inputClassName,\n            sliderClassName,\n            stepsClassName,\n            focusedClassName,\n            fieldClassName,\n            value = '',\n            min = 0,\n            max = 100,\n            step = 1,\n            block,\n            steps = [],\n            sliderValue = +value,\n            size = 's',\n            label,\n            info,\n            disabled,\n            readOnly,\n            onChange,\n            onInputChange,\n            onSliderChange,\n            rightAddons,\n            Input = DefaultInput,\n            customInputProps = {},\n            error,\n            hint,\n            pips,\n            range,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const getValidInputValue = useCallback((inputValue: string | number) => {\n            const number = parseInt(inputValue?.toString().replace(/\\s/g, ''), 10);\n\n            return inputValue === '' || Number.isNaN(number) ? '' : Math.abs(number);\n        }, []);\n\n        const handleSliderChange = useCallback(\n            (payload: { value: number }) => {\n                if (onChange) onChange(null, payload);\n                if (onSliderChange) onSliderChange(payload);\n            },\n            [onChange, onSliderChange],\n        );\n\n        const handleInputChange = useCallback(\n            (event: ChangeEvent<HTMLInputElement>, payload: { value: string | number }) => {\n                if (onChange) onChange(event, { value: getValidInputValue(payload.value) });\n                if (onInputChange)\n                    onInputChange(event, { value: getValidInputValue(payload.value) });\n            },\n            [getValidInputValue, onChange, onInputChange],\n        );\n\n        return (\n            <div\n                className={cn(\n                    styles.component,\n                    {\n                        [styles.block]: block,\n                        [styles.filled]: Boolean(value),\n                        [styles.hasLabel]: label,\n                        [styles.hasError]: Boolean(error),\n                    },\n                    styles[size],\n                    className,\n                )}\n                data-test-id={dataTestId}\n            >\n                <Input\n                    {...restProps}\n                    {...customInputProps}\n                    ref={ref}\n                    value={value.toString()}\n                    onChange={handleInputChange}\n                    block={true}\n                    size={size}\n                    label={label}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={cn(inputClassName, styles.input)}\n                    focusedClassName={cn(focusedClassName, styles.focused)}\n                    fieldClassName={cn(\n                        fieldClassName,\n                        styles.field,\n                        { [styles.disabled]: disabled },\n                        styles[size],\n                    )}\n                    inputMode='numeric'\n                    pattern='[0-9]*'\n                    error={error}\n                    hint={hint}\n                    bottomAddons={\n                        !disabled && (\n                            <Slider\n                                min={min}\n                                max={max}\n                                step={step}\n                                onChange={handleSliderChange}\n                                value={\n                                    Number.isNaN(sliderValue) || !sliderValue ? min : sliderValue\n                                }\n                                disabled={disabled || readOnly}\n                                className={cn(\n                                    styles.slider,\n                                    styles[size],\n                                    { [styles.hidePips]: error || hint },\n                                    sliderClassName,\n                                )}\n                                pips={pips}\n                                range={range}\n                            />\n                        )\n                    }\n                    rightAddons={\n                        (info || rightAddons) && (\n                            <Fragment>\n                                {info && <span className={styles.info}>{info}</span>}\n                                {rightAddons}\n                            </Fragment>\n                        )\n                    }\n                />\n                {/* eslint-disable react/no-array-index-key */}\n                {steps.length > 0 && !error && (\n                    <div className={cn(styles.steps, stepsClassName)}>\n                        {steps.map((stepLabel, i) =>\n                            isValidElement(stepLabel) ? (\n                                cloneElement(stepLabel, { key: i })\n                            ) : (\n                                <span key={i.toString()}>{stepLabel}</span>\n                            ),\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_UamdO\",\"s\":\"s_z21bi\",\"m\":\"m_uLwID\"};","import React, { FC, useEffect, useRef } from 'react';\nimport cn from 'classnames';\nimport noUiSlider, { API, Options } from 'nouislider';\n\nimport styles from './index.module.css';\n\ntype SubRange = number | [number] | [number, number];\ntype RangeOptions = {\n    min: SubRange;\n    max: SubRange;\n    [key: string]: SubRange;\n};\n\ntype PipsType = -1 | 0 | 1 | 2;\n\ntype Pips = {\n    mode: 'range' | 'steps' | 'positions' | 'count' | 'values';\n    values: number | number[];\n    filter?: (value: number, type: PipsType) => PipsType;\n    format?: {\n        to: (value: number) => string | number;\n        from?: (value: string) => number | false;\n    };\n    stepped?: boolean;\n};\n\nexport type SliderProps = {\n    /**\n     * Мин. допустимое число\n     */\n    min?: number;\n\n    /**\n     * Макс. допустимое число\n     */\n    max?: number;\n\n    /**\n     * Шаг (должен нацело делить отрезок между мин и макс)\n     */\n    step?: number;\n\n    /**\n     * Отображение подписей\n     * https://refreshless.com/nouislider/pips/\n     */\n    pips?: Pips;\n\n    /**\n     * Настройка шагов\n     * https://refreshless.com/nouislider/pips/#section-range\n     */\n    range?: RangeOptions;\n\n    /**\n     * Значение слайдера\n     */\n    value?: number;\n\n    /**\n     * Второе значение слайдера (значение второго ползунка)\n     * если передать ValueTo, то слайдер будет работать как range\n     */\n    valueTo?: number;\n\n    /**\n     * Заблокированное состояние\n     */\n    disabled?: boolean;\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Поведение ползунка\n     */\n    behaviour?: 'unconstrained-tap' | 'tap';\n\n    /**\n     * Размер\n     */\n    size?: 's' | 'm';\n\n    /**\n     * Обработчик поля ввода\n     */\n    onChange?: (payload: { value: number; valueTo?: number }) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Slider: FC<SliderProps> = ({\n    min = 0,\n    max = 100,\n    step = 1,\n    value = 0,\n    valueTo,\n    disabled,\n    pips,\n    behaviour = 'tap',\n    range = { min, max },\n    size = 's',\n    className,\n    onChange,\n    dataTestId,\n}) => {\n    const sliderRef = useRef<HTMLDivElement & { noUiSlider: API }>(null);\n    const busyRef = useRef<boolean>(false);\n    const hasValueTo = valueTo !== undefined;\n\n    const getSlider = () => sliderRef.current?.noUiSlider;\n\n    useEffect(() => {\n        if (!sliderRef.current) return;\n\n        const slider = noUiSlider.create(sliderRef.current, {\n            start: valueTo ? [value, valueTo] : value,\n            connect: valueTo ? true : [true, false],\n            behaviour,\n            step,\n            pips: pips as Options['pips'],\n            range,\n        });\n\n        slider.on('start', () => {\n            busyRef.current = true;\n        });\n\n        slider.on('change', () => {\n            busyRef.current = false;\n        });\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const slider = getSlider();\n\n        if (!slider) return;\n\n        slider.updateOptions(\n            {\n                step,\n                range,\n                pips: pips as Options['pips'],\n            },\n            true,\n        );\n    }, [pips, range, step]);\n\n    useEffect(() => {\n        const slider = getSlider();\n\n        // Пропускаем обновление, если происходит взаимодействие со слайдером\n        if (slider && busyRef.current === false) {\n            if (valueTo) {\n                slider.set([value, valueTo], false);\n            } else {\n                slider.set(value, false);\n            }\n        }\n    }, [value, valueTo]);\n\n    useEffect(() => {\n        const slider = getSlider();\n\n        if (!slider) return;\n\n        const handler = () => {\n            if (onChange) {\n                if (hasValueTo) {\n                    const sliderValues = slider.get() as string[];\n                    const from = Number(sliderValues[0]);\n                    const to = Number(sliderValues[1]);\n\n                    if (from <= to) {\n                        onChange({ value: from, valueTo: to });\n                    } else {\n                        onChange({ value: to, valueTo: from });\n                    }\n                } else {\n                    onChange({ value: Number(slider.get()) });\n                }\n            }\n        };\n\n        slider.off('slide');\n        slider.on('slide', handler);\n    }, [onChange, hasValueTo]);\n\n    return (\n        <div\n            className={cn(styles.component, className, styles[size])}\n            ref={sliderRef}\n            data-test-id={dataTestId}\n            {...{ disabled }}\n        />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_WzFs9\",\"icon\":\"icon_Dhem9\",\"activator-cell\":\"activator-cell_yFP9P\",\"disabled\":\"disabled_czJmL\",\"dragOverlay\":\"dragOverlay_ZXqXN\",\"activator-control\":\"activator-control_uwORN\",\"content\":\"content_groqe\",\"dragging\":\"dragging_DxBxd\",\"pop\":\"pop_xzhfe\",\"control-left-padding-3xs\":\"control-left-padding-3xs_mAB2S\",\"control-right-padding-3xs\":\"control-right-padding-3xs_FvpCN\",\"control-left-padding-2xs\":\"control-left-padding-2xs_PzeiL\",\"control-right-padding-2xs\":\"control-right-padding-2xs_zz25t\",\"control-left-padding-xs\":\"control-left-padding-xs_R821e\",\"control-right-padding-xs\":\"control-right-padding-xs_xhkjg\",\"control-left-padding-s\":\"control-left-padding-s_PzAgC\",\"control-right-padding-s\":\"control-right-padding-s_DXXQG\",\"control-left-padding-m\":\"control-left-padding-m_qw_yo\",\"control-right-padding-m\":\"control-right-padding-m_TLYI4\",\"control-left-padding-l\":\"control-left-padding-l_u4Svf\",\"control-right-padding-l\":\"control-right-padding-l_lkuzF\"};","import React from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport cn from 'classnames';\n\nimport { DragMIcon } from '@alfalab/icons-glyph/DragMIcon';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SortableItemProps } from '../../types';\n\nimport styles from './index.module.css';\n\nexport const SortableItem: React.FC<SortableItemProps> = ({\n    activatorNode,\n    controlPosition,\n    controlPadding,\n    children,\n    className,\n    id,\n    isDragOverlay,\n    disabled,\n    dataTestId,\n}): JSX.Element => {\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        setActivatorNodeRef,\n        transform,\n        transition,\n        isDragging,\n    } = useSortable({\n        id,\n        disabled,\n    });\n\n    const isCellActivator = !isDragOverlay && activatorNode === 'cell';\n    const isControlActivator = !isDragOverlay && activatorNode === 'control';\n\n    const renderControl = () => {\n        const hasRightPadding = controlPadding && controlPosition === 'right';\n        const hasLeftPadding = controlPadding && controlPosition === 'left';\n\n        return (\n            <div\n                className={cn(styles.icon, {\n                    [styles[`control-right-padding-${controlPadding}`]]: hasRightPadding,\n                    [styles[`control-left-padding-${controlPadding}`]]: hasLeftPadding,\n                })}\n                ref={isControlActivator ? setActivatorNodeRef : undefined}\n                {...(isControlActivator ? listeners : null)}\n                {...(isControlActivator ? attributes : null)}\n            >\n                <DragMIcon aria-label='drag control' />\n            </div>\n        );\n    };\n\n    return (\n        <div\n            {...(isCellActivator ? listeners : null)}\n            {...(isCellActivator ? attributes : null)}\n            style={{\n                transform: CSS.Transform.toString(transform),\n                transition,\n            }}\n            className={cn(styles.component, styles[`activator-${activatorNode}`], className, {\n                [styles.disabled]: disabled,\n                [styles.dragging]: isDragging,\n                [styles.dragOverlay]: isDragOverlay,\n            })}\n            ref={setNodeRef}\n            data-test-id={getDataTestId(dataTestId, `item_${id}`)}\n        >\n            {controlPosition === 'left' && renderControl()}\n\n            <div className={cn(styles.content)}>{children}</div>\n\n            {controlPosition === 'right' && renderControl()}\n        </div>\n    );\n};\n","import type { ClientRect, Modifier } from '@dnd-kit/core';\nimport type { Transform } from '@dnd-kit/utilities';\n\nexport const restrictToParentElement: Modifier = ({\n    containerNodeRect,\n    draggingNodeRect,\n    transform,\n}) => {\n    if (!draggingNodeRect || !containerNodeRect) {\n        return transform;\n    }\n\n    return restrictToBoundingRect(transform, draggingNodeRect, containerNodeRect);\n};\n\nexport function restrictToBoundingRect(\n    transform: Transform,\n    rect: ClientRect,\n    boundingRect: ClientRect,\n): Transform {\n    const value = {\n        ...transform,\n    };\n\n    if (rect.top + transform.y <= boundingRect.top) {\n        value.y = boundingRect.top - rect.top;\n    } else if (rect.bottom + transform.y >= boundingRect.top + boundingRect.height) {\n        value.y = boundingRect.top + boundingRect.height - rect.bottom;\n    }\n\n    if (rect.left + transform.x <= boundingRect.left) {\n        value.x = boundingRect.left - rect.left;\n    } else if (rect.right + transform.x >= boundingRect.left + boundingRect.width) {\n        value.x = boundingRect.left + boundingRect.width - rect.right;\n    }\n\n    return value;\n}\n\nexport const restrictToVerticalAxis: Modifier = ({ transform }) => ({\n    ...transform,\n    x: 0,\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_hngQp\",\"primary\":\"primary_i9tdY\",\"secondary\":\"secondary_A0hDx\",\"padding-top-3xs\":\"padding-top-3xs_iY2PY\",\"padding-bottom-3xs\":\"padding-bottom-3xs_gI4aV\",\"padding-left-3xs\":\"padding-left-3xs_iEwZk\",\"padding-right-3xs\":\"padding-right-3xs_N_wTD\",\"padding-top-2xs\":\"padding-top-2xs_T9w0g\",\"padding-bottom-2xs\":\"padding-bottom-2xs_Y2AVb\",\"padding-left-2xs\":\"padding-left-2xs_dVKSu\",\"padding-right-2xs\":\"padding-right-2xs_kUyB7\",\"padding-top-xs\":\"padding-top-xs_JZ9PK\",\"padding-bottom-xs\":\"padding-bottom-xs_M05UT\",\"padding-left-xs\":\"padding-left-xs_TRU64\",\"padding-right-xs\":\"padding-right-xs_xZZ_8\",\"padding-top-s\":\"padding-top-s_qLba6\",\"padding-bottom-s\":\"padding-bottom-s_J8L8c\",\"padding-left-s\":\"padding-left-s_JMGJr\",\"padding-right-s\":\"padding-right-s_kTdX5\",\"padding-top-m\":\"padding-top-m_T1LkE\",\"padding-bottom-m\":\"padding-bottom-m_jscyI\",\"padding-left-m\":\"padding-left-m_OJIqd\",\"padding-right-m\":\"padding-right-m_d2SA_\",\"padding-top-l\":\"padding-top-l_E5XYL\",\"padding-bottom-l\":\"padding-bottom-l_C7rJB\",\"padding-left-l\":\"padding-left-l_L_vJS\",\"padding-right-l\":\"padding-right-l_tUBjL\",\"border-radius-m\":\"border-radius-m_V7CP4\",\"border-radius-l\":\"border-radius-l_GMCqP\",\"border-radius-xl\":\"border-radius-xl_OOuax\"};","import React, { forwardRef } from 'react';\nimport {\n    closestCenter,\n    DndContext,\n    DragEndEvent,\n    DragOverEvent,\n    DragOverlay,\n    DragStartEvent,\n    KeyboardSensor,\n    MouseSensor,\n    TouchSensor,\n    UniqueIdentifier,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../utils';\n\nimport { SortableItem } from './components/item/Components';\nimport type { Items, SortableItemProps, SortableListProps } from './types';\nimport { restrictToParentElement, restrictToVerticalAxis } from './utils';\n\nimport styles from './index.module.css';\n\nconst DEFAULT_INSTRUCTION =\n    'Чтобы выбрать перетаскиваемый элемент, нажмите пробел.\\n' +\n    'При перетаскивании используйте клавиши со стрелками для перемещения элемента.\\n' +\n    'Снова нажмите пробел, чтобы переместить элемент в его новое положение или нажмите escape для отмены.';\n\nconst DEFAULT_ANNOUNCEMENTS = {\n    onDragStart({ active }: DragStartEvent) {\n        return `Выбран элемент ${active.id}.`;\n    },\n    onDragOver({ active, over }: DragOverEvent) {\n        if (over) {\n            return `Выбранный элемент ${active.id} находится над элементом ${over.id}.`;\n        }\n\n        return `Выбранный элемент ${active.id} находится за пределами droppable зоны.`;\n    },\n    onDragEnd({ active, over }: DragEndEvent) {\n        if (over) {\n            return `Выбранный элемент ${active.id} был перемещен на место ${over.id}`;\n        }\n\n        return `Выбранный элемент ${active.id} не был перемещен.`;\n    },\n    onDragCancel() {\n        return 'Перемещение было отменено';\n    },\n};\n\nexport const SortableList = forwardRef<HTMLDivElement, SortableListProps>(\n    (\n        {\n            className,\n            itemClassName,\n            controlPosition = 'right',\n            controlPadding,\n            items,\n            renderItem,\n            borderRadius,\n            activatorNode = 'cell',\n            view = 'primary',\n            padding,\n            dataTestId,\n            announcements = DEFAULT_ANNOUNCEMENTS,\n            screenReaderInstructions = DEFAULT_INSTRUCTION,\n            onDragStart,\n            onDragEnd,\n        },\n        ref,\n    ) => {\n        const [activeId, setActiveId] = React.useState<UniqueIdentifier | null>(null);\n        const sensors = useSensors(\n            useSensor(KeyboardSensor),\n            useSensor(TouchSensor),\n            useSensor(MouseSensor),\n        );\n\n        const getPaddingClassName = () => {\n            if (typeof padding === 'object') {\n                return cn({\n                    [styles[`padding-top-${padding.top}`]]: padding.top,\n                    [styles[`padding-right-${padding.right}`]]: padding.right,\n                    [styles[`padding-bottom-${padding.bottom}`]]: padding.bottom,\n                    [styles[`padding-left-${padding.left}`]]: padding.left,\n                });\n            }\n\n            if (typeof padding === 'string') {\n                return cn(\n                    styles[`padding-top-${padding}`],\n                    styles[`padding-right-${padding}`],\n                    styles[`padding-bottom-${padding}`],\n                    styles[`padding-left-${padding}`],\n                );\n            }\n\n            return undefined;\n        };\n\n        const commonClassName = cn(styles[view], {\n            [styles[`border-radius-${borderRadius}`]]: borderRadius,\n        });\n\n        const sortableItemClassName = cn(commonClassName, itemClassName);\n\n        const handleDragStart = (event: DragStartEvent) => {\n            const { active } = event;\n\n            setActiveId(active.id);\n\n            onDragStart?.(event);\n        };\n\n        const handleDragEnd = (event: DragEndEvent) => {\n            const { active, over } = event;\n\n            if (over?.id && active.id !== over.id) {\n                const oldIndex = items.findIndex((item) => item.id === active.id);\n                const newIndex = items.findIndex((item) => item.id === over.id);\n\n                onDragEnd?.(event, arrayMove(items, oldIndex, newIndex));\n\n                return;\n            }\n\n            onDragEnd?.(event, items);\n            setActiveId(null);\n        };\n\n        const renderSortableItem = (\n            item: Items[number],\n            { children, ...restProps }: Partial<SortableItemProps>,\n        ) => (\n            <SortableItem\n                controlPadding={controlPadding}\n                controlPosition={controlPosition}\n                key={item.id}\n                id={item.id}\n                className={sortableItemClassName}\n                activatorNode={activatorNode}\n                disabled={item.disabled}\n                {...restProps}\n            >\n                {renderItem(item)}\n            </SortableItem>\n        );\n\n        const renderDragOverlay = () => {\n            const activeItem = items.find((item) => item.id === activeId);\n\n            if (activeItem) {\n                return renderSortableItem(activeItem, { isDragOverlay: true });\n            }\n\n            return null;\n        };\n\n        return (\n            <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragStart={handleDragStart}\n                onDragEnd={handleDragEnd}\n                modifiers={[restrictToParentElement, restrictToVerticalAxis]}\n                accessibility={{\n                    announcements,\n                    screenReaderInstructions: { draggable: screenReaderInstructions },\n                }}\n            >\n                <SortableContext items={items} strategy={verticalListSortingStrategy}>\n                    <div\n                        ref={ref}\n                        className={cn(\n                            styles.component,\n                            getPaddingClassName(),\n                            commonClassName,\n                            className,\n                        )}\n                        data-test-id={getDataTestId(dataTestId, 'container')}\n                    >\n                        {items.map((item) => renderSortableItem(item, { dataTestId }))}\n                    </div>\n                </SortableContext>\n\n                <DragOverlay>{activeId ? renderDragOverlay() : null}</DragOverlay>\n            </DndContext>\n        );\n    },\n);\n","import * as React from 'react';\n\nimport { Direction } from './utils';\n\nexport interface ItemProps {\n    className: string;\n    horizontalSize: number;\n    verticalSize: number;\n    length: number;\n    children: React.ReactNode;\n    index: number;\n    direction?: Direction;\n    divider?: string | React.ReactNode;\n    wrap?: boolean;\n}\n\nconst Item = (props: ItemProps) => {\n    const {\n        className,\n        horizontalSize,\n        verticalSize,\n        length,\n        direction,\n        index,\n        children,\n        divider,\n        wrap,\n    } = props;\n\n    let style: React.CSSProperties = {};\n\n    if (direction === 'vertical') {\n        if (index < length - 1) {\n            style = { marginBottom: horizontalSize / (divider ? 2 : 1) };\n        }\n    } else {\n        style = {\n            ...(index < length - 1 && { marginRight: horizontalSize / (divider ? 2 : 1) }),\n            ...(wrap && { paddingBottom: verticalSize }),\n        };\n    }\n\n    if (children === null || children === undefined) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            <div className={className} style={style}>\n                {children}\n            </div>\n            {index < length - 1 && divider && (\n                <span\n                    style={{\n                        width: '100%',\n                        ...style,\n                    }}\n                >\n                    {divider}\n                </span>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Item;\n","// extracted by mini-css-extract-plugin\nexport default {\"spaceContainer\":\"spaceContainer_XHYzE\",\"spaceContainerFullWidth\":\"spaceContainerFullWidth_hFSJV\",\"vertical\":\"vertical_xbR1i\",\"center\":\"center_CNtcx\",\"start\":\"start_c9BrI\",\"end\":\"end_VmJ4K\",\"spaceItemFullWidth\":\"spaceItemFullWidth_CXCeA\",\"spaceItem\":\"spaceItem_Lpovr\"};","import React, { Children, forwardRef, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport Item from './Item';\nimport { Align, Direction, Size } from './utils';\n\nimport styles from './index.module.css';\n\nexport type SpaceProps = {\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Направление\n     */\n    direction?: Direction;\n\n    /**\n     * Размер отступов\n     */\n    size?: Size | [Size, Size];\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние компоненты\n     */\n    children: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Автоматический перенос строк, полезно при direction = 'horizontal'\n     */\n    wrap?: boolean;\n\n    /**\n     * Компонент разделителя\n     */\n    divider?: string | ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    fullWidth?: boolean;\n};\n\nconst SpaceSizes: { [key in Size]: number } = {\n    s: 12,\n    m: 16,\n    l: 20,\n};\n\nconst getNumberSize = (size: Size) => (typeof size === 'string' ? SpaceSizes[size] : size || 0);\n\n/**\n * Позаимствовано с благодарностью из Ant Design\n */\n\nexport const Space = forwardRef<HTMLDivElement, SpaceProps>((props, ref) => {\n    const {\n        children,\n        className,\n        align = 'start',\n        direction = 'vertical',\n        size = 'm',\n        wrap = false,\n        divider = false,\n        fullWidth = false,\n        dataTestId,\n    } = props;\n\n    const [horizontalSize, verticalSize] = React.useMemo(\n        () =>\n            ((Array.isArray(size) ? size : [size, size]) as [Size, Size]).map((item) =>\n                getNumberSize(item),\n            ),\n        [size],\n    );\n\n    const childNodes = Children.toArray(children);\n\n    if (childNodes.length === 0) {\n        return null;\n    }\n\n    const directionClassName = styles[direction];\n    const alignClassName = styles[align];\n\n    const containerClassName = classNames(\n        styles.spaceContainer,\n        directionClassName,\n        {\n            [alignClassName]: align,\n            [styles.spaceContainerFullWidth]: fullWidth,\n        },\n        className,\n    );\n\n    const itemClassName = classNames(styles.spaceItem, {\n        [styles.spaceItemFullWidth]: fullWidth,\n    });\n\n    const nodes = childNodes.map((child, i) => (\n        /* eslint-disable react/no-array-index-key */\n        <Item\n            className={itemClassName}\n            key={`${itemClassName}-${i}`}\n            direction={direction}\n            horizontalSize={horizontalSize}\n            verticalSize={verticalSize}\n            length={childNodes.length}\n            index={i}\n            wrap={wrap}\n            divider={divider}\n        >\n            {child}\n        </Item>\n        /* eslint-enable */\n    ));\n\n    return (\n        <div\n            data-test-id={dataTestId}\n            className={containerClassName}\n            style={{\n                ...(wrap && { flexWrap: 'wrap', marginBottom: -verticalSize }),\n            }}\n            ref={ref}\n        >\n            {nodes}\n        </div>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"spinner_eJwLa\",\"spin_animation\":\"spin_animation_XgBrZ\",\"visible\":\"visible_w8m5L\",\"xs\":\"xs_IJaS2\",\"s\":\"s_SWmly\",\"m\":\"m_zcaY6\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { useId } from '@alfalab/hooks';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type SpinnerProps = {\n    /**\n     * Управление видимостью компонента\n     */\n    visible?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xs' | 's' | 'm';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Идентификатор компонента в DOM\n     */\n    id?: string;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Палитра, в контексте которой используется спиннер\n     */\n    colors?: 'default' | 'inverted';\n};\n\nconst CONFIG = {\n    xs: {\n        padding: 1,\n        lineWidth: 2,\n        size: 18,\n    },\n    s: {\n        padding: 2,\n        lineWidth: 2,\n        size: 24,\n    },\n    m: {\n        padding: 4,\n        lineWidth: 4,\n        size: 48,\n    },\n} as const;\n\nexport const Spinner: FC<SpinnerProps> = ({\n    size: sizeProp = 's',\n    colors = 'default',\n    visible,\n    id,\n    className,\n    dataTestId,\n}) => {\n    const uniqId = useId();\n    const { size, padding, lineWidth } = CONFIG[sizeProp];\n\n    const xStart = padding + lineWidth / 2;\n    const xEnd = size - xStart;\n    const y = size / 2;\n    const r = y - xStart;\n\n    const topGradientId = `${uniqId}_top`;\n    const bottomGradientId = `${uniqId}_bottom`;\n\n    return (\n        <svg\n            viewBox={`0 0 ${size} ${size}`}\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n            className={cn(\n                styles.spinner,\n                colorStyles[colors].component,\n                styles[sizeProp],\n                className,\n                {\n                    [styles.visible]: visible,\n                },\n            )}\n            data-test-id={dataTestId}\n            id={id}\n        >\n            <defs>\n                <linearGradient id={topGradientId} x1='0.05'>\n                    <stop offset='0.1' stopOpacity='0' stopColor='currentColor' />\n                    <stop offset='1' stopOpacity='0.3' stopColor='currentColor' />\n                </linearGradient>\n                <linearGradient id={bottomGradientId} x1='0.05'>\n                    <stop offset='0' stopOpacity='1' stopColor='currentColor' />\n                    <stop offset='1' stopOpacity='0.3' stopColor='currentColor' />\n                </linearGradient>\n            </defs>\n\n            <g strokeWidth={lineWidth}>\n                <path\n                    stroke={`url(#${topGradientId})`}\n                    d={`M${xStart},${y} A${r},${r} 0 0 1 ${xEnd},${y}`}\n                />\n                <path\n                    stroke={`url(#${bottomGradientId})`}\n                    d={`M${xEnd},${y} A${r},${r} 0 0 1 ${xStart},${y}`}\n                />\n                <path\n                    stroke='currentColor'\n                    strokeLinecap='round'\n                    d={`M${xStart},${y} A${r},${r} 0 0 1 ${xStart} ${y}`}\n                />\n            </g>\n        </svg>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_eRftq\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_uu1gU\"};","import React, { FC, ReactNode, useContext } from 'react';\n\nimport { StackingContext, stackingOrder } from './context';\n\nexport type StackProps = {\n    /**\n     * Render prop, в который передается функция.\n     * Функция принимает аргумент со значением z-index из текущего контекста.\n     */\n    children: (value: number) => ReactNode;\n\n    /**\n     * Исходное значение для z-index.\n     * @default 5\n     */\n    value?: number;\n};\n\nexport const Stack: FC<StackProps> = ({ children, value = stackingOrder.DEFAULT }) => {\n    const previousValue = useContext(StackingContext);\n    const currentValue = Math.max(value, previousValue);\n    const nextValue = currentValue + 1;\n\n    return (\n        <StackingContext.Provider value={nextValue}>\n            {children(currentValue)}\n        </StackingContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\n/**\n * Набор констант для z-index соответствующих классов компонентов.\n * Значения выбраны по приоритету.\n */\nexport const stackingOrder = {\n    /**\n     * Для компонентов с возможностью фокуса: кнопки, поля ввода\n     */\n    FOCUSED: 2,\n\n    /**\n     * Значение по-умолчанию\n     */\n    DEFAULT: 10,\n\n    /**\n     * Компоненты, которые управляют своей позицией, например, поповер, тултип\n     */\n    POPOVER: 50,\n\n    /**\n     * Для модальных окон с оверлеем\n     */\n    MODAL: 100,\n\n    /**\n     * Для тостов и нотификаций\n     */\n    TOAST: 1000,\n};\n\nexport const StackingContext = createContext(stackingOrder.DEFAULT);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_RyTHC\",\"soft\":\"soft_STz9w\",\"green\":\"green_L09lA\",\"orange\":\"orange_RtKwL\",\"red\":\"red_XlhtJ\",\"blue\":\"blue_Qb3GK\",\"grey\":\"grey_se5hC\",\"teal\":\"teal_boKsi\",\"purple\":\"purple_vSlBN\",\"contrast\":\"contrast__wmqE\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\nexport const colors = ['green', 'orange', 'red', 'blue', 'grey', 'teal', 'purple'] as const;\n\nexport type StatusProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     *  Вид компонента\n     */\n    view?: 'contrast' | 'soft';\n\n    /**\n     * Цветовое оформление иконки\n     */\n    color?: typeof colors[number];\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n};\n\nexport const Status: FC<StatusProps> = ({\n    className,\n    view = 'soft',\n    color = 'green',\n    children,\n    dataTestId,\n}) => (\n    <span\n        className={cn(styles.component, styles[color], styles[view], className)}\n        data-test-id={dataTestId}\n    >\n        {children}\n    </span>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"bar_wJodV\",\"positive\":\"positive_UyTUX\",\"attention\":\"attention_JSayg\",\"negative\":\"negative_B2Edz\",\"link\":\"link_hMYg8\",\"tertiary\":\"tertiary_WECSl\",\"secondary\":\"secondary_Q3A3q\",\"primary\":\"primary_mMkwJ\",\"accent\":\"accent_F2O2V\"};","import React, { FC, memo } from 'react';\nimport cn from 'classnames';\n\nimport { SteppedProgressBarView } from '../../Component';\n\nimport styles from './index.module.css';\n\ntype StepBarProps = {\n    isDone: boolean;\n    view?: SteppedProgressBarView;\n    classNameStep?: string;\n};\n\nexport const StepBar: FC<StepBarProps> = memo(({ isDone, view = 'positive', classNameStep }) => (\n    <span\n        data-test-id={isDone ? 'on' : 'off'}\n        className={cn(styles.bar, isDone && styles[view], classNameStep)}\n    />\n));\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"bar_j7bXS\",\"description\":\"description_V66fU\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QqPy5\",\"stepsContainer\":\"stepsContainer_2Yj9R\",\"description\":\"description_UVIRd\"};","import React, { FC } from 'react';\nimport cn from 'classnames';\n\nimport { Typography } from '@alfalab/core-components-typography';\n\nimport { StepBar } from './components/step-bar';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type SteppedProgressBarView =\n    | 'positive'\n    | 'negative'\n    | 'attention'\n    | 'link'\n    | 'tertiary'\n    | 'secondary'\n    | 'primary'\n    | 'accent';\n\nexport type SteppedProgressBarProps = {\n    /**\n     * Общее количество шагов\n     */\n    maxStep: number;\n\n    /**\n     * Постфикс описание под прогрессбаром\n     */\n    description?: string;\n\n    /**\n     * Количество пройденных шагов\n     */\n    step?: number;\n\n    /**\n     * Цвет заполнения\n     */\n    view?: SteppedProgressBarView | SteppedProgressBarView[];\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n};\n\nexport const SteppedProgressBar: FC<SteppedProgressBarProps> = ({\n    maxStep,\n    description,\n    step = 0,\n    view,\n    dataTestId,\n    colors = 'default',\n    className,\n}) => {\n    const validMaxSteps = maxStep <= 0 ? 1 : maxStep;\n    const isViewString = typeof view === 'string';\n\n    return (\n        <div className={cn(styles.component, className)} data-test-id={dataTestId}>\n            <div className={styles.stepsContainer}>\n                {Array.from(Array(validMaxSteps), (_, index) => (\n                    <StepBar\n                        key={index}\n                        isDone={index < step}\n                        view={(isViewString ? view : view?.[index]) as SteppedProgressBarView}\n                        classNameStep={colorStyles[colors].bar}\n                    />\n                ))}\n            </div>\n            {description && (\n                <Typography.Text\n                    tag='div'\n                    className={cn(styles.description, colorStyles[colors].description)}\n                    view='primary-small'\n                >\n                    Шаг {step} из {maxStep}: {description}\n                </Typography.Text>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"bar_mtaa8\",\"description\":\"description_uAEDU\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_hLeEI\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport { Badge, BadgeProps } from '@alfalab/core-components-badge';\n\nimport styles from './index.module.css';\n\nexport type StepIndicatorProps = Pick<BadgeProps, 'content' | 'iconColor' | 'className'>;\n\nexport const StepIndicator: React.FC<StepIndicatorProps> = ({ content, iconColor, className }) => (\n    <Badge\n        size='l'\n        view='icon'\n        iconColor={iconColor}\n        className={cn(styles.component, className)}\n        content={content}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"step\":\"step_Gd6NY\",\"vertical\":\"vertical_Dd6YY\",\"interactive\":\"interactive_AUN7P\",\"disabled\":\"disabled_yWhrF\",\"text\":\"text_VwkMA\",\"indicator\":\"indicator_trPBi\",\"option\":\"option_hOKlU\",\"dash\":\"dash_yjw9B\",\"completed\":\"completed_IhpK0\",\"focused\":\"focused_w5QI8\",\"selected\":\"selected_l2Z8l\",\"checkbox\":\"checkbox_x2BVF\",\"dot\":\"dot_rmKV_\",\"error\":\"error_CvMx4\",\"unordered\":\"unordered_hOZIe\",\"completedIndicator\":\"completedIndicator_N59gn\"};","import React, { ReactNode, useRef } from 'react';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { ClockMIcon } from '@alfalab/icons-glyph/ClockMIcon';\nimport { ExclamationCircleMIcon } from '@alfalab/icons-glyph/ExclamationCircleMIcon';\n\nimport { StepIndicator, StepIndicatorProps } from '../step-indicator';\n\nimport styles from './index.module.css';\n\nexport type StepProps = {\n    /**\n     * Название шага\n     */\n    children: ReactNode;\n\n    /**\n     * Номер шага\n     */\n    stepNumber: number;\n\n    /**\n     * Маркер того, что текущий шаг выбран\n     */\n    isSelected: boolean;\n\n    /**\n     * Маркер того, что текущий шаг доступен для клика\n     */\n    disabled: boolean;\n\n    /**\n     * Управление отображением номера шага\n     */\n    ordered?: boolean;\n\n    /**\n     * Включение / отключение интерактивности шагов\n     */\n    interactive?: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Positive\"\n     */\n    isPositive: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Error\"\n     */\n    isError: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Warning\"\n     */\n    isWarning: boolean;\n\n    /**\n     * Маркер того, что текущий шаг находится в состоянии \"Waiting\"\n     */\n    isWaiting: boolean;\n\n    /**\n     * Маркер того, что текущий шаг нужно пометить как завершенный\n     */\n    isStepCompleted: boolean;\n\n    /**\n     * Свойства кастомного индикатора текущего шага\n     */\n    customStepIndicator?: StepIndicatorProps | null;\n\n    /**\n     * Управление ориентацией компонента\n     * @default false\n     */\n    isVerticalAlign?: boolean;\n\n    /**\n     * Указывает, является ли текущий шаг последним в списке\n     */\n    isNotLastStep?: boolean;\n\n    /**\n     * Обработчик нажатия на текущей шаг\n     * @param stepNumber - номер шага\n     */\n    onClick: (stepNumber: number) => void;\n};\n\nexport const Step: React.FC<StepProps> = ({\n    children,\n    stepNumber,\n    isSelected,\n    disabled,\n    ordered,\n    isPositive,\n    isError,\n    isWarning,\n    isWaiting,\n    customStepIndicator,\n    isStepCompleted,\n    onClick,\n    interactive,\n    isVerticalAlign,\n    isNotLastStep,\n}) => {\n    const stepRef = useRef<HTMLDivElement>(null);\n\n    const [focused] = useFocus(stepRef, 'keyboard');\n\n    const handleButtonClick = () => {\n        if (!disabled && interactive && onClick) {\n            onClick(stepNumber);\n        }\n    };\n\n    const handleTextClick = (e: React.MouseEvent<HTMLElement>) => {\n        if (!interactive) {\n            e.stopPropagation();\n        }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n        if (event.key === 'Enter') {\n            handleButtonClick();\n        }\n    };\n\n    const getStepIndicator = () => {\n        if (customStepIndicator) {\n            return <StepIndicator {...customStepIndicator} />;\n        }\n        if (isError) {\n            return <StepIndicator iconColor='negative' content={<ExclamationCircleMIcon />} />;\n        }\n        if (isWarning) {\n            return <StepIndicator iconColor='attention' content={<ExclamationCircleMIcon />} />;\n        }\n        if (isWaiting) {\n            return <StepIndicator iconColor='secondary' content={<ClockMIcon />} />;\n        }\n        if (isPositive) {\n            return <StepIndicator iconColor='positive' content={<CheckmarkCircleMIcon />} />;\n        }\n        if (isStepCompleted) {\n            return (\n                <StepIndicator\n                    iconColor='positive'\n                    content={<CheckmarkCircleMIcon />}\n                    className={styles.completedIndicator}\n                />\n            );\n        }\n        if (!ordered) {\n            return (\n                <div className={styles.checkbox}>\n                    <span className={styles.dot} />\n                </div>\n            );\n        }\n\n        return stepNumber;\n    };\n\n    const renderDash = () => (\n        <div\n            className={cn(styles.dash, {\n                [styles.vertical]: isVerticalAlign,\n                [styles.completed]: isStepCompleted,\n            })}\n        />\n    );\n\n    return (\n        <div\n            role='button'\n            tabIndex={0}\n            ref={stepRef}\n            className={cn(styles.step, {\n                [styles.completed]: isStepCompleted,\n                [styles.error]: isError,\n                [styles.selected]: isSelected,\n                [styles.disabled]: disabled,\n                [styles.focused]: focused,\n                [styles.vertical]: isVerticalAlign,\n                [styles.interactive]: interactive,\n            })}\n            onClick={handleButtonClick}\n            onKeyDown={handleKeyDown}\n        >\n            <div\n                className={cn(styles.indicator, {\n                    [styles.vertical]: isVerticalAlign,\n                    [styles.interactive]: interactive,\n                })}\n            >\n                <div\n                    className={cn(styles.option, {\n                        [styles.unordered]: !ordered,\n                        [styles.vertical]: isVerticalAlign,\n                        [styles.error]: isError,\n                    })}\n                >\n                    {getStepIndicator()}\n                </div>\n                {isNotLastStep && isVerticalAlign && renderDash()}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n            <div\n                className={cn(styles.text, {\n                    [styles.interactive]: interactive,\n                })}\n                onClick={handleTextClick}\n            >\n                {children}\n            </div>\n            {isNotLastStep && !isVerticalAlign && renderDash()}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_P_Kyl\",\"vertical\":\"vertical_P9t_o\"};","import React, { ReactNode, useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Step } from './components/step';\nimport { StepIndicatorProps } from './components/step-indicator';\n\nimport styles from './index.module.css';\n\nexport type StepsProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children: ReactNode;\n\n    /**\n     * Активный шаг, указанный по умолчанию\n     * @default 1\n     */\n    defaultActiveStep?: number;\n\n    /**\n     * Активный шаг\n     */\n    activeStep?: number;\n\n    /**\n     * Управление возможностью отключения пометки пройденного шага\n     * @default true\n     */\n    isMarkCompletedSteps?: boolean;\n\n    /**\n     * Управление ориентацией компонента\n     * @default false\n     */\n    isVerticalAlign?: boolean;\n\n    /**\n     * Управление отображением номера шага\n     */\n    ordered?: boolean;\n\n    /**\n     * Включение / отключение интерактивности шагов\n     */\n    interactive?: boolean;\n\n    /**\n     * Кастомный метод для управления состоянием disabled шага и\n     * возможностью перехода на этот шаг\n     * @param stepNumber - номер шага\n     * @return Флаг состояния disabled\n     */\n    checkIsStepDisabled?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага error\n     * @param stepNumber - номер шага\n     * @return Флаг состояния error\n     */\n    checkIsStepError?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага warning\n     * @param stepNumber - номер шага\n     * @return Флаг состояния warning\n     */\n    checkIsStepWarning?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага waiting\n     * @param stepNumber - номер шага\n     * @return Флаг состояния waiting\n     */\n    checkIsStepWaiting?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для управления состоянием шага positive\n     * @param stepNumber - номер шага\n     * @return Флаг состояния positive\n     */\n    checkIsStepPositive?: (stepNumber: number) => boolean;\n\n    /**\n     * Кастомный метод для установки кастомного индикатора шага\n     * @param stepNumber - номер шага\n     * @return Объект StepIndicatorProps { className, content, iconColor } или null\n     */\n    checkIsStepCustom?: (stepNumber: number) => StepIndicatorProps | null;\n\n    /**\n     * Обработчик клика на шаг\n     * @param stepNumber - номер активного шага\n     */\n    onChange?: (stepNumber: number) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Steps: React.FC<StepsProps> = ({\n    className,\n    children,\n    defaultActiveStep = 1,\n    activeStep: activeStepProp,\n    isMarkCompletedSteps = true,\n    isVerticalAlign = false,\n    ordered = true,\n    interactive = true,\n    checkIsStepDisabled,\n    checkIsStepError,\n    checkIsStepWarning,\n    checkIsStepWaiting,\n    checkIsStepPositive,\n    checkIsStepCustom,\n    onChange,\n    dataTestId,\n}) => {\n    const [activeStep, setActiveStep] = useState(activeStepProp || defaultActiveStep);\n\n    const stepsLength = React.Children.count(children);\n\n    useEffect(() => {\n        if (activeStepProp) {\n            setActiveStep(activeStepProp);\n        }\n    }, [activeStepProp]);\n\n    const handleStepClick = (stepNumber: number) => {\n        setActiveStep(stepNumber);\n\n        if (onChange) {\n            onChange(stepNumber);\n        }\n    };\n\n    if (!stepsLength) return null;\n\n    return (\n        <div\n            className={cn(className, styles.component, {\n                [styles.vertical]: isVerticalAlign,\n            })}\n            data-test-id={dataTestId}\n        >\n            {React.Children.map(children, (step, index) => {\n                const stepNumber = index + 1;\n                const isSelected = stepNumber === activeStep;\n                const isStepCompleted = isMarkCompletedSteps && stepNumber < activeStep;\n                const disabled = checkIsStepDisabled ? checkIsStepDisabled(stepNumber) : false;\n                const isPositive = checkIsStepPositive ? checkIsStepPositive(stepNumber) : false;\n                const isError = checkIsStepError ? checkIsStepError(stepNumber) : false;\n                const isWarning = checkIsStepWarning ? checkIsStepWarning(stepNumber) : false;\n                const isWaiting = checkIsStepWaiting ? checkIsStepWaiting(stepNumber) : false;\n                const customStepIndicator = checkIsStepCustom && checkIsStepCustom(stepNumber);\n                const isNotLastStep = stepsLength !== stepNumber;\n                const isInteractive = !disabled && interactive;\n\n                return (\n                    <Step\n                        stepNumber={stepNumber}\n                        isSelected={isSelected}\n                        isStepCompleted={isStepCompleted}\n                        disabled={disabled}\n                        isPositive={isPositive}\n                        isError={isError}\n                        isWarning={isWarning}\n                        isWaiting={isWaiting}\n                        customStepIndicator={customStepIndicator}\n                        onClick={handleStepClick}\n                        ordered={ordered}\n                        interactive={isInteractive}\n                        isVerticalAlign={isVerticalAlign}\n                        isNotLastStep={isNotLastStep}\n                        key={stepNumber}\n                    >\n                        {step}\n                    </Step>\n                );\n            })}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_pfD4m\",\"start\":\"start_PRUrm\",\"center\":\"center_eGtVf\",\"addons\":\"addons_vsnX9\",\"block\":\"block_uHzwy\",\"switch\":\"switch_x7ZJ_\",\"content\":\"content_Zh5S1\",\"label\":\"label_QNf6x\",\"hint\":\"hint_MTh34\",\"reversed\":\"reversed_W0QdI\",\"checked\":\"checked_WSmiQ\",\"disabled\":\"disabled_Hu2Ox\",\"inactive\":\"inactive_j9Caf\",\"focused\":\"focused_G6PxT\"};","import React, { ChangeEvent, forwardRef, InputHTMLAttributes, ReactNode, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\ntype Align = 'start' | 'center';\n\nexport type SwitchProps = Omit<\n    InputHTMLAttributes<HTMLInputElement>,\n    'type' | 'hint' | 'onChange' | 'disabled' | 'enterKeyHint'\n> & {\n    /**\n     * Управление состоянием вкл/выкл компонента\n     */\n    checked?: boolean;\n\n    /**\n     * Текст подписи к переключателю\n     */\n    label?: ReactNode;\n\n    /**\n     * Текст подсказки снизу\n     */\n    hint?: ReactNode;\n\n    /**\n     * Переключатель будет отрисован справа от контента\n     */\n    reversed?: boolean;\n\n    /**\n     * Выравнивание\n     */\n    align?: Align;\n\n    /**\n     * Дополнительный слот\n     */\n    addons?: React.ReactNode;\n\n    /**\n     * Растягивать ли компонент на всю ширину\n     */\n    block?: boolean;\n\n    /**\n     * Управление состоянием включен / выключен\n     */\n    disabled?: boolean;\n\n    /**\n     * Управление состоянием активен / неактивен\n     */\n    inactive?: boolean;\n\n    /**\n     * Обработчик переключения компонента\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: {\n            checked: boolean;\n            name: InputHTMLAttributes<HTMLInputElement>['name'];\n        },\n    ) => void;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n};\n\nexport const Switch = forwardRef<HTMLLabelElement, SwitchProps>(\n    (\n        {\n            reversed = false,\n            checked = false,\n            align = 'start',\n            addons,\n            block,\n            disabled,\n            inactive,\n            label,\n            hint,\n            name,\n            value,\n            className,\n            onChange,\n            dataTestId,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const labelRef = useRef<HTMLLabelElement>(null);\n\n        const [focused] = useFocus(labelRef, 'keyboard');\n\n        const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n            if (onChange) {\n                onChange(e, { checked: e.target.checked, name });\n            }\n        };\n\n        return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label\n                className={cn(styles.component, styles[align], className, {\n                    [styles.disabled]: disabled,\n                    [styles.inactive]: inactive,\n                    [styles.checked]: checked,\n                    [styles.reversed]: reversed,\n                    [styles.focused]: focused,\n                    [styles.block]: block,\n                })}\n                ref={mergeRefs([labelRef, ref])}\n            >\n                <input\n                    type='checkbox'\n                    onChange={handleChange}\n                    disabled={disabled || inactive}\n                    checked={checked}\n                    name={name}\n                    value={value}\n                    data-test-id={dataTestId}\n                    {...restProps}\n                />\n\n                <span className={styles.switch} />\n\n                {(label || hint) && (\n                    <span className={styles.content}>\n                        {label && <span className={styles.label}>{label}</span>}\n                        {hint && <span className={styles.hint}>{hint}</span>}\n                    </span>\n                )}\n\n                {addons && <span className={styles.addons}>{addons}</span>}\n            </label>\n        );\n    },\n);\n","import React from 'react';\n\nimport type { TSystemMessageContext } from './types';\n\nexport const SystemMessageContext = React.createContext<TSystemMessageContext>({\n    view: 'desktop',\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_BPYsV\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_OohQz\",\"fullHeight\":\"fullHeight_YT8n_\",\"first\":\"first__tjHb\",\"last\":\"last_VQaCW\",\"controls\":\"controls_A2IjM\",\"both\":\"both_WBihv\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_QdqpL\"};","import React, { isValidElement, useMemo } from 'react';\nimport cn from 'classnames';\n\nimport { SystemMessageContext } from './Context';\nimport type { SystemMessageBaseProps } from './types';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\nconst isControlsElement = (obj: JSX.Element) =>\n    typeof obj === 'object' && obj.type.displayName === 'Controls';\n\nexport const SystemMessage: React.FC<SystemMessageBaseProps> = ({\n    view,\n    dataTestId,\n    children,\n    fullHeight,\n    className,\n}) => {\n    const contextValue = useMemo(\n        () => ({ dataTestId, view, fullHeight }),\n        [view, dataTestId, fullHeight],\n    );\n\n    const renderChildrenWithFullHeight = () => {\n        const renderCloned = (child: JSX.Element, extraClassName: string) =>\n            React.cloneElement(child, {\n                ...child.props,\n                className: cn(child.props.className, extraClassName),\n            });\n\n        const childrenArray = React.Children.toArray(children);\n        const childrenCount = childrenArray.length;\n\n        return childrenArray.map((child, idx) => {\n            const isFirstElement = idx === 0;\n            const isLastElement = idx + 1 === childrenCount;\n\n            if (isFirstElement && isValidElement(child)) {\n                if (isLastElement) {\n                    return renderCloned(child, styles.both);\n                }\n\n                return renderCloned(child, styles.first);\n            }\n\n            if (isLastElement && isValidElement(child)) {\n                return renderCloned(\n                    child,\n                    isControlsElement(child) ? styles.controls : styles.last,\n                );\n            }\n\n            return child;\n        });\n    };\n\n    return (\n        <SystemMessageContext.Provider value={contextValue}>\n            <div\n                data-test-id={dataTestId}\n                className={cn(styles.component, className, {\n                    [mobileStyles.component]: view === 'mobile',\n                    [desktopStyles.component]: view === 'desktop',\n                    [styles.fullHeight]: fullHeight,\n                })}\n            >\n                {fullHeight ? renderChildrenWithFullHeight() : children}\n            </div>\n        </SystemMessageContext.Provider>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_fsBck\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport styles from './index.module.css';\n\ntype CaptionProps = {\n    /**\n     * Дополнительно имя класса\n     */\n    className?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children: React.ReactNode;\n};\n\nexport const Caption: React.FC<CaptionProps> = ({ className, children }) => {\n    const { dataTestId } = useContext(SystemMessageContext);\n\n    return (\n        <span\n            className={cn(styles.component, className)}\n            data-test-id={getDataTestId(dataTestId, 'caption')}\n        >\n            {children}\n        </span>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_TUMJX\",\"multiple\":\"multiple_ippcY\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_i2SCZ\",\"column\":\"column_HOcWi\",\"row\":\"row_E3cen\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ROL6Y\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\ntype ControlsProps = {\n    /**\n     * Расположение элементов футера\n     */\n    direction?: 'column' | 'row';\n\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children: React.ReactNode;\n};\n\nexport const Controls: React.FC<ControlsProps> = ({\n    direction: directionProp,\n    children,\n    className,\n}) => {\n    const { dataTestId, view } = useContext(SystemMessageContext);\n    const defaultDirection = view === 'mobile' ? 'column' : 'row';\n    const direction = directionProp || defaultDirection;\n    const isMultipleElements = React.Children.toArray(children).length > 1;\n    const isColumn = isMultipleElements && direction === 'column' && view === 'mobile';\n\n    return (\n        <div\n            className={cn(styles.component, className, {\n                [styles.row]: !isColumn,\n                [styles.column]: isColumn,\n                [desktopStyles.component]: view === 'desktop',\n                [desktopStyles.multiple]: isMultipleElements,\n                [mobileStyles.component]: view === 'mobile',\n            })}\n            data-test-id={getDataTestId(dataTestId, 'controls')}\n        >\n            {children}\n        </div>\n    );\n};\n\nControls.displayName = 'Controls';\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ksI8k\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport styles from './index.module.css';\n\ntype GraphicProps = {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Элемент с иконкой\n     */\n    children: React.ReactNode;\n};\n\nexport const Graphic: React.FC<GraphicProps> = ({ children, className }) => {\n    const { dataTestId } = useContext(SystemMessageContext);\n\n    return (\n        <div\n            className={cn(styles.component, className)}\n            data-test-id={getDataTestId(dataTestId, 'graphic')}\n        >\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_y8iGg\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport styles from './index.module.css';\n\ntype SubtitleProps = {\n    /**\n     * Дополнительно имя класса\n     */\n    className?: string;\n\n    /**\n     * Заголовок\n     */\n    children: React.ReactNode;\n};\n\nexport const Subtitle: React.FC<SubtitleProps> = ({ className, children }) => {\n    const { dataTestId } = useContext(SystemMessageContext);\n\n    return (\n        <span\n            className={cn(styles.component, className)}\n            data-test-id={getDataTestId(dataTestId, 'subtitle')}\n        >\n            {children}\n        </span>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ogDpw\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_arnYM\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_B7xT6\"};","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { getDataTestId } from '../../../../utils';\nimport { SystemMessageContext } from '../../Context';\n\nimport desktopStyles from './desktop.module.css';\nimport styles from './index.module.css';\nimport mobileStyles from './mobile.module.css';\n\ntype TitleProps = {\n    /**\n     * Дополнительно имя класса\n     */\n    className?: string;\n\n    /**\n     * HTML тег\n     * @default h3\n     */\n    tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div';\n\n    /**\n     * Заголовок\n     */\n    children: React.ReactNode;\n};\n\nexport const Title: React.FC<TitleProps> = ({ tag = 'h3', className, children }) => {\n    const { dataTestId, view } = useContext(SystemMessageContext);\n\n    const Component = tag;\n\n    return (\n        <Component\n            className={cn(styles.component, className, {\n                [desktopStyles.component]: view === 'desktop',\n                [mobileStyles.component]: view === 'mobile',\n            })}\n            data-test-id={getDataTestId(dataTestId, 'title')}\n        >\n            {children}\n        </Component>\n    );\n};\n","import React from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { isClient } from '../../utils';\n\nimport { SystemMessage } from './Component';\nimport type { SystemMessageResponsiveProps } from './types';\nimport { createCompound } from './utils';\n\nconst SystemMessageResponsiveComponent: React.FC<SystemMessageResponsiveProps> = ({\n    breakpoint = 1024,\n    defaultMatchMediaValue,\n    children,\n    ...restProps\n}) => {\n    const query = `(min-width: ${breakpoint}px)`;\n    const getDefaultValue = () => (isClient() ? window.matchMedia(query).matches : false);\n\n    const [isDesktop] = useMatchMedia(query, defaultMatchMediaValue ?? getDefaultValue);\n\n    return (\n        <SystemMessage {...restProps} view={isDesktop ? 'desktop' : 'mobile'}>\n            {children}\n        </SystemMessage>\n    );\n};\n\nexport const SystemMessageResponsive = createCompound(SystemMessageResponsiveComponent);\n","import { Caption } from './components/caption';\nimport { Controls } from './components/controls';\nimport { Graphic } from './components/graphic';\nimport { Subtitle } from './components/subtitle';\nimport { Title } from './components/title';\n\nexport function createCompound<T>(functionComponent: T) {\n    return Object.assign(functionComponent, {\n        Graphic,\n        Title,\n        Subtitle,\n        Caption,\n        Controls,\n    });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rectangular\":\"rectangular_j4fFI\",\"xxs\":\"xxs_hETru\",\"xs\":\"xs_p53BS\",\"s\":\"s_iA9gV\",\"m\":\"m_Pfxks\",\"l\":\"l_JOcMx\",\"xl\":\"xl_sJJOM\"};","import React, { forwardRef } from 'react';\n\nimport { BaseTag, BaseTagProps } from './components/base-tag';\n\nimport defaultColors from './default.desktop.module.css';\nimport styles from './desktop.module.css';\nimport invertedColors from './inverted.desktop.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type TagDesktopProps = Omit<BaseTagProps, 'styles'>;\n\nexport const TagDesktop = forwardRef<HTMLButtonElement, TagDesktopProps>((restProps, ref) => (\n    <BaseTag {...restProps} colorStylesMap={colorStyles} ref={ref} styles={styles} />\n));\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_fwUYW\",\"filled\":\"filled_crNll\",\"checked\":\"checked_H8Abh\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_SCXAD\",\"filled\":\"filled_KZRCu\",\"checked\":\"checked_MFuzM\"};","// extracted by mini-css-extract-plugin\nexport default {\"rectangular\":\"rectangular_LtJGW\",\"xxs\":\"xxs_B347f\",\"xs\":\"xs_LRv7y\",\"s\":\"s_gG_Tq\",\"m\":\"m_G5VZ2\",\"l\":\"l_d6ck4\",\"xl\":\"xl_XSvlE\"};","import React, { forwardRef } from 'react';\n\nimport { BaseTag, BaseTagProps } from './components/base-tag';\n\nimport defaultColors from './default.mobile.module.css';\nimport invertedColors from './inverted.mobile.module.css';\nimport styles from './mobile.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type TagMobileProps = Omit<BaseTagProps, 'styles'>;\n\nexport const TagMobile = forwardRef<HTMLButtonElement, TagMobileProps>((restProps, ref) => (\n    <BaseTag {...restProps} colorStylesMap={colorStyles} ref={ref} styles={styles} />\n));\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_h1u6a\",\"filled\":\"filled_TjpgA\",\"checked\":\"checked_vlxp_\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_sUzBF\",\"filled\":\"filled_d4Xnv\",\"checked\":\"checked_UKTf4\"};","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseTagProps } from './components/base-tag';\nimport { TagDesktop } from './Component.desktop';\nimport { TagMobile } from './Component.mobile';\n\nexport type TagProps = Omit<BaseTagProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const Tag = forwardRef<HTMLButtonElement, TagProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? TagDesktop : TagMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qfp9a\",\"focused\":\"focused_WajRT\",\"addons\":\"addons_XX0xo\",\"s\":\"s_oQrQK\",\"m\":\"m_bo2dS\",\"l\":\"l_YfSfC\",\"xl\":\"xl_EpPwz\",\"xxs\":\"xxs_dvBxX\",\"xs\":\"xs_hKHcY\",\"withRightAddons\":\"withRightAddons_hbK9G\",\"withLeftAddons\":\"withLeftAddons_sptKx\",\"rounded\":\"rounded_cJEFT\"};","import React, { ButtonHTMLAttributes, forwardRef, ReactNode, RefObject, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { useFocus } from '@alfalab/hooks';\n\nimport defaultColors from './default.module.css';\nimport commonStyles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorCommonStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type StyleColors = {\n    default: {\n        [key: string]: string;\n    };\n    inverted: {\n        [key: string]: string;\n    };\n};\n\nexport type NativeProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type BaseTagProps = Omit<NativeProps, 'onClick'> & {\n    /**\n     * Отображение кнопки в отмеченном (зажатом) состоянии\n     */\n    checked?: boolean;\n\n    /**\n     * Размер компонента\n     */\n    size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl';\n\n    /**\n     * Дочерние элементы.\n     */\n    children?: ReactNode;\n\n    /**\n     * Дополнительный класс для обёртки children\n     */\n    childrenClassName?: string;\n\n    /**\n     * Слот слева\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Слот справа\n     */\n    rightAddons?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Обработчик нажатия\n     */\n    onClick?: (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        payload: {\n            checked: boolean;\n            name?: string;\n        },\n    ) => void;\n\n    /**\n     * ref на children\n     */\n\n    childrenRef?: RefObject<HTMLSpanElement>;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * @deprecated данный проп больше не используется, временно оставлен для обратной совместимости\n     * Используйте props shape и view\n     * Вариант тега\n     */\n    variant?: 'default' | 'alt';\n\n    /**\n     * Форма тега\n     */\n    shape?: 'rounded' | 'rectangular';\n\n    /**\n     * Стиль тега\n     */\n    view?: 'outlined' | 'filled';\n\n    /**\n     * Основные стили компонента.\n     */\n    styles?: { [key: string]: string };\n\n    /**\n     * Стили компонента для default и inverted режима.\n     */\n    colorStylesMap?: StyleColors;\n};\n\nexport const BaseTag = forwardRef<HTMLButtonElement, BaseTagProps>(\n    (\n        {\n            rightAddons,\n            leftAddons,\n            children,\n            size = 's',\n            checked,\n            className,\n            dataTestId,\n            name,\n            colors = 'default',\n            onClick,\n            variant = 'default',\n            shape,\n            view = 'outlined',\n            childrenClassName,\n            childrenRef,\n            styles = {},\n            colorStylesMap = { default: {}, inverted: {} },\n            ...restProps\n        },\n        ref,\n    ) => {\n        const colorStyles = colorStylesMap[colors];\n\n        const tagRef = useRef<HTMLButtonElement>(null);\n\n        const [focused] = useFocus(tagRef, 'keyboard');\n\n        const variantClassName = variant === 'default' ? 'rounded' : 'rectangular';\n\n        const shapeClassName = shape || variantClassName;\n\n        const tagProps = {\n            className: cn(\n                commonStyles.component,\n                colorCommonStyles[colors].component,\n                colorStyles.component,\n                commonStyles[size],\n                styles[size],\n                colorCommonStyles[colors][view],\n                {\n                    [commonStyles.checked]: checked,\n                    [commonStyles[shapeClassName]]: Boolean(commonStyles[shapeClassName]),\n                    [styles[shapeClassName]]: Boolean(styles[shapeClassName]),\n                    [colorCommonStyles[colors].checked]: checked,\n                    [colorStyles.checked]: checked && Boolean(colorStyles.checked),\n                    [colorStyles[view]]: Boolean(colorStyles[view]),\n                    [commonStyles.focused]: focused,\n                    [commonStyles.withRightAddons]: Boolean(rightAddons),\n                    [commonStyles.withLeftAddons]: Boolean(leftAddons),\n                },\n                className,\n            ),\n            'data-test-id': dataTestId,\n        };\n\n        const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (onClick) {\n                onClick(event, { name, checked: !checked });\n            }\n        };\n\n        return (\n            <button\n                ref={mergeRefs([tagRef, ref])}\n                type='button'\n                onClick={handleClick}\n                {...tagProps}\n                {...restProps}\n            >\n                {leftAddons ? <span className={commonStyles.addons}>{leftAddons}</span> : null}\n\n                {children && (\n                    <span ref={childrenRef} className={childrenClassName}>\n                        {children}\n                    </span>\n                )}\n\n                {rightAddons ? <span className={commonStyles.addons}>{rightAddons}</span> : null}\n            </button>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ghs6Q\",\"outlined\":\"outlined_AHOjc\",\"filled\":\"filled_Dbz3r\",\"checked\":\"checked_JhDv7\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_EUknE\",\"outlined\":\"outlined_vnVPN\",\"filled\":\"filled__nXoP\",\"checked\":\"checked_pyw1N\"};","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"textarea_eFnZe\",\"customScrollbar\":\"customScrollbar_tmwi2\",\"hasInnerLabel\":\"hasInnerLabel_cVFCc\",\"pseudoTextarea\":\"pseudoTextarea_QqcK5\",\"overflow\":\"overflow_PftLL\",\"nativeScrollbar\":\"nativeScrollbar_JnrBu\",\"sub\":\"sub_rdjjJ\",\"focusVisible\":\"focusVisible_hjd3a\",\"filled\":\"filled_a1dRJ\",\"s\":\"s_LtGs9\",\"m\":\"m_gz3uo\",\"l\":\"l_YuLpX\",\"xl\":\"xl_IfJfI\",\"wrapper\":\"wrapper_xCVU1\",\"resizeVertical\":\"resizeVertical_Wl6Qu\"};","import React, { forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { TextareaIncomeProps } from '../typings';\n\nimport styles from '../index.module.css';\n\ntype PseudoTextAreaProps = {\n    /**\n     * Дополнительный класс компонента\n     */\n    pseudoTextareaClassName?: string;\n    /**\n     * Значение PseudoTextArea, разделяется на 2 части по maxLength\n     */\n    value: string;\n    /**\n     * Максимальное количество символов, символы свыше maxLength будут выделены\n     */\n    maxLength: number;\n} & Pick<TextareaIncomeProps, 'size'>;\n\nexport const PseudoTextArea = forwardRef<HTMLDivElement, PseudoTextAreaProps>(\n    ({ size = 's', pseudoTextareaClassName, maxLength, value }, ref) => (\n        <div\n            className={cn(styles.pseudoTextarea, styles[size], pseudoTextareaClassName)}\n            ref={ref}\n            hidden={true}\n        >\n            <span>{value.slice(0, maxLength)}</span>\n            <span className={cn(styles.overflow)}>{value.slice(maxLength)}</span>\n            {/* Перенос строки нужен для правильной позиции */}\n            <br />\n        </div>\n    ),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_EIE3e\",\"hasInnerLabel\":\"hasInnerLabel_fe_J3\",\"clearIcon\":\"clearIcon_Kt2sC\",\"textarea\":\"textarea_gaLkG\",\"hint\":\"hint_buzk6\",\"error\":\"error_VvdRX\"};","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport cn from 'classnames';\n\nimport { FormControl } from '@alfalab/core-components-form-control';\nimport { useFocus, useMedia } from '@alfalab/hooks';\n\nimport { PseudoTextArea } from './components';\nimport { TextareaProps } from './typings';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport const getDefaultCounterText = (textLength: number, maxLength = 0): string =>\n    `${textLength}/${maxLength} символов`;\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n    (\n        {\n            autoComplete = 'on',\n            autosize = true,\n            size = 's',\n            colors = 'default',\n            block = false,\n            bottomAddons,\n            fieldClassName,\n            className,\n            dataTestId,\n            disabled,\n            error,\n            hint,\n            textareaClassName,\n            label,\n            labelView = 'inner',\n            leftAddons,\n            onFocus,\n            onBlur,\n            onChange,\n            onHeightChange,\n            rightAddons,\n            maxRows,\n            minRows,\n            maxHeight,\n            resize = 'none',\n            value,\n            defaultValue,\n            rows = autosize ? 1 : 3,\n            showCounter = false,\n            getCounterText = getDefaultCounterText,\n            maxLength,\n            allowOverflow = true,\n            nativeScrollbar: nativeScrollbarProp,\n            breakpoint,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const uncontrolled = value === undefined;\n        let [nativeScrollbar] = useMedia<boolean>([[true, '(max-width: 1023px)']], false);\n\n        nativeScrollbar = Boolean(nativeScrollbarProp ?? nativeScrollbar);\n\n        const textareaRef = useRef<HTMLTextAreaElement>(null);\n        const pseudoTextareaRef = useRef<HTMLDivElement>(null);\n\n        const [focused, setFocused] = useState(false);\n        const [stateValue, setStateValue] = useState(defaultValue || '');\n        const [scrollPosition, setScrollPosition] = useState(0);\n\n        const [focusVisible] = useFocus(textareaRef, 'keyboard');\n\n        const filled = Boolean(uncontrolled ? stateValue : value);\n        const hasInnerLabel = label && labelView === 'inner';\n\n        const hasOverflow = Boolean(\n            maxLength && allowOverflow && (value?.slice(maxLength) || stateValue.slice(maxLength)),\n        );\n\n        useEffect(() => {\n            const pseudoNode = pseudoTextareaRef.current;\n\n            if (pseudoNode) {\n                pseudoNode.scrollTop = scrollPosition;\n            }\n        }, [scrollPosition, stateValue]);\n\n        // Хак, так как react-textarea-autosize перестал поддерживать maxHeight\n        useEffect(() => {\n            if (autosize && maxHeight && textareaRef.current && textareaRef.current.style) {\n                textareaRef.current.style.maxHeight = `${maxHeight}px`;\n            }\n        }, [autosize, maxHeight]);\n\n        const handleTextareaFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n            setFocused(true);\n\n            if (onFocus) {\n                onFocus(event);\n            }\n        };\n\n        const handleTextareaBlur = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n            setFocused(false);\n\n            if (onBlur) {\n                onBlur(event);\n            }\n        };\n\n        const handleTextareaChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n            const {\n                target: { value: newValue },\n            } = event;\n\n            if (onChange) {\n                onChange(event, { value: newValue });\n            }\n\n            if (uncontrolled) {\n                setStateValue(newValue);\n            }\n        };\n\n        const handleTeaxtareaScroll = (event: React.UIEvent) => {\n            if (maxLength) {\n                const val = (event.target as HTMLElement).scrollTop;\n\n                setScrollPosition(val);\n            }\n        };\n\n        const getValueLength = (): number => {\n            if (uncontrolled) {\n                return stateValue.length;\n            }\n\n            return (value as string).length;\n        };\n\n        const textareaClassNameCalc = cn(\n            styles.textarea,\n            colorStyles[colors].textarea,\n            styles[size],\n            {\n                [styles.customScrollbar]: !nativeScrollbar,\n                [styles.hasInnerLabel]: hasInnerLabel,\n                [colorStyles[colors].hasInnerLabel]: hasInnerLabel,\n                [styles.filled]: filled,\n            },\n            textareaClassName,\n        );\n\n        const textareaProps = {\n            ...restProps,\n            className: textareaClassNameCalc,\n            autoComplete,\n            disabled,\n            maxLength: allowOverflow ? undefined : maxLength,\n            onBlur: handleTextareaBlur,\n            onFocus: handleTextareaFocus,\n            onChange: handleTextareaChange,\n            value: uncontrolled ? stateValue : value,\n            rows,\n            ref: mergeRefs([ref, textareaRef]),\n            'data-test-id': dataTestId,\n            onScroll: handleTeaxtareaScroll,\n        };\n\n        const getBottomAddons = () => {\n            const counterIsVisible = Boolean(maxLength && showCounter);\n\n            return (\n                <React.Fragment>\n                    {counterIsVisible && (\n                        <span\n                            className={cn(styles.sub, {\n                                [colorStyles[colors].error]: hasOverflow,\n                                [colorStyles[colors].hint]: !hasOverflow,\n                            })}\n                        >\n                            {getCounterText(getValueLength(), maxLength)}\n                        </span>\n                    )}\n                    {bottomAddons}\n                </React.Fragment>\n            );\n        };\n\n        return (\n            <FormControl\n                className={cn(className)}\n                fieldClassName={cn(fieldClassName, {\n                    [styles.focusVisible]: focusVisible,\n                })}\n                inputWrapperClassName={cn(styles.wrapper, styles[size], {\n                    [styles.hasInnerLabel]: hasInnerLabel,\n                    [styles.resizeVertical]: resize === 'vertical',\n                })}\n                size={size}\n                colors={colors}\n                block={block}\n                disabled={disabled}\n                filled={filled || focused}\n                focused={focused}\n                error={error}\n                label={label}\n                labelView={labelView}\n                hint={hint}\n                leftAddons={leftAddons}\n                rightAddons={rightAddons}\n                bottomAddons={getBottomAddons()}\n                breakpoint={breakpoint}\n            >\n                <React.Fragment>\n                    {hasOverflow && (\n                        <PseudoTextArea\n                            value={value ?? stateValue}\n                            size={size}\n                            maxLength={maxLength as number}\n                            pseudoTextareaClassName={cn(textareaClassNameCalc, {\n                                [styles.nativeScrollbar]: nativeScrollbar,\n                            })}\n                            ref={pseudoTextareaRef}\n                        />\n                    )}\n                    {autosize ? (\n                        <TextareaAutosize\n                            {...textareaProps}\n                            maxRows={maxRows}\n                            minRows={minRows}\n                            onHeightChange={onHeightChange}\n                        />\n                    ) : (\n                        <textarea {...textareaProps} style={{ maxHeight }} />\n                    )}\n                </React.Fragment>\n            </FormControl>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_gbNCi\",\"hasInnerLabel\":\"hasInnerLabel_mi2vV\",\"clearIcon\":\"clearIcon_B6A9F\",\"textarea\":\"textarea_k6pha\",\"hint\":\"hint_eswZv\",\"error\":\"error_Opext\"};","/* eslint-disable no-useless-escape */\n\nimport React, { ChangeEvent, useState } from 'react';\n\nimport { Input, InputProps } from '@alfalab/core-components-input';\n\nimport { format, isCompleteTimeInput, isValidInputValue } from './utils';\n\nexport type TimeInputProps = Omit<InputProps, 'onChange'> & {\n    /**\n     * Обработчик изменения значения\n     */\n    onChange?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { hours: number; mins: number; value: string },\n    ) => void;\n\n    /**\n     * Обработчик окончания ввода\n     */\n    onComplete?: (\n        event: ChangeEvent<HTMLInputElement>,\n        payload: { hours: number; mins: number; value: string },\n    ) => void;\n};\n\nexport const TimeInput = React.forwardRef<HTMLInputElement, TimeInputProps>(\n    (\n        { defaultValue = '', value: propValue, onChange, onComplete, className, ...restProps },\n        ref,\n    ) => {\n        const [value, setValue] = useState(propValue || defaultValue);\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            const { value: newValue } = event.target;\n\n            if (newValue.length > 5) return;\n\n            // Позволяем вводить только цифры и двоеточия\n            if (/[^\\d:]/.test(newValue)) {\n                return;\n            }\n\n            const colon = newValue.match(/\\:/g);\n\n            // Не даем вводить больше, чем одно двоеточие\n            if (colon && colon.length > 1) {\n                return;\n            }\n\n            const formattedValue = format(newValue);\n\n            const formattedValueArr = formattedValue.split(':');\n            const hours = Number(formattedValueArr[0]);\n            const mins = Number(formattedValueArr[1]);\n\n            setValue(formattedValue);\n\n            if (onChange) onChange(event, { hours, mins, value: formattedValue });\n\n            if (isCompleteTimeInput(formattedValue)) {\n                const valid = formattedValue.length > 0 && isValidInputValue(formattedValue);\n\n                if (!valid) return;\n\n                if (onComplete) {\n                    onComplete(event, { hours, mins, value: formattedValue });\n                }\n            }\n        };\n\n        const handleClearClick = () => {\n            setValue('');\n        };\n\n        return (\n            <Input\n                {...restProps}\n                ref={ref}\n                value={value}\n                className={className}\n                onChange={handleChange}\n                onClear={handleClearClick}\n            />\n        );\n    },\n);\n","/* eslint-disable no-useless-escape */\n\nexport const DATE_MASK = [/\\d/, /\\d/, ':', /\\d/, /\\d/];\n\nexport const isCompleteTimeInput = (input: string) => input.length === DATE_MASK.length;\n\nexport const isValidTimeFormat = (value: string): boolean => {\n    const timeArr = value.split(':');\n    const hours = timeArr[0];\n    const mins = timeArr[1];\n\n    if (hours.length !== 2 || Number(hours) > 23) {\n        return false;\n    }\n\n    if (mins.length !== 2 || Number(mins) > 59) {\n        return false;\n    }\n\n    return true;\n};\n\nexport const isValidInputValue = (inputValue?: string) =>\n    !inputValue || (isCompleteTimeInput(inputValue) && isValidTimeFormat(inputValue));\n\nexport const format = (value: string): string =>\n    value\n        .replace(/^(\\d\\d)(\\d)$/, '$1:$2') // 123 => 12:3\n        .replace(/^(\\d\\d)(\\d\\d)/, '$1:$2') // 12345 => 12:45 (если вместо двоеточия введена цифра, она обратно заменяется на двоеточие)\n        .replace(/^(\\d):(\\d\\d)(\\d)/, '$1:$2') // 1:234 => 1:23\n        .replace(/\\:$/, ''); // 12: => 12 || : => void\n","// extracted by mini-css-extract-plugin\nexport default {\"closeButtonWrapper\":\"closeButtonWrapper_FOSph\"};","import React, { forwardRef } from 'react';\n\nimport { BaseToastPlate, BaseToastPlateProps } from './components/base-toast-plate';\n\nimport styles from './desktop.module.css';\n\nexport type ToastPlateDesktopProps = Omit<BaseToastPlateProps, 'styles' | 'bottomButtonPosition'>;\n\nexport const ToastPlateDesktop = forwardRef<HTMLDivElement, ToastPlateDesktopProps>(\n    (restProps, ref) => <BaseToastPlate {...restProps} styles={styles} ref={ref} />,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"closeButtonWrapper\":\"closeButtonWrapper_B_Ym_\"};","import React, { forwardRef } from 'react';\n\nimport { BaseToastPlate, BaseToastPlateProps } from './components/base-toast-plate';\n\nimport styles from './mobile.module.css';\n\nexport type ToastPlateMobileProps = Omit<BaseToastPlateProps, 'styles'>;\n\nexport const ToastPlateMobile = forwardRef<HTMLDivElement, ToastPlateMobileProps>(\n    (restProps, ref) => <BaseToastPlate {...restProps} styles={styles} ref={ref} />,\n);\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseToastPlateProps } from './components/base-toast-plate';\nimport { ToastPlateDesktop } from './Component.desktop';\nimport { ToastPlateMobile } from './Component.mobile';\n\nexport type ToastPlateProps = Omit<BaseToastPlateProps, 'styles'> & {\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const ToastPlate = forwardRef<HTMLDivElement, ToastPlateProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? ToastPlateDesktop : ToastPlateMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_OFU35\",\"hasCloser\":\"hasCloser_wiRYY\",\"wrapper\":\"wrapper_xnEQR\",\"contentWrapper\":\"contentWrapper_acsOw\",\"block\":\"block_c2VjK\",\"content\":\"content_L0uPS\",\"direction\":\"direction_v_wLO\",\"hasActionButton\":\"hasActionButton_WSoRZ\",\"actionSection\":\"actionSection_ORVLW\",\"bottomButton\":\"bottomButton_lmSW5\",\"leftAddons\":\"leftAddons_Gix4I\",\"contentTitle\":\"contentTitle_cmY2f\",\"title\":\"title_w8_cn\",\"children\":\"children_zMPlO\",\"closeButtonWrapper\":\"closeButtonWrapper_cmDnw\",\"closeButton\":\"closeButton_MVASk\"};","import React, { forwardRef, HTMLAttributes, MouseEvent, ReactNode, useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { Badge } from '@alfalab/core-components-badge';\nimport { IconButton } from '@alfalab/core-components-icon-button';\nimport { AlertCircleMIcon } from '@alfalab/icons-glyph/AlertCircleMIcon';\nimport { CheckmarkCircleMIcon } from '@alfalab/icons-glyph/CheckmarkCircleMIcon';\nimport { CrossCircleMIcon } from '@alfalab/icons-glyph/CrossCircleMIcon';\nimport { CrossMIcon } from '@alfalab/icons-glyph/CrossMIcon';\n\nimport defaultColors from './default.module.css';\nimport commonStyles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type BadgeIcons = {\n    negative: JSX.Element;\n    positive: JSX.Element;\n    attention: JSX.Element;\n};\n\nexport type BaseToastPlateProps = HTMLAttributes<HTMLDivElement> & {\n    /**\n     * Дополнительный класс\n     */\n    className?: string;\n\n    /**\n     * Дополнительный класс для заголовка\n     */\n    titleClassName?: string;\n\n    /**\n     * Дополнительный класс для контентной области\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для области с кнопкой действия\n     */\n    actionSectionClassName?: string;\n\n    /**\n     * Дочерние элементы\n     */\n    children?: ReactNode;\n\n    /**\n     * Заголовок компонента\n     */\n    title?: ReactNode;\n\n    /**\n     * Вид бэйджа\n     */\n    badge?: 'negative' | 'positive' | 'attention';\n\n    /**\n     * Слот слева, заменяет стандартную иконку\n     */\n    leftAddons?: ReactNode;\n\n    /**\n     * Кнопка действия\n     */\n    actionButton?: ReactNode;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Управляет отображением кнопки закрытия уведомления\n     */\n    hasCloser?: boolean;\n\n    /**\n     * Доп. класс враппера кнопки \"закрыть\".\n     */\n    closerWrapperClassName?: string;\n\n    /**\n     * Доп. класс кнопки \"закрыть\".\n     */\n    closerClassName?: string;\n\n    /**\n     * Растягивает компонент на ширину контейнера\n     */\n    block?: boolean;\n\n    /**\n     * Обработчик клика по крестику\n     */\n    onClose?: (event?: MouseEvent<HTMLButtonElement>) => void;\n\n    /**\n     * Функция, с помощью которой можно переопределить иконки в Badge\n     */\n    getBadgeIcons?: (icons: BadgeIcons) => BadgeIcons;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Положение кнопки под заголовком компонента\n     */\n    bottomButtonPosition?: boolean;\n\n    /**\n     * Основные стили компонента.\n     */\n    styles?: { [key: string]: string };\n};\n\nconst iconDefaultComponents = {\n    negative: <CrossCircleMIcon className={commonStyles.badgeIcon} />,\n    positive: <CheckmarkCircleMIcon className={commonStyles.badgeIcon} />,\n    attention: <AlertCircleMIcon className={commonStyles.badgeIcon} />,\n};\n\nexport const BaseToastPlate = forwardRef<HTMLDivElement, BaseToastPlateProps>(\n    (\n        {\n            dataTestId,\n            className,\n            titleClassName,\n            contentClassName,\n            actionSectionClassName,\n            hasCloser,\n            leftAddons,\n            badge,\n            title,\n            children,\n            actionButton,\n            block,\n            onClose,\n            getBadgeIcons,\n            colors = 'default',\n            closerWrapperClassName,\n            closerClassName,\n            bottomButtonPosition = false,\n            styles = {},\n            ...restProps\n        },\n        ref,\n    ) => {\n        const needRenderLeftAddons = Boolean(leftAddons || badge);\n\n        const iconComponents = getBadgeIcons\n            ? getBadgeIcons(iconDefaultComponents)\n            : iconDefaultComponents;\n\n        const handleClose = useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (onClose) {\n                    onClose(event);\n                }\n            },\n            [onClose],\n        );\n\n        return (\n            <div\n                className={cn(\n                    commonStyles.component,\n                    colorStyles[colors].component,\n                    { [commonStyles.block]: block, [commonStyles.hasCloser]: hasCloser },\n                    className,\n                )}\n                ref={ref}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                <div className={commonStyles.wrapper}>\n                    <div className={commonStyles.contentWrapper}>\n                        {needRenderLeftAddons && (\n                            <div className={commonStyles.leftAddons}>\n                                {leftAddons || (\n                                    <Badge\n                                        view='icon'\n                                        content={badge && iconComponents[badge]}\n                                        iconColor={badge}\n                                        className={commonStyles.badge}\n                                        dataTestId='badge'\n                                        visibleColorOutline={true}\n                                    />\n                                )}\n                            </div>\n                        )}\n                        <div\n                            className={cn(contentClassName, commonStyles.content, {\n                                [commonStyles.hasCloser]: hasCloser,\n                                [commonStyles.hasActionButton]: !!actionButton,\n                                [commonStyles.direction]: bottomButtonPosition,\n                            })}\n                        >\n                            <div className={commonStyles.contentTitle}>\n                                {title && (\n                                    <div className={cn(titleClassName, commonStyles.title)}>\n                                        {title}\n                                    </div>\n                                )}\n                                {children && (\n                                    <div className={commonStyles.children}>{children}</div>\n                                )}\n                            </div>\n\n                            {actionButton && (\n                                <div\n                                    className={cn(\n                                        actionSectionClassName,\n                                        commonStyles.actionSection,\n                                        {\n                                            [commonStyles.hasCloser]: hasCloser,\n                                            [commonStyles.bottomButton]: bottomButtonPosition,\n                                        },\n                                    )}\n                                >\n                                    {actionButton}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    {hasCloser && (\n                        <div\n                            className={cn(\n                                commonStyles.closeButtonWrapper,\n                                styles.closeButtonWrapper,\n                                colorStyles[colors].closeButtonWrapper,\n                                closerWrapperClassName,\n                            )}\n                        >\n                            <IconButton\n                                icon={CrossMIcon}\n                                colors={colors === 'default' ? 'inverted' : 'default'}\n                                className={cn(commonStyles.closeButton, closerClassName)}\n                                onClick={handleClose}\n                                aria-label='закрыть'\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_c9EeK\",\"closeButtonWrapper\":\"closeButtonWrapper_R5nSG\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_iHqVF\",\"closeButtonWrapper\":\"closeButtonWrapper_Y8Fc_\"};","import React, { forwardRef } from 'react';\n\nimport { ToastPlateDesktop } from '@alfalab/core-components-toast-plate/desktop';\n\nimport { BaseToast, BaseToastProps } from './components/base-toast';\n\nexport type ToastDesktopProps = Omit<BaseToastProps, 'bottomButtonPosition' | 'breakpoint'>;\n\nconst DefaultToastPlateDesktop: BaseToastProps['ToastPlate'] = forwardRef((props, ref) => (\n    <ToastPlateDesktop ref={ref} {...props} />\n));\n\nexport const ToastDesktop = forwardRef<HTMLDivElement, ToastDesktopProps>(\n    ({ ToastPlate = DefaultToastPlateDesktop, ...restProps }, ref) => (\n        <BaseToast ToastPlate={ToastPlate} {...restProps} ref={ref} />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\nimport { ToastPlateMobile } from '@alfalab/core-components-toast-plate/mobile';\n\nimport { BaseToast, BaseToastProps } from './components/base-toast';\n\nexport type ToastMobileProps = Omit<BaseToastProps, 'breakpoint'>;\n\nconst DefaultToastPlateMobile: BaseToastProps['ToastPlate'] = forwardRef((props, ref) => (\n    <ToastPlateMobile ref={ref} {...props} />\n));\n\nexport const ToastMobile = forwardRef<HTMLDivElement, ToastMobileProps>(\n    ({ ToastPlate = DefaultToastPlateMobile, ...restProps }, ref) => (\n        <BaseToast ToastPlate={ToastPlate} {...restProps} ref={ref} />\n    ),\n);\n","import React, { forwardRef } from 'react';\n\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\nimport { BaseToastProps } from './components/base-toast';\nimport { ToastDesktop } from './Component.desktop';\nimport { ToastMobile } from './Component.mobile';\n\nexport type ToastProps = BaseToastProps;\n\nexport const Toast = forwardRef<HTMLDivElement, ToastProps>(\n    ({ children, breakpoint = 1024, ...restProps }, ref) => {\n        const query = `(min-width: ${breakpoint}px)`;\n\n        const [isDesktop] = useMatchMedia(query);\n\n        const Component = isDesktop ? ToastDesktop : ToastMobile;\n\n        return (\n            <Component ref={ref} {...restProps}>\n                {children}\n            </Component>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"toastPlate\":\"toastPlate_p9JgE\",\"title\":\"title_QoIrY\",\"popoverInner\":\"popoverInner_OfrGp\",\"block\":\"block_qBB8_\",\"fixed\":\"fixed_yXQFp\",\"enter\":\"enter_HyxZB\",\"enterActive\":\"enterActive_urBXN\",\"exit\":\"exit_Hgffi\",\"exitActive\":\"exitActive_gO7i6\"};","import React, {\n    forwardRef,\n    MouseEventHandler,\n    TouchEventHandler,\n    useCallback,\n    useEffect,\n    useRef,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { CSSTransition } from 'react-transition-group';\nimport cn from 'classnames';\n\nimport { Popover, PopoverProps } from '@alfalab/core-components-popover';\nimport { Portal } from '@alfalab/core-components-portal';\nimport { Stack, stackingOrder } from '@alfalab/core-components-stack';\nimport {\n    ToastPlate as ToastPlateComponent,\n    ToastPlateProps,\n} from '@alfalab/core-components-toast-plate';\nimport { useClickOutside, usePrevious } from '@alfalab/hooks';\n\nimport styles from './index.module.css';\n\nconst CSS_TRANSITION_CLASS_NAMES = {\n    enter: styles.enter,\n    enterActive: styles.enterActive,\n    exit: styles.exit,\n    exitActive: styles.exitActive,\n};\n\nexport type BaseToastProps = ToastPlateProps &\n    Pick<\n        PopoverProps,\n        | 'position'\n        | 'offset'\n        | 'open'\n        | 'getPortalContainer'\n        | 'preventFlip'\n        | 'transition'\n        | 'useAnchorWidth'\n    > & {\n        /**\n         * Элемент, относительного которого появляется тост.\n         * Если не передавать, тост будет позиционирован снизу экрана (position: fixed).\n         */\n        anchorElement?: HTMLElement | null;\n\n        /**\n         * Через сколько исчезнет компонент (ms).\n         */\n        autoCloseDelay?: number;\n\n        /**\n         * Отступ снизу (при fixed-позиционировании).\n         */\n        bottomOffset?: number;\n\n        /**\n         * z-index компонента\n         */\n        zIndex?: number;\n\n        /**\n         * Обработчик закрытия компонента.\n         */\n        onClose: () => void;\n\n        /**\n         * Плашка тоста.\n         * По-дефолту рендерит компонент ToastPlate\n         */\n        ToastPlate?: typeof ToastPlateComponent;\n    };\n\nexport const BaseToast = forwardRef<HTMLDivElement, BaseToastProps>(\n    (\n        {\n            anchorElement,\n            position,\n            offset,\n            open,\n            autoCloseDelay = 3000,\n            className,\n            titleClassName,\n            bottomOffset,\n            style = {},\n            block,\n            zIndex = stackingOrder.TOAST,\n            ToastPlate,\n            onMouseEnter,\n            onMouseLeave,\n            onTouchStart,\n            onClose,\n            getPortalContainer,\n            useAnchorWidth,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const plateRef = useRef<HTMLDivElement>(null);\n        const timerId = useRef(0);\n        const prevOpen = usePrevious(open);\n\n        const startTimer = useCallback(() => {\n            clearTimeout(timerId.current);\n\n            timerId.current = window.setTimeout(onClose, autoCloseDelay);\n        }, [autoCloseDelay, onClose]);\n\n        const stopTimer = useCallback(() => {\n            clearTimeout(timerId.current);\n        }, []);\n\n        const handleMouseEnter = useCallback<MouseEventHandler<HTMLDivElement>>(\n            (event) => {\n                stopTimer();\n\n                if (onMouseEnter) {\n                    onMouseEnter(event);\n                }\n            },\n            [onMouseEnter, stopTimer],\n        );\n\n        const handleMouseLeave = useCallback<MouseEventHandler<HTMLDivElement>>(\n            (event) => {\n                startTimer();\n\n                if (onMouseLeave) {\n                    onMouseLeave(event);\n                }\n            },\n            [onMouseLeave, startTimer],\n        );\n\n        const handleTouchStart = useCallback<TouchEventHandler<HTMLDivElement>>(\n            (event) => {\n                stopTimer();\n\n                if (onTouchStart) {\n                    onTouchStart(event);\n                }\n            },\n            [onTouchStart, stopTimer],\n        );\n\n        const handleClickOutside = useCallback(() => {\n            onClose();\n            stopTimer();\n        }, [onClose, stopTimer]);\n\n        useClickOutside(plateRef, handleClickOutside);\n\n        useEffect(() => () => clearTimeout(timerId.current), []);\n\n        useEffect(() => {\n            if (open !== prevOpen && open) {\n                startTimer();\n            }\n        }, [open, prevOpen, startTimer, stopTimer]);\n\n        const props = {\n            block,\n            titleClassName: cn(titleClassName, styles.title),\n            onClose,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onTouchStart: handleTouchStart,\n            ref: mergeRefs([ref, plateRef]),\n        };\n\n        if (anchorElement) {\n            return (\n                <Popover\n                    open={open}\n                    anchorElement={anchorElement}\n                    position={position}\n                    offset={offset}\n                    popperClassName={styles.popoverInner}\n                    className={cn({ [styles.block]: block })}\n                    getPortalContainer={getPortalContainer}\n                    zIndex={zIndex}\n                    useAnchorWidth={useAnchorWidth}\n                >\n                    {ToastPlate ? (\n                        <ToastPlate {...restProps} style={style} className={className} {...props} />\n                    ) : null}\n                </Popover>\n            );\n        }\n\n        return (\n            <Stack value={zIndex}>\n                {(computedZIndex) => (\n                    <Portal getPortalContainer={getPortalContainer}>\n                        <CSSTransition\n                            unmountOnExit={true}\n                            in={open}\n                            timeout={150}\n                            nodeRef={plateRef}\n                            classNames={CSS_TRANSITION_CLASS_NAMES}\n                        >\n                            {ToastPlate ? (\n                                <ToastPlate\n                                    {...restProps}\n                                    className={cn(styles.fixed, styles.toastPlate, className)}\n                                    style={{\n                                        ...style,\n                                        bottom: bottomOffset && `${bottomOffset}px`,\n                                        zIndex: computedZIndex,\n                                    }}\n                                    {...props}\n                                />\n                            ) : null}\n                        </CSSTransition>\n                    </Portal>\n                )}\n            </Stack>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_pyaU5\",\"popper\":\"popper_jEZGO\",\"hint\":\"hint_YUh2n\",\"target\":\"target_ehIu9\",\"overlap\":\"overlap_n0tIf\"};","import React, {\n    FC,\n    Fragment,\n    HTMLAttributes,\n    MutableRefObject,\n    ReactElement,\n    ReactNode,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { Popover, PopoverProps, Position } from '@alfalab/core-components-popover';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStyles = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\ntype Trigger = 'click' | 'hover';\n\ntype RefElement = HTMLDivElement | null;\n\nexport type TooltipDesktopProps = {\n    /**\n     * Контент тултипа\n     */\n    content: ReactNode;\n\n    /**\n     * Позиционирование тултипа\n     */\n    position?: Position;\n\n    /**\n     * Задержка перед открытием тултипа\n     */\n    onOpenDelay?: number;\n\n    /**\n     * Задержка перед закрытием тултипа\n     */\n    onCloseDelay?: number;\n\n    /**\n     * Обработчик открытия тултипа\n     */\n    onOpen?: () => void;\n\n    /**\n     * Обработчик закрытия тултипа\n     */\n    onClose?: () => void;\n\n    /**\n     * Событие, по которому происходит открытие тултипа\n     */\n    trigger?: Trigger;\n\n    /**\n     * Если `true`, то тултип будет открыт\n     */\n    open?: boolean;\n\n    /**\n     * Идентификатор для систем автоматизированного тестирования\n     */\n    dataTestId?: string;\n\n    /**\n     * Дочерние элементы тултипа.\n     * При срабатывании событий на них, тултип будет открываться\n     */\n    children: ReactElement;\n\n    /**\n     * Смещение тултипа\n     */\n    offset?: [number, number];\n\n    /**\n     * Функция, возвращающая контейнер, в который будет рендериться тултип\n     */\n    getPortalContainer?: () => HTMLElement;\n\n    /**\n     * Дополнительный класс для стрелочки\n     */\n    arrowClassName?: string;\n\n    /**\n     * Дополнительный класс для контента\n     */\n    contentClassName?: string;\n\n    /**\n     * Дополнительный класс для поповера\n     */\n    popoverClassName?: string;\n\n    /**\n     * Дополнительный класс для обертки над дочерними элементами\n     */\n    targetClassName?: string;\n\n    /**\n     * Вид тултипа\n     */\n    view?: 'tooltip' | 'hint';\n\n    /**\n     * Хранит функцию, с помощью которой можно обновить положение компонента\n     */\n    updatePopover?: PopoverProps['update'];\n\n    /**\n     * z-index компонента\n     */\n    zIndex?: number;\n\n    /**\n     * Реф для обертки над дочерними элементами\n     */\n    targetRef?: MutableRefObject<HTMLElement | null>;\n\n    /**\n     * Если тултип не помещается в переданной позиции (position), он попробует открыться в другой позиции,\n     * по очереди для каждой позиции из этого списка.\n     * Если не передавать, то тултип открывается в противоположном направлении от переданного position.\n     */\n    fallbackPlacements?: PopoverProps['fallbackPlacements'];\n\n    /**\n     * Запрещает тултипу менять свою позицию, если он не влезает в видимую область.\n     */\n    preventOverflow?: PopoverProps['preventOverflow'];\n\n    /**\n     *  Позволяет тултипу подствраивать свою высоту под границы экрана, если из-за величины контента он выходит за рамки видимой области экрана\n     */\n    availableHeight?: PopoverProps['availableHeight'];\n\n    /**\n     *  Элемент, относительно которого будет позиционировать тултип.\n     */\n    anchor?: PopoverProps['anchorElement'];\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Использовать ширину родительского элемента\n     */\n    useAnchorWidth?: boolean;\n};\n\nexport const TooltipDesktop: FC<TooltipDesktopProps> = ({\n    children,\n    content,\n    trigger = 'hover',\n    onCloseDelay = 300,\n    onOpenDelay = 300,\n    dataTestId,\n    open: forcedOpen,\n    offset = [0, 16],\n    position,\n    contentClassName,\n    arrowClassName,\n    popoverClassName,\n    updatePopover,\n    targetClassName,\n    zIndex,\n    onClose,\n    onOpen,\n    getPortalContainer,\n    view = 'tooltip',\n    targetRef = null,\n    fallbackPlacements,\n    preventOverflow = true,\n    availableHeight = false,\n    anchor = null,\n    colors = 'default',\n    useAnchorWidth,\n}) => {\n    const [visible, setVisible] = useState(!!forcedOpen);\n    const [target, setTarget] = useState<HTMLElement | null>(null);\n\n    const contentRef = useRef<RefElement>(null);\n    const timer = useRef(0);\n\n    const show = forcedOpen === undefined ? visible : forcedOpen;\n\n    const open = () => {\n        if (!show) {\n            setVisible(true);\n\n            if (onOpen) {\n                onOpen();\n            }\n        }\n    };\n\n    const close = useCallback(() => {\n        if (show) {\n            setVisible(false);\n\n            if (onClose) {\n                onClose();\n            }\n        }\n    }, [onClose, show]);\n\n    const toggle = () => {\n        if (show) {\n            close();\n        } else {\n            open();\n        }\n    };\n\n    const clickedOutside = useCallback(\n        (node: Element): boolean => {\n            if (target && target.contains(node)) {\n                return false;\n            }\n\n            if (contentRef.current && contentRef.current.contains(node)) {\n                return false;\n            }\n\n            return true;\n        },\n        [target],\n    );\n\n    useEffect(() => {\n        const handleBodyClick = (event: MouseEvent | TouchEvent) => {\n            const eventTarget = event.target as Element;\n\n            if (clickedOutside(eventTarget)) {\n                close();\n            }\n        };\n\n        document.body.addEventListener('click', handleBodyClick);\n        document.body.addEventListener('touchstart', handleBodyClick);\n\n        return () => {\n            document.body.removeEventListener('click', handleBodyClick);\n            document.body.removeEventListener('touchstart', handleBodyClick);\n\n            clearTimeout(timer.current);\n        };\n    }, [clickedOutside, close]);\n\n    const handleTargetClick = () => {\n        toggle();\n    };\n\n    const handleMouseOver = () => {\n        clearTimeout(timer.current);\n\n        timer.current = window.setTimeout(() => {\n            open();\n        }, onOpenDelay);\n    };\n\n    const handleMouseOut = () => {\n        clearTimeout(timer.current);\n\n        timer.current = window.setTimeout(() => {\n            close();\n        }, onCloseDelay);\n    };\n\n    const handleTouchStart = (event: React.TouchEvent<HTMLElement>) => {\n        const eventTarget = event.target as Element;\n\n        clearTimeout(timer.current);\n\n        if (clickedOutside(eventTarget)) {\n            timer.current = window.setTimeout(() => {\n                close();\n            }, onCloseDelay);\n        } else {\n            open();\n        }\n    };\n\n    const onClickProps = { onClick: handleTargetClick };\n\n    const onHoverProps = {\n        onMouseOver: handleMouseOver,\n        onMouseOut: handleMouseOut,\n        onTouchStart: handleTouchStart,\n    };\n\n    const getTargetProps = (): HTMLAttributes<HTMLElement> => {\n        const props = {\n            className: cn(styles.target, targetClassName),\n        };\n\n        switch (trigger) {\n            case 'click':\n                return {\n                    ...props,\n                    ...onClickProps,\n                };\n            case 'hover':\n                return {\n                    ...props,\n                    ...onHoverProps,\n                };\n            default:\n                return {};\n        }\n    };\n\n    const getContentProps = (): HTMLAttributes<HTMLElement> => {\n        const props = {\n            ref: contentRef,\n            'data-test-id': dataTestId,\n            className: cn(styles.component, contentClassName),\n        };\n\n        switch (trigger) {\n            case 'hover':\n                return {\n                    ...props,\n                    ...onHoverProps,\n                };\n            default:\n                return props;\n        }\n    };\n\n    return (\n        <Fragment>\n            <div ref={mergeRefs([targetRef, setTarget])} {...getTargetProps()}>\n                {children.props.disabled && <div className={styles.overlap} />}\n                {children}\n            </div>\n\n            <Popover\n                anchorElement={anchor || target}\n                open={show}\n                getPortalContainer={getPortalContainer}\n                arrowClassName={cn(arrowClassName, styles.arrow, colorStyles[colors].arrow)}\n                popperClassName={cn(styles.popper, styles[view], colorStyles[colors][view])}\n                className={popoverClassName}\n                offset={offset}\n                withArrow={true}\n                position={position}\n                update={updatePopover}\n                zIndex={zIndex}\n                fallbackPlacements={fallbackPlacements}\n                preventOverflow={preventOverflow}\n                availableHeight={availableHeight}\n                useAnchorWidth={useAnchorWidth}\n            >\n                <div {...getContentProps()}>{content}</div>\n            </Popover>\n        </Fragment>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"hint\":\"hint_iKDKk\",\"arrow\":\"arrow_Pb824\",\"tooltip\":\"tooltip_m6mGN\"};","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"tooltip_evOJA\",\"arrow\":\"arrow_HeyvV\",\"hint\":\"hint_zF9wM\"};","// extracted by mini-css-extract-plugin\nexport default {\"target\":\"target_ZxkQj\",\"overlap\":\"overlap_Olsvw\"};","import React, { FC, Fragment } from 'react';\nimport cn from 'classnames';\n\nimport { BottomSheet, BottomSheetProps } from '@alfalab/core-components-bottom-sheet';\nimport { Button } from '@alfalab/core-components-button';\nimport { useMedia } from '@alfalab/hooks';\n\nimport { TooltipDesktop, TooltipDesktopProps } from './desktop';\nimport { useControlled } from './utils';\n\nimport styles from './responsive.module.css';\n\ntype View = 'desktop' | 'mobile';\n\nexport type TooltipResponsiveProps = Omit<TooltipDesktopProps, 'onClose' | 'onOpen'> & {\n    /**\n     * Режим отображения по умолчанию\n     */\n    defaultMatch?: View;\n\n    /**\n     * Обработчик открытия\n     */\n    onOpen?: (event?: React.MouseEvent<HTMLElement>) => void;\n\n    /**\n     * Обработчик закрытия\n     */\n    onClose?: (event?: React.MouseEvent<HTMLElement>) => void;\n\n    /**\n     * Заголовок кнопки в футере\n     */\n    actionButtonTitle?: string;\n\n    /**\n     * Наличие компонента крестика\n     * @deprecated(используйте bottomSheetProps.hasCloser)\n     */\n    hasCloser?: boolean;\n\n    /**\n     *  Дополнительные пропсы компонента BottomSheet\n     */\n    bottomSheetProps?: Partial<BottomSheetProps>;\n\n    /**\n     * Контрольная точка, с нее начинается desktop версия\n     * @default 1024\n     */\n    breakpoint?: number;\n};\n\nexport const TooltipResponsive: FC<TooltipResponsiveProps> = ({\n    defaultMatch = 'mobile',\n    content,\n    children,\n    open,\n    onOpen,\n    onClose,\n    actionButtonTitle = 'Понятно',\n    hasCloser,\n    targetRef,\n    targetClassName,\n    bottomSheetProps,\n    breakpoint = 1024,\n    ...restProps\n}) => {\n    const [view] = useMedia<View>(\n        [\n            ['mobile', `(max-width: ${breakpoint - 1}px)`],\n            ['desktop', `(min-width: ${breakpoint}px)`],\n        ],\n        defaultMatch,\n    );\n\n    const [openValue, setOpenValueIfUncontrolled] = useControlled(open, false);\n\n    const handleOpen = (event?: React.MouseEvent<HTMLElement>) => {\n        if (onOpen) {\n            onOpen(event);\n        } else {\n            setOpenValueIfUncontrolled(true);\n        }\n    };\n\n    const handleClose = (event?: React.MouseEvent<HTMLElement>) => {\n        if (onClose) {\n            onClose(event);\n        } else {\n            setOpenValueIfUncontrolled(false);\n        }\n    };\n\n    const isMobile = view === 'mobile';\n\n    return isMobile ? (\n        <Fragment>\n            <BottomSheet\n                {...restProps}\n                open={Boolean(openValue)}\n                onClose={handleClose}\n                hasCloser={hasCloser}\n                actionButton={\n                    <Button view='secondary' block={true} size='s' onClick={handleClose}>\n                        {actionButtonTitle}\n                    </Button>\n                }\n                {...bottomSheetProps}\n            >\n                {content}\n            </BottomSheet>\n            {/** TODO: проверить тултип на доступность */}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n            <div\n                ref={targetRef as React.Ref<HTMLDivElement>}\n                onClick={handleOpen}\n                className={cn(styles.target, targetClassName)}\n            >\n                {children?.props.disabled && <div className={styles.overlap} />}\n                {children}\n            </div>\n        </Fragment>\n    ) : (\n        <TooltipDesktop\n            {...restProps}\n            open={open}\n            content={content}\n            onOpen={handleOpen}\n            onClose={handleClose}\n            targetClassName={targetClassName}\n            targetRef={targetRef}\n        >\n            {children}\n        </TooltipDesktop>\n    );\n};\n","import { useCallback, useRef, useState } from 'react';\n\nexport function useControlled<T>(controlledValue: T, defaultValue: T): [T, (value: T) => void] {\n    const { current: isControlled } = useRef<boolean>(controlledValue !== undefined);\n    const [uncontrolledValue, setUncontrolledValue] = useState<T>(defaultValue);\n    const value = isControlled ? controlledValue : uncontrolledValue;\n\n    const setValueIfUncontrolled = useCallback(\n        (newValue: T) => {\n            if (!isControlled) {\n                setUncontrolledValue(newValue);\n            }\n        },\n        [isControlled],\n    );\n\n    return [value, setValueIfUncontrolled];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_RBT7F\",\"content\":\"content_UCcN1\",\"overflowHide\":\"overflowHide_gvp8K\",\"background-accent\":\"background-accent_g1czq\",\"background-info\":\"background-info_k8Q9a\",\"background-attention-muted\":\"background-attention-muted_MIf7S\",\"background-positive-muted\":\"background-positive-muted_uOHaL\",\"background-negative-muted\":\"background-negative-muted_maSpP\",\"background-primary\":\"background-primary_BUnae\",\"background-primary-inverted\":\"background-primary-inverted_RwiqU\",\"background-secondary\":\"background-secondary_NieJw\",\"background-secondary-inverted\":\"background-secondary-inverted_zCKmp\",\"background-tertiary\":\"background-tertiary_YBbn1\",\"background-tertiary-inverted\":\"background-tertiary-inverted_JuS6h\",\"background-quaternary\":\"background-quaternary_Jm9bX\",\"background-quaternary-inverted\":\"background-quaternary-inverted_Tw0rM\",\"background-specialbg-component\":\"background-specialbg-component_hVMfU\",\"background-specialbg-component-inverted\":\"background-specialbg-component-inverted_EFYsp\",\"background-specialbg-primary-grouped\":\"background-specialbg-primary-grouped_fzYRC\",\"background-specialbg-secondary-grouped\":\"background-specialbg-secondary-grouped_V3iH1\",\"background-specialbg-tertiary-grouped\":\"background-specialbg-tertiary-grouped_C70y5\",\"background-specialbg-secondary-transparent\":\"background-specialbg-secondary-transparent_Pw4hc\",\"background-specialbg-secondary-transparent-inverted\":\"background-specialbg-secondary-transparent-inverted_NlG6S\",\"background-specialbg-tertiary-transparent\":\"background-specialbg-tertiary-transparent_KQumi\",\"background-specialbg-tertiary-transparent-inverted\":\"background-specialbg-tertiary-transparent-inverted_lVgFz\",\"padding-top-3xs\":\"padding-top-3xs_k6A2P\",\"padding-right-3xs\":\"padding-right-3xs_O7HXI\",\"padding-bottom-3xs\":\"padding-bottom-3xs_p_yK0\",\"padding-left-3xs\":\"padding-left-3xs_VHqMB\",\"padding-top-2xs\":\"padding-top-2xs_DZDx2\",\"padding-right-2xs\":\"padding-right-2xs_F__EN\",\"padding-bottom-2xs\":\"padding-bottom-2xs_AUfHy\",\"padding-left-2xs\":\"padding-left-2xs_KAeLF\",\"padding-top-xs\":\"padding-top-xs_wyaV8\",\"padding-right-xs\":\"padding-right-xs_oTHI7\",\"padding-bottom-xs\":\"padding-bottom-xs_XSvVL\",\"padding-left-xs\":\"padding-left-xs_UUPTA\",\"padding-top-s\":\"padding-top-s_ZBhIb\",\"padding-right-s\":\"padding-right-s_nJOs0\",\"padding-bottom-s\":\"padding-bottom-s_Br1Xs\",\"padding-left-s\":\"padding-left-s_cpN6J\",\"padding-top-m\":\"padding-top-m_lnGqC\",\"padding-right-m\":\"padding-right-m_G9m8S\",\"padding-bottom-m\":\"padding-bottom-m_YIKE6\",\"padding-left-m\":\"padding-left-m_TvRT2\",\"padding-top-l\":\"padding-top-l_L6qq2\",\"padding-right-l\":\"padding-right-l_EhBnA\",\"padding-bottom-l\":\"padding-bottom-l_qVCEK\",\"padding-left-l\":\"padding-left-l_qJkY0\",\"padding-top-xl\":\"padding-top-xl_scMZH\",\"padding-right-xl\":\"padding-right-xl_cwIXd\",\"padding-bottom-xl\":\"padding-bottom-xl_iwEOD\",\"padding-left-xl\":\"padding-left-xl_WAXRO\",\"padding-top-2xl\":\"padding-top-2xl_Z2937\",\"padding-right-2xl\":\"padding-right-2xl_rxi1W\",\"padding-bottom-2xl\":\"padding-bottom-2xl_hccvQ\",\"padding-left-2xl\":\"padding-left-2xl_lKIGM\",\"padding-top-3xl\":\"padding-top-3xl__Qbvz\",\"padding-right-3xl\":\"padding-right-3xl_HquJZ\",\"padding-bottom-3xl\":\"padding-bottom-3xl_LUGPf\",\"padding-left-3xl\":\"padding-left-3xl_hbIYh\",\"padding-top-4xl\":\"padding-top-4xl_kpCLT\",\"padding-right-4xl\":\"padding-right-4xl__e97s\",\"padding-bottom-4xl\":\"padding-bottom-4xl_RQJQa\",\"padding-left-4xl\":\"padding-left-4xl_Swp_Y\",\"padding-top-5xl\":\"padding-top-5xl_FBswP\",\"padding-right-5xl\":\"padding-right-5xl_Efu3n\",\"padding-bottom-5xl\":\"padding-bottom-5xl_iUecu\",\"padding-left-5xl\":\"padding-left-5xl_Ei6kJ\",\"padding-top-6xl\":\"padding-top-6xl_OFM8O\",\"padding-right-6xl\":\"padding-right-6xl_Y3MNB\",\"padding-bottom-6xl\":\"padding-bottom-6xl_GH38c\",\"padding-left-6xl\":\"padding-left-6xl_YDGb0\",\"border-bottom-left-xs\":\"border-bottom-left-xs_Abjve\",\"border-bottom-right-xs\":\"border-bottom-right-xs_cTEUg\",\"border-top-left-xs\":\"border-top-left-xs_TjPzh\",\"border-top-right-xs\":\"border-top-right-xs_V3a_n\",\"border-bottom-left-s\":\"border-bottom-left-s_kFK1o\",\"border-bottom-right-s\":\"border-bottom-right-s_qvq0i\",\"border-top-left-s\":\"border-top-left-s_aTH2V\",\"border-top-right-s\":\"border-top-right-s_qVFel\",\"border-bottom-left-m\":\"border-bottom-left-m_NsQBv\",\"border-bottom-right-m\":\"border-bottom-right-m_RDhPi\",\"border-top-left-m\":\"border-top-left-m_HQage\",\"border-top-right-m\":\"border-top-right-m_hSTZP\",\"border-bottom-left-l\":\"border-bottom-left-l_Xm_CR\",\"border-bottom-right-l\":\"border-bottom-right-l_h8cIs\",\"border-top-left-l\":\"border-top-left-l__FKd8\",\"border-top-right-l\":\"border-top-right-l_qPzn8\",\"border-bottom-left-xl\":\"border-bottom-left-xl_Wtt_w\",\"border-bottom-right-xl\":\"border-bottom-right-xl_XurMM\",\"border-top-left-xl\":\"border-top-left-xl_egjbB\",\"border-top-right-xl\":\"border-top-right-xl_F852q\",\"border-bottom-left-xxl\":\"border-bottom-left-xxl_GrtQI\",\"border-bottom-right-xxl\":\"border-bottom-right-xxl_MGmdI\",\"border-top-left-xxl\":\"border-top-left-xxl_NrBbE\",\"border-top-right-xxl\":\"border-top-right-xxl_BpTrt\",\"border-bottom-left-3xl\":\"border-bottom-left-3xl_bR19Y\",\"border-bottom-right-3xl\":\"border-bottom-right-3xl_EX4Ud\",\"border-top-left-3xl\":\"border-top-left-3xl_Danpc\",\"border-top-right-3xl\":\"border-top-right-3xl_VYdw5\",\"shadow-xs\":\"shadow-xs_SS_3f\",\"shadow-s\":\"shadow-s_ocI1_\",\"shadow-m\":\"shadow-m_QvqfG\",\"shadow-l\":\"shadow-l_eVPIj\",\"shadow-xl\":\"shadow-xl_UuFst\",\"shadow-xs-hard\":\"shadow-xs-hard_cO4pH\",\"shadow-s-hard\":\"shadow-s-hard_TuR3f\",\"shadow-m-hard\":\"shadow-m-hard_DeDrx\",\"shadow-l-hard\":\"shadow-l-hard_a34td\",\"shadow-xl-hard\":\"shadow-xl-hard_Z8bbO\",\"shadow-xs-up\":\"shadow-xs-up_nRnKN\",\"shadow-s-up\":\"shadow-s-up_Zvj1x\",\"shadow-m-up\":\"shadow-m-up_D8vAK\",\"shadow-l-up\":\"shadow-l-up_zqNnP\",\"shadow-xl-up\":\"shadow-xl-up_Bp8RI\",\"shadow-xs-hard-up\":\"shadow-xs-hard-up_sXXO1\",\"shadow-s-hard-up\":\"shadow-s-hard-up_jtbZf\",\"shadow-m-hard-up\":\"shadow-m-hard-up_DokxW\",\"shadow-l-hard-up\":\"shadow-l-hard-up_A8DjG\",\"shadow-xl-hard-up\":\"shadow-xl-hard-up_mTuQe\",\"border-color-accent\":\"border-color-accent_qD9rL\",\"border-color-key\":\"border-color-key_tfTAl\",\"border-color-key-inverted\":\"border-color-key-inverted_J2xI6\",\"border-color-link\":\"border-color-link_YMzBs\",\"border-color-primary\":\"border-color-primary_lvdnM\",\"border-color-primary-inverted\":\"border-color-primary-inverted_sntKN\",\"border-color-secondary\":\"border-color-secondary_fgtu5\",\"border-color-secondary-inverted\":\"border-color-secondary-inverted_EzI91\",\"border-color-tertiary\":\"border-color-tertiary_IRFsI\",\"border-color-tertiary-inverted\":\"border-color-tertiary-inverted_kcRYk\",\"border-color-underline\":\"border-color-underline_aaMkd\",\"border-color-underline-inverted\":\"border-color-underline-inverted_gxfLv\",\"border-color-graphic-attention\":\"border-color-graphic-attention_BLhFn\",\"border-color-graphic-link\":\"border-color-graphic-link_VFn3H\",\"border-color-graphic-negative\":\"border-color-graphic-negative_HepIX\",\"border-color-graphic-positive\":\"border-color-graphic-positive_tCceQ\",\"border-color-specialbg-secondary-transparent\":\"border-color-specialbg-secondary-transparent_Aee46\",\"border-color-specialbg-secondary-transparent-inverted\":\"border-color-specialbg-secondary-transparent-inverted_T6f3W\",\"border-color-specialbg-tertiary-transparent\":\"border-color-specialbg-tertiary-transparent__NWEo\",\"border-color-specialbg-tertiary-transparent-inverted\":\"border-color-specialbg-tertiary-transparent-inverted_mSn70\",\"border-radius-xs\":\"border-radius-xs_m0inM\",\"border-radius-s\":\"border-radius-s_DGySn\",\"border-radius-m\":\"border-radius-m_ASRoh\",\"border-radius-l\":\"border-radius-l_xiHlP\",\"border-radius-xl\":\"border-radius-xl_xds1D\",\"border-radius-xxl\":\"border-radius-xxl_juGGL\",\"border-radius-3xl\":\"border-radius-3xl_T2aCM\",\"border-width-1\":\"border-width-1_JaiGD\",\"border-width-2\":\"border-width-2_VZgN6\",\"border-width-4\":\"border-width-4_APzkA\",\"direction-vertical\":\"direction-vertical_WCIzN\",\"direction-horizontal\":\"direction-horizontal_g_I6R\",\"align-start\":\"align-start__FzTe\",\"align-center\":\"align-center_Pl6xQ\",\"align-end\":\"align-end_Econ6\",\"align-fill\":\"align-fill_lF1g_\",\"justify-start\":\"justify-start_l_jrT\",\"justify-center\":\"justify-center_tHJth\",\"justify-end\":\"justify-end_e12IY\",\"backgroundImage\":\"backgroundImage_ypiju\"};","import { CornersRadiusType, UnderlayBorderRadius } from '../types';\n\nimport styles from '../index.module.css';\n\nexport const getBorderCorners = (\n    borderRadius: UnderlayBorderRadius | CornersRadiusType | undefined,\n) => {\n    const bordersSize =\n        typeof borderRadius === 'string'\n            ? {\n                  bottomRight: borderRadius,\n                  bottomLeft: borderRadius,\n                  topRight: borderRadius,\n                  topLeft: borderRadius,\n              }\n            : borderRadius;\n\n    return (\n        bordersSize && {\n            [styles[`border-bottom-right-${bordersSize.bottomRight}`]]: bordersSize.bottomRight,\n            [styles[`border-bottom-left-${bordersSize.bottomLeft}`]]: bordersSize.bottomLeft,\n            [styles[`border-top-right-${bordersSize.topRight}`]]: bordersSize.topRight,\n            [styles[`border-top-left-${bordersSize.topLeft}`]]: bordersSize.topLeft,\n        }\n    );\n};\n","import { BorderColorType, ShadowType } from '../../../types';\nimport { BACKGROUND } from '../constants';\nimport { BorderSizeType } from '../types';\n\nimport styles from '../index.module.css';\n\nexport const isBackgroundToken = (token: string | undefined) => token && BACKGROUND.includes(token);\n\nexport const getClasses = (\n    backgroundColor: string | undefined,\n    borderColor: BorderColorType | undefined,\n    borderSize: BorderSizeType | undefined,\n    shadow: ShadowType | undefined,\n) => ({\n    [styles[`background-${backgroundColor}`]]: isBackgroundToken(backgroundColor),\n    [styles[`border-color-${borderColor}`]]: borderColor,\n    [styles[`border-width-${borderSize}`]]: borderSize,\n    [styles[`${shadow}`]]: shadow,\n});\n","import React, { forwardRef } from 'react';\nimport cn from 'classnames';\n\nimport { getBorderCorners } from './utils/getBorderCorners';\nimport { getClasses, isBackgroundToken } from './utils/getClasses';\nimport { UnderlayProps } from './types';\n\nimport styles from './index.module.css';\n\nexport const Underlay = forwardRef<HTMLDivElement, UnderlayProps>(\n    (\n        {\n            children,\n            borderRadius,\n            shadow,\n            dimensions,\n            borderSize,\n            backgroundColor,\n            borderColor,\n            className,\n            padding,\n            dataTestId,\n            overflow = true,\n            contentProps,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const paddingSize =\n            typeof padding === 'string'\n                ? { top: padding, left: padding, right: padding, bottom: padding }\n                : padding;\n\n        const paddingStyles = paddingSize && {\n            [styles[`padding-top-${paddingSize.top}`]]: paddingSize.top,\n            [styles[`padding-right-${paddingSize.right}`]]: paddingSize.right,\n            [styles[`padding-bottom-${paddingSize.bottom}`]]: paddingSize.bottom,\n            [styles[`padding-left-${paddingSize.left}`]]: paddingSize.left,\n        };\n\n        const bordersStyles = getBorderCorners(borderRadius);\n        const contentBordersStyles = getBorderCorners(contentProps?.borderRadius);\n\n        const underlayStyles = {\n            ...dimensions,\n            ...(isBackgroundToken(backgroundColor) ? {} : { backgroundColor }),\n        };\n\n        const contentStyles = {\n            ...(isBackgroundToken(contentProps?.backgroundColor)\n                ? {}\n                : { backgroundColor: contentProps?.backgroundColor }),\n            ...(contentProps?.backgroundImageURL\n                ? { backgroundImage: `url(${contentProps.backgroundImageURL})` }\n                : {}),\n        };\n\n        return (\n            <div\n                ref={ref}\n                style={underlayStyles}\n                className={cn(\n                    styles.component,\n                    paddingStyles,\n                    bordersStyles,\n                    getClasses(backgroundColor, borderColor, borderSize, shadow),\n                    { [styles.overflowHide]: !overflow },\n                    className,\n                )}\n                data-test-id={dataTestId}\n                {...restProps}\n            >\n                <div\n                    style={contentStyles}\n                    className={cn(\n                        styles.content,\n                        { [styles.backgroundImage]: contentProps?.backgroundImageURL },\n                        contentBordersStyles,\n                        getClasses(\n                            contentProps?.backgroundColor,\n                            contentProps?.borderColor,\n                            contentProps?.borderSize,\n                            contentProps?.shadow,\n                        ),\n                        contentProps?.axis && styles[`direction-${contentProps.axis}`],\n                        contentProps?.alignment && styles[`align-${contentProps.alignment}`],\n                        contentProps?.justifyContent &&\n                            styles[`justify-${contentProps.justifyContent}`],\n                        contentProps?.className,\n                    )}\n                >\n                    {children}\n                </div>\n            </div>\n        );\n    },\n);\n","export const BACKGROUND = [\n    'accent',\n    'info',\n    'attention-muted',\n    'positive-muted',\n    'negative-muted',\n    'primary',\n    'primary-inverted',\n    'secondary',\n    'secondary-inverted',\n    'tertiary',\n    'tertiary-inverted',\n    'quaternary',\n    'quaternary-inverted',\n    'specialbg-component',\n    'specialbg-component-inverted',\n    'specialbg-primary-grouped',\n    'specialbg-secondary-grouped',\n    'specialbg-tertiary-grouped',\n    'specialbg-secondary-transparent',\n    'specialbg-secondary-transparent-inverted',\n    'specialbg-tertiary-transparent',\n    'specialbg-tertiary-transparent-inverted',\n];\nexport const BORDER_COLOR = [\n    'accent',\n    'key',\n    'key-inverted',\n    'link',\n    'primary',\n    'primary-inverted',\n    'secondary',\n    'secondary-inverted',\n    'tertiary',\n    'tertiary-inverted',\n    'underline',\n    'underline-inverted',\n    'graphic-attention',\n    'graphic-link',\n    'graphic-negative',\n    'graphic-positive',\n    'specialbg-secondary-transparent',\n    'specialbg-secondary-transparent-inverted',\n    'specialbg-tertiary-transparent',\n    'specialbg-tertiary-transparent-inverted',\n];\nexport const SHADOW = [\n    'shadow-xs',\n    'shadow-s',\n    'shadow-m',\n    'shadow-l',\n    'shadow-xl',\n    'shadow-xs-hard',\n    'shadow-s-hard',\n    'shadow-m-hard',\n    'shadow-l-hard',\n    'shadow-xl-hard',\n    'shadow-xs-up',\n    'shadow-s-up',\n    'shadow-m-up',\n    'shadow-l-up',\n    'shadow-xl-up',\n    'shadow-xs-hard-up',\n    'shadow-s-hard-up',\n    'shadow-m-hard-up',\n    'shadow-l-hard-up',\n    'shadow-xl-hard-up',\n];\n","export const isClient = () => typeof window !== 'undefined';\n","// extracted by mini-css-extract-plugin\nexport default {\"suffixContainer\":\"suffixContainer_F1MD8\",\"suffixVisible\":\"suffixVisible_x6y9D\",\"hasSuffix\":\"hasSuffix_HM5Xh\",\"spacer\":\"spacer_ICg9g\",\"suffix\":\"suffix_H6_he\",\"disabled\":\"disabled_Y8uV4\",\"readOnly\":\"readOnly_jXr1g\"};","import React, {\n    FC,\n    forwardRef,\n    Fragment,\n    ReactNode,\n    RefAttributes,\n    useCallback,\n    useState,\n} from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\n\nimport { InputProps } from '@alfalab/core-components-input';\nimport { Portal } from '@alfalab/core-components-portal';\n\nimport styles from './index.module.css';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type withSuffixProps = InputProps & {\n    /**\n     * Дополнительный закрепленный текст справа от основного значения.\n     * Например: value='85' suffix=' мес' -> 85 мес\n     */\n    suffix?: ReactNode;\n\n    /**\n     * Дополнительный класс для контейнера с суффиксом\n     */\n    suffixContainerClassName?: string;\n};\n\nexport const withSuffix = (Input: FC<InputProps & RefAttributes<HTMLInputElement>>) =>\n    forwardRef<HTMLInputElement, withSuffixProps>(\n        (\n            {\n                value,\n                defaultValue,\n                onChange,\n                onClear,\n                suffix = '',\n                placeholder,\n                className,\n                disabled,\n                readOnly,\n                suffixContainerClassName,\n                ...restProps\n            },\n            ref,\n        ) => {\n            const uncontrolled = value === undefined;\n\n            const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null);\n\n            const [stateValue, setStateValue] = useState(defaultValue || '');\n\n            const handleInputChange = useCallback<Required<InputProps>['onChange']>(\n                (event, payload) => {\n                    if (onChange) {\n                        onChange(event, payload);\n                    }\n\n                    if (uncontrolled) {\n                        setStateValue(payload.value);\n                    }\n                },\n                [onChange, uncontrolled],\n            );\n\n            const handleClear = useCallback<Required<InputProps>['onClear']>(\n                (event) => {\n                    if (uncontrolled) {\n                        setStateValue('');\n                    }\n\n                    if (onClear) {\n                        onClear(event);\n                    }\n                },\n                [onClear, uncontrolled],\n            );\n\n            const getPortalContainer = useCallback(\n                // TODO: Изменить сигнатуру getPortalContainer в Portal\n                () => inputNode?.parentElement as HTMLElement,\n                [inputNode],\n            );\n\n            const visibleValue = uncontrolled ? stateValue : value;\n\n            return (\n                <Fragment>\n                    <Input\n                        ref={mergeRefs([ref, setInputNode])}\n                        value={visibleValue}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        onChange={handleInputChange}\n                        onClear={handleClear}\n                        placeholder={placeholder}\n                        className={cn(className, {\n                            [styles.suffixVisible]: Boolean(visibleValue),\n                            [styles.hasSuffix]: suffix,\n                        })}\n                        {...restProps}\n                    />\n                    <Portal getPortalContainer={getPortalContainer}>\n                        <div className={cn(styles.suffixContainer, suffixContainerClassName)}>\n                            <span className={styles.spacer}>{visibleValue}</span>\n                            {suffix && (\n                                <div\n                                    className={cn(styles.suffix, {\n                                        [styles.disabled]: disabled,\n                                        [styles.readOnly]: readOnly,\n                                    })}\n                                >\n                                    {suffix}\n                                </div>\n                            )}\n                        </div>\n                    </Portal>\n                </Fragment>\n            );\n        },\n    );\n","var map = {\n\t\"./action-button/src/index.ts\": \"./packages/action-button/src/index.ts\",\n\t\"./alert/src/index.ts\": \"./packages/alert/src/index.ts\",\n\t\"./amount-input/src/index.ts\": \"./packages/amount-input/src/index.ts\",\n\t\"./amount/src/index.ts\": \"./packages/amount/src/index.ts\",\n\t\"./attach/src/index.ts\": \"./packages/attach/src/index.ts\",\n\t\"./backdrop/src/index.ts\": \"./packages/backdrop/src/index.ts\",\n\t\"./badge/src/index.ts\": \"./packages/badge/src/index.ts\",\n\t\"./bank-card/src/index.ts\": \"./packages/bank-card/src/index.ts\",\n\t\"./base-modal/src/index.ts\": \"./packages/base-modal/src/index.ts\",\n\t\"./bottom-sheet/src/index.ts\": \"./packages/bottom-sheet/src/index.ts\",\n\t\"./button/src/index.ts\": \"./packages/button/src/index.ts\",\n\t\"./calendar-input/src/index.ts\": \"./packages/calendar-input/src/index.ts\",\n\t\"./calendar-range/src/index.ts\": \"./packages/calendar-range/src/index.ts\",\n\t\"./calendar-with-skeleton/src/index.ts\": \"./packages/calendar-with-skeleton/src/index.ts\",\n\t\"./calendar/src/index.ts\": \"./packages/calendar/src/index.ts\",\n\t\"./card-image/src/index.ts\": \"./packages/card-image/src/index.ts\",\n\t\"./cdn-icon/src/index.ts\": \"./packages/cdn-icon/src/index.ts\",\n\t\"./chart/src/index.ts\": \"./packages/chart/src/index.ts\",\n\t\"./checkbox-group/src/index.ts\": \"./packages/checkbox-group/src/index.ts\",\n\t\"./checkbox/src/index.ts\": \"./packages/checkbox/src/index.ts\",\n\t\"./circular-progress-bar/src/index.ts\": \"./packages/circular-progress-bar/src/index.ts\",\n\t\"./code-input/src/index.ts\": \"./packages/code-input/src/index.ts\",\n\t\"./collapse/src/index.ts\": \"./packages/collapse/src/index.ts\",\n\t\"./comment/src/index.ts\": \"./packages/comment/src/index.ts\",\n\t\"./confirmation-v1/src/index.ts\": \"./packages/confirmation-v1/src/index.ts\",\n\t\"./confirmation/src/index.ts\": \"./packages/confirmation/src/index.ts\",\n\t\"./custom-button/src/index.ts\": \"./packages/custom-button/src/index.ts\",\n\t\"./custom-picker-button/src/index.ts\": \"./packages/custom-picker-button/src/index.ts\",\n\t\"./date-input/src/index.ts\": \"./packages/date-input/src/index.ts\",\n\t\"./date-range-input/src/index.ts\": \"./packages/date-range-input/src/index.ts\",\n\t\"./date-time-input/src/index.ts\": \"./packages/date-time-input/src/index.ts\",\n\t\"./divider/src/index.ts\": \"./packages/divider/src/index.ts\",\n\t\"./drawer/src/index.ts\": \"./packages/drawer/src/index.ts\",\n\t\"./dropzone/src/index.ts\": \"./packages/dropzone/src/index.ts\",\n\t\"./file-upload-item/src/index.ts\": \"./packages/file-upload-item/src/index.ts\",\n\t\"./filter-tag/src/index.ts\": \"./packages/filter-tag/src/index.ts\",\n\t\"./form-control/src/index.ts\": \"./packages/form-control/src/index.ts\",\n\t\"./gallery/src/index.ts\": \"./packages/gallery/src/index.ts\",\n\t\"./gap/src/index.ts\": \"./packages/gap/src/index.ts\",\n\t\"./generic-wrapper/src/index.ts\": \"./packages/generic-wrapper/src/index.ts\",\n\t\"./global-store/src/index.ts\": \"./packages/global-store/src/index.ts\",\n\t\"./grid/src/index.ts\": \"./packages/grid/src/index.ts\",\n\t\"./hatching-progress-bar/src/index.ts\": \"./packages/hatching-progress-bar/src/index.ts\",\n\t\"./icon-button/src/index.ts\": \"./packages/icon-button/src/index.ts\",\n\t\"./indicator/src/index.ts\": \"./packages/indicator/src/index.ts\",\n\t\"./input-autocomplete/src/index.ts\": \"./packages/input-autocomplete/src/index.ts\",\n\t\"./input/src/index.ts\": \"./packages/input/src/index.ts\",\n\t\"./intl-phone-input/src/index.ts\": \"./packages/intl-phone-input/src/index.ts\",\n\t\"./keyboard-focusable/src/index.ts\": \"./packages/keyboard-focusable/src/index.ts\",\n\t\"./link/src/index.ts\": \"./packages/link/src/index.ts\",\n\t\"./list-header/src/index.ts\": \"./packages/list-header/src/index.ts\",\n\t\"./list/src/index.ts\": \"./packages/list/src/index.ts\",\n\t\"./loader/src/index.ts\": \"./packages/loader/src/index.ts\",\n\t\"./masked-input/src/index.ts\": \"./packages/masked-input/src/index.ts\",\n\t\"./modal/src/index.ts\": \"./packages/modal/src/index.ts\",\n\t\"./mq/src/index.ts\": \"./packages/mq/src/index.ts\",\n\t\"./navigation-bar/src/index.ts\": \"./packages/navigation-bar/src/index.ts\",\n\t\"./notification-manager/src/index.ts\": \"./packages/notification-manager/src/index.ts\",\n\t\"./notification/src/index.ts\": \"./packages/notification/src/index.ts\",\n\t\"./number-input/src/index.ts\": \"./packages/number-input/src/index.ts\",\n\t\"./pagination/src/index.ts\": \"./packages/pagination/src/index.ts\",\n\t\"./pass-code/src/index.ts\": \"./packages/pass-code/src/index.ts\",\n\t\"./password-input/src/index.ts\": \"./packages/password-input/src/index.ts\",\n\t\"./pattern-lock/src/index.ts\": \"./packages/pattern-lock/src/index.ts\",\n\t\"./phone-input/src/index.ts\": \"./packages/phone-input/src/index.ts\",\n\t\"./picker-button/src/index.ts\": \"./packages/picker-button/src/index.ts\",\n\t\"./plate/src/index.ts\": \"./packages/plate/src/index.ts\",\n\t\"./popover/src/index.ts\": \"./packages/popover/src/index.ts\",\n\t\"./portal/src/index.ts\": \"./packages/portal/src/index.ts\",\n\t\"./progress-bar/src/index.ts\": \"./packages/progress-bar/src/index.ts\",\n\t\"./pure-cell/src/index.ts\": \"./packages/pure-cell/src/index.ts\",\n\t\"./pure-input/src/index.ts\": \"./packages/pure-input/src/index.ts\",\n\t\"./radio-group/src/index.ts\": \"./packages/radio-group/src/index.ts\",\n\t\"./radio/src/index.ts\": \"./packages/radio/src/index.ts\",\n\t\"./scrollbar/src/index.ts\": \"./packages/scrollbar/src/index.ts\",\n\t\"./segmented-control/src/index.ts\": \"./packages/segmented-control/src/index.ts\",\n\t\"./select-with-tags/src/index.ts\": \"./packages/select-with-tags/src/index.ts\",\n\t\"./select/src/index.ts\": \"./packages/select/src/index.ts\",\n\t\"./side-panel/src/index.ts\": \"./packages/side-panel/src/index.ts\",\n\t\"./skeleton/src/index.ts\": \"./packages/skeleton/src/index.ts\",\n\t\"./slider-input/src/index.ts\": \"./packages/slider-input/src/index.ts\",\n\t\"./slider/src/index.ts\": \"./packages/slider/src/index.ts\",\n\t\"./sortable-list/src/index.ts\": \"./packages/sortable-list/src/index.ts\",\n\t\"./space/src/index.ts\": \"./packages/space/src/index.ts\",\n\t\"./spinner/src/index.ts\": \"./packages/spinner/src/index.ts\",\n\t\"./stack/src/index.ts\": \"./packages/stack/src/index.ts\",\n\t\"./status/src/index.ts\": \"./packages/status/src/index.ts\",\n\t\"./stepped-progress-bar/src/index.ts\": \"./packages/stepped-progress-bar/src/index.ts\",\n\t\"./steps/src/index.ts\": \"./packages/steps/src/index.ts\",\n\t\"./switch/src/index.ts\": \"./packages/switch/src/index.ts\",\n\t\"./system-message/src/index.ts\": \"./packages/system-message/src/index.ts\",\n\t\"./table/src/index.ts\": \"./packages/table/src/index.ts\",\n\t\"./tabs/src/index.ts\": \"./packages/tabs/src/index.ts\",\n\t\"./tag/src/index.ts\": \"./packages/tag/src/index.ts\",\n\t\"./textarea/src/index.ts\": \"./packages/textarea/src/index.ts\",\n\t\"./time-input/src/index.ts\": \"./packages/time-input/src/index.ts\",\n\t\"./toast-plate/src/index.ts\": \"./packages/toast-plate/src/index.ts\",\n\t\"./toast/src/index.ts\": \"./packages/toast/src/index.ts\",\n\t\"./tooltip/src/index.ts\": \"./packages/tooltip/src/index.ts\",\n\t\"./typography/src/index.ts\": \"./packages/typography/src/index.ts\",\n\t\"./underlay/src/index.ts\": \"./packages/underlay/src/index.ts\",\n\t\"./with-suffix/src/index.ts\": \"./packages/with-suffix/src/index.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./packages sync recursive ^\\\\.\\\\/(.*)\\\\/src\\\\/index.ts$\";"],"names":["colorStyles","default","inverted","static","ActionButton","forwardRef","_ref","ref","_cn","className","icon","children","href","_ref$size","size","_ref$view","view","_ref$type","type","iconWrapperClassName","disabled","loading","dataTestId","_ref$colors","colors","rest","_objectWithoutProperties","_excluded","componentRef","useRef","_useFocus","useFocus","focused","_slicedToArray","_useLoader","useLoader","timeout","timerId","_useState","useState","_useState2","loaderTimePassed","setLoaderTimePassed","showLoader","useEffect","current","window","clearTimeout","setTimeout","componentProps","cn","styles","_defineProperty","buttonChildren","_jsxs","Fragment","_jsx","role","iconWrapper","Spinner","getDataTestId","visible","loader","_objectSpread","mergeRefs","Alert","title","restProps","Plate","rounded","limitContentWidth","getAmountValueFromStr","str","minority","Math","round","Number","replace","SuffixInput","withSuffix","Input","AmountInput","_ref$value","value","_ref$integerLength","integerLength","_ref$minority","_ref$currency","currency","_ref$suffix","suffix","_ref$placeholder","placeholder","concat","getCurrencySymbol","_ref$integersOnly","integersOnly","_ref$positiveOnly","positiveOnly","_ref$bold","bold","focusedClassName","_ref$clear","clear","onChange","onClear","_ref$breakpoint","breakpoint","getFormattedAmount","useCallback","formatAmount","negativeSymbol","formatted","inputValue","setInputValue","currencySymbol","handleClear","event","_inputValue$split","split","_inputValue$split2","majorPart","minorPart","Boolean","minorPartAndCurrency","undefined","THINSP","suffixContainerClassName","inputClassName","handleChange","e","input","target","enteredValue","_enteredValue$split","RegExp","test","newFormattedValue","getFormattedValue","_enteredValue$split2","head","tail","includes","slice","toString","length","caret","selectionStart","requestAnimationFrame","selectionEnd","_input$value$split","_input$value$split2","notFormattedEnteredValueLength","diff","valueString","inputMode","pattern","Amount","_cn2","_ref$codeFormat","codeFormat","transparentMinor","rightAddons","_ref$showPlus","showPlus","_formatAmount","currencySeparator","defaultStyles","AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR","PureAmount","DefaultAmount","Pure","MULTIPLE_TEXTS","Attach","React","accept","_ref$buttonContent","buttonContent","_ref$buttonProps","buttonProps","fileClassName","noFileClassName","id","maxFilenameLength","multiple","_ref$noFileText","noFileText","progressBarPercent","defaultValue","uncontrolled","files","setFiles","inputRef","labelRef","buttonRef","handleClearClick","ev","statusTextContent","truncateFilename","filename","lengthOfPart","substr","name","map","file","join","pluralize","Button","leftAddons","getDefaultLeftAddon","IconComponent","PaperclipSIcon","PaperclipMIcon","onClick","handleButtonClick","click","focus","htmlFor","tabIndex","handleInputChange","filesArray","Array","from","KeyboardFocusable","targetRef","ProgressBar","defaultProps","Backdrop","_ref$open","open","_ref$invisible","invisible","_ref$timeout","onClose","_ref$transitionClassN","transitionClassNames","CSSTransition","unmountOnExit","classNames","in","appear","cardMask","accountNumberMask","getBrandIcon","arguments","validateCardNumber","cardNumber","digits","sum","i","cardNum","parseInt","startsWith","MirXxlIcon","VisaXxlIcon","MastercardLIcon","BankCard","_ref$bankLogo","bankLogo","AlfaBankLIcon","_ref$backgroundColor","backgroundColor","_ref$inputLabel","inputLabel","onUsePhoto","brandIcon","setBrandIcon","getMask","newValue","payload","renderRightAddons","CameraMIcon","style","MaskedInput","mask","block","label","labelClassName","filledClassName","BaseModalContext","parentRef","hasFooter","hasHeader","hasScroll","headerHighlighted","footerHighlighted","headerOffset","setHeaderOffset","contentRef","setHasHeader","setHasFooter","BaseModal","container","_ref$scrollHandler","scrollHandler","_ref$Backdrop","DefaultBackdrop","_ref$backdropProps","backdropProps","_ref$transitionProps","transitionProps","disableBackdropClick","_ref$disableAutoFocus","disableAutoFocus","_ref$disableFocusLock","disableFocusLock","_ref$disableEscapeKey","disableEscapeKeyDown","_ref$disableRestoreFo","disableRestoreFocus","_ref$disableBlockingS","disableBlockingScroll","_ref$keepMounted","keepMounted","contentClassName","wrapperClassName","onBackdropClick","onEscapeKeyDown","onMount","onUnmount","_ref$zIndex","zIndex","stackingOrder","_ref$componentRef","_ref$usePortal","usePortal","exited","setExited","_useState3","_useState4","setHasScroll","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setHeaderHighlighted","_useState11","_useState12","setFooterHighlighted","_useState13","_useState14","componentNodeRef","wrapperRef","scrollableNodeRef","contentNodeRef","restoreContainerStylesRef","mouseDownTarget","resizeObserverRef","checkToHasScrollBar","scrollExists","hasScrollbar","isExited","shouldRender","getContainer","document","body","addResizeHandle","observe","removeResizeHandle","_resizeObserverRef$cu","disconnect","node","handleScroll","isScrolledToTop","getBoundingClientRect","top","isScrolledToBottom","bottom","innerHeight","handleClose","reason","handleBackdropMouseDown","_event$target","clickedOnScrollbar","clientWidth","clientX","offset","getScrollbarSize","handleBackdropMouseUp","handleKeyDown","key","stopPropagation","getScrollHandler","handleEntered","isAppearing","addEventListener","onEntered","handleExited","removeEventListener","onExited","el","handleContainer","restoreContainerStyles","ResizeObserver","ResizeObserverPolyfill","contextValue","useMemo","renderContent","Stack","computedZIndex","Provider","FocusLock","autoFocus","returnFocus","onKeyDown","onMouseDown","onMouseUp","Portal","getPortalContainer","immediateMount","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","this","ownerDocument","querySelectorAll","item","scrollTop","scrollHeight","offsetHeight","clientHeight","cachedSize","scrollDiv","createElement","width","height","position","overflow","appendChild","scrollbarSize","offsetWidth","removeChild","modalRestoreStyles","getModalStore","getRestoreStyles","index","findIndex","existingStyles","modals","splice","forEach","setProperty","removeProperty","find","containerStyles","isOverflowing","innerWidth","documentElement","push","paddingRight","getPaddingRight","getComputedStyle","parent","parentElement","scrollContainer","nodeName","overflowY","LOADER_MIN_DISPLAY_INTERVAL","_ref$block","spinnerClassName","_ref$loading","_ref$nowrap","nowrap","_ref$Component","Component","iconOnly","component","_ref2","_ref2$type","restButtonProps","_excluded2","handleClick","preventDefault","hrefProps","rel","CalendarInput","_calendarProps$respon","popoverClassName","_ref$defaultOpen","defaultOpen","defaultMonth","_ref$defaultValue","_ref$calendarPosition","calendarPosition","_ref$calendarProps","calendarProps","_ref$minDate","minDate","_ref$maxDate","maxDate","_ref$offDays","offDays","_ref$events","events","preventFlip","_ref$mobileMode","mobileMode","_ref$wrapperRef","_ref$onChange","onInputChange","onCalendarChange","readOnly","_ref$Calendar","Calendar","DefaultCalendar","_ref$popoverPosition","popoverPosition","zIndexPopover","useAnchorWidth","error","calendarResponsive","responsive","shouldRenderNative","SUPPORTS_INPUT_TYPE_DATE","shouldRenderOnlyInput","shouldRenderStatic","shouldRenderPopover","setOpen","calendarValue","parseDateString","getTime","checkInputValueIsValid","newInputValue","dateValue","isCompleteDateInput","dateInLimits","inputDisabled","inputWrapperRef","calendarRef","tagName","handleFocus","handleBlur","relatedTarget","activeElement","contains","handleInputKeyDown","changeHandler","newDate","initiator","shouldChange","date","handleCalendarChange","formatDate","Date","handleCalendarWrapperMouseDown","handleCalendarClose","renderCalendar","onFocus","onBlur","DateInput","CalendarMIcon","Popover","anchorElement","popperClassName","withTransition","CalendarInputDesktop","props","CalendarInputMobile","CalendarMobile","CalendarInputResponsive","_useMedia","useMedia","DATE_FORMAT","NATIVE_DATE_FORMAT","DATE_MASK","IS_BROWSER","isInputDateSupported","dateFormat","format","parse","setAttribute","isValidInputValue","some","offDay","isSameDay","CalendarWithSkeleton","_ref$calendarVisible","calendarVisible","_ref$animate","animate","skeletonProps","Skeleton","ASPECT_RATIO","DEFAULT_WIDTH","DEFAULT_BASE_URL","CardImage","cardId","_ref$layers","layers","_ref$width","_ref$baseUrl","baseUrl","_ref$rounded","alt","onLoad","loaded","setLoaded","image","prevLoaded","_image$current","complete","cardImageUrl","cardImageUrl2x","src","srcSet","handleLoadedImage","CDNIcon","color","setIcon","xhr","XMLHttpRequest","send","onload","svg","response","abort","dangerouslySetInnerHTML","__html","CheckboxGroupDesktop","BaseCheckboxGroup","CheckboxGroupMobile","CheckboxGroup","query","_useMatchMedia","useMatchMedia","_ref$direction","direction","hint","_ref$disabled","errorMessage","commonStyles","checkboxList","Children","child","isValidElement","renderCheckbox","_child$props","checked","childClassName","cloneElement","renderTag","_child$props2","clone","autoComplete","sub","Checkbox","boxClassName","_ref$align","align","addons","inactive","_ref$indeterminate","indeterminate","_ref$hiddenInput","hiddenInput","CheckmarkCompactMIcon","SIZES","xs","m","l","xl","xxl","STROKE","VIEW_TITLE","VIEW_TEXT","CircularProgressBar","_ref$title","titleComplete","subtitle","_ref$contentColor","contentColor","subtitleComplete","_ref$stroke","stroke","fillComplete","Icon","IconComplete","iconComplete","completeTextColor","_ref$completeIconColo","completeIconColor","memorized","widthSVG","heightSVG","center","radius","circumference","PI","progress","min","max","strokeDasharray","toFixed","strokeDashoffset","isComplete","isCompleteTextColor","titleContent","subtitleContent","renderTitle","renderTitleString","Typography","tag","font","weight","renderSubTitle","viewBox","xmlns","cx","cy","r","strokeWidth","transform","renderIcon","CodeInputDesktop","BaseCodeInput","stylesInput","CodeInputMobile","_ref$compact","compact","_ref$stylesInput","select","_ref$fields","fields","_ref$initialValues","initialValues","_ref$clearCodeOnError","clearCodeOnError","onErrorAnimationEnd","onComplete","inputRefs","fill","createRef","values","setValues","clearErrorTimerId","focusOnInput","blur","unselect","setSelectionRange","reset","useImperativeHandle","triggerChange","argumentValues","valid","nextRef","newValues","_toConsumableArray","nextIndex","cursor","handleChangeFromEvent","validity","_ref3","prevIndex","prevRef","curtRef","_navigator","_navigator$credential","ac","navigator","credentials","get","options","otp","transport","signal","AbortController","then","res","code","catch","err","console","onAnimationEnd","handleErrorAnimationEnd","prevState","_","CodeInput","Collapse","expanded","collapsedLabel","expandedLabel","expandedContentClassName","onTransitionEnd","onExpandedChange","_ref$defaultExpanded","defaultExpanded","contentCaseRef","expandedState","setExpandedState","isExpanded","recalculate","contentHeight","handleTransitionEnd","handleExpandedChange","handleResize","debounce","observer","ToggledIcon","ArrowUpMBlackIcon","ArrowDownMBlackIcon","Link","pseudo","Comment","rowLimit","textClassName","CustomButton","_ref$stateType","stateType","background","buttonClassName","CustomPickerButtonDesktop","PickerButtonDesktop","fieldProps","Field","DefaultField","CustomPickerButtonMobile","PickerButtonMobile","CustomPickerButtonResponsive","OptionsList","onScroll","footer","swipeable","bottomSheetProps","_ref$buttonSize","buttonSize","_ref$buttonVariant","buttonVariant","innerProps","_ref$showArrow","showArrow","getIcon","propValue","setShouldRenderNative","setValue","dots","match","formattedValue","isValid","handleNativeInputChange","dateFnsFormat","dateFnsIsValid","parseTimestampToDate","timestamp","year","getFullYear","month","getMonth","day","getDate","DateRangeInput","picker","InputComponent","iconRef","_usePeriod","usePeriod","onPeriodChange","handlePeriodChange","to","dateFrom","dateTo","filter","selectedFrom","selectedTo","updatePeriod","resetPeriod","setStart","setEnd","getDates","val","dateArr","v","trim","setCalendarPeriod","prevValue","useDidUpdateEffect","newPropValue","dates","handleInputWrapperFocus","_calendarRef$current","_inputRef$current","_iconRef$current","_dateArr$","_dateArr$2","hyphen","_getDates","IconButton","handleIconButtonClick","activeMonth","startOfMonth","DateRangeInputDesktop","InputDesktop","DateRangeInputMobile","InputMobile","DateRangeInputResponsive","inputValueArr","time","isValidTimeFormat","timeArr","hours","mins","getDateWithoutTime","valueArr","_date2","setFullYear","setHours","getFullDateTime","_date3","fullDate","setMinutes","setSeconds","setMilliseconds","DateTimeInput","setTimeToDate","dateWithTime","addTimeToDate","handleMobileCalendarClose","colon","comma","DateTimeInputDesktop","DateTimeInputMobile","DateTimeInputResponsive","Divider","ANIMATION_DURATION","DrawerContext","enter","enterActive","appearActive","enterDone","appearDone","exit","exitActive","exitDone","contentProps","Drawer","_cn3","contentTransitionProps","_ref$nativeScrollbar","nativeScrollbar","_ref$placement","placement","scrollbarProps","isRightPlacement","isLeftPlacement","enterClassName","exitClassName","renderWithNativeScrollbar","renderWithCustomScrollbar","Scrollbar","Overlay","_ref$text","text","_ref$visible","ContainerMIcon","preventAndStopEvent","Dropzone","_ref$error","overlayVisible","_ref$Overlay","DefaultOverlay","onDragEnter","onDragLeave","onDragOver","onDrop","dragOver","setDragOver","dragCounter","handleDragOver","handleDragEnter","handleDragLeave","handleDrop","dataTransfer","clearData","humanFileSize","units","humanSize","factor","FileUploadItem","_ref$id","_ref$name","_ref$icon","fileIcon","extension","getExtension","toLowerCase","pop","DocumentImageMIcon","DocumentDocMIcon","DocumentPdfMIcon","DocumentTxtMIcon","DocumentUnknownMIcon","uploadDate","downloadLink","download","uploadStatus","_ref$uploadPercent","uploadPercent","showDelete","showRestore","onDelete","onDownload","onRestore","disableButtons","showMeta","showDownload","toLocaleLowerCase","ClockMIcon","AlertCircleMIcon","CheckmarkCircleMIcon","renderInfoSection","shouldShownError","errorContent","handleRestore","PointerDownSIcon","handleDownload","CrossSIcon","handleDelete","FilterTagDesktop","BaseFilterTag","FilterTagMobile","FilterTag","_ref$variant","variant","shape","_ref$onClear","_ref$showClear","showClear","_ref$styles","valueRef","isKeyBoardEvent","shapeClassName","valueButton","close","ChevronDownCompactSIcon","ChevronDownMIcon","CrossCircleSIcon","CrossCircleMIcon","FormControlDesktop","BaseFormControl","FormControlMobile","FormControl","defaultMatchMediaValue","colorCommonStyles","fieldClassName","inputWrapperClassName","addonsClassName","filled","_ref$labelView","labelView","bottomAddons","_ref$colorStyles","above","inner","hasError","Gap","_ref$tag","GenericWrapper","padding","alignItems","justifyContent","_ref$column","column","_ref$grow","grow","paddingStyles","right","left","alignmentStyles","justifyContentStyles","growStyles","columnsStyles","ModalStore","_createClass","_this","_classCallCheck","restoreStyles","GlobalStore","modalStore","getCoreComponentsStore","coreComponentsStore","HatchingProgressBar","hatchValue","_ref$alignIcon","alignIcon","borderStyles","border","outlineColor","outlineWidth","outlineStyle","Indicator","rawValue","getSize","showContent","minWidth","AutocompleteField","Arrow","_ref$Input","DefaultInput","success","onInput","_ref$inputProps","inputProps","InputAutocompleteDesktop","_ref$OptionsList","DefaultOptionsList","_ref$Optgroup","Optgroup","DefaultOptgroup","_ref$Option","Option","DefaultOption","_ref$closeOnSelect","closeOnSelect","BaseSelect","autocomplete","AutocompleteMobileField","valueRenderer","toggleMenu","setSelectedItems","selectedMultiple","setFocused","focusVisible","showLabel","SELECTED","InputAutocompleteMobile","_ref$bottomSheetProps","_ref$bottomSheetHeade","bottomSheetHeaderAddonsProps","_ref$filter","_ref$Arrow","openProp","onFilter","onOpen","onCancel","onClearFilter","continueButtonProps","cancelButtonProps","selected","bottomSheetInputRef","setBottomSheetVisibility","isOpen","handleOptionsListTouchMove","throttle","handleApply","handleCancel","handleInputFocus","SelectMobile","handleOpen","_bottomSheetInputRef$","useWithApplyHook","getBottomSheetProps","CoreInput","actionButton","initialHeight","containerProps","onTouchMove","optionsListProps","showFooter","InputAutocompleteResponsive","BaseInput","FormControlComponent","onAnimationStart","stateValue","setStateValue","autofilled","setAutofilled","clearButtonVisible","hasInnerLabel","handleInputBlur","handleAnimationStart","animationName","clearIcon","Badge","iconColor","content","ExclamationCircleMIcon","_ref$pseudo","_ref$underline","underline","linkRef","viewClassName","ListHeader","description","_ref$filled","Item","caption","_useContext","useContext","ListContext","orderedList","markerType","colorMarker","reversed","_useContext$index","_useContext$start","start","markerLowerAlpha","itemClassNames","isDisc","marker","monospaceNumbers","displayName","isItem","isItemElement","obj","List","Object","assign","ListComponent","alphaMarker","decimalMarker","listClassNames","listPresets","mobile","Loader","PLACEHOLDER_CHAR","_ref$keepCharPosition","keepCharPositions","onBeforeDisplay","inputNode","setInputNode","textMask","textHidden","setTextHidden","update","createTextMaskInputElement","inputElement","pipe","guide","showMask","placeholderChar","currentCaretPosition","previousConformedValue","ModalResponsiveComponent","Modal","ModalResponsive","Header","Content","Footer","Closer","fixedPosition","fullscreen","componentSize","modalRef","baseModalProps","desktopStyles","transitions","querySelector","marginTop","mobileStyles","ResponsiveContext","ModalContext","flex","_useContext2","sticky","_ref$layout","layout","gap","layoutStyles","_ref$hasCloser","hasCloser","hasContent","NavigationBar","scrollableParentRef","SUPPORTS_TOUCH","isPointerEventsSupported","isTouchSupported","Mq","_ref$query","touch","onMatchChange","queryMatches","setMatches","useLayoutEffect_SAFE_FOR_SSR","mql","getMatchMedia","handleMatchChange","addListener","removeListener","releaseMatchMedia","pool","refCounters","queryProp","MqList","matchMedia","maxTouchPoints","msMaxTouchPoints","BackArrowAddon","_ref$textOpacity","textOpacity","htmlAttributes","ArrowLeftMediumMIcon","ArrowLeftMIcon","opacity","CrossHeavyMIcon","CrossMIcon","_cn4","addonClassName","closerClassName","bottomAddonsClassName","_ref$trim","_ref$titleSize","titleSize","hasBackButton","backButtonClassName","imageUrl","closerIcon","onBack","setScrollTop","titleMargin","setTitleMargin","bottomContentRef","headerRef","mainLinePaddingTopRef","leftAddonsRef","rightAddonsRef","compactTitle","hasLeftPart","hasRightPart","withAnimation","showContentOnBot","showStaticContentOnTop","showStaticContentOnBot","showAnimatedContentOnTop","showAnimatedContentOnBot","headerPaddingTop","_leftAddonsRef$curren","_rightAddonsRef$curre","leftAddonsWidth","rightAddonsWidth","marginSize","abs","shouldAddLeftMargin","prev","newState","divElement","paddingTop","args","extraClassName","hidden","visibility","backgroundImage","renderBackButton","ADDONS_HEIGHT","marginLeft","marginRight","renderCloser","Notification","element","onRemoveNotification","_element$props","onCloseTimeout","handleCloseTimeout","notificationProps","CSS_TRANSITION_CLASS_NAMES","NotificationManager","notifications","_ref$style","TransitionGroup","notificationClassNameSelector","actionSectionClassName","_ref$offset","_ref$autoCloseDelay","autoCloseDelay","onMouseEnter","onMouseLeave","onClickOutside","notificationRef","autoCloseTimeoutRef","closeTimeoutRef","isClosing","setIsClosing","startAutoCloseTimer","stopAutoCloseTimer","elementClosest","handleMouseEnter","handleMouseLeave","handleOutsideClick","isTargetNotification","closest","useClickOutside","cb","handler","swipeableHandlers","useSwipeable","onSwiped","dir","delta","Wrapper","ToastPlate","SIGNS","SEPARATORS","createSeparatorsRegExp","getAllowedValue","fractionLength","separator","sign","allowSigns","testedValue","getNumberRegExp","reStr","MAX_SAFE_INTEGER","_testedValue$split$ma","_testedValue$split$ma2","NumberInput","_ref$allowSigns","_ref$separator","getNumberValueFromStr","parseFloat","visibleValue","valueBlur","allowedValue","restoreCaret","positionCursor","isEndPosition","enteredSign","enteredSeparator","altKey","metaKey","ctrlKey","hasSeparator","indexOf","Tag","CoreTag","DefaultView","_ref$sidePadding","sidePadding","_ref$activePadding","activePadding","pagesCount","currentPageIndex","_ref$onPageChange","onPageChange","maxHalfCount","maxElementsCount","itemsFit","elementsCount","getPageIndex","elementIndex","lastIndex","reverseIndex","reverseElementIndex","hasCollapsedItems","computedIndex","pageIndex","active","PerPageView","Pagination","_ref$currentPageIndex","_ref$hideArrows","hideArrows","handlePageClick","shouldRenderPrevArrow","shouldRenderNextArrow","handlePrevPageClick","ChevronBackMIcon","handleNextPageClick","ChevronForwardMIcon","InputProgress","maxCodeLength","codeLength","CELLS","KeyPad","digit","KeyPadButton","BackspaceXxlIcon","PassCode","_ref$maxCodeLength","passwordLen","PasswordInput","onPasswordVisibleChange","passwordVisible","statePasswordVisible","setStatePasswordVisible","isPasswordVisible","EyeMIcon","EyeOffMIcon","getDefaultObserveTarget","getColorByToken","token","getPropertyValue","COMMON_SIZES","getSizes","lineWidth","nodeRing","nodeCore","elementSizes","nodeRadius","getTheme","dimens","baseColors","primary","OBSERVABLE_TOKENS","bg","ringBg","THEME_STATE","accent","selectedRingBg","PatternLock","_ref$observeTokens","observeTokens","_ref$observerParams","observerParams","_ref$justifyNodes","justifyNodes","_ref$forgotCodeBtnTex","forgotCodeBtnText","_ref$showForgotCodeBt","showForgotCodeBtn","onForgotBtnClick","_ref$extraBounds","extraBounds","DEFAULT_EXTRA_BOUNDS","params","setParams","_getSizes","theme","styleObserver","_observerParams$optio","OBSERVE_OPTIONS","_observerParams$getTa","getTarget","MutationObserver","_getSizes2","_styleObserver","ReactCanvasPatternLock","rows","cols","childList","attributes","characterData","subtree","ACCENT_INITIAL","ACCENT_SUCCESS","ACCENT_FAILURE","PRIMARY","BG","RING_BG_INITIAL","SELECTED_RING_BG_INITIAL","SELECTED_RING_BG_SUCCESS","SELECTED_RING_BG_FAILURE","INITIAL","SUCCESS","FAILURE","deleteFormatting","phone","setCaretPosition","PhoneInput","_ref$clearableCountry","clearableCountryCode","handleBeforeDisplay","conformedValue","config","previousValueWithoutFormatting","currentValueWithoutFormatting","conformToMask","insertedNumber","getInsertedNumber","countryPrefix","SIDE_POSITIONS","optionClassName","_ref$Field","_ref$fieldProps","isSideGap","fieldDedaultProps","optionProps","Checkmark","restInnerProps","stickyHeader","PickerButtonResponsive","option","BaseOption","MoreSIcon","MoreMIcon","DEFAULT_TRANSITION","availableHieghtModifier","enabled","phase","requires","fn","_ref$state","state","modifiersData","popper","elements","maxSize","maxHeight","_ref2$transition","transition","_ref2$offset","_ref2$withArrow","withArrow","_ref2$withTransition","_ref2$position","arrowClassName","_ref2$transitionDurat","transitionDuration","_ref2$zIndex","fallbackPlacements","_ref2$preventOverflow","preventOverflow","_ref2$availableHeight","availableHeight","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","arrowShift","setArrowShift","updatePopperRef","popperRef","innerRef","popperModifiers","modifiers","mainAxis","_usePopper","usePopper","popperStyles","updatePopper","updatePopoverWidth","_updatePopperRef$curr","call","_referenceElement$get","_popperStyles$popper","arrow","nodeRef","onEntering","_transition$onEnterin","getDefaultPortalContainer","createPortalContainer","portalContainer","setRef","_ref$getPortalContain","_ref$immediateMount","mountNode","setMountNode","createPortal","translateX","Addon","_ref$verticalAlign","verticalAlign","_ref$addonPadding","addonPadding","_ref$weight","_ref$textView","textView","_ref$color","_ref$minorUnits","minorUnits","CoreAmount","AmountTitle","Category","categoryName","categoryPercent","PureCellContext","_ref$footerPadding","footerPadding","FooterButton","FooterText","Graphics","Main","isReverse","_useContext$direction","Text","titleWeight","titleColor","valueColor","PureCellComponent","_addClasses","_ref$horizontalPaddin","horizontalPadding","_ref$verticalPadding","verticalPadding","cellRef","addClasses","PureCell","ExtraSubtitle","PureInput","RadioGroupDesktop","BaseRadioGroup","RadioGroupMobile","RadioGroup","isChecked","childValue","radioList","renderRadio","Radio","circleClassName","req","require","packages","keys","reduce","acc","getComponent","packageName","componentName","subComponentName","colorStylesMap","wrapper","heightAutoObserverEl","heightAutoObserverWrapperEl","contentWrapper","contentEl","vertical","horizontal","hover","track","scrollbar","dragging","_ref$scrollableNodePr","scrollableNodeProps","_ref$contentNodeProps","contentNodeProps","_ref$autoHide","autoHide","_ref$forceVisible","forceVisible","_ref$autoHideTimeout","autoHideTimeout","_ref$clickOnTrack","clickOnTrack","_ref$horizontalAutoSt","horizontalAutoStretch","_ref$widthPropName","widthPropName","elRef","maskNodeRef","instance","SimpleBar","scrollbarMinSize","scrollableNode","contentNode","unMount","mutationObserver","rootNode","maskNode","setMinWidth","display","contentRect","newWidth","ceil","cancel","SegmentedControlContext","createContext","SegmentedControl","selectedId","_ref$shape","defaultChildren","selectedBoxRef","selectedSegmentPosition","isPositionFounded","setSelectedBoxStyles","segments","offsetLeft","setSelectedBoxStylesRef","Segment","segmentRef","getElementSize","property","isNaN","getTagWidth","tagMarginLeft","tagMarginRight","_ref$option","handleDeleteTag","CrossCompactMIcon","TagList","_ref$selectedMultiple","collapseTagList","moveInputToNewLine","transformCollapsedTagText","transformTagText","isPopoverOpen","handleUpdatePopover","_ref$Tag","DefaultTag","isShowMoreEnabled","setShowMoreEnabled","visibleElements","setVisibleElements","inputOnNewLine","setInputOnNewLine","contentWrapperRef","_useFocus3","inputFocusVisible","useLayoutEffect","totalVisibleElements","calculateTotalElementsPerRow","containerWidth","inputMinWidth","tags","getElementsByTagName","latestTag","getAttribute","totalTagsWidth","inputTextIsOverflow","scrollWidth","handleMouseDown","eventTarget","lastSelectedTag","toggleShowMoreLessButton","collapseTagTitle","shouldAddVerticalMargin","defaultMatch","filterOptions","math","optionsIsGroupShapes","isGroup","group","matchedOptions","SelectWithTags","DefaultArrow","_ref$autocomplete","_ref$allowUnselect","allowUnselect","_ref$collapseTagList","_ref$moveInputToNewLi","controlled","selectedTags","setSelectedTags","setPopoverOpen","updatePopover","resetValue","deletedKey","filteredOptions","isAutocomplete","showEmptyOptionsList","_ref$selectedDraft","selectedDraft","OptionsListWithApply","defaultGetOptionProps","getOptionProps","showHeaderWithSelectAll","_ref$flatOptions","flatOptions","_ref$onApply","onApply","_ref$onClose","_ref$visibleOptions","visibleOptions","DEFAULT_VISIBLE_OPTIONS","_ref$Footer","DefaultFooter","_ref$Header","DefaultHeader","headerProps","SELECT_ALL_KEY","header","selectAllOption","useSelectWithApply","_ref$optionsListProps","_ref$showSelectAll","showSelectAll","_ref$showHeaderWithSe","_useMemo","processOptions","selectedOptions","setSelectedDraft","selectedOptionsRef","memoizedOptions","handleToggleAll","restArgs","initiatorSelected","o","BaseSelectMobile","optionsListClassName","optionGroupClassName","_ref$options","_ref$multiple","_ref$circularNavigati","circularNavigation","_ref$optionsListWidth","optionsListWidth","_ref$selected","_ref$optionsSize","optionsSize","_ref$optionProps","isBottomSheet","modalProps","modalHeaderProps","modalFooterProps","_ref$showEmptyOptions","rootRef","fieldRef","listRef","initiatorRef","alreadyClickedRef","itemToString","scrollableContainerRef","useMultipleSelectionProps","onSelectedItemsChange","changes","_changes$selectedItem","selectedItems","stateReducer","actionAndChanges","useMultipleSelection","_useMultipleSelection","addSelectedItem","removeSelectedItem","getDropdownProps","_useCombobox","useCombobox","items","defaultHighlightedIndex","onIsOpenChange","selectedItem","alreadySelected","allowRemove","highlightedIndex","getMenuProps","getInputProps","getItemProps","getComboboxProps","getLabelProps","openMenu","menuProps","suppressRefError","highlighted","renderOptionsList","handleFieldKeyDown","handleFieldFocus","handleFieldClick","renderValue","BottomSheet","containerClassName","ModalMobile","_modalProps$onClose","_len","_key","apply","VirtualOptionsList","_ref$highlightedIndex","emptyPlaceholder","_ref$showFooter","nativeScrollbarProp","scrollbarRef","visibleOptionsInvalidateKey","setVisibleOptionsInvalidateKey","prevHighlightedIndex","usePrevious","rowVirtualizer","useVirtual","overscan","scrollToIndex","virtualItems","notDisabled","firstNonDisabled","lastNonDisabled","lastIndexOf","useVisibleOptions","invalidate","styleTargetRef","groupStartIndexes","currentIndex","renderList","virtualRow","measureRef","totalSize","DefaultVirtualOptionsList","_ref$useWithApplyHook","applyProps","SelectModalMobile","BaseCheckmark","checkmarkClassNames","CheckmarkMIcon","_ref$Checkmark","_ref$checkmarkPositio","checkmarkPosition","_ref$mobile","_option$showCheckMark","showCheckMark","isTextContent","renderCheckmark","useSelectWithLoading","renderOption","DEBOUNCE_TIMEOUT","actions","fetchOptionsStart","fetchOptionsBreak","fetchOptionsSuccess","setIsOpened","opened","setQueryString","qs","useLazyLoading","_ref$limit","limit","_ref$initialOffset","initialOffset","optionsFetcher","_ref$skeleton","skeleton","initialOptions","lazyLoadingInitialState","allOptionsLoaded","queryString","_useReducer","useReducer","lazyLoadingReducer","action","hasMore","_useReducer2","_useReducer2$","dispatch","abortFetchingOptionsRef","fetchNextOffsetOptions","Promise","resolve","reject","_abortFetchingOptions","_listRef$current","IntersectionObserver","isIntersecting","root","optionList","lastOption","_payload$open","_abortFetchingOptions2","fetchNextOptionsRef","fetchNextOptionsTimerRef","onQueryStringChange","_abortFetchingOptions3","_listRef$current2","scrollTo","_fetchNextOptionsRef$","skeletonOptions","optionsProps","SidePanelDesktopComponent","_ref$contentTransitio","responsiveContext","enterCn","exitCn","renderWithContext","SidePanelDesktop","ContentDesktop","FooterDesktop","ContentMobile","FooterMobile","SidePanelMobileComponent","SidePanelMobile","createResponsive","desktop","ResponsiveChild","Child","SidePanelResponsiveComponent","_ref2$breakpoint","_ref2$size","getDefaultValue","isClient","isDesktop","SidePanelResponsive","_ref2$view","SliderInput","sliderClassName","stepsClassName","_ref$min","_ref$max","_ref$step","step","_ref$steps","steps","_ref$sliderValue","sliderValue","info","onSliderChange","_ref$customInputProps","customInputProps","pips","range","getValidInputValue","number","handleSliderChange","Slider","stepLabel","valueTo","_ref$behaviour","behaviour","_ref$range","sliderRef","busyRef","hasValueTo","getSlider","_sliderRef$current","noUiSlider","slider","connect","on","updateOptions","set","off","sliderValues","SortableItem","activatorNode","controlPosition","controlPadding","isDragOverlay","_useSortable","useSortable","listeners","setNodeRef","setActivatorNodeRef","isDragging","isCellActivator","isControlActivator","renderControl","hasRightPadding","hasLeftPadding","DragMIcon","CSS","restrictToParentElement","containerNodeRect","draggingNodeRect","restrictToBoundingRect","rect","boundingRect","y","x","restrictToVerticalAxis","DEFAULT_ANNOUNCEMENTS","onDragStart","over","onDragEnd","onDragCancel","SortableList","_ref4","itemClassName","_ref4$controlPosition","renderItem","borderRadius","_ref4$activatorNode","_ref4$view","_ref4$announcements","announcements","_ref4$screenReaderIns","screenReaderInstructions","_React$useState","_React$useState2","activeId","setActiveId","sensors","useSensors","useSensor","KeyboardSensor","TouchSensor","MouseSensor","commonClassName","sortableItemClassName","renderSortableItem","_ref5","DndContext","collisionDetection","closestCenter","handleDragStart","handleDragEnd","oldIndex","newIndex","arrayMove","accessibility","draggable","SortableContext","strategy","verticalListSortingStrategy","getPaddingClassName","DragOverlay","renderDragOverlay","activeItem","horizontalSize","verticalSize","divider","wrap","marginBottom","paddingBottom","SpaceSizes","Space","_classNames","_props$align","_props$direction","_props$size","_props$wrap","_props$divider","_props$fullWidth","fullWidth","_React$useMemo","isArray","getNumberSize","_React$useMemo2","childNodes","directionClassName","alignClassName","nodes","flexWrap","CONFIG","sizeProp","uniqId","useId","_CONFIG$sizeProp","xStart","xEnd","topGradientId","bottomGradientId","x1","stopOpacity","stopColor","d","strokeLinecap","previousValue","StackingContext","currentValue","nextValue","FOCUSED","DEFAULT","POPOVER","MODAL","TOAST","Status","StepBar","memo","isDone","classNameStep","SteppedProgressBar","maxStep","validMaxSteps","isViewString","bar","StepIndicator","Step","stepNumber","isSelected","ordered","isPositive","isError","isWarning","isWaiting","customStepIndicator","isStepCompleted","interactive","isVerticalAlign","isNotLastStep","stepRef","renderDash","getStepIndicator","handleTextClick","Steps","_ref$defaultActiveSte","defaultActiveStep","activeStepProp","activeStep","_ref$isMarkCompletedS","isMarkCompletedSteps","_ref$isVerticalAlign","_ref$ordered","_ref$interactive","checkIsStepDisabled","checkIsStepError","checkIsStepWarning","checkIsStepWaiting","checkIsStepPositive","checkIsStepCustom","setActiveStep","stepsLength","handleStepClick","isInteractive","Switch","_ref$reversed","_ref$checked","SystemMessageContext","SystemMessage","fullHeight","renderChildrenWithFullHeight","renderCloned","childrenArray","childrenCount","idx","isLastElement","isControlsElement","Caption","Controls","directionProp","isMultipleElements","isColumn","Graphic","Subtitle","Title","SystemMessageResponsive","createCompound","functionComponent","SystemMessageResponsiveComponent","TagDesktop","BaseTag","TagMobile","childrenClassName","childrenRef","_ref$colorStylesMap","tagRef","tagProps","PseudoTextArea","pseudoTextareaClassName","maxLength","getDefaultCounterText","textLength","Textarea","_ref$autoComplete","_ref$autosize","autosize","textareaClassName","onHeightChange","maxRows","minRows","_ref$resize","resize","_ref$rows","_ref$showCounter","showCounter","_ref$getCounterText","getCounterText","_ref$allowOverflow","allowOverflow","textareaRef","pseudoTextareaRef","scrollPosition","setScrollPosition","hasOverflow","pseudoNode","getValueLength","textareaClassNameCalc","textarea","textareaProps","handleTextareaBlur","handleTextareaFocus","handleTextareaChange","handleTeaxtareaScroll","getBottomAddons","counterIsVisible","TextareaAutosize","TimeInput","formattedValueArr","isCompleteTimeInput","ToastPlateDesktop","BaseToastPlate","ToastPlateMobile","iconDefaultComponents","negative","positive","attention","titleClassName","badge","getBadgeIcons","closerWrapperClassName","_ref$bottomButtonPosi","bottomButtonPosition","needRenderLeftAddons","iconComponents","visibleColorOutline","closeButtonWrapper","DefaultToastPlateDesktop","ToastDesktop","_ref$ToastPlate","BaseToast","DefaultToastPlateMobile","ToastMobile","Toast","bottomOffset","onTouchStart","plateRef","prevOpen","startTimer","stopTimer","handleTouchStart","handleClickOutside","TooltipDesktop","_ref$trigger","trigger","_ref$onCloseDelay","onCloseDelay","_ref$onOpenDelay","onOpenDelay","forcedOpen","targetClassName","_ref$targetRef","_ref$preventOverflow","_ref$availableHeight","_ref$anchor","anchor","setVisible","setTarget","timer","show","clickedOutside","handleBodyClick","onClickProps","handleTargetClick","toggle","onHoverProps","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","getTargetProps","getContentProps","TooltipResponsive","_ref$defaultMatch","_ref$actionButtonTitl","actionButtonTitle","_useControlled","useControlled","controlledValue","isControlled","uncontrolledValue","setUncontrolledValue","_useControlled2","openValue","setOpenValueIfUncontrolled","getBorderCorners","bordersSize","bottomRight","bottomLeft","topRight","topLeft","isBackgroundToken","BACKGROUND","getClasses","borderColor","borderSize","shadow","Underlay","dimensions","_ref$overflow","paddingSize","bordersStyles","contentBordersStyles","underlayStyles","contentStyles","backgroundImageURL","axis","alignment","BORDER_COLOR","SHADOW","webpackContext","webpackContextResolve","__webpack_require__","Error","webpackContextKeys","module","exports"],"sourceRoot":""}