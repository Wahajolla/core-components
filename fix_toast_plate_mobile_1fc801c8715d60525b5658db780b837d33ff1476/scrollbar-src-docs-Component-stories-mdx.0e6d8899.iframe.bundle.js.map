{"version":3,"file":"scrollbar-src-docs-Component-stories-mdx.0e6d8899.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/scrollbar/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/scrollbar/src/index.module.css?317e","webpack://@alfalab/core-components/./packages/scrollbar/src/default.module.css?3a07","webpack://@alfalab/core-components/./packages/scrollbar/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/scrollbar/src/index.module.css?8f47","webpack://@alfalab/core-components/./packages/scrollbar/src/Component.tsx","webpack://@alfalab/core-components/./packages/scrollbar/src/default.module.css?d27d","webpack://@alfalab/core-components/./packages/scrollbar/src/inverted.module.css?ceb9"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Компонент скроллбара.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Рекомендуется использовать только внутри компонентов, а не для всей страницы целиком.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"вертикальный-скролл\",\n      children: \"Вертикальный скролл\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const getChildStyle = (bgColor) => ({\\n      height: 80,\\n      textAlign: 'center',\\n      lineHeight: '80px',\\n      fontSize: 40,\\n      fontWeight: 700,\\n      color: 'var(--color-light-text-tertiary)',\\n      background: `var(${bgColor})`\\n    });\\n    return (\\n        <div style={{height: 200}}>\\n              <Scrollbar style={{height: '100%'}} autoHide={false}>\\n                    {new Array(51).fill(null).map((_, idx) => {\\n                        const style = getChildStyle(idx % 2 === 0 ? '--color-light-bg-tertiary' : '--color-light-bg-secondary');\\n                        return (<div key={idx} style={style}>{idx}</div>);\\n                    })}\\n              </Scrollbar>\\n        </div>\\n    );\\n})\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"горизонтальный-скролл\",\n      children: \"Горизонтальный скролл\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const scrollbarStyle = {\\n        width: '100%',\\n        margin: '10px 0px',\\n        whiteSpace: 'nowrap',\\n        overflow: 'auto',\\n    };\\n    const getChildStyle = (bgColor) => ({\\n        display: 'inline-block',\\n        width: 80,\\n        height: 200,\\n        textAlign: 'center',\\n        lineHeight: '200px',\\n        fontSize: 40,\\n        fontWeight: 700,\\n        color: 'var(--color-light-text-tertiary)',\\n        background: `var(${bgColor})`,\\n    });\\n    return (\\n        <Scrollbar style={scrollbarStyle} autoHide={false}>\\n            {new Array(51).fill(null).map((_, idx) => {\\n                const style = getChildStyle(\\n                    idx % 2 === 0 ? '--color-light-bg-tertiary' : '--color-light-bg-secondary',\\n                );\\n                return (\\n                    <div key={idx} style={style}>\\n                        {idx}\\n                    </div>\\n                );\\n            })}\\n        </Scrollbar>\\n    );\\n});\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    --scrollbar-rail-size: 12px;\\n    --scrollbar-thumb-size: 4px;\\n    --scrollbar-hover-size: 6px;\\n    --scrollbar-thumb-border-radius: 3px;\\n    --scrollbar-thumb-side-outer-offset: 4px;\\n    --scrollbar-thumb-margin: 3px;\\n}\\n\\n.component {\\n    position: relative;\\n    flex-direction: column;\\n    flex-wrap: wrap;\\n    justify-content: flex-start;\\n    align-content: flex-start;\\n    align-items: flex-start;\\n\\n    & .wrapper {\\n        overflow: hidden;\\n        width: inherit;\\n        height: inherit;\\n        max-width: inherit;\\n        max-height: inherit;\\n    }\\n\\n    & .heightAutoObserverWrapper {\\n        box-sizing: inherit;\\n        height: 100%;\\n        width: 100%;\\n        max-width: 1px;\\n        position: relative;\\n        float: left;\\n        max-height: 1px;\\n        overflow: hidden;\\n        z-index: -1;\\n        padding: 0;\\n        margin: 0;\\n        pointer-events: none;\\n        flex-grow: inherit;\\n        flex-shrink: 0;\\n        flex-basis: 0;\\n    }\\n\\n    & .heightAutoObserver {\\n        box-sizing: inherit;\\n        display: block;\\n        opacity: 0;\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        height: 1000%;\\n        width: 1000%;\\n        min-height: 1px;\\n        min-width: 1px;\\n        overflow: hidden;\\n        pointer-events: none;\\n        z-index: -1;\\n    }\\n\\n    & .mask {\\n        direction: inherit;\\n        position: absolute;\\n        overflow: hidden;\\n        padding: 0;\\n        margin: 0;\\n        left: 0;\\n        top: 0;\\n        bottom: 0;\\n        right: 0;\\n        width: auto;\\n        height: auto;\\n        z-index: 0;\\n    }\\n\\n    & .offset {\\n        direction: inherit;\\n        box-sizing: inherit;\\n        resize: none;\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        bottom: 0;\\n        right: 0;\\n        padding: 0;\\n        margin: 0;\\n        -webkit-overflow-scrolling: touch;\\n    }\\n\\n    & .contentWrapper {\\n        direction: inherit;\\n        box-sizing: border-box;\\n        position: relative;\\n        display: block;\\n        height: 100%; /* Required for horizontal native scrollbar to not appear if parent is taller than natural height */\\n        width: auto;\\n        max-width: 100%; /* Not required for horizontal scroll to trigger */\\n        max-height: 100%; /* Needed for vertical scroll to trigger */\\n        outline: none;\\n        scrollbar-width: none;\\n        -ms-overflow-style: none;\\n\\n        &::-webkit-scrollbar {\\n            width: 0;\\n            height: 0;\\n        }\\n    }\\n\\n    & .placeholder {\\n        max-height: 100%;\\n        max-width: 100%;\\n        width: 100%;\\n        pointer-events: none;\\n    }\\n\\n    & :global(.track) {\\n        z-index: 1;\\n        position: absolute;\\n        right: 0;\\n        bottom: 0;\\n        pointer-events: auto;\\n        overflow: hidden;\\n\\n        &.vertical {\\n            top: 0;\\n            width: var(--scrollbar-rail-size);\\n            transform: rotateY(-180deg);\\n\\n            &.hover {\\n                & :global(.scrollbar) {\\n                    width: var(--scrollbar-hover-size);\\n                }\\n            }\\n\\n            & :global(.scrollbar) {\\n                width: var(--scrollbar-thumb-size);\\n                margin-left: var(--scrollbar-thumb-margin);\\n                transition: width 0.1s linear;\\n\\n                &:before {\\n                    right: 0;\\n                    left: 0;\\n                    top: var(--scrollbar-thumb-side-outer-offset);\\n                    bottom: var(--scrollbar-thumb-side-outer-offset);\\n                    transition: opacity 0.2s linear;\\n                }\\n            }\\n        }\\n\\n        &.horizontal {\\n            left: 0;\\n            height: var(--scrollbar-rail-size);\\n\\n            &.hover {\\n                & :global(.scrollbar) {\\n                    height: var(--scrollbar-hover-size);\\n                }\\n            }\\n\\n            & :global(.scrollbar) {\\n                right: auto;\\n                left: 0;\\n                bottom: var(--scrollbar-thumb-margin);\\n                height: var(--scrollbar-thumb-size);\\n                min-height: 0;\\n                min-width: 40px;\\n                width: auto;\\n                transition: height 0.1s linear;\\n                will-change: height;\\n\\n                &:before {\\n                    left: var(--scrollbar-thumb-side-outer-offset);\\n                    right: var(--scrollbar-thumb-side-outer-offset);\\n                    top: 0;\\n                    bottom: 0;\\n                    transition: opacity 0.2s linear;\\n                }\\n            }\\n        }\\n    }\\n\\n    & :global(.scrollbar) {\\n        position: absolute;\\n        left: 0;\\n        right: 0;\\n        min-height: 40px;\\n\\n        &:before {\\n            position: absolute;\\n            content: '';\\n            border-radius: var(--scrollbar-thumb-border-radius);\\n            left: 0;\\n            right: 0;\\n            opacity: 0;\\n        }\\n\\n        &:global(.visible):before {\\n            opacity: 1;\\n        }\\n    }\\n\\n    &:global(.dragging) .content {\\n        pointer-events: none;\\n        user-select: none;\\n        -webkit-user-select: none;\\n    }\\n\\n    &:global(.dragging .track) {\\n        pointer-events: all;\\n\\n        &.vertical :global(.scrollbar) {\\n            width: var(--scrollbar-hover-size);\\n        }\\n\\n        &.horizontal :global(.scrollbar) {\\n            height: var(--scrollbar-hover-size);\\n        }\\n    }\\n}\\n\\n:global(.simplebar-hide-scrollbar) {\\n    position: fixed;\\n    left: 0;\\n    visibility: hidden;\\n    overflow-y: scroll;\\n    scrollbar-width: none;\\n    -ms-overflow-style: none;\\n\\n    &::-webkit-scrollbar {\\n        width: 0;\\n        height: 0;\\n    }\\n}\\n\";","export default \"@import '../../themes/src/default.css';\\n\\n:root {\\n    --scrollbar-background-color: var(--color-light-graphic-primary-alpha-30);\\n    --scrollbar-background-color-active: var(--color-light-graphic-primary-alpha-60);\\n}\\n\\n.component {\\n    & :global(.scrollbar) {\\n        &:before {\\n            background-color: var(--scrollbar-background-color);\\n        }\\n    }\\n\\n    &:global(.dragging .track) {\\n        & :global(.scrollbar.visible):before {\\n            background-color: var(--scrollbar-background-color-active);\\n        }\\n    }\\n}\\n\";","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { boolean, select, number } from '@storybook/addon-knobs';\nimport { ComponentHeader, CssVars, Tabs } from 'storybook/blocks';\nimport { Scrollbar } from '@alfalab/core-components-scrollbar';\nimport { Scrollbar as ScrollbarTS } from '../Component';\nimport Description from './description.mdx';\nimport packageJson from '../../package.json';\nimport styles from '!!raw-loader!../index.module.css';\nimport colorsStyles from '!!raw-loader!../default.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Scrollbar\",\n      component: Scrollbar,\n      id: \"Scrollbar\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Scrollbar\",\n      children: React.createElement(() => {\n        const direction = select('direction', ['vertical', 'horizontal'], 'vertical');\n        const colors = select('colors', ['default', 'inverted'], 'default');\n        const autoHide = boolean('autoHide', false);\n        const autoHideTimeout = number('autoHideTimeout', 1000);\n        const clickOnTrack = boolean('clickOnTrack', true);\n        const getChildVerticalStyle = (bgColor, color) => ({\n          height: 80,\n          textAlign: 'center',\n          lineHeight: '80px',\n          fontSize: 40,\n          fontWeight: 700,\n          color: `var(${color})`,\n          background: `var(${bgColor})`\n        });\n        const getChildHorizontalStyle = (bgColor, color) => ({\n          display: 'inline-block',\n          height: 200,\n          width: 80,\n          textAlign: 'center',\n          lineHeight: '80px',\n          fontSize: 40,\n          fontWeight: 700,\n          color: `var(${color})`,\n          background: `var(${bgColor})`\n        });\n        const bgColorMap = {\n          default: {\n            background: ['--color-light-bg-tertiary', '--color-light-bg-secondary'],\n            color: '--color-light-text-tertiary'\n          },\n          inverted: {\n            background: ['--color-light-bg-tertiary-inverted', '--color-light-bg-secondary-inverted'],\n            color: '--color-light-text-tertiary-inverted'\n          }\n        };\n        const getBgColor = idx => idx % 2 === 0 ? bgColorMap[colors].background[0] : bgColorMap[colors].background[1];\n        const textColor = bgColorMap[colors].color;\n        return /*#__PURE__*/_jsx(_components.div, {\n          style: {\n            backgroundColor: colors === 'inverted' ? 'var(--color-light-bg-primary-inverted)' : 'transparent',\n            padding: '8px',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          children: direction === 'vertical' ? /*#__PURE__*/_jsx(Scrollbar, {\n            style: {\n              height: 200,\n              width: 1000\n            },\n            autoHide: autoHide,\n            colors: colors,\n            autoHideTimeout: autoHideTimeout,\n            clickOnTrack: clickOnTrack,\n            children: new Array(51).fill(null).map((_, idx) => /*#__PURE__*/_jsx(_components.div, {\n              style: getChildVerticalStyle(getBgColor(idx), textColor),\n              children: idx\n            }, idx))\n          }) : /*#__PURE__*/_jsx(Scrollbar, {\n            style: {\n              height: 200,\n              width: 1000,\n              whiteSpace: 'nowrap'\n            },\n            autoHide: autoHide,\n            colors: colors,\n            autoHideTimeout: autoHideTimeout,\n            clickOnTrack: clickOnTrack,\n            children: new Array(51).fill(null).map((_, idx) => /*#__PURE__*/_jsx(_components.div, {\n              style: getChildHorizontalStyle(getBgColor(idx), textColor),\n              children: idx\n            }, idx))\n          })\n        });\n      })\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Scrollbar\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/scrollbar\",\n      design: \"https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components?node-id=186%3A20513\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Scrollbar } from '@alfalab/core-components/scrollbar';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: ScrollbarTS\n      }),\n      cssVars: /*#__PURE__*/_jsx(CssVars, {\n        css: `\n                ${styles}${colorsStyles}\n            `\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const scrollbar = () => React.createElement(() => {\n  const direction = select(\"direction\", [\"vertical\", \"horizontal\"], \"vertical\");\n  const colors = select(\"colors\", [\"default\", \"inverted\"], \"default\");\n  const autoHide = boolean(\"autoHide\", false);\n  const autoHideTimeout = number(\"autoHideTimeout\", 1000);\n  const clickOnTrack = boolean(\"clickOnTrack\", true);\n  const getChildVerticalStyle = (bgColor, color) => ({\n    height: 80,\n    textAlign: \"center\",\n    lineHeight: \"80px\",\n    fontSize: 40,\n    fontWeight: 700,\n    color: `var(${color})`,\n    background: `var(${bgColor})`\n  });\n  const getChildHorizontalStyle = (bgColor, color) => ({\n    display: \"inline-block\",\n    height: 200,\n    width: 80,\n    textAlign: \"center\",\n    lineHeight: \"80px\",\n    fontSize: 40,\n    fontWeight: 700,\n    color: `var(${color})`,\n    background: `var(${bgColor})`\n  });\n  const bgColorMap = {\n    default: {\n      background: [\"--color-light-bg-tertiary\", \"--color-light-bg-secondary\"],\n      color: \"--color-light-text-tertiary\"\n    },\n    inverted: {\n      background: [\"--color-light-bg-tertiary-inverted\", \"--color-light-bg-secondary-inverted\"],\n      color: \"--color-light-text-tertiary-inverted\"\n    }\n  };\n  const getBgColor = idx => idx % 2 === 0 ? bgColorMap[colors].background[0] : bgColorMap[colors].background[1];\n  const textColor = bgColorMap[colors].color;\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      backgroundColor: colors === \"inverted\" ? \"var(--color-light-bg-primary-inverted)\" : \"transparent\",\n      padding: \"8px\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    children: direction === \"vertical\" ? /*#__PURE__*/_jsx(Scrollbar, {\n      style: {\n        height: 200,\n        width: 1000\n      },\n      autoHide: autoHide,\n      colors: colors,\n      autoHideTimeout: autoHideTimeout,\n      clickOnTrack: clickOnTrack,\n      children: new Array(51).fill(null).map((_, idx) => /*#__PURE__*/_jsx(\"div\", {\n        style: getChildVerticalStyle(getBgColor(idx), textColor),\n        children: idx\n      }, idx))\n    }) : /*#__PURE__*/_jsx(Scrollbar, {\n      style: {\n        height: 200,\n        width: 1000,\n        whiteSpace: \"nowrap\"\n      },\n      autoHide: autoHide,\n      colors: colors,\n      autoHideTimeout: autoHideTimeout,\n      clickOnTrack: clickOnTrack,\n      children: new Array(51).fill(null).map((_, idx) => /*#__PURE__*/_jsx(\"div\", {\n        style: getChildHorizontalStyle(getBgColor(idx), textColor),\n        children: idx\n      }, idx))\n    })\n  });\n});\nscrollbar.storyName = 'Scrollbar';\nscrollbar.parameters = {\n  storySource: {\n    source: 'React.createElement(() => {\\n  const direction = select(\\\"direction\\\", [\\\"vertical\\\", \\\"horizontal\\\"], \\\"vertical\\\");\\n  const colors = select(\\\"colors\\\", [\\\"default\\\", \\\"inverted\\\"], \\\"default\\\");\\n  const autoHide = boolean(\\\"autoHide\\\", false);\\n  const autoHideTimeout = number(\\\"autoHideTimeout\\\", 1000);\\n  const clickOnTrack = boolean(\\\"clickOnTrack\\\", true);\\n  const getChildVerticalStyle = (bgColor, color) => ({\\n    height: 80,\\n    textAlign: \\\"center\\\",\\n    lineHeight: \\\"80px\\\",\\n    fontSize: 40,\\n    fontWeight: 700,\\n    color: `var(${color})`,\\n    background: `var(${bgColor})`\\n  });\\n  const getChildHorizontalStyle = (bgColor, color) => ({\\n    display: \\\"inline-block\\\",\\n    height: 200,\\n    width: 80,\\n    textAlign: \\\"center\\\",\\n    lineHeight: \\\"80px\\\",\\n    fontSize: 40,\\n    fontWeight: 700,\\n    color: `var(${color})`,\\n    background: `var(${bgColor})`\\n  });\\n  const bgColorMap = {\\n    default: {\\n      background: [\\\"--color-light-bg-tertiary\\\", \\\"--color-light-bg-secondary\\\"],\\n      color: \\\"--color-light-text-tertiary\\\"\\n    },\\n    inverted: {\\n      background: [\\\"--color-light-bg-tertiary-inverted\\\", \\\"--color-light-bg-secondary-inverted\\\"],\\n      color: \\\"--color-light-text-tertiary-inverted\\\"\\n    }\\n  };\\n  const getBgColor = idx => idx % 2 === 0 ? bgColorMap[colors].background[0] : bgColorMap[colors].background[1];\\n  const textColor = bgColorMap[colors].color;\\n  return <div style={{\\n    backgroundColor: colors === \\\"inverted\\\" ? \\\"var(--color-light-bg-primary-inverted)\\\" : \\\"transparent\\\",\\n    padding: \\\"8px\\\",\\n    position: \\\"absolute\\\",\\n    top: 0,\\n    left: 0,\\n    right: 0,\\n    bottom: 0\\n  }}>\\n                {direction === \\\"vertical\\\" ? <Scrollbar style={{\\n      height: 200,\\n      width: 1000\\n    }} autoHide={autoHide} colors={colors} autoHideTimeout={autoHideTimeout} clickOnTrack={clickOnTrack}>\\n                        {new Array(51).fill(null).map((_, idx) => <div key={idx} style={getChildVerticalStyle(getBgColor(idx), textColor)}>\\n                                {idx}\\n                            </div>)}\\n                    </Scrollbar> : <Scrollbar style={{\\n      height: 200,\\n      width: 1000,\\n      whiteSpace: \\\"nowrap\\\"\\n    }} autoHide={autoHide} colors={colors} autoHideTimeout={autoHideTimeout} clickOnTrack={clickOnTrack}>\\n                        {new Array(51).fill(null).map((_, idx) => <div key={idx} style={getChildHorizontalStyle(getBgColor(idx), textColor)}>\\n                                {idx}\\n                            </div>)}\\n                    </Scrollbar>}\\n            </div>;\\n})'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Scrollbar',\n  id: 'Scrollbar',\n  component: Scrollbar,\n  tags: ['stories-mdx'],\n  includeStories: [\"scrollbar\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_x_PaQ\",\"wrapper\":\"wrapper_PzV2i\",\"heightAutoObserverWrapper\":\"heightAutoObserverWrapper_XIsF5\",\"heightAutoObserver\":\"heightAutoObserver_jWgaw\",\"mask\":\"mask_zPNqL\",\"offset\":\"offset_aucl5\",\"contentWrapper\":\"contentWrapper_s9gd2\",\"placeholder\":\"placeholder_qEx8W\",\"vertical\":\"vertical_hRaze\",\"hover\":\"hover_rhhvl\",\"horizontal\":\"horizontal_PIC5i\",\"content\":\"content_oHLNu\"};","import React, { HTMLAttributes, useEffect, useRef } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport cn from 'classnames';\nimport throttle from 'lodash.throttle';\nimport SimpleBar from 'simplebar/src/simplebar';\n\nimport defaultColors from './default.module.css';\nimport styles from './index.module.css';\nimport invertedColors from './inverted.module.css';\n\nconst colorStylesMap = {\n    default: defaultColors,\n    inverted: invertedColors,\n};\n\nexport type ScrollbarProps = {\n    /**\n     * Оборачиваемый элемент.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Дополнительный класс на корневой элемент.\n     */\n    className?: string;\n\n    /**\n     * Набор цветов для компонента\n     */\n    colors?: 'default' | 'inverted';\n\n    /**\n     * Растягивать контент по горизонтали по ширине содержимого.\n     */\n    horizontalAutoStretch?: boolean;\n\n    /**\n     * Название css свойства, которое устанавливается на контейнер при horizontalAutoStretch.\n     */\n    widthPropName?: 'minWidth' | 'width' | 'maxWidth';\n\n    /**\n     * Включает автоскрытие ползунка.\n     */\n    autoHide?: boolean;\n\n    /**\n     * Время в мс, определяющее задержку до исчезновения полосы прокрутки (при включенной опции autoHide).\n     */\n    autoHideTimeout?: number;\n\n    /**\n     * Принудительное отображение полосы прокрутки.\n     */\n    forceVisible?: boolean | 'x' | 'y';\n\n    /**\n     * Управление поведением клика по треку.\n     * Если true, то будет выполняться прокрутка к месту клика.\n     */\n    clickOnTrack?: boolean;\n\n    /**\n     * HTML-aтрибуты на прокручиваемый узел.\n     */\n    scrollableNodeProps?: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >;\n\n    /**\n     * HTML-aтрибуты на узел с контентом.\n     */\n    contentNodeProps?: React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n    >;\n} & HTMLAttributes<HTMLDivElement>;\n\nconst classNames = {\n    wrapper: styles.wrapper,\n    heightAutoObserverEl: styles.heightAutoObserver,\n    heightAutoObserverWrapperEl: styles.heightAutoObserverWrapper,\n    mask: styles.mask,\n    offset: styles.offset,\n    contentWrapper: styles.contentWrapper,\n    contentEl: styles.content,\n    placeholder: styles.placeholder,\n    vertical: styles.vertical,\n    horizontal: styles.horizontal,\n    hover: styles.hover,\n    track: 'track',\n    scrollbar: 'scrollbar',\n    dragging: 'dragging',\n    visible: 'visible',\n};\n\nexport const Scrollbar = React.forwardRef<HTMLDivElement, ScrollbarProps>(\n    (\n        {\n            colors = 'default',\n            className,\n            children,\n            scrollableNodeProps = { ref: null },\n            contentNodeProps = { ref: null },\n            autoHide = true,\n            forceVisible = false,\n            autoHideTimeout = 1000,\n            clickOnTrack = true,\n            horizontalAutoStretch = false,\n            widthPropName = 'minWidth',\n            ...htmlAttributes\n        },\n        ref,\n    ) => {\n        const elRef = useRef<HTMLDivElement>(null);\n        const scrollableNodeRef = useRef<HTMLDivElement>(null);\n        const contentNodeRef = useRef<HTMLDivElement>(null);\n        const maskNodeRef = useRef<HTMLDivElement>(null);\n\n        const colorStyles = colorStylesMap[colors];\n\n        useEffect(() => {\n            let instance: SimpleBar | null;\n\n            if (elRef.current) {\n                instance = new SimpleBar(elRef.current, {\n                    autoHide,\n                    forceVisible,\n                    clickOnTrack,\n                    classNames,\n                    timeout: autoHideTimeout,\n                    direction: 'ltr',\n                    scrollbarMinSize: 40,\n                    scrollableNode: scrollableNodeRef.current,\n                    contentNode: contentNodeRef.current,\n                });\n            }\n\n            return () => {\n                if (instance) {\n                    instance.unMount();\n                    instance = null;\n                }\n            };\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        useEffect(() => {\n            let mutationObserver: MutationObserver | null = null;\n            const contentNode = contentNodeRef.current;\n            const rootNode = elRef.current;\n            const scrollableNode = scrollableNodeRef.current;\n            const maskNode = maskNodeRef.current;\n\n            const setMinWidth = throttle(() => {\n                if (contentNode && rootNode && scrollableNode && maskNode) {\n                    /*\n                     * Устанавливаем min-width, чтобы максимально растянуть абсолютно позиционированный элемент.\n                     * Затем контенту устанавливаем display: inline-block, чтобы его ширина была равна ширине содержимого.\n                     */\n                    maskNode.style.minWidth = '4000px';\n                    contentNode.style.display = 'inline-block';\n\n                    const contentRect = contentNode.getBoundingClientRect();\n                    const newWidth = `${Math.ceil(contentRect.width)}px`;\n                    const prevWidth = rootNode.style[widthPropName];\n\n                    if (newWidth !== prevWidth) {\n                        rootNode.style[widthPropName] = newWidth;\n                    }\n\n                    contentNode.style.display = '';\n                    maskNode.style.minWidth = '';\n                }\n            }, 200);\n\n            if (horizontalAutoStretch && contentNode) {\n                setMinWidth();\n\n                mutationObserver = new MutationObserver(setMinWidth);\n\n                mutationObserver.observe(contentNode, {\n                    childList: true,\n                    subtree: true,\n                    characterData: true,\n                });\n            }\n\n            return () => {\n                setMinWidth.cancel();\n\n                if (mutationObserver) {\n                    mutationObserver.disconnect();\n                }\n            };\n        }, [widthPropName, horizontalAutoStretch]);\n\n        return (\n            <div\n                {...htmlAttributes}\n                ref={mergeRefs([elRef, ref])}\n                data-simplebar={true}\n                className={cn(styles.component, colorStyles.component, className)}\n            >\n                <div className={classNames.wrapper}>\n                    <div className={classNames.heightAutoObserverWrapperEl}>\n                        <div className={classNames.heightAutoObserverEl} />\n                    </div>\n                    <div className={classNames.mask} ref={maskNodeRef}>\n                        <div className={classNames.offset}>\n                            <div\n                                {...scrollableNodeProps}\n                                ref={mergeRefs([\n                                    scrollableNodeRef,\n                                    ...(scrollableNodeProps.ref ? [scrollableNodeProps.ref] : []),\n                                ])}\n                                className={cn(\n                                    classNames.contentWrapper,\n                                    scrollableNodeProps?.className,\n                                )}\n                            >\n                                <div\n                                    {...contentNodeProps}\n                                    ref={mergeRefs([\n                                        contentNodeRef,\n                                        ...(contentNodeProps.ref ? [contentNodeProps.ref] : []),\n                                    ])}\n                                    className={cn(\n                                        classNames.contentEl,\n                                        contentNodeProps?.className,\n                                    )}\n                                >\n                                    {children}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames.placeholder} />\n                </div>\n                <div className={cn(classNames.track, classNames.horizontal)}>\n                    <div className={classNames.scrollbar} />\n                </div>\n                <div className={cn(classNames.track, classNames.vertical)}>\n                    <div className={classNames.scrollbar} />\n                </div>\n            </div>\n        );\n    },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_ZJA1w\"};","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component__nMyH\"};"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","h3","pre","id","live","className","MDXContent","wrapper","MDXLayout","div","title","component","Scrollbar","name","direction","select","colors","autoHide","boolean","autoHideTimeout","number","clickOnTrack","bgColorMap","default","background","color","inverted","getBgColor","idx","textColor","style","backgroundColor","padding","position","top","left","right","bottom","height","width","Array","fill","map","_","bgColor","textAlign","lineHeight","fontSize","fontWeight","whiteSpace","display","version","package","design","description","of","cssVars","css","scrollbar","storyName","parameters","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","href","target","GithubIcon","Space","align","usages","projects","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","changelog","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","_ref$height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","colorStylesMap","classNames","heightAutoObserverEl","heightAutoObserverWrapperEl","mask","offset","contentWrapper","contentEl","placeholder","vertical","horizontal","hover","track","dragging","visible","React","ref","_ref$colors","_ref$scrollableNodePr","scrollableNodeProps","_ref$contentNodeProps","contentNodeProps","_ref$autoHide","_ref$forceVisible","forceVisible","_ref$autoHideTimeout","_ref$clickOnTrack","_ref$horizontalAutoSt","horizontalAutoStretch","_ref$widthPropName","widthPropName","htmlAttributes","_objectWithoutProperties","_excluded","elRef","useRef","scrollableNodeRef","contentNodeRef","maskNodeRef","colorStyles","instance","current","SimpleBar","timeout","scrollbarMinSize","scrollableNode","contentNode","unMount","mutationObserver","rootNode","maskNode","setMinWidth","throttle","minWidth","contentRect","getBoundingClientRect","newWidth","ceil","MutationObserver","observe","childList","subtree","characterData","cancel","disconnect","_objectSpread","mergeRefs","_toConsumableArray"],"sourceRoot":""}