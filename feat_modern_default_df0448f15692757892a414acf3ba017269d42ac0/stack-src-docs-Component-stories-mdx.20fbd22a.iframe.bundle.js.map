{"version":3,"file":"stack-src-docs-Component-stories-mdx.20fbd22a.iframe.bundle.js","mappings":"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","sources":["webpack://@alfalab/core-components/./node_modules/@mdx-js/react/lib/index.js","webpack://@alfalab/core-components/./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs","webpack://@alfalab/core-components/./packages/stack/src/docs/description.mdx","webpack://@alfalab/core-components/./packages/stack/src/docs/Component.stories.mdx","webpack://@alfalab/core-components/./.storybook/blocks/changelog/index.module.css?12de","webpack://@alfalab/core-components/./.storybook/blocks/changelog/changelog.tsx","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.module.css?134e","webpack://@alfalab/core-components/./.storybook/blocks/css-vars/css-vars.tsx","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.module.css?d671","webpack://@alfalab/core-components/./.storybook/blocks/component-header/ComponentHeader.tsx","webpack://@alfalab/core-components/./.storybook/blocks/tabs/index.module.css?a73b","webpack://@alfalab/core-components/./.storybook/blocks/tabs/component.tsx","webpack://@alfalab/core-components/./.storybook/components/icons/GithubIcon.jsx","webpack://@alfalab/core-components/./packages/stack/src/component.tsx","webpack://@alfalab/core-components/./packages/stack/src/context.ts"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","import React, { Component } from 'react';\nimport { renderElement, unmountElement } from '@storybook/react-dom-shim';\nimport { CodeOrSourceMdx, AnchorMdx, HeadersMdx, Docs } from '@storybook/blocks';\n\nvar defaultComponents={code:CodeOrSourceMdx,a:AnchorMdx,...HeadersMdx},ErrorBoundary=class extends Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components};return new Promise((resolve,reject)=>{import('@mdx-js/react').then(({MDXProvider})=>renderElement(React.createElement(ErrorBoundary,{showException:reject,key:Math.random()},React.createElement(MDXProvider,{components},React.createElement(Docs,{context,docsParameter}))),element)).then(resolve);})},this.unmount=element=>{unmountElement(element);};}};\n\nexport { DocsRenderer, defaultComponents };\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Компонент для управления \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/ru/docs/Web/CSS/z-index\",\n        target: \"_blank\",\n        rel: \"nofollow noopener noreferrer\",\n        children: \"порядком наложения\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Если в стилях компонента используется свойство z-index, то скорее всего этот компонент должен использовать компонент Stack.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"проблема\",\n      children: \"Проблема\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Допустим, у нас есть два абсолютно позиционируемых компонента: тултип и модальное окно.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"без-stack\",\n      children: \"Без Stack\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"У компонента Tooltip установлен z-index равный 50, у Modal z-index равен 100, все они рендерятся в Portal.\\nЕсли поместить Tooltip в Modal, то Modal будет перекрывать Tooltip, тем самым пользователь не увидит подсказку.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [modalOpen, setModalOpen] = React.useState(false);\\n\\n    const [tooltipOpen, setTooltipOpen] = React.useState(false);\\n\\n    return (\\n        <div>\\n            <Button\\n                onClick={() => {\\n                    setModalOpen(true);\\n                }}\\n            >\\n                Открыть модал\\n            </Button>\\n            {modalOpen && (\\n                <Portal>\\n                    <div\\n                        style={{\\n                            zIndex: 100,\\n                            position: 'fixed',\\n                            top: 0,\\n                            right: 0,\\n                            bottom: 0,\\n                            left: 0,\\n                            minHeight: '100vh',\\n                            overflowY: 'auto',\\n                            overscrollBehaviorY: 'contain',\\n                            backgroundColor: 'rgba(11,31,53,.6)',\\n                            display: 'flex',\\n                        }}\\n                    >\\n                        <div\\n                            style={{\\n                                position: 'relative',\\n                                width: 800,\\n                                margin: 'auto',\\n                                padding: 30,\\n                                backgroundColor: 'white',\\n                                border: '1px solid black',\\n                            }}\\n                        >\\n                            <Button\\n                                view='ghost'\\n                                onClick={() => {\\n                                    setModalOpen(false);\\n                                    setTooltipOpen(false);\\n                                }}\\n                                style={{\\n                                    position: 'absolute',\\n                                    top: 10,\\n                                    right: 10,\\n                                }}\\n                            >\\n                                <CrossMIcon />\\n                            </Button>\\n                            <Button onClick={() => setTooltipOpen(true)}>Открыть тултип</Button>\\n                            {tooltipOpen && (\\n                                <Portal>\\n                                    <div\\n                                        style={{\\n                                            position: 'fixed',\\n                                            top: '50%',\\n                                            left: '50%',\\n                                            zIndex: 50,\\n                                            display: 'flex',\\n                                            transform: 'translate(-50%, -50%)',\\n                                        }}\\n                                    >\\n                                        <div\\n                                            style={{\\n                                                margin: 'auto',\\n                                                padding: '10px',\\n                                                borderRadius: '10px',\\n                                                boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\\n                                            }}\\n                                        >\\n                                            Tooltip\\n                                        </div>\\n                                    </div>\\n                                </Portal>\\n                            )}\\n                        </div>\\n                    </div>\\n                </Portal>\\n            )}\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Если мы установим z-index у тултипа больший чем у модального окна, то имеем обратную проблему: тултип,\\nкоторый должен отображаться под модальным окном, будет поверх модального окна.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Также использование z-index напрямую в коде компонента создает конфликты — нет централизованного контроля над наложением плавующих компонентов.\\nРазработчик при создании нового «плавующего» компонента, который должен всегда отображаться поверх, например, модального окна,\\nдолжен иметь ввиду значение z-index-а для модального окна.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"со-stack\",\n      children: \"Со Stack\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Все вышеперечисленные проблемы решаются с помощью компонента Stack.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      live: true,\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"render(() => {\\n    const [modalOpen, setModalOpen] = React.useState(false);\\n\\n    return (\\n        <div>\\n            <Button\\n                onClick={() => {\\n                    setModalOpen(true);\\n                }}\\n            >\\n                Открыть модал\\n            </Button>\\n\\n            <ModalDesktop\\n                open={modalOpen}\\n                onClose={() => {\\n                    setModalOpen(false);\\n                }}\\n            >\\n                <ModalDesktop.Content>\\n                    <Tooltip content={<div>Tooltip</div>} trigger='click'>\\n                        <Button block={true}>Открыть тултип</Button>\\n                    </Tooltip>\\n                </ModalDesktop.Content>\\n            </ModalDesktop>\\n        </div>\\n    );\\n});\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"stackingOrder\"\n      }), \" — это словарь с возможными значениями z-index для разных видов «плавающих» компонентов.\\nНапример, это POPOVER для тултипов.\\nЕсли тултип находится внутри модального окна, то z-index будет равен z-index-у модального окна плюс единица.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Константы из словаря stackingOrder:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"FOCUSED — Для компонентов с возможностью фокуса: кнопки, поля ввода\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"DEFAULT — Значение по-умолчанию\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"POPOVER — Компоненты, которые управляют своей позицией, например, поповер, тултип\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"MODAL — Для модальных окон с оверлеем\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"TOAST - Для тостов и нотификаций\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","\nimport React from 'react';\n\n/*Canvas*/\n/*Docs*/\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-docs/mdx-react-shim\";\nimport { Meta, Story, ArgsTable, Markdown } from '@storybook/addon-docs';\nimport { ComponentHeader, Tabs } from 'storybook/blocks';\nimport { Stack } from '@alfalab/core-components-stack';\nimport { Stack as StackTS } from '../component';\nimport packageJson from '../../package.json';\nimport Description from './description.mdx';\nimport Changelog from '../../CHANGELOG.md?raw';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: \"Components/Stack\",\n      component: Stack,\n      parameters: {\n        previewTabs: {\n          canvas: {\n            hidden: true\n          }\n        }\n      },\n      id: \"Stack\"\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(Story, {\n      name: \"Stack\",\n      children: /*#__PURE__*/_jsx(\"div\", {})\n    }), \"\\n\", \"\\n\", /*#__PURE__*/_jsx(ComponentHeader, {\n      name: \"Stack\",\n      version: packageJson.version,\n      package: \"@alfalab/core-components/stack\"\n    }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n      children: /*#__PURE__*/_jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import { Stack } from '@alfalab/core-components/stack';\\n\"\n      })\n    }), \"\\n\", /*#__PURE__*/_jsx(Tabs, {\n      description: /*#__PURE__*/_jsx(Description, {}),\n      props: /*#__PURE__*/_jsx(ArgsTable, {\n        of: StackTS\n      }),\n      changelog: /*#__PURE__*/_jsx(Markdown, {\n        children: Changelog\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, {\n    ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n/* ========= */\nexport const stack = () => /*#__PURE__*/_jsx(\"div\", {});\nstack.storyName = 'Stack';\nstack.parameters = {\n  storySource: {\n    source: '<div />'\n  }\n};\nconst componentMeta = {\n  title: 'Components/Stack',\n  id: 'Stack',\n  parameters: {\n    previewTabs: {\n      canvas: {\n        hidden: true\n      }\n    }\n  },\n  component: Stack,\n  tags: ['stories-mdx'],\n  includeStories: [\"stack\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;","// extracted by mini-css-extract-plugin\nexport default {\"changelog\":\"changelog_UmYwo\",\"root\":\"root_GgHKe\"};","import React, { FC, ReactNode } from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.css';\n\ntype Props = {\n    content: ReactNode;\n    root?: boolean;\n};\n\nexport const Changelog: FC<Props> = ({ content, root = false }) => {\n    return (\n        <div className={cn(styles.changelog, root && styles.root, 'sb-unstyled')}>{content}</div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cssVars\":\"cssVars_OsBA8\"};","import React, { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Example } from 'storybook-addon-live-examples';\n\nimport styles from './css-vars.module.css';\n\ntype Props = {\n    css: string;\n    title?: string;\n    expandable?: boolean;\n    type?: 'vars' | 'mixins';\n};\n\nconst rootBlockRegexp = /:root {([^}]*)}/g;\nconst mixinRegexp = /(?:@define-mixin)(.*{[^}]*})/g;\n\nexport const CssVars: FC<Props> = ({ css, title, expandable, type = 'vars' }) => {\n    const [vars, setVars] = useState('');\n    const [open, setOpen] = useState(!expandable);\n    const isVars = type === 'vars';\n    const regexp = isVars ? rootBlockRegexp : mixinRegexp;\n\n    useEffect(() => {\n        let rootBlockMatch = regexp.exec(css);\n\n        const rootBlocks = [];\n\n        while (rootBlockMatch) {\n            rootBlocks.push(rootBlockMatch[1]);\n            rootBlockMatch = regexp.exec(css);\n        }\n\n        let result = rootBlocks.reduce(\n            (acc, item, index) => {\n                const isLast = index === rootBlocks.length - 1;\n                const divider = isLast ? '' : '\\n';\n\n                return `${acc}${item}${divider}`;\n            },\n            isVars ? ':root {' : '',\n        );\n\n        if (isVars) {\n            result += '}';\n        }\n\n        setVars(result);\n    }, []);\n\n    return (\n        <div className={cn('sb-unstyled', styles.cssVars)}>\n            {title && <h2 className={cn('sbdocs', 'sbdocs-h2')}>{title}</h2>}\n            {vars && (\n                <>\n                    {expandable && (\n                        <Link view='default' onClick={() => setOpen(!open)} pseudo>\n                            {open ? 'Скрыть' : 'Показать'}\n                        </Link>\n                    )}\n                    {open && <Example language='css' code={vars} live={false} />}\n                </>\n            )}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_qx5zQ\",\"text\":\"text_TIocB\",\"textMobile\":\"textMobile_d_rnY\",\"info\":\"info_iGRHP\",\"commonLink\":\"commonLink_WJRCZ\",\"links\":\"links_kuMT8\",\"usageLink\":\"usageLink_ilI5I\",\"github\":\"github_ks4z8\",\"design\":\"design_NpKuj\"};","import React, { ReactNode } from 'react';\nimport cn from 'classnames';\nimport { Link } from '@alfalab/core-components-link';\nimport { Typography } from '@alfalab/core-components-typography';\nimport { Space } from '@alfalab/core-components-space';\nimport { pluralize } from '@alfalab/utils';\nimport { GithubIcon } from 'storybook/components/icons/GithubIcon';\n\nimport usages from 'storybook/usages.json';\n\nimport styles from './ComponentHeader.module.css';\nimport { useMatchMedia } from '@alfalab/core-components-mq';\n\ntype ComponentHeaderProps = {\n    name: string;\n    version?: string;\n    design?: string;\n    children?: ReactNode;\n};\n\nexport const ComponentHeader: React.FC<ComponentHeaderProps> = ({ name, design, children }) => {\n    const [isDesktop] = useMatchMedia('--tablet-m');\n\n    const packageName = name\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    const githubLink = `https://github.com/core-ds/core-components/tree/master/packages/${packageName}`;\n\n    const Title = isDesktop ? Typography.Title : Typography.TitleMobile;\n\n    return (\n        <div className={cn('sb-unstyled', styles.component)}>\n            <Title tag='h1' view='xlarge'>\n                {name}\n            </Title>\n            {children && (\n                <Typography.Text\n                    tag='p'\n                    view='primary-medium'\n                    className={cn(styles.text, { [styles.textMobile]: !isDesktop })}\n                >\n                    {children}\n                </Typography.Text>\n            )}\n            <div className={styles.links}>\n                <a\n                    className={cn(styles.design, {\n                        [styles.commonLink]: !design,\n                    })}\n                    href={\n                        design ||\n                        'https://www.figma.com/file/cdNnkh2QdxuvYLrBm4cubM/Web-%3A%3A-Core-Default-Components'\n                    }\n                    target='_blank'\n                >\n                    Figma\n                </a>\n                <a className={styles.github} href={githubLink} target='_blank'>\n                    <GithubIcon fill='var(--color-light-graphic-primary)' />\n                    Github\n                </a>\n            </div>\n\n            <Space direction='horizontal' align='center' className={styles.info}>\n                {usages[name]?.projects > 0 && (\n                    <Typography.Text view='primary-small' color='secondary'>\n                        Используется в{' '}\n                        <Link\n                            href={`http://design/design-system-usage/usage-chart?component=${usages[name]?.search}`}\n                            target='_blank'\n                            view='secondary'\n                            underline={false}\n                            title='Необходимо подключение к VPN'\n                            className={styles.usageLink}\n                        >\n                            {usages[name]?.projects}{' '}\n                            {pluralize(usages[name]?.projects, 'проекте', 'проектах', 'проектах')}\n                        </Link>\n                        {' и '}~{usages[name]?.imports}{' '}\n                        {pluralize(usages[name]?.imports, 'файле', 'файлах', 'файлах')}\n                    </Typography.Text>\n                )}\n            </Space>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tabs\":\"tabs_BRA6G\"};","import React, {\n    FC,\n    useState,\n    useMemo,\n    useCallback,\n    ReactNode,\n    isValidElement,\n    ReactElement,\n} from 'react';\nimport { TabsResponsive, Tab, TabsResponsiveProps } from '@alfalab/core-components-tabs';\nimport { Changelog } from '../changelog';\nimport styles from './index.module.css';\n\nenum TabName {\n    DESCRIPTION = 'DESCRIPTION',\n    PROPS = 'PROPS',\n    CSS_VARS = 'CSS_VARS',\n    CHANGELOG = 'CHANGELOG',\n    DEVELOPMENT = 'DEVELOPMENT',\n}\n\nconst TabTitle = {\n    [TabName.DESCRIPTION]: 'Описание',\n    [TabName.PROPS]: 'Свойства',\n    [TabName.CSS_VARS]: 'CSS-переменные',\n    [TabName.CHANGELOG]: 'Обновления',\n    [TabName.DEVELOPMENT]: 'Разработчику',\n};\n\ntype Props = {\n    description: ReactNode;\n    props: ReactNode;\n    cssVars?: ReactNode;\n    changelog?: string;\n    defaultSelected?: TabName;\n    development?: ReactNode;\n};\n\nexport const Tabs: FC<Props> = ({\n    description,\n    props,\n    cssVars,\n    changelog,\n    defaultSelected = TabName.DESCRIPTION,\n    development,\n}) => {\n    const [selected, setSelected] = useState(defaultSelected);\n\n    const handleChange = useCallback<Required<TabsResponsiveProps>['onChange']>(\n        (_, { selectedId }) => {\n            setSelected(selectedId as TabName);\n        },\n        [],\n    );\n\n    const renderTabs = (): TabsResponsiveProps['children'] => {\n        return [\n            <Tab title={TabTitle[TabName.DESCRIPTION]} id={TabName.DESCRIPTION} key='description'>\n                {description}\n            </Tab>,\n            props ? (\n                <Tab title={TabTitle[TabName.PROPS]} id={TabName.PROPS} key='props'>\n                    {props}\n                </Tab>\n            ) : null,\n            cssVars ? (\n                <Tab title={TabTitle[TabName.CSS_VARS]} id={TabName.CSS_VARS} key='css-vars'>\n                    {cssVars}\n                </Tab>\n            ) : null,\n            development ? (\n                <Tab\n                    title={TabTitle[TabName.DEVELOPMENT]}\n                    id={TabName.DEVELOPMENT}\n                    key='development'\n                >\n                    {development}\n                </Tab>\n            ) : null,\n            changelog ? (\n                <Tab title={TabTitle[TabName.CHANGELOG]} id={TabName.CHANGELOG} key='changelog'>\n                    <div style={{ marginTop: '32px' }}>\n                        <Changelog content={changelog} />\n                    </div>\n                </Tab>\n            ) : null,\n        ].filter(isValidElement) as ReactElement[];\n    };\n\n    const tabs = useMemo(() => renderTabs(), [description, props, cssVars]);\n\n    return (\n        <TabsResponsive\n            className='sb-unstyled'\n            selectedId={selected}\n            onChange={handleChange}\n            containerClassName={styles.tabs}\n        >\n            {tabs}\n        </TabsResponsive>\n    );\n};\n","import React from 'react';\n\nexport const GithubIcon = ({ fill = '#24292E', width = 32, height = 32 }) => (\n    <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 32 32'>\n        <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C27.42 29.06 32 23.06 32 16C32 7.16 24.84 0 16 0V0Z'\n            fill={fill}\n        />\n    </svg>\n);\n","import React, { FC, ReactNode, useContext } from 'react';\n\nimport { StackingContext, stackingOrder } from './context';\n\nexport type StackProps = {\n    /**\n     * Render prop, в который передается функция.\n     * Функция принимает аргумент со значением z-index из текущего контекста.\n     */\n    children: (value: number) => ReactNode;\n\n    /**\n     * Исходное значение для z-index.\n     * @default 5\n     */\n    value?: number;\n};\n\nexport const Stack: FC<StackProps> = ({ children, value = stackingOrder.DEFAULT }) => {\n    const previousValue = useContext(StackingContext);\n    const currentValue = Math.max(value, previousValue);\n    const nextValue = currentValue + 1;\n\n    return (\n        <StackingContext.Provider value={nextValue}>\n            {children(currentValue)}\n        </StackingContext.Provider>\n    );\n};\n","import { createContext } from 'react';\n\n/**\n * Набор констант для z-index соответствующих классов компонентов.\n * Значения выбраны по приоритету.\n */\nexport const stackingOrder = {\n    /**\n     * Для компонентов с возможностью фокуса: кнопки, поля ввода\n     */\n    FOCUSED: 2,\n\n    /**\n     * Значение по-умолчанию\n     */\n    DEFAULT: 10,\n\n    /**\n     * Компоненты, которые управляют своей позицией, например, поповер, тултип\n     */\n    POPOVER: 50,\n\n    /**\n     * Для модальных окон с оверлеем\n     */\n    MODAL: 100,\n\n    /**\n     * Для тостов и нотификаций\n     */\n    TOAST: 1000,\n};\n\nexport const StackingContext = createContext(stackingOrder.DEFAULT);\n"],"names":["MDXContext","withMDXComponents","Component","boundMDXComponent","props","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","Provider","value","defaultComponents","code","a","ErrorBoundary","constructor","super","arguments","this","state","hasError","static","componentDidCatch","err","showException","render","DocsRenderer","async","context","docsParameter","element","Promise","resolve","reject","then","key","Math","random","unmount","_createMdxContent","_components","Object","assign","p","h2","h3","pre","strong","ul","li","href","target","rel","id","live","className","MDXContent","wrapper","MDXLayout","title","component","Stack","parameters","previewTabs","canvas","hidden","name","version","package","description","of","changelog","storyName","storySource","source","componentMeta","tags","includeStories","docs","page","Changelog","_ref","content","_ref$root","root","_jsx","cn","styles","rootBlockRegexp","mixinRegexp","CssVars","css","expandable","_ref$type","type","_useState","useState","_useState2","_slicedToArray","vars","setVars","_useState3","_useState4","open","setOpen","isVars","regexp","useEffect","rootBlockMatch","exec","rootBlocks","push","result","reduce","acc","item","index","divider","length","concat","_jsxs","_Fragment","Link","view","onClick","pseudo","Example","language","ComponentHeader","_usages$name","_usages$name2","_usages$name3","_usages$name4","_usages$name5","_usages$name6","design","_useMatchMedia","useMatchMedia","isDesktop","packageName","replace","toLowerCase","githubLink","Title","Typography","tag","_defineProperty","GithubIcon","fill","Space","direction","align","usages","projects","color","search","underline","pluralize","imports","TabName","TabTitle","_TabTitle","DESCRIPTION","PROPS","CSS_VARS","CHANGELOG","DEVELOPMENT","Tabs","cssVars","_ref$defaultSelected","defaultSelected","development","selected","setSelected","handleChange","useCallback","_","_ref2","selectedId","tabs","useMemo","renderTabs","Tab","style","marginTop","filter","isValidElement","TabsResponsive","onChange","containerClassName","_ref$fill","_ref$width","width","_ref$height","height","xmlns","viewBox","fillRule","clipRule","d","__docgenInfo","_ref$value","stackingOrder","previousValue","useContext","StackingContext","currentValue","max","nextValue","FOCUSED","DEFAULT","POPOVER","MODAL","TOAST","createContext"],"sourceRoot":""}